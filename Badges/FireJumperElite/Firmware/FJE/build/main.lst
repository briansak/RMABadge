ARM GAS  /tmp/ccrwQJPQ.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB54:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usb_device.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "charlie.c"
  28:Src/main.c    **** 
  29:Src/main.c    **** /* USER CODE END Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  32:Src/main.c    **** /* USER CODE BEGIN PTD */
  33:Src/main.c    **** 
ARM GAS  /tmp/ccrwQJPQ.s 			page 2


  34:Src/main.c    **** /* USER CODE END PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PD */
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** RTC_HandleTypeDef hrtc;
  47:Src/main.c    **** 
  48:Src/main.c    **** TIM_HandleTypeDef htim1;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** void dance();
  53:Src/main.c    **** 
  54:Src/main.c    **** // Keep track of what dance we are on
  55:Src/main.c    **** int mamboNumber = 4;
  56:Src/main.c    **** // Stopper for the inturrupt funciton
  57:Src/main.c    **** int stop = 0;
  58:Src/main.c    **** // Flag to switch to time 
  59:Src/main.c    **** int hour = 0;
  60:Src/main.c    **** int minute = 0;
  61:Src/main.c    **** 
  62:Src/main.c    **** // RTC defs
  63:Src/main.c    **** RTC_TimeTypeDef RTCtime;
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PV */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** void SystemClock_Config(void);
  69:Src/main.c    **** static void MX_GPIO_Init(void);
  70:Src/main.c    **** static void MX_RTC_Init(void);
  71:Src/main.c    **** static void MX_TIM1_Init(void);
  72:Src/main.c    **** /* USER CODE BEGIN PFP */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE END PFP */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  77:Src/main.c    **** /* USER CODE BEGIN 0 */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /**
  82:Src/main.c    ****   * @brief  The application entry point.
  83:Src/main.c    ****   * @retval int
  84:Src/main.c    ****   */
  85:Src/main.c    **** int main(void)
  86:Src/main.c    **** {
  87:Src/main.c    ****   /* USER CODE BEGIN 1 */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END 1 */
  90:Src/main.c    **** 
ARM GAS  /tmp/ccrwQJPQ.s 			page 3


  91:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  94:Src/main.c    ****   HAL_Init();
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE BEGIN Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Configure the system clock */
 101:Src/main.c    ****   SystemClock_Config();
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Initialize all configured peripherals */
 108:Src/main.c    ****   MX_GPIO_Init();
 109:Src/main.c    ****   MX_USB_DEVICE_Init();
 110:Src/main.c    ****   MX_RTC_Init();
 111:Src/main.c    ****   MX_TIM1_Init();
 112:Src/main.c    ****   /* USER CODE BEGIN 2 */
 113:Src/main.c    ****   GPIO_InitTypeDef PinA = initA();
 114:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 115:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 116:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 117:Src/main.c    **** 
 118:Src/main.c    ****   stop = 0;
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END 2 */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Infinite loop */
 123:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 124:Src/main.c    ****   while (1)
 125:Src/main.c    ****   {
 126:Src/main.c    ****     /* USER CODE END WHILE */
 127:Src/main.c    **** 
 128:Src/main.c    ****     /* USER CODE BEGIN 3 */
 129:Src/main.c    **** 
 130:Src/main.c    ****     // Ladies and gentlemen, this is Mambo Number Five
 131:Src/main.c    ****     if(mamboNumber == 5)
 132:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 133:Src/main.c    ****     else{
 134:Src/main.c    ****        dance(PinA, PinB, PinC, PinD, mamboNumber);
 135:Src/main.c    ****     }
 136:Src/main.c    **** 
 137:Src/main.c    ****     if(stop == 1 && hour == 1){
 138:Src/main.c    ****       HAL_Delay(100);
 139:Src/main.c    ****       stop =0;
 140:Src/main.c    ****       mamboNumber = 5;
 141:Src/main.c    ****       HAL_RTC_GetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 142:Src/main.c    ****       RTCtime.Hours++;
 143:Src/main.c    ****       HAL_RTC_SetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 144:Src/main.c    **** 
 145:Src/main.c    **** 
 146:Src/main.c    ****     }
 147:Src/main.c    ****     if(stop == 1 && minute == 1){
ARM GAS  /tmp/ccrwQJPQ.s 			page 4


 148:Src/main.c    ****       HAL_Delay(100);
 149:Src/main.c    ****       stop =0;
 150:Src/main.c    ****       mamboNumber = 5;
 151:Src/main.c    ****       HAL_RTC_GetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 152:Src/main.c    ****       RTCtime.Minutes+5;
 153:Src/main.c    ****       HAL_RTC_SetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 154:Src/main.c    **** 
 155:Src/main.c    ****     }
 156:Src/main.c    ****     if(stop == 1){
 157:Src/main.c    ****       HAL_Delay(100);
 158:Src/main.c    ****       stop =0;
 159:Src/main.c    ****       mamboNumber++;
 160:Src/main.c    ****       if(mamboNumber > 5)
 161:Src/main.c    ****          mamboNumber = 0;
 162:Src/main.c    ****     }
 163:Src/main.c    ****   }
 164:Src/main.c    ****   /* USER CODE END 3 */
 165:Src/main.c    **** }
 166:Src/main.c    **** 
 167:Src/main.c    **** /**
 168:Src/main.c    ****   * @brief System Clock Configuration
 169:Src/main.c    ****   * @retval None
 170:Src/main.c    ****   */
 171:Src/main.c    **** void SystemClock_Config(void)
 172:Src/main.c    **** {
 173:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 174:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 175:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 176:Src/main.c    **** 
 177:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 178:Src/main.c    ****   */
 179:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_LSI;
 180:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 181:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 183:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 184:Src/main.c    ****   {
 185:Src/main.c    ****     Error_Handler();
 186:Src/main.c    ****   }
 187:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 188:Src/main.c    ****   */
 189:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 190:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 191:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 192:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 194:Src/main.c    **** 
 195:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 196:Src/main.c    ****   {
 197:Src/main.c    ****     Error_Handler();
 198:Src/main.c    ****   }
 199:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_RTC;
 200:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 201:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 202:Src/main.c    **** 
 203:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 204:Src/main.c    ****   {
ARM GAS  /tmp/ccrwQJPQ.s 			page 5


 205:Src/main.c    ****     Error_Handler();
 206:Src/main.c    ****   }
 207:Src/main.c    **** }
 208:Src/main.c    **** 
 209:Src/main.c    **** /**
 210:Src/main.c    ****   * @brief RTC Initialization Function
 211:Src/main.c    ****   * @param None
 212:Src/main.c    ****   * @retval None
 213:Src/main.c    ****   */
 214:Src/main.c    **** static void MX_RTC_Init(void)
 215:Src/main.c    **** {
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 224:Src/main.c    ****   /** Initialize RTC Only 
 225:Src/main.c    ****   */
 226:Src/main.c    ****   hrtc.Instance = RTC;
 227:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 228:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 229:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 230:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 231:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 232:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 233:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 234:Src/main.c    ****   {
 235:Src/main.c    ****     Error_Handler();
 236:Src/main.c    ****   }
 237:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 2 */
 238:Src/main.c    **** 
 239:Src/main.c    ****   /* USER CODE END RTC_Init 2 */
 240:Src/main.c    **** 
 241:Src/main.c    **** }
 242:Src/main.c    **** 
 243:Src/main.c    **** /**
 244:Src/main.c    ****   * @brief TIM1 Initialization Function
 245:Src/main.c    ****   * @param None
 246:Src/main.c    ****   * @retval None
 247:Src/main.c    ****   */
 248:Src/main.c    **** static void MX_TIM1_Init(void)
 249:Src/main.c    **** {
 250:Src/main.c    **** 
 251:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 254:Src/main.c    **** 
 255:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 256:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 257:Src/main.c    **** 
 258:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 259:Src/main.c    **** 
 260:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 261:Src/main.c    ****   htim1.Instance = TIM1;
ARM GAS  /tmp/ccrwQJPQ.s 			page 6


 262:Src/main.c    ****   htim1.Init.Prescaler = 0;
 263:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 264:Src/main.c    ****   htim1.Init.Period = 0;
 265:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 266:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 267:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 268:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 269:Src/main.c    ****   {
 270:Src/main.c    ****     Error_Handler();
 271:Src/main.c    ****   }
 272:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 273:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 274:Src/main.c    ****   {
 275:Src/main.c    ****     Error_Handler();
 276:Src/main.c    ****   }
 277:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 278:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 279:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 280:Src/main.c    ****   {
 281:Src/main.c    ****     Error_Handler();
 282:Src/main.c    ****   }
 283:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 286:Src/main.c    **** 
 287:Src/main.c    **** }
 288:Src/main.c    **** 
 289:Src/main.c    **** /**
 290:Src/main.c    ****   * @brief GPIO Initialization Function
 291:Src/main.c    ****   * @param None
 292:Src/main.c    ****   * @retval None
 293:Src/main.c    ****   */
 294:Src/main.c    **** static void MX_GPIO_Init(void)
 295:Src/main.c    **** {
  26              		.loc 1 295 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 296:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 296 3 view .LVU1
  40              		.loc 1 296 20 is_stmt 0 view .LVU2
  41 0004 0822     		movs	r2, #8
  42 0006 0021     		movs	r1, #0
  43 0008 06A8     		add	r0, sp, #24
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 297:Src/main.c    **** 
 298:Src/main.c    ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/ccrwQJPQ.s 			page 7


 299:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  46              		.loc 1 299 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 299 3 view .LVU4
  49              		.loc 1 299 3 view .LVU5
  50 000e 184B     		ldr	r3, .L2
  51 0010 5969     		ldr	r1, [r3, #20]
  52 0012 8020     		movs	r0, #128
  53 0014 C002     		lsls	r0, r0, #11
  54 0016 0143     		orrs	r1, r0
  55 0018 5961     		str	r1, [r3, #20]
  56              		.loc 1 299 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0240     		ands	r2, r0
  59 001e 0192     		str	r2, [sp, #4]
  60              		.loc 1 299 3 view .LVU7
  61 0020 019A     		ldr	r2, [sp, #4]
  62              	.LBE2:
  63              		.loc 1 299 3 view .LVU8
 300:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 300 3 view .LVU9
  65              	.LBB3:
  66              		.loc 1 300 3 view .LVU10
  67              		.loc 1 300 3 view .LVU11
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 8902     		lsls	r1, r1, #10
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 300 3 view .LVU12
  74 002c 5B69     		ldr	r3, [r3, #20]
  75 002e 0B40     		ands	r3, r1
  76 0030 0293     		str	r3, [sp, #8]
  77              		.loc 1 300 3 view .LVU13
  78 0032 029B     		ldr	r3, [sp, #8]
  79              	.LBE3:
  80              		.loc 1 300 3 view .LVU14
 301:Src/main.c    **** 
 302:Src/main.c    **** /*
 303:Src/main.c    ****   //Configure GPIO pin Output Level 
 304:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, A_Pin|B_Pin|C_Pin|D_Pin, GPIO_PIN_RESET);
 305:Src/main.c    **** 
 306:Src/main.c    ****   //Configure GPIO pins : A_Pin B_Pin C_Pin D_Pin 
 307:Src/main.c    ****   GPIO_InitStruct.Pin = A_Pin|B_Pin|C_Pin|D_Pin;
 308:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 309:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 310:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 311:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 312:Src/main.c    ****   */
 313:Src/main.c    **** 
 314:Src/main.c    ****   //Configure GPIO pin : Mode_Pin 
 315:Src/main.c    ****   GPIO_InitStruct.Pin = Mode_Pin;
  81              		.loc 1 315 3 view .LVU15
  82              		.loc 1 315 23 is_stmt 0 view .LVU16
  83 0034 8023     		movs	r3, #128
  84 0036 5B00     		lsls	r3, r3, #1
  85 0038 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccrwQJPQ.s 			page 8


 316:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  86              		.loc 1 316 3 is_stmt 1 view .LVU17
  87              		.loc 1 316 24 is_stmt 0 view .LVU18
  88 003a 0E4D     		ldr	r5, .L2+4
  89 003c 0495     		str	r5, [sp, #16]
 317:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
  90              		.loc 1 317 3 is_stmt 1 view .LVU19
  91              		.loc 1 317 24 is_stmt 0 view .LVU20
  92 003e 0124     		movs	r4, #1
  93 0040 0594     		str	r4, [sp, #20]
 318:Src/main.c    ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
  94              		.loc 1 318 3 is_stmt 1 view .LVU21
  95 0042 03A9     		add	r1, sp, #12
  96 0044 0C48     		ldr	r0, .L2+8
  97 0046 FFF7FEFF 		bl	HAL_GPIO_Init
  98              	.LVL1:
 319:Src/main.c    **** 
 320:Src/main.c    ****   //Configure GPIO pins : Hour_Pin Minute_Pin 
 321:Src/main.c    ****   GPIO_InitStruct.Pin = Hour_Pin|Minute_Pin;
  99              		.loc 1 321 3 view .LVU22
 100              		.loc 1 321 23 is_stmt 0 view .LVU23
 101 004a 6023     		movs	r3, #96
 102 004c 0393     		str	r3, [sp, #12]
 322:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 103              		.loc 1 322 3 is_stmt 1 view .LVU24
 104              		.loc 1 322 24 is_stmt 0 view .LVU25
 105 004e 0495     		str	r5, [sp, #16]
 323:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 106              		.loc 1 323 3 is_stmt 1 view .LVU26
 107              		.loc 1 323 24 is_stmt 0 view .LVU27
 108 0050 0594     		str	r4, [sp, #20]
 324:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 324 3 is_stmt 1 view .LVU28
 110 0052 9020     		movs	r0, #144
 111 0054 03A9     		add	r1, sp, #12
 112 0056 C005     		lsls	r0, r0, #23
 113 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 114              	.LVL2:
 325:Src/main.c    **** 
 326:Src/main.c    ****   /* EXTI interrupt init*/
 327:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 115              		.loc 1 327 3 view .LVU29
 116 005c 0022     		movs	r2, #0
 117 005e 0021     		movs	r1, #0
 118 0060 0720     		movs	r0, #7
 119 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 120              	.LVL3:
 328:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 121              		.loc 1 328 3 view .LVU30
 122 0066 0720     		movs	r0, #7
 123 0068 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 124              	.LVL4:
 329:Src/main.c    **** 
 330:Src/main.c    **** }
 125              		.loc 1 330 1 is_stmt 0 view .LVU31
 126 006c 09B0     		add	sp, sp, #36
 127              		@ sp needed
ARM GAS  /tmp/ccrwQJPQ.s 			page 9


 128 006e 30BD     		pop	{r4, r5, pc}
 129              	.L3:
 130              		.align	2
 131              	.L2:
 132 0070 00100240 		.word	1073876992
 133 0074 00002110 		.word	270598144
 134 0078 00040048 		.word	1207960576
 135              		.cfi_endproc
 136              	.LFE54:
 138              		.section	.text.MX_RTC_Init,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.code	16
 142              		.thumb_func
 143              		.fpu softvfp
 145              	MX_RTC_Init:
 146              	.LFB52:
 215:Src/main.c    **** 
 147              		.loc 1 215 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 10B5     		push	{r4, lr}
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 226:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 156              		.loc 1 226 3 view .LVU33
 226:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 157              		.loc 1 226 17 is_stmt 0 view .LVU34
 158 0002 0848     		ldr	r0, .L5
 159 0004 084B     		ldr	r3, .L5+4
 160 0006 0360     		str	r3, [r0]
 227:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 161              		.loc 1 227 3 is_stmt 1 view .LVU35
 227:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 162              		.loc 1 227 24 is_stmt 0 view .LVU36
 163 0008 4023     		movs	r3, #64
 164 000a 4360     		str	r3, [r0, #4]
 228:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 165              		.loc 1 228 3 is_stmt 1 view .LVU37
 228:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 166              		.loc 1 228 26 is_stmt 0 view .LVU38
 167 000c 3F33     		adds	r3, r3, #63
 168 000e 8360     		str	r3, [r0, #8]
 229:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 169              		.loc 1 229 3 is_stmt 1 view .LVU39
 229:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 170              		.loc 1 229 25 is_stmt 0 view .LVU40
 171 0010 8033     		adds	r3, r3, #128
 172 0012 C360     		str	r3, [r0, #12]
 230:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 173              		.loc 1 230 3 is_stmt 1 view .LVU41
 230:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 174              		.loc 1 230 20 is_stmt 0 view .LVU42
 175 0014 0023     		movs	r3, #0
ARM GAS  /tmp/ccrwQJPQ.s 			page 10


 176 0016 0361     		str	r3, [r0, #16]
 231:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 177              		.loc 1 231 3 is_stmt 1 view .LVU43
 231:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 178              		.loc 1 231 28 is_stmt 0 view .LVU44
 179 0018 4361     		str	r3, [r0, #20]
 232:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 180              		.loc 1 232 3 is_stmt 1 view .LVU45
 232:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 181              		.loc 1 232 24 is_stmt 0 view .LVU46
 182 001a 8361     		str	r3, [r0, #24]
 233:Src/main.c    ****   {
 183              		.loc 1 233 3 is_stmt 1 view .LVU47
 233:Src/main.c    ****   {
 184              		.loc 1 233 7 is_stmt 0 view .LVU48
 185 001c FFF7FEFF 		bl	HAL_RTC_Init
 186              	.LVL5:
 241:Src/main.c    **** 
 187              		.loc 1 241 1 view .LVU49
 188              		@ sp needed
 189 0020 10BD     		pop	{r4, pc}
 190              	.L6:
 191 0022 C046     		.align	2
 192              	.L5:
 193 0024 00000000 		.word	hrtc
 194 0028 00280040 		.word	1073752064
 195              		.cfi_endproc
 196              	.LFE52:
 198              		.section	.text.MX_TIM1_Init,"ax",%progbits
 199              		.align	1
 200              		.syntax unified
 201              		.code	16
 202              		.thumb_func
 203              		.fpu softvfp
 205              	MX_TIM1_Init:
 206              	.LFB53:
 249:Src/main.c    **** 
 207              		.loc 1 249 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 24
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 30B5     		push	{r4, r5, lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 12
 214              		.cfi_offset 4, -12
 215              		.cfi_offset 5, -8
 216              		.cfi_offset 14, -4
 217 0002 87B0     		sub	sp, sp, #28
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 40
 255:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 220              		.loc 1 255 3 view .LVU51
 255:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 221              		.loc 1 255 26 is_stmt 0 view .LVU52
 222 0004 1022     		movs	r2, #16
 223 0006 0021     		movs	r1, #0
 224 0008 02A8     		add	r0, sp, #8
ARM GAS  /tmp/ccrwQJPQ.s 			page 11


 225 000a FFF7FEFF 		bl	memset
 226              	.LVL6:
 256:Src/main.c    **** 
 227              		.loc 1 256 3 is_stmt 1 view .LVU53
 256:Src/main.c    **** 
 228              		.loc 1 256 27 is_stmt 0 view .LVU54
 229 000e 0822     		movs	r2, #8
 230 0010 0021     		movs	r1, #0
 231 0012 6846     		mov	r0, sp
 232 0014 FFF7FEFF 		bl	memset
 233              	.LVL7:
 261:Src/main.c    ****   htim1.Init.Prescaler = 0;
 234              		.loc 1 261 3 is_stmt 1 view .LVU55
 261:Src/main.c    ****   htim1.Init.Prescaler = 0;
 235              		.loc 1 261 18 is_stmt 0 view .LVU56
 236 0018 0D4C     		ldr	r4, .L8
 237 001a 0E4B     		ldr	r3, .L8+4
 238 001c 2360     		str	r3, [r4]
 262:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 239              		.loc 1 262 3 is_stmt 1 view .LVU57
 262:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 240              		.loc 1 262 24 is_stmt 0 view .LVU58
 241 001e 0025     		movs	r5, #0
 242 0020 6560     		str	r5, [r4, #4]
 263:Src/main.c    ****   htim1.Init.Period = 0;
 243              		.loc 1 263 3 is_stmt 1 view .LVU59
 263:Src/main.c    ****   htim1.Init.Period = 0;
 244              		.loc 1 263 26 is_stmt 0 view .LVU60
 245 0022 A560     		str	r5, [r4, #8]
 264:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 246              		.loc 1 264 3 is_stmt 1 view .LVU61
 264:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 247              		.loc 1 264 21 is_stmt 0 view .LVU62
 248 0024 E560     		str	r5, [r4, #12]
 265:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 249              		.loc 1 265 3 is_stmt 1 view .LVU63
 265:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 250              		.loc 1 265 28 is_stmt 0 view .LVU64
 251 0026 2561     		str	r5, [r4, #16]
 266:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 252              		.loc 1 266 3 is_stmt 1 view .LVU65
 266:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 253              		.loc 1 266 32 is_stmt 0 view .LVU66
 254 0028 6561     		str	r5, [r4, #20]
 267:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 255              		.loc 1 267 3 is_stmt 1 view .LVU67
 267:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 256              		.loc 1 267 32 is_stmt 0 view .LVU68
 257 002a A561     		str	r5, [r4, #24]
 268:Src/main.c    ****   {
 258              		.loc 1 268 3 is_stmt 1 view .LVU69
 268:Src/main.c    ****   {
 259              		.loc 1 268 7 is_stmt 0 view .LVU70
 260 002c 2000     		movs	r0, r4
 261 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 262              	.LVL8:
 272:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
ARM GAS  /tmp/ccrwQJPQ.s 			page 12


 263              		.loc 1 272 3 is_stmt 1 view .LVU71
 272:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 264              		.loc 1 272 34 is_stmt 0 view .LVU72
 265 0032 8023     		movs	r3, #128
 266 0034 5B01     		lsls	r3, r3, #5
 267 0036 0293     		str	r3, [sp, #8]
 273:Src/main.c    ****   {
 268              		.loc 1 273 3 is_stmt 1 view .LVU73
 273:Src/main.c    ****   {
 269              		.loc 1 273 7 is_stmt 0 view .LVU74
 270 0038 02A9     		add	r1, sp, #8
 271 003a 2000     		movs	r0, r4
 272 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 273              	.LVL9:
 277:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 274              		.loc 1 277 3 is_stmt 1 view .LVU75
 277:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 275              		.loc 1 277 37 is_stmt 0 view .LVU76
 276 0040 0095     		str	r5, [sp]
 278:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 277              		.loc 1 278 3 is_stmt 1 view .LVU77
 278:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 278              		.loc 1 278 33 is_stmt 0 view .LVU78
 279 0042 0195     		str	r5, [sp, #4]
 279:Src/main.c    ****   {
 280              		.loc 1 279 3 is_stmt 1 view .LVU79
 279:Src/main.c    ****   {
 281              		.loc 1 279 7 is_stmt 0 view .LVU80
 282 0044 6946     		mov	r1, sp
 283 0046 2000     		movs	r0, r4
 284 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 285              	.LVL10:
 287:Src/main.c    **** 
 286              		.loc 1 287 1 view .LVU81
 287 004c 07B0     		add	sp, sp, #28
 288              		@ sp needed
 289 004e 30BD     		pop	{r4, r5, pc}
 290              	.L9:
 291              		.align	2
 292              	.L8:
 293 0050 00000000 		.word	htim1
 294 0054 002C0140 		.word	1073818624
 295              		.cfi_endproc
 296              	.LFE53:
 298              		.section	.text.clock,"ax",%progbits
 299              		.align	1
 300              		.global	clock
 301              		.syntax unified
 302              		.code	16
 303              		.thumb_func
 304              		.fpu softvfp
 306              	clock:
 307              	.LFB43:
 308              		.file 2 "Src/charlie.c"
   1:Src/charlie.c **** //Charlieplexing Library
   2:Src/charlie.c **** //William Rickert March2020
   3:Src/charlie.c **** 
ARM GAS  /tmp/ccrwQJPQ.s 			page 13


   4:Src/charlie.c **** extern int stop;
   5:Src/charlie.c **** 
   6:Src/charlie.c **** void charlie(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef 
   7:Src/charlie.c **** 
   8:Src/charlie.c **** void clock(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
 309              		.loc 2 8 131 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 112, pretend = 16, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 84B0     		sub	sp, sp, #16
 315              	.LCFI5:
 316              		.cfi_def_cfa_offset 16
 317 0002 0090     		str	r0, [sp]
 318 0004 0191     		str	r1, [sp, #4]
 319 0006 0292     		str	r2, [sp, #8]
 320 0008 0393     		str	r3, [sp, #12]
   9:Src/charlie.c **** 
  10:Src/charlie.c **** }
 321              		.loc 2 10 1 view .LVU83
 322              		@ sp needed
 323 000a 04B0     		add	sp, sp, #16
 324 000c 7047     		bx	lr
 325              		.cfi_endproc
 326              	.LFE43:
 328              		.section	.text.charlie,"ax",%progbits
 329              		.align	1
 330              		.global	charlie
 331              		.syntax unified
 332              		.code	16
 333              		.thumb_func
 334              		.fpu softvfp
 336              	charlie:
 337              	.LVL11:
 338              	.LFB45:
  11:Src/charlie.c **** 
  12:Src/charlie.c **** void dance(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  13:Src/charlie.c ****    // Off
  14:Src/charlie.c ****    if(mambo == 0){
  15:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
  16:Src/charlie.c ****    }
  17:Src/charlie.c **** 
  18:Src/charlie.c ****    // Slow Spin
  19:Src/charlie.c ****    if(mambo == 1){
  20:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
  21:Src/charlie.c ****        if(stop == 1)
  22:Src/charlie.c ****          return;
  23:Src/charlie.c ****        HAL_Delay(1000);
  24:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
  25:Src/charlie.c ****        if(stop == 1)
  26:Src/charlie.c ****          return;
  27:Src/charlie.c ****        HAL_Delay(1000);
  28:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
  29:Src/charlie.c ****        if(stop == 1)
  30:Src/charlie.c ****          return;
  31:Src/charlie.c ****        HAL_Delay(1000);
  32:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
ARM GAS  /tmp/ccrwQJPQ.s 			page 14


  33:Src/charlie.c ****        if(stop == 1)
  34:Src/charlie.c ****          return;
  35:Src/charlie.c ****        HAL_Delay(1000);
  36:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
  37:Src/charlie.c ****        if(stop == 1)
  38:Src/charlie.c ****          return;
  39:Src/charlie.c ****        HAL_Delay(1000);
  40:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
  41:Src/charlie.c ****        if(stop == 1)
  42:Src/charlie.c ****          return;
  43:Src/charlie.c ****        HAL_Delay(1000);
  44:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
  45:Src/charlie.c ****        if(stop == 1)
  46:Src/charlie.c ****          return;
  47:Src/charlie.c ****        HAL_Delay(1000);
  48:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
  49:Src/charlie.c ****        if(stop == 1)
  50:Src/charlie.c ****          return;
  51:Src/charlie.c ****        HAL_Delay(1000);
  52:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
  53:Src/charlie.c ****        if(stop == 1)
  54:Src/charlie.c ****          return;
  55:Src/charlie.c ****        HAL_Delay(1000);
  56:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
  57:Src/charlie.c ****        if(stop == 1)
  58:Src/charlie.c ****          return;
  59:Src/charlie.c ****        HAL_Delay(1000);
  60:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
  61:Src/charlie.c ****        if(stop == 1)
  62:Src/charlie.c ****          return;
  63:Src/charlie.c ****        HAL_Delay(1000);
  64:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
  65:Src/charlie.c ****        if(stop == 1)
  66:Src/charlie.c ****          return;
  67:Src/charlie.c ****        HAL_Delay(1000);
  68:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
  69:Src/charlie.c ****        if(stop == 1)
  70:Src/charlie.c ****          return;
  71:Src/charlie.c ****        HAL_Delay(1000);
  72:Src/charlie.c ****    }
  73:Src/charlie.c **** 
  74:Src/charlie.c ****    // Fast Spin
  75:Src/charlie.c ****    if(mambo == 2){
  76:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
  77:Src/charlie.c ****        if(stop == 1)
  78:Src/charlie.c ****          return;
  79:Src/charlie.c ****        HAL_Delay(500);
  80:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
  81:Src/charlie.c ****        if(stop == 1)
  82:Src/charlie.c ****          return;
  83:Src/charlie.c ****        HAL_Delay(500);
  84:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
  85:Src/charlie.c ****        if(stop == 1)
  86:Src/charlie.c ****          return;
  87:Src/charlie.c ****        HAL_Delay(500);
  88:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
  89:Src/charlie.c ****        if(stop == 1)
ARM GAS  /tmp/ccrwQJPQ.s 			page 15


  90:Src/charlie.c ****          return;
  91:Src/charlie.c ****        HAL_Delay(500);
  92:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
  93:Src/charlie.c ****        if(stop == 1)
  94:Src/charlie.c ****          return;
  95:Src/charlie.c ****        HAL_Delay(500);
  96:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
  97:Src/charlie.c ****        if(stop == 1)
  98:Src/charlie.c ****          return;
  99:Src/charlie.c ****        HAL_Delay(500);
 100:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 101:Src/charlie.c ****        if(stop == 1)
 102:Src/charlie.c ****          return;
 103:Src/charlie.c ****        HAL_Delay(500);
 104:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 105:Src/charlie.c ****        if(stop == 1)
 106:Src/charlie.c ****          return;
 107:Src/charlie.c ****        HAL_Delay(500);
 108:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 109:Src/charlie.c ****        if(stop == 1)
 110:Src/charlie.c ****          return;
 111:Src/charlie.c ****        HAL_Delay(500);
 112:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 113:Src/charlie.c ****        if(stop == 1)
 114:Src/charlie.c ****          return;
 115:Src/charlie.c ****        HAL_Delay(500);
 116:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 117:Src/charlie.c ****        if(stop == 1)
 118:Src/charlie.c ****          return;
 119:Src/charlie.c ****        HAL_Delay(500);
 120:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 121:Src/charlie.c ****        if(stop == 1)
 122:Src/charlie.c ****          return;
 123:Src/charlie.c ****        HAL_Delay(500);
 124:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 125:Src/charlie.c ****        if(stop == 1)
 126:Src/charlie.c ****          return;
 127:Src/charlie.c ****        HAL_Delay(500);
 128:Src/charlie.c ****    }
 129:Src/charlie.c **** 
 130:Src/charlie.c ****    // POV light up all lights
 131:Src/charlie.c ****    if(mambo == 3){
 132:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 133:Src/charlie.c ****       for(int i=0; i<10000; i++){
 134:Src/charlie.c ****          for(int j=1; j<=12; j++){
 135:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 136:Src/charlie.c ****        //      HAL_Delay(1);
 137:Src/charlie.c ****              if(stop == 1)
 138:Src/charlie.c ****                return;
 139:Src/charlie.c ****             
 140:Src/charlie.c ****          } 
 141:Src/charlie.c ****       }
 142:Src/charlie.c ****    } 
 143:Src/charlie.c **** 
 144:Src/charlie.c ****    // Doubles
 145:Src/charlie.c ****    if(mambo == 4){
 146:Src/charlie.c ****       for(int i =1; i<=7; i++){
ARM GAS  /tmp/ccrwQJPQ.s 			page 16


 147:Src/charlie.c ****          if(i == 1){
 148:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 149:Src/charlie.c ****             HAL_Delay(500);
 150:Src/charlie.c ****             if(stop == 1)
 151:Src/charlie.c ****                return;
 152:Src/charlie.c ****          }
 153:Src/charlie.c ****          if(i == 2){
 154:Src/charlie.c ****             for(int j =0; j<10000; j++){
 155:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 156:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 1);
 157:Src/charlie.c ****                if(stop == 1)
 158:Src/charlie.c ****                   return;
 159:Src/charlie.c ****             }
 160:Src/charlie.c ****          }
 161:Src/charlie.c ****          if(i == 3){
 162:Src/charlie.c ****             for(int j =0; j<10000; j++){
 163:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 164:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 165:Src/charlie.c ****                if(stop == 1)
 166:Src/charlie.c ****                   return;
 167:Src/charlie.c ****             }
 168:Src/charlie.c ****          }
 169:Src/charlie.c ****          if(i == 4){
 170:Src/charlie.c ****             for(int j =0; j<10000; j++){
 171:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 172:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 9);
 173:Src/charlie.c ****                if(stop == 1)
 174:Src/charlie.c ****                   return;
 175:Src/charlie.c ****             }
 176:Src/charlie.c ****          }
 177:Src/charlie.c ****          if(i == 5){
 178:Src/charlie.c ****             for(int j =0; j<10000; j++){
 179:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 180:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 8);
 181:Src/charlie.c ****                if(stop == 1)
 182:Src/charlie.c ****                   return;
 183:Src/charlie.c ****             }
 184:Src/charlie.c ****          }
 185:Src/charlie.c ****          if(i == 6){
 186:Src/charlie.c ****             for(int j =0; j<10000; j++){
 187:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 188:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 7);
 189:Src/charlie.c ****                if(stop == 1)
 190:Src/charlie.c ****                   return;
 191:Src/charlie.c ****             }
 192:Src/charlie.c ****          }
 193:Src/charlie.c ****          if(i == 7){
 194:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 195:Src/charlie.c ****             HAL_Delay(500);
 196:Src/charlie.c ****             if(stop == 1)
 197:Src/charlie.c ****                return;
 198:Src/charlie.c **** 
 199:Src/charlie.c ****          }
 200:Src/charlie.c **** 
 201:Src/charlie.c ****       }
 202:Src/charlie.c ****       
 203:Src/charlie.c ****    }  
ARM GAS  /tmp/ccrwQJPQ.s 			page 17


 204:Src/charlie.c **** 
 205:Src/charlie.c **** 
 206:Src/charlie.c **** }
 207:Src/charlie.c **** 
 208:Src/charlie.c **** void charlie(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef 
 339              		.loc 2 208 114 view -0
 340              		.cfi_startproc
 341              		@ args = 84, pretend = 16, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		.loc 2 208 114 is_stmt 0 view .LVU85
 344 0000 84B0     		sub	sp, sp, #16
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 16
 347 0002 70B5     		push	{r4, r5, r6, lr}
 348              	.LCFI7:
 349              		.cfi_def_cfa_offset 32
 350              		.cfi_offset 4, -32
 351              		.cfi_offset 5, -28
 352              		.cfi_offset 6, -24
 353              		.cfi_offset 14, -20
 354 0004 0490     		str	r0, [sp, #16]
 355 0006 0591     		str	r1, [sp, #20]
 356 0008 0692     		str	r2, [sp, #24]
 357 000a 0793     		str	r3, [sp, #28]
 358 000c 189C     		ldr	r4, [sp, #96]
 209:Src/charlie.c ****    if(pos == 0){
 359              		.loc 2 209 4 is_stmt 1 view .LVU86
 360              		.loc 2 209 6 is_stmt 0 view .LVU87
 361 000e 002C     		cmp	r4, #0
 362 0010 24D0     		beq	.L25
 363              	.L12:
 210:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 211:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 212:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 213:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 214:Src/charlie.c ****    }
 215:Src/charlie.c **** 
 216:Src/charlie.c **** 
 217:Src/charlie.c ****    // 12'oclock
 218:Src/charlie.c ****    // A = 1
 219:Src/charlie.c ****    // B = Z
 220:Src/charlie.c ****    // C = 0
 221:Src/charlie.c ****    // D = Z
 222:Src/charlie.c ****    if(pos == 12){
 364              		.loc 2 222 4 is_stmt 1 view .LVU88
 365              		.loc 2 222 6 is_stmt 0 view .LVU89
 366 0012 0C2C     		cmp	r4, #12
 367 0014 35D0     		beq	.L26
 368              	.L13:
 223:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 224:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 225:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 226:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 227:Src/charlie.c **** 
 228:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 229:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 230:Src/charlie.c ****       }
ARM GAS  /tmp/ccrwQJPQ.s 			page 18


 231:Src/charlie.c **** 
 232:Src/charlie.c ****    // 1'oclock
 233:Src/charlie.c ****    // A = 1
 234:Src/charlie.c ****    // B = Z
 235:Src/charlie.c ****    // C = 0
 236:Src/charlie.c ****    // D = Z
 237:Src/charlie.c ****    if(pos == 1){
 369              		.loc 2 237 4 is_stmt 1 view .LVU90
 370              		.loc 2 237 6 is_stmt 0 view .LVU91
 371 0016 012C     		cmp	r4, #1
 372 0018 50D0     		beq	.L27
 373              	.L14:
 238:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 239:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 240:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 241:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 242:Src/charlie.c **** 
 243:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 244:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 245:Src/charlie.c ****       }
 246:Src/charlie.c **** 
 247:Src/charlie.c **** 
 248:Src/charlie.c ****    // 2'oclock
 249:Src/charlie.c ****    // A = Z
 250:Src/charlie.c ****    // B = 1
 251:Src/charlie.c ****    // C = Z
 252:Src/charlie.c ****    // D = 0
 253:Src/charlie.c ****    if(pos == 2){
 374              		.loc 2 253 4 is_stmt 1 view .LVU92
 375              		.loc 2 253 6 is_stmt 0 view .LVU93
 376 001a 022C     		cmp	r4, #2
 377 001c 6BD0     		beq	.L28
 378              	.L15:
 254:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 255:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 256:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 257:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 258:Src/charlie.c **** 
 259:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 260:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 261:Src/charlie.c ****       }
 262:Src/charlie.c **** 
 263:Src/charlie.c ****    // 3'oclock
 264:Src/charlie.c ****    // A = Z
 265:Src/charlie.c ****    // B = 1
 266:Src/charlie.c ****    // C = Z
 267:Src/charlie.c ****    // D = 0
 268:Src/charlie.c ****    if(pos == 3){
 379              		.loc 2 268 4 is_stmt 1 view .LVU94
 380              		.loc 2 268 6 is_stmt 0 view .LVU95
 381 001e 032C     		cmp	r4, #3
 382 0020 00D1     		bne	.LCB282
 383 0022 85E0     		b	.L29	@long jump
 384              	.LCB282:
 385              	.L16:
 269:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 270:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
ARM GAS  /tmp/ccrwQJPQ.s 			page 19


 271:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 272:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 273:Src/charlie.c **** 
 274:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 275:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 276:Src/charlie.c ****       }
 277:Src/charlie.c **** 
 278:Src/charlie.c **** 
 279:Src/charlie.c ****    // 4'oclock
 280:Src/charlie.c ****    // A = 1
 281:Src/charlie.c ****    // B = Z
 282:Src/charlie.c ****    // C = Z
 283:Src/charlie.c ****    // D = 0
 284:Src/charlie.c ****    if(pos == 4){
 386              		.loc 2 284 4 is_stmt 1 view .LVU96
 387              		.loc 2 284 6 is_stmt 0 view .LVU97
 388 0024 042C     		cmp	r4, #4
 389 0026 00D1     		bne	.LCB286
 390 0028 9FE0     		b	.L30	@long jump
 391              	.LCB286:
 392              	.L17:
 285:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 286:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 287:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 288:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 289:Src/charlie.c **** 
 290:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 291:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 292:Src/charlie.c ****       }
 293:Src/charlie.c **** 
 294:Src/charlie.c ****    // 5'oclock
 295:Src/charlie.c ****    // A = 0
 296:Src/charlie.c ****    // B = Z
 297:Src/charlie.c ****    // C = Z
 298:Src/charlie.c ****    // D = 1
 299:Src/charlie.c ****    if(pos == 5){
 393              		.loc 2 299 4 is_stmt 1 view .LVU98
 394              		.loc 2 299 6 is_stmt 0 view .LVU99
 395 002a 052C     		cmp	r4, #5
 396 002c 00D1     		bne	.LCB290
 397 002e B9E0     		b	.L31	@long jump
 398              	.LCB290:
 399              	.L18:
 300:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 301:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 302:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 303:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 304:Src/charlie.c **** 
 305:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 306:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 307:Src/charlie.c ****       }
 308:Src/charlie.c **** 
 309:Src/charlie.c ****    // 6'oclock
 310:Src/charlie.c ****    if(pos == 6){
 400              		.loc 2 310 4 is_stmt 1 view .LVU100
 401              		.loc 2 310 6 is_stmt 0 view .LVU101
 402 0030 062C     		cmp	r4, #6
ARM GAS  /tmp/ccrwQJPQ.s 			page 20


 403 0032 00D1     		bne	.LCB294
 404 0034 D3E0     		b	.L32	@long jump
 405              	.LCB294:
 406              	.L19:
 311:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 312:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 313:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 314:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 315:Src/charlie.c **** 
 316:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 317:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 318:Src/charlie.c ****       }
 319:Src/charlie.c **** 
 320:Src/charlie.c ****    // 7'oclock
 321:Src/charlie.c ****    if(pos == 7){
 407              		.loc 2 321 4 is_stmt 1 view .LVU102
 408              		.loc 2 321 6 is_stmt 0 view .LVU103
 409 0036 072C     		cmp	r4, #7
 410 0038 00D1     		bne	.LCB298
 411 003a EDE0     		b	.L33	@long jump
 412              	.LCB298:
 413              	.L20:
 322:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 323:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 324:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 325:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 326:Src/charlie.c ****       
 327:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 328:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 329:Src/charlie.c ****       }
 330:Src/charlie.c **** 
 331:Src/charlie.c ****    // 8'oclock
 332:Src/charlie.c ****    // A = Z
 333:Src/charlie.c ****    // B = 1
 334:Src/charlie.c ****    // C = 0
 335:Src/charlie.c ****    // D = Z
 336:Src/charlie.c ****    if(pos == 8){
 414              		.loc 2 336 4 is_stmt 1 view .LVU104
 415              		.loc 2 336 6 is_stmt 0 view .LVU105
 416 003c 082C     		cmp	r4, #8
 417 003e 00D1     		bne	.LCB302
 418 0040 07E1     		b	.L34	@long jump
 419              	.LCB302:
 420              	.L21:
 337:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 338:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 339:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 340:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 341:Src/charlie.c **** 
 342:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 343:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 344:Src/charlie.c ****       }
 345:Src/charlie.c **** 
 346:Src/charlie.c ****    // 9'oclock
 347:Src/charlie.c ****    // A = Z
 348:Src/charlie.c ****    // B = 1
 349:Src/charlie.c ****    // C = 0
ARM GAS  /tmp/ccrwQJPQ.s 			page 21


 350:Src/charlie.c ****    // D = Z
 351:Src/charlie.c ****    if(pos == 9){
 421              		.loc 2 351 4 is_stmt 1 view .LVU106
 422              		.loc 2 351 6 is_stmt 0 view .LVU107
 423 0042 092C     		cmp	r4, #9
 424 0044 00D1     		bne	.LCB306
 425 0046 21E1     		b	.L35	@long jump
 426              	.LCB306:
 427              	.L22:
 352:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 353:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 354:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 355:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 356:Src/charlie.c **** 
 357:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 358:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 359:Src/charlie.c ****       }
 360:Src/charlie.c **** 
 361:Src/charlie.c ****    // 10'oclock
 362:Src/charlie.c ****    // A = Z
 363:Src/charlie.c ****    // B = Z
 364:Src/charlie.c ****    // C = 0
 365:Src/charlie.c ****    // D = 1
 366:Src/charlie.c ****    if(pos == 10){
 428              		.loc 2 366 4 is_stmt 1 view .LVU108
 429              		.loc 2 366 6 is_stmt 0 view .LVU109
 430 0048 0A2C     		cmp	r4, #10
 431 004a 00D1     		bne	.LCB310
 432 004c 3BE1     		b	.L36	@long jump
 433              	.LCB310:
 434              	.L23:
 367:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 368:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 369:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 370:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 371:Src/charlie.c **** 
 372:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 373:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 374:Src/charlie.c ****       }
 375:Src/charlie.c ****    
 376:Src/charlie.c ****    // 11'oclock
 377:Src/charlie.c ****    // A = Z
 378:Src/charlie.c ****    // B = Z
 379:Src/charlie.c ****    // C = 1
 380:Src/charlie.c ****    // D = 0
 381:Src/charlie.c ****    if(pos == 11){
 435              		.loc 2 381 4 is_stmt 1 view .LVU110
 436              		.loc 2 381 6 is_stmt 0 view .LVU111
 437 004e 0B2C     		cmp	r4, #11
 438 0050 00D1     		bne	.LCB314
 439 0052 55E1     		b	.L37	@long jump
 440              	.LCB314:
 441              	.L11:
 382:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 383:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 384:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 385:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
ARM GAS  /tmp/ccrwQJPQ.s 			page 22


 386:Src/charlie.c ****             
 387:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 388:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 389:Src/charlie.c ****       }
 390:Src/charlie.c **** 
 391:Src/charlie.c **** }
 442              		.loc 2 391 1 view .LVU112
 443              		@ sp needed
 444 0054 70BC     		pop	{r4, r5, r6}
 445 0056 08BC     		pop	{r3}
 446 0058 04B0     		add	sp, sp, #16
 447 005a 1847     		bx	r3
 448              	.L25:
 210:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 449              		.loc 2 210 7 is_stmt 1 view .LVU113
 450 005c 9025     		movs	r5, #144
 451 005e ED05     		lsls	r5, r5, #23
 452 0060 0121     		movs	r1, #1
 453 0062 2800     		movs	r0, r5
 454 0064 FFF7FEFF 		bl	HAL_GPIO_DeInit
 455              	.LVL12:
 211:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 456              		.loc 2 211 7 view .LVU114
 457 0068 0221     		movs	r1, #2
 458 006a 2800     		movs	r0, r5
 459 006c FFF7FEFF 		bl	HAL_GPIO_DeInit
 460              	.LVL13:
 212:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 461              		.loc 2 212 7 view .LVU115
 462 0070 0421     		movs	r1, #4
 463 0072 2800     		movs	r0, r5
 464 0074 FFF7FEFF 		bl	HAL_GPIO_DeInit
 465              	.LVL14:
 213:Src/charlie.c ****    }
 466              		.loc 2 213 7 view .LVU116
 467 0078 0821     		movs	r1, #8
 468 007a 2800     		movs	r0, r5
 469 007c FFF7FEFF 		bl	HAL_GPIO_DeInit
 470              	.LVL15:
 471 0080 C7E7     		b	.L12
 472              	.L26:
 223:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 473              		.loc 2 223 7 view .LVU117
 474 0082 9025     		movs	r5, #144
 475 0084 ED05     		lsls	r5, r5, #23
 476 0086 04A9     		add	r1, sp, #16
 477 0088 2800     		movs	r0, r5
 478 008a FFF7FEFF 		bl	HAL_GPIO_Init
 479              	.LVL16:
 224:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 480              		.loc 2 224 7 view .LVU118
 481 008e 0EA9     		add	r1, sp, #56
 482 0090 2800     		movs	r0, r5
 483 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 484              	.LVL17:
 225:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 485              		.loc 2 225 7 view .LVU119
ARM GAS  /tmp/ccrwQJPQ.s 			page 23


 486 0096 0221     		movs	r1, #2
 487 0098 2800     		movs	r0, r5
 488 009a FFF7FEFF 		bl	HAL_GPIO_DeInit
 489              	.LVL18:
 226:Src/charlie.c **** 
 490              		.loc 2 226 7 view .LVU120
 491 009e 0821     		movs	r1, #8
 492 00a0 2800     		movs	r0, r5
 493 00a2 FFF7FEFF 		bl	HAL_GPIO_DeInit
 494              	.LVL19:
 228:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 495              		.loc 2 228 7 view .LVU121
 496 00a6 0122     		movs	r2, #1
 497 00a8 0121     		movs	r1, #1
 498 00aa 2800     		movs	r0, r5
 499 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 500              	.LVL20:
 229:Src/charlie.c ****       }
 501              		.loc 2 229 7 view .LVU122
 502 00b0 0022     		movs	r2, #0
 503 00b2 0421     		movs	r1, #4
 504 00b4 2800     		movs	r0, r5
 505 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 506              	.LVL21:
 507 00ba ACE7     		b	.L13
 508              	.L27:
 238:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 509              		.loc 2 238 7 view .LVU123
 510 00bc 9025     		movs	r5, #144
 511 00be ED05     		lsls	r5, r5, #23
 512 00c0 04A9     		add	r1, sp, #16
 513 00c2 2800     		movs	r0, r5
 514 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 515              	.LVL22:
 239:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 516              		.loc 2 239 7 view .LVU124
 517 00c8 0EA9     		add	r1, sp, #56
 518 00ca 2800     		movs	r0, r5
 519 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 520              	.LVL23:
 240:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 521              		.loc 2 240 7 view .LVU125
 522 00d0 0221     		movs	r1, #2
 523 00d2 2800     		movs	r0, r5
 524 00d4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 525              	.LVL24:
 241:Src/charlie.c **** 
 526              		.loc 2 241 7 view .LVU126
 527 00d8 0821     		movs	r1, #8
 528 00da 2800     		movs	r0, r5
 529 00dc FFF7FEFF 		bl	HAL_GPIO_DeInit
 530              	.LVL25:
 243:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 531              		.loc 2 243 7 view .LVU127
 532 00e0 0022     		movs	r2, #0
 533 00e2 0121     		movs	r1, #1
 534 00e4 2800     		movs	r0, r5
ARM GAS  /tmp/ccrwQJPQ.s 			page 24


 535 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 536              	.LVL26:
 244:Src/charlie.c ****       }
 537              		.loc 2 244 7 view .LVU128
 538 00ea 0122     		movs	r2, #1
 539 00ec 0421     		movs	r1, #4
 540 00ee 2800     		movs	r0, r5
 541 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 542              	.LVL27:
 543 00f4 91E7     		b	.L14
 544              	.L28:
 254:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 545              		.loc 2 254 7 view .LVU129
 546 00f6 9025     		movs	r5, #144
 547 00f8 ED05     		lsls	r5, r5, #23
 548 00fa 09A9     		add	r1, sp, #36
 549 00fc 2800     		movs	r0, r5
 550 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 551              	.LVL28:
 255:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 552              		.loc 2 255 7 view .LVU130
 553 0102 13A9     		add	r1, sp, #76
 554 0104 2800     		movs	r0, r5
 555 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 556              	.LVL29:
 256:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 557              		.loc 2 256 7 view .LVU131
 558 010a 0121     		movs	r1, #1
 559 010c 2800     		movs	r0, r5
 560 010e FFF7FEFF 		bl	HAL_GPIO_DeInit
 561              	.LVL30:
 257:Src/charlie.c **** 
 562              		.loc 2 257 7 view .LVU132
 563 0112 0421     		movs	r1, #4
 564 0114 2800     		movs	r0, r5
 565 0116 FFF7FEFF 		bl	HAL_GPIO_DeInit
 566              	.LVL31:
 259:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 567              		.loc 2 259 7 view .LVU133
 568 011a 0122     		movs	r2, #1
 569 011c 0221     		movs	r1, #2
 570 011e 2800     		movs	r0, r5
 571 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 572              	.LVL32:
 260:Src/charlie.c ****       }
 573              		.loc 2 260 7 view .LVU134
 574 0124 0022     		movs	r2, #0
 575 0126 0821     		movs	r1, #8
 576 0128 2800     		movs	r0, r5
 577 012a FFF7FEFF 		bl	HAL_GPIO_WritePin
 578              	.LVL33:
 579 012e 76E7     		b	.L15
 580              	.L29:
 269:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 581              		.loc 2 269 7 view .LVU135
 582 0130 9025     		movs	r5, #144
 583 0132 ED05     		lsls	r5, r5, #23
ARM GAS  /tmp/ccrwQJPQ.s 			page 25


 584 0134 09A9     		add	r1, sp, #36
 585 0136 2800     		movs	r0, r5
 586 0138 FFF7FEFF 		bl	HAL_GPIO_Init
 587              	.LVL34:
 270:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 588              		.loc 2 270 7 view .LVU136
 589 013c 13A9     		add	r1, sp, #76
 590 013e 2800     		movs	r0, r5
 591 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 592              	.LVL35:
 271:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 593              		.loc 2 271 7 view .LVU137
 594 0144 0121     		movs	r1, #1
 595 0146 2800     		movs	r0, r5
 596 0148 FFF7FEFF 		bl	HAL_GPIO_DeInit
 597              	.LVL36:
 272:Src/charlie.c **** 
 598              		.loc 2 272 7 view .LVU138
 599 014c 0421     		movs	r1, #4
 600 014e 2800     		movs	r0, r5
 601 0150 FFF7FEFF 		bl	HAL_GPIO_DeInit
 602              	.LVL37:
 274:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 603              		.loc 2 274 7 view .LVU139
 604 0154 0022     		movs	r2, #0
 605 0156 0221     		movs	r1, #2
 606 0158 2800     		movs	r0, r5
 607 015a FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL38:
 275:Src/charlie.c ****       }
 609              		.loc 2 275 7 view .LVU140
 610 015e 0122     		movs	r2, #1
 611 0160 0821     		movs	r1, #8
 612 0162 2800     		movs	r0, r5
 613 0164 FFF7FEFF 		bl	HAL_GPIO_WritePin
 614              	.LVL39:
 615 0168 5CE7     		b	.L16
 616              	.L30:
 285:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 617              		.loc 2 285 7 view .LVU141
 618 016a 9025     		movs	r5, #144
 619 016c ED05     		lsls	r5, r5, #23
 620 016e 04A9     		add	r1, sp, #16
 621 0170 2800     		movs	r0, r5
 622 0172 FFF7FEFF 		bl	HAL_GPIO_Init
 623              	.LVL40:
 286:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 624              		.loc 2 286 7 view .LVU142
 625 0176 13A9     		add	r1, sp, #76
 626 0178 2800     		movs	r0, r5
 627 017a FFF7FEFF 		bl	HAL_GPIO_Init
 628              	.LVL41:
 287:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 629              		.loc 2 287 7 view .LVU143
 630 017e 0221     		movs	r1, #2
 631 0180 2800     		movs	r0, r5
 632 0182 FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/ccrwQJPQ.s 			page 26


 633              	.LVL42:
 288:Src/charlie.c **** 
 634              		.loc 2 288 7 view .LVU144
 635 0186 0421     		movs	r1, #4
 636 0188 2800     		movs	r0, r5
 637 018a FFF7FEFF 		bl	HAL_GPIO_DeInit
 638              	.LVL43:
 290:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 639              		.loc 2 290 7 view .LVU145
 640 018e 0122     		movs	r2, #1
 641 0190 0121     		movs	r1, #1
 642 0192 2800     		movs	r0, r5
 643 0194 FFF7FEFF 		bl	HAL_GPIO_WritePin
 644              	.LVL44:
 291:Src/charlie.c ****       }
 645              		.loc 2 291 7 view .LVU146
 646 0198 0022     		movs	r2, #0
 647 019a 0821     		movs	r1, #8
 648 019c 2800     		movs	r0, r5
 649 019e FFF7FEFF 		bl	HAL_GPIO_WritePin
 650              	.LVL45:
 651 01a2 42E7     		b	.L17
 652              	.L31:
 300:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 653              		.loc 2 300 7 view .LVU147
 654 01a4 9025     		movs	r5, #144
 655 01a6 ED05     		lsls	r5, r5, #23
 656 01a8 04A9     		add	r1, sp, #16
 657 01aa 2800     		movs	r0, r5
 658 01ac FFF7FEFF 		bl	HAL_GPIO_Init
 659              	.LVL46:
 301:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 660              		.loc 2 301 7 view .LVU148
 661 01b0 13A9     		add	r1, sp, #76
 662 01b2 2800     		movs	r0, r5
 663 01b4 FFF7FEFF 		bl	HAL_GPIO_Init
 664              	.LVL47:
 302:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 665              		.loc 2 302 7 view .LVU149
 666 01b8 0221     		movs	r1, #2
 667 01ba 2800     		movs	r0, r5
 668 01bc FFF7FEFF 		bl	HAL_GPIO_DeInit
 669              	.LVL48:
 303:Src/charlie.c **** 
 670              		.loc 2 303 7 view .LVU150
 671 01c0 0421     		movs	r1, #4
 672 01c2 2800     		movs	r0, r5
 673 01c4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 674              	.LVL49:
 305:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 675              		.loc 2 305 7 view .LVU151
 676 01c8 0022     		movs	r2, #0
 677 01ca 0121     		movs	r1, #1
 678 01cc 2800     		movs	r0, r5
 679 01ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 680              	.LVL50:
 306:Src/charlie.c ****       }
ARM GAS  /tmp/ccrwQJPQ.s 			page 27


 681              		.loc 2 306 7 view .LVU152
 682 01d2 0122     		movs	r2, #1
 683 01d4 0821     		movs	r1, #8
 684 01d6 2800     		movs	r0, r5
 685 01d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 686              	.LVL51:
 687 01dc 28E7     		b	.L18
 688              	.L32:
 311:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 689              		.loc 2 311 7 view .LVU153
 690 01de 9025     		movs	r5, #144
 691 01e0 ED05     		lsls	r5, r5, #23
 692 01e2 04A9     		add	r1, sp, #16
 693 01e4 2800     		movs	r0, r5
 694 01e6 FFF7FEFF 		bl	HAL_GPIO_Init
 695              	.LVL52:
 312:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 696              		.loc 2 312 7 view .LVU154
 697 01ea 09A9     		add	r1, sp, #36
 698 01ec 2800     		movs	r0, r5
 699 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 700              	.LVL53:
 313:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 701              		.loc 2 313 7 view .LVU155
 702 01f2 0421     		movs	r1, #4
 703 01f4 2800     		movs	r0, r5
 704 01f6 FFF7FEFF 		bl	HAL_GPIO_DeInit
 705              	.LVL54:
 314:Src/charlie.c **** 
 706              		.loc 2 314 7 view .LVU156
 707 01fa 0821     		movs	r1, #8
 708 01fc 2800     		movs	r0, r5
 709 01fe FFF7FEFF 		bl	HAL_GPIO_DeInit
 710              	.LVL55:
 316:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 711              		.loc 2 316 7 view .LVU157
 712 0202 0122     		movs	r2, #1
 713 0204 0121     		movs	r1, #1
 714 0206 2800     		movs	r0, r5
 715 0208 FFF7FEFF 		bl	HAL_GPIO_WritePin
 716              	.LVL56:
 317:Src/charlie.c ****       }
 717              		.loc 2 317 7 view .LVU158
 718 020c 0022     		movs	r2, #0
 719 020e 0221     		movs	r1, #2
 720 0210 2800     		movs	r0, r5
 721 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 722              	.LVL57:
 723 0216 0EE7     		b	.L19
 724              	.L33:
 322:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 725              		.loc 2 322 7 view .LVU159
 726 0218 9025     		movs	r5, #144
 727 021a ED05     		lsls	r5, r5, #23
 728 021c 04A9     		add	r1, sp, #16
 729 021e 2800     		movs	r0, r5
 730 0220 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccrwQJPQ.s 			page 28


 731              	.LVL58:
 323:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 732              		.loc 2 323 7 view .LVU160
 733 0224 09A9     		add	r1, sp, #36
 734 0226 2800     		movs	r0, r5
 735 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 736              	.LVL59:
 324:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 737              		.loc 2 324 7 view .LVU161
 738 022c 0421     		movs	r1, #4
 739 022e 2800     		movs	r0, r5
 740 0230 FFF7FEFF 		bl	HAL_GPIO_DeInit
 741              	.LVL60:
 325:Src/charlie.c ****       
 742              		.loc 2 325 7 view .LVU162
 743 0234 0821     		movs	r1, #8
 744 0236 2800     		movs	r0, r5
 745 0238 FFF7FEFF 		bl	HAL_GPIO_DeInit
 746              	.LVL61:
 327:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 747              		.loc 2 327 7 view .LVU163
 748 023c 0022     		movs	r2, #0
 749 023e 0121     		movs	r1, #1
 750 0240 2800     		movs	r0, r5
 751 0242 FFF7FEFF 		bl	HAL_GPIO_WritePin
 752              	.LVL62:
 328:Src/charlie.c ****       }
 753              		.loc 2 328 7 view .LVU164
 754 0246 0122     		movs	r2, #1
 755 0248 0221     		movs	r1, #2
 756 024a 2800     		movs	r0, r5
 757 024c FFF7FEFF 		bl	HAL_GPIO_WritePin
 758              	.LVL63:
 759 0250 F4E6     		b	.L20
 760              	.L34:
 337:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 761              		.loc 2 337 7 view .LVU165
 762 0252 9025     		movs	r5, #144
 763 0254 ED05     		lsls	r5, r5, #23
 764 0256 09A9     		add	r1, sp, #36
 765 0258 2800     		movs	r0, r5
 766 025a FFF7FEFF 		bl	HAL_GPIO_Init
 767              	.LVL64:
 338:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 768              		.loc 2 338 7 view .LVU166
 769 025e 0EA9     		add	r1, sp, #56
 770 0260 2800     		movs	r0, r5
 771 0262 FFF7FEFF 		bl	HAL_GPIO_Init
 772              	.LVL65:
 339:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 773              		.loc 2 339 7 view .LVU167
 774 0266 0121     		movs	r1, #1
 775 0268 2800     		movs	r0, r5
 776 026a FFF7FEFF 		bl	HAL_GPIO_DeInit
 777              	.LVL66:
 340:Src/charlie.c **** 
 778              		.loc 2 340 7 view .LVU168
ARM GAS  /tmp/ccrwQJPQ.s 			page 29


 779 026e 0821     		movs	r1, #8
 780 0270 2800     		movs	r0, r5
 781 0272 FFF7FEFF 		bl	HAL_GPIO_DeInit
 782              	.LVL67:
 342:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 783              		.loc 2 342 7 view .LVU169
 784 0276 0122     		movs	r2, #1
 785 0278 0221     		movs	r1, #2
 786 027a 2800     		movs	r0, r5
 787 027c FFF7FEFF 		bl	HAL_GPIO_WritePin
 788              	.LVL68:
 343:Src/charlie.c ****       }
 789              		.loc 2 343 7 view .LVU170
 790 0280 0022     		movs	r2, #0
 791 0282 0421     		movs	r1, #4
 792 0284 2800     		movs	r0, r5
 793 0286 FFF7FEFF 		bl	HAL_GPIO_WritePin
 794              	.LVL69:
 795 028a DAE6     		b	.L21
 796              	.L35:
 352:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 797              		.loc 2 352 7 view .LVU171
 798 028c 9025     		movs	r5, #144
 799 028e ED05     		lsls	r5, r5, #23
 800 0290 09A9     		add	r1, sp, #36
 801 0292 2800     		movs	r0, r5
 802 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 803              	.LVL70:
 353:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 804              		.loc 2 353 7 view .LVU172
 805 0298 0EA9     		add	r1, sp, #56
 806 029a 2800     		movs	r0, r5
 807 029c FFF7FEFF 		bl	HAL_GPIO_Init
 808              	.LVL71:
 354:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 809              		.loc 2 354 7 view .LVU173
 810 02a0 0121     		movs	r1, #1
 811 02a2 2800     		movs	r0, r5
 812 02a4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 813              	.LVL72:
 355:Src/charlie.c **** 
 814              		.loc 2 355 7 view .LVU174
 815 02a8 0821     		movs	r1, #8
 816 02aa 2800     		movs	r0, r5
 817 02ac FFF7FEFF 		bl	HAL_GPIO_DeInit
 818              	.LVL73:
 357:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 819              		.loc 2 357 7 view .LVU175
 820 02b0 0022     		movs	r2, #0
 821 02b2 0221     		movs	r1, #2
 822 02b4 2800     		movs	r0, r5
 823 02b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 824              	.LVL74:
 358:Src/charlie.c ****       }
 825              		.loc 2 358 7 view .LVU176
 826 02ba 0122     		movs	r2, #1
 827 02bc 0421     		movs	r1, #4
ARM GAS  /tmp/ccrwQJPQ.s 			page 30


 828 02be 2800     		movs	r0, r5
 829 02c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 830              	.LVL75:
 831 02c4 C0E6     		b	.L22
 832              	.L36:
 367:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 833              		.loc 2 367 7 view .LVU177
 834 02c6 9025     		movs	r5, #144
 835 02c8 ED05     		lsls	r5, r5, #23
 836 02ca 0EA9     		add	r1, sp, #56
 837 02cc 2800     		movs	r0, r5
 838 02ce FFF7FEFF 		bl	HAL_GPIO_Init
 839              	.LVL76:
 368:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 840              		.loc 2 368 7 view .LVU178
 841 02d2 13A9     		add	r1, sp, #76
 842 02d4 2800     		movs	r0, r5
 843 02d6 FFF7FEFF 		bl	HAL_GPIO_Init
 844              	.LVL77:
 369:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 845              		.loc 2 369 7 view .LVU179
 846 02da 0121     		movs	r1, #1
 847 02dc 2800     		movs	r0, r5
 848 02de FFF7FEFF 		bl	HAL_GPIO_DeInit
 849              	.LVL78:
 370:Src/charlie.c **** 
 850              		.loc 2 370 7 view .LVU180
 851 02e2 0221     		movs	r1, #2
 852 02e4 2800     		movs	r0, r5
 853 02e6 FFF7FEFF 		bl	HAL_GPIO_DeInit
 854              	.LVL79:
 372:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 855              		.loc 2 372 7 view .LVU181
 856 02ea 0122     		movs	r2, #1
 857 02ec 0421     		movs	r1, #4
 858 02ee 2800     		movs	r0, r5
 859 02f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 860              	.LVL80:
 373:Src/charlie.c ****       }
 861              		.loc 2 373 7 view .LVU182
 862 02f4 0022     		movs	r2, #0
 863 02f6 0821     		movs	r1, #8
 864 02f8 2800     		movs	r0, r5
 865 02fa FFF7FEFF 		bl	HAL_GPIO_WritePin
 866              	.LVL81:
 867 02fe A6E6     		b	.L23
 868              	.L37:
 382:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 869              		.loc 2 382 7 view .LVU183
 870 0300 9024     		movs	r4, #144
 871 0302 E405     		lsls	r4, r4, #23
 872 0304 0EA9     		add	r1, sp, #56
 873 0306 2000     		movs	r0, r4
 874 0308 FFF7FEFF 		bl	HAL_GPIO_Init
 875              	.LVL82:
 383:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 876              		.loc 2 383 7 view .LVU184
ARM GAS  /tmp/ccrwQJPQ.s 			page 31


 877 030c 13A9     		add	r1, sp, #76
 878 030e 2000     		movs	r0, r4
 879 0310 FFF7FEFF 		bl	HAL_GPIO_Init
 880              	.LVL83:
 384:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 881              		.loc 2 384 7 view .LVU185
 882 0314 0121     		movs	r1, #1
 883 0316 2000     		movs	r0, r4
 884 0318 FFF7FEFF 		bl	HAL_GPIO_DeInit
 885              	.LVL84:
 385:Src/charlie.c ****             
 886              		.loc 2 385 7 view .LVU186
 887 031c 0221     		movs	r1, #2
 888 031e 2000     		movs	r0, r4
 889 0320 FFF7FEFF 		bl	HAL_GPIO_DeInit
 890              	.LVL85:
 387:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 891              		.loc 2 387 7 view .LVU187
 892 0324 0022     		movs	r2, #0
 893 0326 0421     		movs	r1, #4
 894 0328 2000     		movs	r0, r4
 895 032a FFF7FEFF 		bl	HAL_GPIO_WritePin
 896              	.LVL86:
 388:Src/charlie.c ****       }
 897              		.loc 2 388 7 view .LVU188
 898 032e 0122     		movs	r2, #1
 899 0330 0821     		movs	r1, #8
 900 0332 2000     		movs	r0, r4
 901 0334 FFF7FEFF 		bl	HAL_GPIO_WritePin
 902              	.LVL87:
 903              		.loc 2 391 1 is_stmt 0 view .LVU189
 904 0338 8CE6     		b	.L11
 905              		.cfi_endproc
 906              	.LFE45:
 908              		.section	.text.dance,"ax",%progbits
 909              		.align	1
 910              		.global	dance
 911              		.syntax unified
 912              		.code	16
 913              		.thumb_func
 914              		.fpu softvfp
 916              	dance:
 917              	.LVL88:
 918              	.LFB44:
  12:Src/charlie.c ****    // Off
 919              		.loc 2 12 114 is_stmt 1 view -0
 920              		.cfi_startproc
 921              		@ args = 84, pretend = 16, frame = 8
 922              		@ frame_needed = 0, uses_anonymous_args = 0
  12:Src/charlie.c ****    // Off
 923              		.loc 2 12 114 is_stmt 0 view .LVU191
 924 0000 84B0     		sub	sp, sp, #16
 925              	.LCFI8:
 926              		.cfi_def_cfa_offset 16
 927 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 928              	.LCFI9:
 929              		.cfi_def_cfa_offset 36
ARM GAS  /tmp/ccrwQJPQ.s 			page 32


 930              		.cfi_offset 4, -36
 931              		.cfi_offset 5, -32
 932              		.cfi_offset 6, -28
 933              		.cfi_offset 7, -24
 934              		.cfi_offset 14, -20
 935 0004 DE46     		mov	lr, fp
 936 0006 5746     		mov	r7, r10
 937 0008 4E46     		mov	r6, r9
 938 000a 4546     		mov	r5, r8
 939 000c E0B5     		push	{r5, r6, r7, lr}
 940              	.LCFI10:
 941              		.cfi_def_cfa_offset 52
 942              		.cfi_offset 8, -52
 943              		.cfi_offset 9, -48
 944              		.cfi_offset 10, -44
 945              		.cfi_offset 11, -40
 946 000e 95B0     		sub	sp, sp, #84
 947              	.LCFI11:
 948              		.cfi_def_cfa_offset 136
 949 0010 1E90     		str	r0, [sp, #120]
 950 0012 1F91     		str	r1, [sp, #124]
 951 0014 2092     		str	r2, [sp, #128]
 952 0016 2193     		str	r3, [sp, #132]
 953 0018 329C     		ldr	r4, [sp, #200]
  14:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 954              		.loc 2 14 4 is_stmt 1 view .LVU192
  14:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 955              		.loc 2 14 6 is_stmt 0 view .LVU193
 956 001a 002C     		cmp	r4, #0
 957 001c 16D0     		beq	.L73
 958              	.L39:
  19:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 959              		.loc 2 19 4 is_stmt 1 view .LVU194
  19:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 960              		.loc 2 19 6 is_stmt 0 view .LVU195
 961 001e 012C     		cmp	r4, #1
 962 0020 37D0     		beq	.L74
 963              	.L40:
  75:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 964              		.loc 2 75 4 is_stmt 1 view .LVU196
  75:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 965              		.loc 2 75 6 is_stmt 0 view .LVU197
 966 0022 022C     		cmp	r4, #2
 967 0024 00D1     		bne	.LCB776
 968 0026 69E2     		b	.L75	@long jump
 969              	.LCB776:
 970              	.L42:
 131:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 971              		.loc 2 131 4 is_stmt 1 view .LVU198
 131:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 972              		.loc 2 131 6 is_stmt 0 view .LVU199
 973 0028 032C     		cmp	r4, #3
 974 002a 01D1     		bne	.LCB780
 975 002c 00F09EFC 		bl	.L76	@far jump
 976              	.LCB780:
 977              	.L43:
 145:Src/charlie.c ****       for(int i =1; i<=7; i++){
ARM GAS  /tmp/ccrwQJPQ.s 			page 33


 978              		.loc 2 145 4 is_stmt 1 view .LVU200
 145:Src/charlie.c ****       for(int i =1; i<=7; i++){
 979              		.loc 2 145 6 is_stmt 0 view .LVU201
 980 0030 042C     		cmp	r4, #4
 981 0032 01D1     		bne	.LCB784
 982 0034 00F0FFFE 		bl	.L77	@far jump
 983              	.LCB784:
 984              	.LVL89:
 985              	.L38:
 206:Src/charlie.c **** 
 986              		.loc 2 206 1 view .LVU202
 987 0038 15B0     		add	sp, sp, #84
 988              		@ sp needed
 989 003a 3CBC     		pop	{r2, r3, r4, r5}
 990 003c 9046     		mov	r8, r2
 991 003e 9946     		mov	r9, r3
 992 0040 A246     		mov	r10, r4
 993 0042 AB46     		mov	fp, r5
 994 0044 F0BC     		pop	{r4, r5, r6, r7}
 995 0046 08BC     		pop	{r3}
 996 0048 04B0     		add	sp, sp, #16
 997 004a 1847     		bx	r3
 998              	.LVL90:
 999              	.L73:
  15:Src/charlie.c ****    }
 1000              		.loc 2 15 8 is_stmt 1 view .LVU203
 1001 004c 0023     		movs	r3, #0
 1002 004e 1093     		str	r3, [sp, #64]
 1003 0050 2DA8     		add	r0, sp, #180
 1004 0052 0BA9     		add	r1, sp, #44
 1005 0054 0B00     		movs	r3, r1
 1006 0056 0200     		movs	r2, r0
 1007 0058 23CA     		ldmia	r2!, {r0, r1, r5}
 1008 005a 23C3     		stmia	r3!, {r0, r1, r5}
 1009 005c 03CA     		ldmia	r2!, {r0, r1}
 1010 005e 03C3     		stmia	r3!, {r0, r1}
 1011 0060 28A8     		add	r0, sp, #160
 1012 0062 06A9     		add	r1, sp, #24
 1013 0064 0B00     		movs	r3, r1
 1014 0066 0200     		movs	r2, r0
 1015 0068 23CA     		ldmia	r2!, {r0, r1, r5}
 1016 006a 23C3     		stmia	r3!, {r0, r1, r5}
 1017 006c 03CA     		ldmia	r2!, {r0, r1}
 1018 006e 03C3     		stmia	r3!, {r0, r1}
 1019 0070 23A8     		add	r0, sp, #140
 1020 0072 01A9     		add	r1, sp, #4
 1021 0074 0B00     		movs	r3, r1
 1022 0076 0200     		movs	r2, r0
 1023 0078 23CA     		ldmia	r2!, {r0, r1, r5}
 1024 007a 23C3     		stmia	r3!, {r0, r1, r5}
 1025 007c 03CA     		ldmia	r2!, {r0, r1}
 1026 007e 03C3     		stmia	r3!, {r0, r1}
 1027 0080 229B     		ldr	r3, [sp, #136]
 1028 0082 0093     		str	r3, [sp]
 1029 0084 1E98     		ldr	r0, [sp, #120]
 1030 0086 1F99     		ldr	r1, [sp, #124]
 1031 0088 209A     		ldr	r2, [sp, #128]
ARM GAS  /tmp/ccrwQJPQ.s 			page 34


 1032 008a 219B     		ldr	r3, [sp, #132]
 1033 008c FFF7FEFF 		bl	charlie
 1034              	.LVL91:
 1035 0090 C5E7     		b	.L39
 1036              	.L74:
  20:Src/charlie.c ****        if(stop == 1)
 1037              		.loc 2 20 8 view .LVU204
 1038 0092 0023     		movs	r3, #0
 1039 0094 1093     		str	r3, [sp, #64]
 1040 0096 2DA8     		add	r0, sp, #180
 1041 0098 0BA9     		add	r1, sp, #44
 1042 009a 0B00     		movs	r3, r1
 1043 009c 0200     		movs	r2, r0
 1044 009e 23CA     		ldmia	r2!, {r0, r1, r5}
 1045 00a0 23C3     		stmia	r3!, {r0, r1, r5}
 1046 00a2 03CA     		ldmia	r2!, {r0, r1}
 1047 00a4 03C3     		stmia	r3!, {r0, r1}
 1048 00a6 28A8     		add	r0, sp, #160
 1049 00a8 06A9     		add	r1, sp, #24
 1050 00aa 0B00     		movs	r3, r1
 1051 00ac 0200     		movs	r2, r0
 1052 00ae 23CA     		ldmia	r2!, {r0, r1, r5}
 1053 00b0 23C3     		stmia	r3!, {r0, r1, r5}
 1054 00b2 03CA     		ldmia	r2!, {r0, r1}
 1055 00b4 03C3     		stmia	r3!, {r0, r1}
 1056 00b6 23A8     		add	r0, sp, #140
 1057 00b8 01A9     		add	r1, sp, #4
 1058 00ba 0B00     		movs	r3, r1
 1059 00bc 0200     		movs	r2, r0
 1060 00be 23CA     		ldmia	r2!, {r0, r1, r5}
 1061 00c0 23C3     		stmia	r3!, {r0, r1, r5}
 1062 00c2 03CA     		ldmia	r2!, {r0, r1}
 1063 00c4 03C3     		stmia	r3!, {r0, r1}
 1064 00c6 229B     		ldr	r3, [sp, #136]
 1065 00c8 0093     		str	r3, [sp]
 1066 00ca 1E98     		ldr	r0, [sp, #120]
 1067 00cc 1F99     		ldr	r1, [sp, #124]
 1068 00ce 209A     		ldr	r2, [sp, #128]
 1069 00d0 219B     		ldr	r3, [sp, #132]
 1070 00d2 FFF7FEFF 		bl	charlie
 1071              	.LVL92:
  21:Src/charlie.c ****          return;
 1072              		.loc 2 21 8 view .LVU205
  21:Src/charlie.c ****          return;
 1073              		.loc 2 21 16 is_stmt 0 view .LVU206
 1074 00d6 EF4B     		ldr	r3, .L86
 1075 00d8 1B68     		ldr	r3, [r3]
  21:Src/charlie.c ****          return;
 1076              		.loc 2 21 10 view .LVU207
 1077 00da 012B     		cmp	r3, #1
 1078 00dc ACD0     		beq	.L38
  23:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 1079              		.loc 2 23 8 is_stmt 1 view .LVU208
 1080 00de FA20     		movs	r0, #250
 1081 00e0 8000     		lsls	r0, r0, #2
 1082 00e2 FFF7FEFF 		bl	HAL_Delay
 1083              	.LVL93:
ARM GAS  /tmp/ccrwQJPQ.s 			page 35


  24:Src/charlie.c ****        if(stop == 1)
 1084              		.loc 2 24 8 view .LVU209
 1085 00e6 0123     		movs	r3, #1
 1086 00e8 1093     		str	r3, [sp, #64]
 1087 00ea 2DA8     		add	r0, sp, #180
 1088 00ec 0BA9     		add	r1, sp, #44
 1089 00ee 0B00     		movs	r3, r1
 1090 00f0 0200     		movs	r2, r0
 1091 00f2 23CA     		ldmia	r2!, {r0, r1, r5}
 1092 00f4 23C3     		stmia	r3!, {r0, r1, r5}
 1093 00f6 03CA     		ldmia	r2!, {r0, r1}
 1094 00f8 03C3     		stmia	r3!, {r0, r1}
 1095 00fa 28A8     		add	r0, sp, #160
 1096 00fc 06A9     		add	r1, sp, #24
 1097 00fe 0B00     		movs	r3, r1
 1098 0100 0200     		movs	r2, r0
 1099 0102 23CA     		ldmia	r2!, {r0, r1, r5}
 1100 0104 23C3     		stmia	r3!, {r0, r1, r5}
 1101 0106 03CA     		ldmia	r2!, {r0, r1}
 1102 0108 03C3     		stmia	r3!, {r0, r1}
 1103 010a 23A8     		add	r0, sp, #140
 1104 010c 01A9     		add	r1, sp, #4
 1105 010e 0B00     		movs	r3, r1
 1106 0110 0200     		movs	r2, r0
 1107 0112 23CA     		ldmia	r2!, {r0, r1, r5}
 1108 0114 23C3     		stmia	r3!, {r0, r1, r5}
 1109 0116 03CA     		ldmia	r2!, {r0, r1}
 1110 0118 03C3     		stmia	r3!, {r0, r1}
 1111 011a 229B     		ldr	r3, [sp, #136]
 1112 011c 0093     		str	r3, [sp]
 1113 011e 1E98     		ldr	r0, [sp, #120]
 1114 0120 1F99     		ldr	r1, [sp, #124]
 1115 0122 209A     		ldr	r2, [sp, #128]
 1116 0124 219B     		ldr	r3, [sp, #132]
 1117 0126 FFF7FEFF 		bl	charlie
 1118              	.LVL94:
  25:Src/charlie.c ****          return;
 1119              		.loc 2 25 8 view .LVU210
  25:Src/charlie.c ****          return;
 1120              		.loc 2 25 16 is_stmt 0 view .LVU211
 1121 012a DA4B     		ldr	r3, .L86
 1122 012c 1B68     		ldr	r3, [r3]
  25:Src/charlie.c ****          return;
 1123              		.loc 2 25 10 view .LVU212
 1124 012e 012B     		cmp	r3, #1
 1125 0130 00D1     		bne	.LCB926
 1126 0132 81E7     		b	.L38	@long jump
 1127              	.LCB926:
  27:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 1128              		.loc 2 27 8 is_stmt 1 view .LVU213
 1129 0134 FA20     		movs	r0, #250
 1130 0136 8000     		lsls	r0, r0, #2
 1131 0138 FFF7FEFF 		bl	HAL_Delay
 1132              	.LVL95:
  28:Src/charlie.c ****        if(stop == 1)
 1133              		.loc 2 28 8 view .LVU214
 1134 013c 0223     		movs	r3, #2
ARM GAS  /tmp/ccrwQJPQ.s 			page 36


 1135 013e 1093     		str	r3, [sp, #64]
 1136 0140 2DA8     		add	r0, sp, #180
 1137 0142 0BA9     		add	r1, sp, #44
 1138 0144 0B00     		movs	r3, r1
 1139 0146 0200     		movs	r2, r0
 1140 0148 23CA     		ldmia	r2!, {r0, r1, r5}
 1141 014a 23C3     		stmia	r3!, {r0, r1, r5}
 1142 014c 03CA     		ldmia	r2!, {r0, r1}
 1143 014e 03C3     		stmia	r3!, {r0, r1}
 1144 0150 28A8     		add	r0, sp, #160
 1145 0152 06A9     		add	r1, sp, #24
 1146 0154 0B00     		movs	r3, r1
 1147 0156 0200     		movs	r2, r0
 1148 0158 23CA     		ldmia	r2!, {r0, r1, r5}
 1149 015a 23C3     		stmia	r3!, {r0, r1, r5}
 1150 015c 03CA     		ldmia	r2!, {r0, r1}
 1151 015e 03C3     		stmia	r3!, {r0, r1}
 1152 0160 23A8     		add	r0, sp, #140
 1153 0162 01A9     		add	r1, sp, #4
 1154 0164 0B00     		movs	r3, r1
 1155 0166 0200     		movs	r2, r0
 1156 0168 23CA     		ldmia	r2!, {r0, r1, r5}
 1157 016a 23C3     		stmia	r3!, {r0, r1, r5}
 1158 016c 03CA     		ldmia	r2!, {r0, r1}
 1159 016e 03C3     		stmia	r3!, {r0, r1}
 1160 0170 229B     		ldr	r3, [sp, #136]
 1161 0172 0093     		str	r3, [sp]
 1162 0174 1E98     		ldr	r0, [sp, #120]
 1163 0176 1F99     		ldr	r1, [sp, #124]
 1164 0178 209A     		ldr	r2, [sp, #128]
 1165 017a 219B     		ldr	r3, [sp, #132]
 1166 017c FFF7FEFF 		bl	charlie
 1167              	.LVL96:
  29:Src/charlie.c ****          return;
 1168              		.loc 2 29 8 view .LVU215
  29:Src/charlie.c ****          return;
 1169              		.loc 2 29 16 is_stmt 0 view .LVU216
 1170 0180 C44B     		ldr	r3, .L86
 1171 0182 1B68     		ldr	r3, [r3]
  29:Src/charlie.c ****          return;
 1172              		.loc 2 29 10 view .LVU217
 1173 0184 012B     		cmp	r3, #1
 1174 0186 00D1     		bne	.LCB970
 1175 0188 56E7     		b	.L38	@long jump
 1176              	.LCB970:
  31:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 1177              		.loc 2 31 8 is_stmt 1 view .LVU218
 1178 018a FA20     		movs	r0, #250
 1179 018c 8000     		lsls	r0, r0, #2
 1180 018e FFF7FEFF 		bl	HAL_Delay
 1181              	.LVL97:
  32:Src/charlie.c ****        if(stop == 1)
 1182              		.loc 2 32 8 view .LVU219
 1183 0192 0323     		movs	r3, #3
 1184 0194 1093     		str	r3, [sp, #64]
 1185 0196 2DA8     		add	r0, sp, #180
 1186 0198 0BA9     		add	r1, sp, #44
ARM GAS  /tmp/ccrwQJPQ.s 			page 37


 1187 019a 0B00     		movs	r3, r1
 1188 019c 0200     		movs	r2, r0
 1189 019e 23CA     		ldmia	r2!, {r0, r1, r5}
 1190 01a0 23C3     		stmia	r3!, {r0, r1, r5}
 1191 01a2 03CA     		ldmia	r2!, {r0, r1}
 1192 01a4 03C3     		stmia	r3!, {r0, r1}
 1193 01a6 28A8     		add	r0, sp, #160
 1194 01a8 06A9     		add	r1, sp, #24
 1195 01aa 0B00     		movs	r3, r1
 1196 01ac 0200     		movs	r2, r0
 1197 01ae 23CA     		ldmia	r2!, {r0, r1, r5}
 1198 01b0 23C3     		stmia	r3!, {r0, r1, r5}
 1199 01b2 03CA     		ldmia	r2!, {r0, r1}
 1200 01b4 03C3     		stmia	r3!, {r0, r1}
 1201 01b6 23A8     		add	r0, sp, #140
 1202 01b8 01A9     		add	r1, sp, #4
 1203 01ba 0B00     		movs	r3, r1
 1204 01bc 0200     		movs	r2, r0
 1205 01be 23CA     		ldmia	r2!, {r0, r1, r5}
 1206 01c0 23C3     		stmia	r3!, {r0, r1, r5}
 1207 01c2 03CA     		ldmia	r2!, {r0, r1}
 1208 01c4 03C3     		stmia	r3!, {r0, r1}
 1209 01c6 229B     		ldr	r3, [sp, #136]
 1210 01c8 0093     		str	r3, [sp]
 1211 01ca 1E98     		ldr	r0, [sp, #120]
 1212 01cc 1F99     		ldr	r1, [sp, #124]
 1213 01ce 209A     		ldr	r2, [sp, #128]
 1214 01d0 219B     		ldr	r3, [sp, #132]
 1215 01d2 FFF7FEFF 		bl	charlie
 1216              	.LVL98:
  33:Src/charlie.c ****          return;
 1217              		.loc 2 33 8 view .LVU220
  33:Src/charlie.c ****          return;
 1218              		.loc 2 33 16 is_stmt 0 view .LVU221
 1219 01d6 AF4B     		ldr	r3, .L86
 1220 01d8 1B68     		ldr	r3, [r3]
  33:Src/charlie.c ****          return;
 1221              		.loc 2 33 10 view .LVU222
 1222 01da 012B     		cmp	r3, #1
 1223 01dc 00D1     		bne	.LCB1014
 1224 01de 2BE7     		b	.L38	@long jump
 1225              	.LCB1014:
  35:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 1226              		.loc 2 35 8 is_stmt 1 view .LVU223
 1227 01e0 FA20     		movs	r0, #250
 1228 01e2 8000     		lsls	r0, r0, #2
 1229 01e4 FFF7FEFF 		bl	HAL_Delay
 1230              	.LVL99:
  36:Src/charlie.c ****        if(stop == 1)
 1231              		.loc 2 36 8 view .LVU224
 1232 01e8 0423     		movs	r3, #4
 1233 01ea 1093     		str	r3, [sp, #64]
 1234 01ec 2DA8     		add	r0, sp, #180
 1235 01ee 0BA9     		add	r1, sp, #44
 1236 01f0 0B00     		movs	r3, r1
 1237 01f2 0200     		movs	r2, r0
 1238 01f4 23CA     		ldmia	r2!, {r0, r1, r5}
ARM GAS  /tmp/ccrwQJPQ.s 			page 38


 1239 01f6 23C3     		stmia	r3!, {r0, r1, r5}
 1240 01f8 03CA     		ldmia	r2!, {r0, r1}
 1241 01fa 03C3     		stmia	r3!, {r0, r1}
 1242 01fc 28A8     		add	r0, sp, #160
 1243 01fe 06A9     		add	r1, sp, #24
 1244 0200 0B00     		movs	r3, r1
 1245 0202 0200     		movs	r2, r0
 1246 0204 23CA     		ldmia	r2!, {r0, r1, r5}
 1247 0206 23C3     		stmia	r3!, {r0, r1, r5}
 1248 0208 03CA     		ldmia	r2!, {r0, r1}
 1249 020a 03C3     		stmia	r3!, {r0, r1}
 1250 020c 23A8     		add	r0, sp, #140
 1251 020e 01A9     		add	r1, sp, #4
 1252 0210 0B00     		movs	r3, r1
 1253 0212 0200     		movs	r2, r0
 1254 0214 23CA     		ldmia	r2!, {r0, r1, r5}
 1255 0216 23C3     		stmia	r3!, {r0, r1, r5}
 1256 0218 03CA     		ldmia	r2!, {r0, r1}
 1257 021a 03C3     		stmia	r3!, {r0, r1}
 1258 021c 229B     		ldr	r3, [sp, #136]
 1259 021e 0093     		str	r3, [sp]
 1260 0220 1E98     		ldr	r0, [sp, #120]
 1261 0222 1F99     		ldr	r1, [sp, #124]
 1262 0224 209A     		ldr	r2, [sp, #128]
 1263 0226 219B     		ldr	r3, [sp, #132]
 1264 0228 FFF7FEFF 		bl	charlie
 1265              	.LVL100:
  37:Src/charlie.c ****          return;
 1266              		.loc 2 37 8 view .LVU225
  37:Src/charlie.c ****          return;
 1267              		.loc 2 37 16 is_stmt 0 view .LVU226
 1268 022c 994B     		ldr	r3, .L86
 1269 022e 1B68     		ldr	r3, [r3]
  37:Src/charlie.c ****          return;
 1270              		.loc 2 37 10 view .LVU227
 1271 0230 012B     		cmp	r3, #1
 1272 0232 00D1     		bne	.LCB1058
 1273 0234 00E7     		b	.L38	@long jump
 1274              	.LCB1058:
  39:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 1275              		.loc 2 39 8 is_stmt 1 view .LVU228
 1276 0236 FA20     		movs	r0, #250
 1277 0238 8000     		lsls	r0, r0, #2
 1278 023a FFF7FEFF 		bl	HAL_Delay
 1279              	.LVL101:
  40:Src/charlie.c ****        if(stop == 1)
 1280              		.loc 2 40 8 view .LVU229
 1281 023e 0523     		movs	r3, #5
 1282 0240 1093     		str	r3, [sp, #64]
 1283 0242 2DA8     		add	r0, sp, #180
 1284 0244 0BA9     		add	r1, sp, #44
 1285 0246 0B00     		movs	r3, r1
 1286 0248 0200     		movs	r2, r0
 1287 024a 23CA     		ldmia	r2!, {r0, r1, r5}
 1288 024c 23C3     		stmia	r3!, {r0, r1, r5}
 1289 024e 03CA     		ldmia	r2!, {r0, r1}
 1290 0250 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/ccrwQJPQ.s 			page 39


 1291 0252 28A8     		add	r0, sp, #160
 1292 0254 06A9     		add	r1, sp, #24
 1293 0256 0B00     		movs	r3, r1
 1294 0258 0200     		movs	r2, r0
 1295 025a 23CA     		ldmia	r2!, {r0, r1, r5}
 1296 025c 23C3     		stmia	r3!, {r0, r1, r5}
 1297 025e 03CA     		ldmia	r2!, {r0, r1}
 1298 0260 03C3     		stmia	r3!, {r0, r1}
 1299 0262 23A8     		add	r0, sp, #140
 1300 0264 01A9     		add	r1, sp, #4
 1301 0266 0B00     		movs	r3, r1
 1302 0268 0200     		movs	r2, r0
 1303 026a 23CA     		ldmia	r2!, {r0, r1, r5}
 1304 026c 23C3     		stmia	r3!, {r0, r1, r5}
 1305 026e 03CA     		ldmia	r2!, {r0, r1}
 1306 0270 03C3     		stmia	r3!, {r0, r1}
 1307 0272 229B     		ldr	r3, [sp, #136]
 1308 0274 0093     		str	r3, [sp]
 1309 0276 1E98     		ldr	r0, [sp, #120]
 1310 0278 1F99     		ldr	r1, [sp, #124]
 1311 027a 209A     		ldr	r2, [sp, #128]
 1312 027c 219B     		ldr	r3, [sp, #132]
 1313 027e FFF7FEFF 		bl	charlie
 1314              	.LVL102:
  41:Src/charlie.c ****          return;
 1315              		.loc 2 41 8 view .LVU230
  41:Src/charlie.c ****          return;
 1316              		.loc 2 41 16 is_stmt 0 view .LVU231
 1317 0282 844B     		ldr	r3, .L86
 1318 0284 1B68     		ldr	r3, [r3]
  41:Src/charlie.c ****          return;
 1319              		.loc 2 41 10 view .LVU232
 1320 0286 012B     		cmp	r3, #1
 1321 0288 00D1     		bne	.LCB1102
 1322 028a D5E6     		b	.L38	@long jump
 1323              	.LCB1102:
  43:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 1324              		.loc 2 43 8 is_stmt 1 view .LVU233
 1325 028c FA20     		movs	r0, #250
 1326 028e 8000     		lsls	r0, r0, #2
 1327 0290 FFF7FEFF 		bl	HAL_Delay
 1328              	.LVL103:
  44:Src/charlie.c ****        if(stop == 1)
 1329              		.loc 2 44 8 view .LVU234
 1330 0294 0623     		movs	r3, #6
 1331 0296 1093     		str	r3, [sp, #64]
 1332 0298 2DA8     		add	r0, sp, #180
 1333 029a 0BA9     		add	r1, sp, #44
 1334 029c 0B00     		movs	r3, r1
 1335 029e 0200     		movs	r2, r0
 1336 02a0 23CA     		ldmia	r2!, {r0, r1, r5}
 1337 02a2 23C3     		stmia	r3!, {r0, r1, r5}
 1338 02a4 03CA     		ldmia	r2!, {r0, r1}
 1339 02a6 03C3     		stmia	r3!, {r0, r1}
 1340 02a8 28A8     		add	r0, sp, #160
 1341 02aa 06A9     		add	r1, sp, #24
 1342 02ac 0B00     		movs	r3, r1
ARM GAS  /tmp/ccrwQJPQ.s 			page 40


 1343 02ae 0200     		movs	r2, r0
 1344 02b0 23CA     		ldmia	r2!, {r0, r1, r5}
 1345 02b2 23C3     		stmia	r3!, {r0, r1, r5}
 1346 02b4 03CA     		ldmia	r2!, {r0, r1}
 1347 02b6 03C3     		stmia	r3!, {r0, r1}
 1348 02b8 23A8     		add	r0, sp, #140
 1349 02ba 01A9     		add	r1, sp, #4
 1350 02bc 0B00     		movs	r3, r1
 1351 02be 0200     		movs	r2, r0
 1352 02c0 23CA     		ldmia	r2!, {r0, r1, r5}
 1353 02c2 23C3     		stmia	r3!, {r0, r1, r5}
 1354 02c4 03CA     		ldmia	r2!, {r0, r1}
 1355 02c6 03C3     		stmia	r3!, {r0, r1}
 1356 02c8 229B     		ldr	r3, [sp, #136]
 1357 02ca 0093     		str	r3, [sp]
 1358 02cc 1E98     		ldr	r0, [sp, #120]
 1359 02ce 1F99     		ldr	r1, [sp, #124]
 1360 02d0 209A     		ldr	r2, [sp, #128]
 1361 02d2 219B     		ldr	r3, [sp, #132]
 1362 02d4 FFF7FEFF 		bl	charlie
 1363              	.LVL104:
  45:Src/charlie.c ****          return;
 1364              		.loc 2 45 8 view .LVU235
  45:Src/charlie.c ****          return;
 1365              		.loc 2 45 16 is_stmt 0 view .LVU236
 1366 02d8 6E4B     		ldr	r3, .L86
 1367 02da 1B68     		ldr	r3, [r3]
  45:Src/charlie.c ****          return;
 1368              		.loc 2 45 10 view .LVU237
 1369 02dc 012B     		cmp	r3, #1
 1370 02de 00D1     		bne	.LCB1146
 1371 02e0 AAE6     		b	.L38	@long jump
 1372              	.LCB1146:
  47:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 1373              		.loc 2 47 8 is_stmt 1 view .LVU238
 1374 02e2 FA20     		movs	r0, #250
 1375 02e4 8000     		lsls	r0, r0, #2
 1376 02e6 FFF7FEFF 		bl	HAL_Delay
 1377              	.LVL105:
  48:Src/charlie.c ****        if(stop == 1)
 1378              		.loc 2 48 8 view .LVU239
 1379 02ea 0723     		movs	r3, #7
 1380 02ec 1093     		str	r3, [sp, #64]
 1381 02ee 2DA8     		add	r0, sp, #180
 1382 02f0 0BA9     		add	r1, sp, #44
 1383 02f2 0B00     		movs	r3, r1
 1384 02f4 0200     		movs	r2, r0
 1385 02f6 23CA     		ldmia	r2!, {r0, r1, r5}
 1386 02f8 23C3     		stmia	r3!, {r0, r1, r5}
 1387 02fa 03CA     		ldmia	r2!, {r0, r1}
 1388 02fc 03C3     		stmia	r3!, {r0, r1}
 1389 02fe 28A8     		add	r0, sp, #160
 1390 0300 06A9     		add	r1, sp, #24
 1391 0302 0B00     		movs	r3, r1
 1392 0304 0200     		movs	r2, r0
 1393 0306 23CA     		ldmia	r2!, {r0, r1, r5}
 1394 0308 23C3     		stmia	r3!, {r0, r1, r5}
ARM GAS  /tmp/ccrwQJPQ.s 			page 41


 1395 030a 03CA     		ldmia	r2!, {r0, r1}
 1396 030c 03C3     		stmia	r3!, {r0, r1}
 1397 030e 23A8     		add	r0, sp, #140
 1398 0310 01A9     		add	r1, sp, #4
 1399 0312 0B00     		movs	r3, r1
 1400 0314 0200     		movs	r2, r0
 1401 0316 23CA     		ldmia	r2!, {r0, r1, r5}
 1402 0318 23C3     		stmia	r3!, {r0, r1, r5}
 1403 031a 03CA     		ldmia	r2!, {r0, r1}
 1404 031c 03C3     		stmia	r3!, {r0, r1}
 1405 031e 229B     		ldr	r3, [sp, #136]
 1406 0320 0093     		str	r3, [sp]
 1407 0322 1E98     		ldr	r0, [sp, #120]
 1408 0324 1F99     		ldr	r1, [sp, #124]
 1409 0326 209A     		ldr	r2, [sp, #128]
 1410 0328 219B     		ldr	r3, [sp, #132]
 1411 032a FFF7FEFF 		bl	charlie
 1412              	.LVL106:
  49:Src/charlie.c ****          return;
 1413              		.loc 2 49 8 view .LVU240
  49:Src/charlie.c ****          return;
 1414              		.loc 2 49 16 is_stmt 0 view .LVU241
 1415 032e 594B     		ldr	r3, .L86
 1416 0330 1B68     		ldr	r3, [r3]
  49:Src/charlie.c ****          return;
 1417              		.loc 2 49 10 view .LVU242
 1418 0332 012B     		cmp	r3, #1
 1419 0334 00D1     		bne	.LCB1190
 1420 0336 7FE6     		b	.L38	@long jump
 1421              	.LCB1190:
  51:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 1422              		.loc 2 51 8 is_stmt 1 view .LVU243
 1423 0338 FA20     		movs	r0, #250
 1424 033a 8000     		lsls	r0, r0, #2
 1425 033c FFF7FEFF 		bl	HAL_Delay
 1426              	.LVL107:
  52:Src/charlie.c ****        if(stop == 1)
 1427              		.loc 2 52 8 view .LVU244
 1428 0340 0823     		movs	r3, #8
 1429 0342 1093     		str	r3, [sp, #64]
 1430 0344 2DA8     		add	r0, sp, #180
 1431 0346 0BA9     		add	r1, sp, #44
 1432 0348 0B00     		movs	r3, r1
 1433 034a 0200     		movs	r2, r0
 1434 034c 23CA     		ldmia	r2!, {r0, r1, r5}
 1435 034e 23C3     		stmia	r3!, {r0, r1, r5}
 1436 0350 03CA     		ldmia	r2!, {r0, r1}
 1437 0352 03C3     		stmia	r3!, {r0, r1}
 1438 0354 28A8     		add	r0, sp, #160
 1439 0356 06A9     		add	r1, sp, #24
 1440 0358 0B00     		movs	r3, r1
 1441 035a 0200     		movs	r2, r0
 1442 035c 23CA     		ldmia	r2!, {r0, r1, r5}
 1443 035e 23C3     		stmia	r3!, {r0, r1, r5}
 1444 0360 03CA     		ldmia	r2!, {r0, r1}
 1445 0362 03C3     		stmia	r3!, {r0, r1}
 1446 0364 23A8     		add	r0, sp, #140
ARM GAS  /tmp/ccrwQJPQ.s 			page 42


 1447 0366 01A9     		add	r1, sp, #4
 1448 0368 0B00     		movs	r3, r1
 1449 036a 0200     		movs	r2, r0
 1450 036c 23CA     		ldmia	r2!, {r0, r1, r5}
 1451 036e 23C3     		stmia	r3!, {r0, r1, r5}
 1452 0370 03CA     		ldmia	r2!, {r0, r1}
 1453 0372 03C3     		stmia	r3!, {r0, r1}
 1454 0374 229B     		ldr	r3, [sp, #136]
 1455 0376 0093     		str	r3, [sp]
 1456 0378 1E98     		ldr	r0, [sp, #120]
 1457 037a 1F99     		ldr	r1, [sp, #124]
 1458 037c 209A     		ldr	r2, [sp, #128]
 1459 037e 219B     		ldr	r3, [sp, #132]
 1460 0380 FFF7FEFF 		bl	charlie
 1461              	.LVL108:
  53:Src/charlie.c ****          return;
 1462              		.loc 2 53 8 view .LVU245
  53:Src/charlie.c ****          return;
 1463              		.loc 2 53 16 is_stmt 0 view .LVU246
 1464 0384 434B     		ldr	r3, .L86
 1465 0386 1B68     		ldr	r3, [r3]
  53:Src/charlie.c ****          return;
 1466              		.loc 2 53 10 view .LVU247
 1467 0388 012B     		cmp	r3, #1
 1468 038a 00D1     		bne	.LCB1234
 1469 038c 54E6     		b	.L38	@long jump
 1470              	.LCB1234:
  55:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 1471              		.loc 2 55 8 is_stmt 1 view .LVU248
 1472 038e FA20     		movs	r0, #250
 1473 0390 8000     		lsls	r0, r0, #2
 1474 0392 FFF7FEFF 		bl	HAL_Delay
 1475              	.LVL109:
  56:Src/charlie.c ****        if(stop == 1)
 1476              		.loc 2 56 8 view .LVU249
 1477 0396 0923     		movs	r3, #9
 1478 0398 1093     		str	r3, [sp, #64]
 1479 039a 2DA8     		add	r0, sp, #180
 1480 039c 0BA9     		add	r1, sp, #44
 1481 039e 0B00     		movs	r3, r1
 1482 03a0 0200     		movs	r2, r0
 1483 03a2 23CA     		ldmia	r2!, {r0, r1, r5}
 1484 03a4 23C3     		stmia	r3!, {r0, r1, r5}
 1485 03a6 03CA     		ldmia	r2!, {r0, r1}
 1486 03a8 03C3     		stmia	r3!, {r0, r1}
 1487 03aa 28A8     		add	r0, sp, #160
 1488 03ac 06A9     		add	r1, sp, #24
 1489 03ae 0B00     		movs	r3, r1
 1490 03b0 0200     		movs	r2, r0
 1491 03b2 23CA     		ldmia	r2!, {r0, r1, r5}
 1492 03b4 23C3     		stmia	r3!, {r0, r1, r5}
 1493 03b6 03CA     		ldmia	r2!, {r0, r1}
 1494 03b8 03C3     		stmia	r3!, {r0, r1}
 1495 03ba 23A8     		add	r0, sp, #140
 1496 03bc 01A9     		add	r1, sp, #4
 1497 03be 0B00     		movs	r3, r1
 1498 03c0 0200     		movs	r2, r0
ARM GAS  /tmp/ccrwQJPQ.s 			page 43


 1499 03c2 23CA     		ldmia	r2!, {r0, r1, r5}
 1500 03c4 23C3     		stmia	r3!, {r0, r1, r5}
 1501 03c6 03CA     		ldmia	r2!, {r0, r1}
 1502 03c8 03C3     		stmia	r3!, {r0, r1}
 1503 03ca 229B     		ldr	r3, [sp, #136]
 1504 03cc 0093     		str	r3, [sp]
 1505 03ce 1E98     		ldr	r0, [sp, #120]
 1506 03d0 1F99     		ldr	r1, [sp, #124]
 1507 03d2 209A     		ldr	r2, [sp, #128]
 1508 03d4 219B     		ldr	r3, [sp, #132]
 1509 03d6 FFF7FEFF 		bl	charlie
 1510              	.LVL110:
  57:Src/charlie.c ****          return;
 1511              		.loc 2 57 8 view .LVU250
  57:Src/charlie.c ****          return;
 1512              		.loc 2 57 16 is_stmt 0 view .LVU251
 1513 03da 2E4B     		ldr	r3, .L86
 1514 03dc 1B68     		ldr	r3, [r3]
  57:Src/charlie.c ****          return;
 1515              		.loc 2 57 10 view .LVU252
 1516 03de 012B     		cmp	r3, #1
 1517 03e0 00D1     		bne	.LCB1278
 1518 03e2 29E6     		b	.L38	@long jump
 1519              	.LCB1278:
  59:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 1520              		.loc 2 59 8 is_stmt 1 view .LVU253
 1521 03e4 FA20     		movs	r0, #250
 1522 03e6 8000     		lsls	r0, r0, #2
 1523 03e8 FFF7FEFF 		bl	HAL_Delay
 1524              	.LVL111:
  60:Src/charlie.c ****        if(stop == 1)
 1525              		.loc 2 60 8 view .LVU254
 1526 03ec 0A23     		movs	r3, #10
 1527 03ee 1093     		str	r3, [sp, #64]
 1528 03f0 2DA8     		add	r0, sp, #180
 1529 03f2 0BA9     		add	r1, sp, #44
 1530 03f4 0B00     		movs	r3, r1
 1531 03f6 0200     		movs	r2, r0
 1532 03f8 23CA     		ldmia	r2!, {r0, r1, r5}
 1533 03fa 23C3     		stmia	r3!, {r0, r1, r5}
 1534 03fc 03CA     		ldmia	r2!, {r0, r1}
 1535 03fe 03C3     		stmia	r3!, {r0, r1}
 1536 0400 28A8     		add	r0, sp, #160
 1537 0402 06A9     		add	r1, sp, #24
 1538 0404 0B00     		movs	r3, r1
 1539 0406 0200     		movs	r2, r0
 1540 0408 23CA     		ldmia	r2!, {r0, r1, r5}
 1541 040a 23C3     		stmia	r3!, {r0, r1, r5}
 1542 040c 03CA     		ldmia	r2!, {r0, r1}
 1543 040e 03C3     		stmia	r3!, {r0, r1}
 1544 0410 23A8     		add	r0, sp, #140
 1545 0412 01A9     		add	r1, sp, #4
 1546 0414 0B00     		movs	r3, r1
 1547 0416 0200     		movs	r2, r0
 1548 0418 23CA     		ldmia	r2!, {r0, r1, r5}
 1549 041a 23C3     		stmia	r3!, {r0, r1, r5}
 1550 041c 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/ccrwQJPQ.s 			page 44


 1551 041e 03C3     		stmia	r3!, {r0, r1}
 1552 0420 229B     		ldr	r3, [sp, #136]
 1553 0422 0093     		str	r3, [sp]
 1554 0424 1E98     		ldr	r0, [sp, #120]
 1555 0426 1F99     		ldr	r1, [sp, #124]
 1556 0428 209A     		ldr	r2, [sp, #128]
 1557 042a 219B     		ldr	r3, [sp, #132]
 1558 042c FFF7FEFF 		bl	charlie
 1559              	.LVL112:
  61:Src/charlie.c ****          return;
 1560              		.loc 2 61 8 view .LVU255
  61:Src/charlie.c ****          return;
 1561              		.loc 2 61 16 is_stmt 0 view .LVU256
 1562 0430 184B     		ldr	r3, .L86
 1563 0432 1B68     		ldr	r3, [r3]
  61:Src/charlie.c ****          return;
 1564              		.loc 2 61 10 view .LVU257
 1565 0434 012B     		cmp	r3, #1
 1566 0436 00D1     		bne	.LCB1322
 1567 0438 FEE5     		b	.L38	@long jump
 1568              	.LCB1322:
  63:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 1569              		.loc 2 63 8 is_stmt 1 view .LVU258
 1570 043a FA20     		movs	r0, #250
 1571 043c 8000     		lsls	r0, r0, #2
 1572 043e FFF7FEFF 		bl	HAL_Delay
 1573              	.LVL113:
  64:Src/charlie.c ****        if(stop == 1)
 1574              		.loc 2 64 8 view .LVU259
 1575 0442 0B23     		movs	r3, #11
 1576 0444 1093     		str	r3, [sp, #64]
 1577 0446 2DA8     		add	r0, sp, #180
 1578 0448 0BA9     		add	r1, sp, #44
 1579 044a 0B00     		movs	r3, r1
 1580 044c 0200     		movs	r2, r0
 1581 044e 23CA     		ldmia	r2!, {r0, r1, r5}
 1582 0450 23C3     		stmia	r3!, {r0, r1, r5}
 1583 0452 03CA     		ldmia	r2!, {r0, r1}
 1584 0454 03C3     		stmia	r3!, {r0, r1}
 1585 0456 28A8     		add	r0, sp, #160
 1586 0458 06A9     		add	r1, sp, #24
 1587 045a 0B00     		movs	r3, r1
 1588 045c 0200     		movs	r2, r0
 1589 045e 23CA     		ldmia	r2!, {r0, r1, r5}
 1590 0460 23C3     		stmia	r3!, {r0, r1, r5}
 1591 0462 03CA     		ldmia	r2!, {r0, r1}
 1592 0464 03C3     		stmia	r3!, {r0, r1}
 1593 0466 23A8     		add	r0, sp, #140
 1594 0468 01A9     		add	r1, sp, #4
 1595 046a 0B00     		movs	r3, r1
 1596 046c 0200     		movs	r2, r0
 1597 046e 23CA     		ldmia	r2!, {r0, r1, r5}
 1598 0470 23C3     		stmia	r3!, {r0, r1, r5}
 1599 0472 03CA     		ldmia	r2!, {r0, r1}
 1600 0474 03C3     		stmia	r3!, {r0, r1}
 1601 0476 229B     		ldr	r3, [sp, #136]
 1602 0478 0093     		str	r3, [sp]
ARM GAS  /tmp/ccrwQJPQ.s 			page 45


 1603 047a 1E98     		ldr	r0, [sp, #120]
 1604 047c 1F99     		ldr	r1, [sp, #124]
 1605 047e 209A     		ldr	r2, [sp, #128]
 1606 0480 219B     		ldr	r3, [sp, #132]
 1607 0482 FFF7FEFF 		bl	charlie
 1608              	.LVL114:
  65:Src/charlie.c ****          return;
 1609              		.loc 2 65 8 view .LVU260
  65:Src/charlie.c ****          return;
 1610              		.loc 2 65 16 is_stmt 0 view .LVU261
 1611 0486 034B     		ldr	r3, .L86
 1612 0488 1B68     		ldr	r3, [r3]
  65:Src/charlie.c ****          return;
 1613              		.loc 2 65 10 view .LVU262
 1614 048a 012B     		cmp	r3, #1
 1615 048c 00D1     		bne	.LCB1366
 1616 048e D3E5     		b	.L38	@long jump
 1617              	.LCB1366:
 1618 0490 02E0     		b	.L87
 1619              	.L88:
 1620 0492 C046     		.align	2
 1621              	.L86:
 1622 0494 00000000 		.word	.LANCHOR0
 1623              	.L87:
  67:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 1624              		.loc 2 67 8 is_stmt 1 view .LVU263
 1625 0498 FA20     		movs	r0, #250
 1626 049a 8000     		lsls	r0, r0, #2
 1627 049c FFF7FEFF 		bl	HAL_Delay
 1628              	.LVL115:
  68:Src/charlie.c ****        if(stop == 1)
 1629              		.loc 2 68 8 view .LVU264
 1630 04a0 0C23     		movs	r3, #12
 1631 04a2 1093     		str	r3, [sp, #64]
 1632 04a4 2DA8     		add	r0, sp, #180
 1633 04a6 0BA9     		add	r1, sp, #44
 1634 04a8 0B00     		movs	r3, r1
 1635 04aa 0200     		movs	r2, r0
 1636 04ac 23CA     		ldmia	r2!, {r0, r1, r5}
 1637 04ae 23C3     		stmia	r3!, {r0, r1, r5}
 1638 04b0 03CA     		ldmia	r2!, {r0, r1}
 1639 04b2 03C3     		stmia	r3!, {r0, r1}
 1640 04b4 28A8     		add	r0, sp, #160
 1641 04b6 06A9     		add	r1, sp, #24
 1642 04b8 0B00     		movs	r3, r1
 1643 04ba 0200     		movs	r2, r0
 1644 04bc 23CA     		ldmia	r2!, {r0, r1, r5}
 1645 04be 23C3     		stmia	r3!, {r0, r1, r5}
 1646 04c0 03CA     		ldmia	r2!, {r0, r1}
 1647 04c2 03C3     		stmia	r3!, {r0, r1}
 1648 04c4 23A8     		add	r0, sp, #140
 1649 04c6 01A9     		add	r1, sp, #4
 1650 04c8 0B00     		movs	r3, r1
 1651 04ca 0200     		movs	r2, r0
 1652 04cc 23CA     		ldmia	r2!, {r0, r1, r5}
 1653 04ce 23C3     		stmia	r3!, {r0, r1, r5}
 1654 04d0 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/ccrwQJPQ.s 			page 46


 1655 04d2 03C3     		stmia	r3!, {r0, r1}
 1656 04d4 229B     		ldr	r3, [sp, #136]
 1657 04d6 0093     		str	r3, [sp]
 1658 04d8 1E98     		ldr	r0, [sp, #120]
 1659 04da 1F99     		ldr	r1, [sp, #124]
 1660 04dc 209A     		ldr	r2, [sp, #128]
 1661 04de 219B     		ldr	r3, [sp, #132]
 1662 04e0 FFF7FEFF 		bl	charlie
 1663              	.LVL116:
  69:Src/charlie.c ****          return;
 1664              		.loc 2 69 8 view .LVU265
  69:Src/charlie.c ****          return;
 1665              		.loc 2 69 16 is_stmt 0 view .LVU266
 1666 04e4 044B     		ldr	r3, .L89
 1667 04e6 1B68     		ldr	r3, [r3]
  69:Src/charlie.c ****          return;
 1668              		.loc 2 69 10 view .LVU267
 1669 04e8 012B     		cmp	r3, #1
 1670 04ea 00D1     		bne	.LCB1419
 1671 04ec A4E5     		b	.L38	@long jump
 1672              	.LCB1419:
  71:Src/charlie.c ****    }
 1673              		.loc 2 71 8 is_stmt 1 view .LVU268
 1674 04ee FA20     		movs	r0, #250
 1675 04f0 8000     		lsls	r0, r0, #2
 1676 04f2 FFF7FEFF 		bl	HAL_Delay
 1677              	.LVL117:
 1678 04f6 94E5     		b	.L40
 1679              	.L90:
 1680              		.align	2
 1681              	.L89:
 1682 04f8 00000000 		.word	.LANCHOR0
 1683              	.L75:
  76:Src/charlie.c ****        if(stop == 1)
 1684              		.loc 2 76 8 view .LVU269
 1685 04fc 0023     		movs	r3, #0
 1686 04fe 1093     		str	r3, [sp, #64]
 1687 0500 2DA8     		add	r0, sp, #180
 1688 0502 0BA9     		add	r1, sp, #44
 1689 0504 0B00     		movs	r3, r1
 1690 0506 0200     		movs	r2, r0
 1691 0508 23CA     		ldmia	r2!, {r0, r1, r5}
 1692 050a 23C3     		stmia	r3!, {r0, r1, r5}
 1693 050c 03CA     		ldmia	r2!, {r0, r1}
 1694 050e 03C3     		stmia	r3!, {r0, r1}
 1695 0510 28A8     		add	r0, sp, #160
 1696 0512 06A9     		add	r1, sp, #24
 1697 0514 0B00     		movs	r3, r1
 1698 0516 0200     		movs	r2, r0
 1699 0518 23CA     		ldmia	r2!, {r0, r1, r5}
 1700 051a 23C3     		stmia	r3!, {r0, r1, r5}
 1701 051c 03CA     		ldmia	r2!, {r0, r1}
 1702 051e 03C3     		stmia	r3!, {r0, r1}
 1703 0520 23A8     		add	r0, sp, #140
 1704 0522 01A9     		add	r1, sp, #4
 1705 0524 0B00     		movs	r3, r1
 1706 0526 0200     		movs	r2, r0
ARM GAS  /tmp/ccrwQJPQ.s 			page 47


 1707 0528 23CA     		ldmia	r2!, {r0, r1, r5}
 1708 052a 23C3     		stmia	r3!, {r0, r1, r5}
 1709 052c 03CA     		ldmia	r2!, {r0, r1}
 1710 052e 03C3     		stmia	r3!, {r0, r1}
 1711 0530 229B     		ldr	r3, [sp, #136]
 1712 0532 0093     		str	r3, [sp]
 1713 0534 1E98     		ldr	r0, [sp, #120]
 1714 0536 1F99     		ldr	r1, [sp, #124]
 1715 0538 209A     		ldr	r2, [sp, #128]
 1716 053a 219B     		ldr	r3, [sp, #132]
 1717 053c FFF7FEFF 		bl	charlie
 1718              	.LVL118:
  77:Src/charlie.c ****          return;
 1719              		.loc 2 77 8 view .LVU270
  77:Src/charlie.c ****          return;
 1720              		.loc 2 77 16 is_stmt 0 view .LVU271
 1721 0540 F04B     		ldr	r3, .L91
 1722 0542 1B68     		ldr	r3, [r3]
  77:Src/charlie.c ****          return;
 1723              		.loc 2 77 10 view .LVU272
 1724 0544 012B     		cmp	r3, #1
 1725 0546 00D1     		bne	.LCB1473
 1726 0548 76E5     		b	.L38	@long jump
 1727              	.LCB1473:
  79:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 1728              		.loc 2 79 8 is_stmt 1 view .LVU273
 1729 054a FA20     		movs	r0, #250
 1730 054c 4000     		lsls	r0, r0, #1
 1731 054e FFF7FEFF 		bl	HAL_Delay
 1732              	.LVL119:
  80:Src/charlie.c ****        if(stop == 1)
 1733              		.loc 2 80 8 view .LVU274
 1734 0552 0123     		movs	r3, #1
 1735 0554 1093     		str	r3, [sp, #64]
 1736 0556 2DA8     		add	r0, sp, #180
 1737 0558 0BA9     		add	r1, sp, #44
 1738 055a 0B00     		movs	r3, r1
 1739 055c 0200     		movs	r2, r0
 1740 055e 23CA     		ldmia	r2!, {r0, r1, r5}
 1741 0560 23C3     		stmia	r3!, {r0, r1, r5}
 1742 0562 03CA     		ldmia	r2!, {r0, r1}
 1743 0564 03C3     		stmia	r3!, {r0, r1}
 1744 0566 28A8     		add	r0, sp, #160
 1745 0568 06A9     		add	r1, sp, #24
 1746 056a 0B00     		movs	r3, r1
 1747 056c 0200     		movs	r2, r0
 1748 056e 23CA     		ldmia	r2!, {r0, r1, r5}
 1749 0570 23C3     		stmia	r3!, {r0, r1, r5}
 1750 0572 03CA     		ldmia	r2!, {r0, r1}
 1751 0574 03C3     		stmia	r3!, {r0, r1}
 1752 0576 23A8     		add	r0, sp, #140
 1753 0578 01A9     		add	r1, sp, #4
 1754 057a 0B00     		movs	r3, r1
 1755 057c 0200     		movs	r2, r0
 1756 057e 23CA     		ldmia	r2!, {r0, r1, r5}
 1757 0580 23C3     		stmia	r3!, {r0, r1, r5}
 1758 0582 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/ccrwQJPQ.s 			page 48


 1759 0584 03C3     		stmia	r3!, {r0, r1}
 1760 0586 229B     		ldr	r3, [sp, #136]
 1761 0588 0093     		str	r3, [sp]
 1762 058a 1E98     		ldr	r0, [sp, #120]
 1763 058c 1F99     		ldr	r1, [sp, #124]
 1764 058e 209A     		ldr	r2, [sp, #128]
 1765 0590 219B     		ldr	r3, [sp, #132]
 1766 0592 FFF7FEFF 		bl	charlie
 1767              	.LVL120:
  81:Src/charlie.c ****          return;
 1768              		.loc 2 81 8 view .LVU275
  81:Src/charlie.c ****          return;
 1769              		.loc 2 81 16 is_stmt 0 view .LVU276
 1770 0596 DB4B     		ldr	r3, .L91
 1771 0598 1B68     		ldr	r3, [r3]
  81:Src/charlie.c ****          return;
 1772              		.loc 2 81 10 view .LVU277
 1773 059a 012B     		cmp	r3, #1
 1774 059c 00D1     		bne	.LCB1517
 1775 059e 4BE5     		b	.L38	@long jump
 1776              	.LCB1517:
  83:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 1777              		.loc 2 83 8 is_stmt 1 view .LVU278
 1778 05a0 FA20     		movs	r0, #250
 1779 05a2 4000     		lsls	r0, r0, #1
 1780 05a4 FFF7FEFF 		bl	HAL_Delay
 1781              	.LVL121:
  84:Src/charlie.c ****        if(stop == 1)
 1782              		.loc 2 84 8 view .LVU279
 1783 05a8 0223     		movs	r3, #2
 1784 05aa 1093     		str	r3, [sp, #64]
 1785 05ac 2DA8     		add	r0, sp, #180
 1786 05ae 0BA9     		add	r1, sp, #44
 1787 05b0 0B00     		movs	r3, r1
 1788 05b2 0200     		movs	r2, r0
 1789 05b4 23CA     		ldmia	r2!, {r0, r1, r5}
 1790 05b6 23C3     		stmia	r3!, {r0, r1, r5}
 1791 05b8 03CA     		ldmia	r2!, {r0, r1}
 1792 05ba 03C3     		stmia	r3!, {r0, r1}
 1793 05bc 28A8     		add	r0, sp, #160
 1794 05be 06A9     		add	r1, sp, #24
 1795 05c0 0B00     		movs	r3, r1
 1796 05c2 0200     		movs	r2, r0
 1797 05c4 23CA     		ldmia	r2!, {r0, r1, r5}
 1798 05c6 23C3     		stmia	r3!, {r0, r1, r5}
 1799 05c8 03CA     		ldmia	r2!, {r0, r1}
 1800 05ca 03C3     		stmia	r3!, {r0, r1}
 1801 05cc 23A8     		add	r0, sp, #140
 1802 05ce 01A9     		add	r1, sp, #4
 1803 05d0 0B00     		movs	r3, r1
 1804 05d2 0200     		movs	r2, r0
 1805 05d4 23CA     		ldmia	r2!, {r0, r1, r5}
 1806 05d6 23C3     		stmia	r3!, {r0, r1, r5}
 1807 05d8 03CA     		ldmia	r2!, {r0, r1}
 1808 05da 03C3     		stmia	r3!, {r0, r1}
 1809 05dc 229B     		ldr	r3, [sp, #136]
 1810 05de 0093     		str	r3, [sp]
ARM GAS  /tmp/ccrwQJPQ.s 			page 49


 1811 05e0 1E98     		ldr	r0, [sp, #120]
 1812 05e2 1F99     		ldr	r1, [sp, #124]
 1813 05e4 209A     		ldr	r2, [sp, #128]
 1814 05e6 219B     		ldr	r3, [sp, #132]
 1815 05e8 FFF7FEFF 		bl	charlie
 1816              	.LVL122:
  85:Src/charlie.c ****          return;
 1817              		.loc 2 85 8 view .LVU280
  85:Src/charlie.c ****          return;
 1818              		.loc 2 85 16 is_stmt 0 view .LVU281
 1819 05ec C54B     		ldr	r3, .L91
 1820 05ee 1B68     		ldr	r3, [r3]
  85:Src/charlie.c ****          return;
 1821              		.loc 2 85 10 view .LVU282
 1822 05f0 012B     		cmp	r3, #1
 1823 05f2 00D1     		bne	.LCB1561
 1824 05f4 20E5     		b	.L38	@long jump
 1825              	.LCB1561:
  87:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 1826              		.loc 2 87 8 is_stmt 1 view .LVU283
 1827 05f6 FA20     		movs	r0, #250
 1828 05f8 4000     		lsls	r0, r0, #1
 1829 05fa FFF7FEFF 		bl	HAL_Delay
 1830              	.LVL123:
  88:Src/charlie.c ****        if(stop == 1)
 1831              		.loc 2 88 8 view .LVU284
 1832 05fe 0323     		movs	r3, #3
 1833 0600 1093     		str	r3, [sp, #64]
 1834 0602 2DA8     		add	r0, sp, #180
 1835 0604 0BA9     		add	r1, sp, #44
 1836 0606 0B00     		movs	r3, r1
 1837 0608 0200     		movs	r2, r0
 1838 060a 23CA     		ldmia	r2!, {r0, r1, r5}
 1839 060c 23C3     		stmia	r3!, {r0, r1, r5}
 1840 060e 03CA     		ldmia	r2!, {r0, r1}
 1841 0610 03C3     		stmia	r3!, {r0, r1}
 1842 0612 28A8     		add	r0, sp, #160
 1843 0614 06A9     		add	r1, sp, #24
 1844 0616 0B00     		movs	r3, r1
 1845 0618 0200     		movs	r2, r0
 1846 061a 23CA     		ldmia	r2!, {r0, r1, r5}
 1847 061c 23C3     		stmia	r3!, {r0, r1, r5}
 1848 061e 03CA     		ldmia	r2!, {r0, r1}
 1849 0620 03C3     		stmia	r3!, {r0, r1}
 1850 0622 23A8     		add	r0, sp, #140
 1851 0624 01A9     		add	r1, sp, #4
 1852 0626 0B00     		movs	r3, r1
 1853 0628 0200     		movs	r2, r0
 1854 062a 23CA     		ldmia	r2!, {r0, r1, r5}
 1855 062c 23C3     		stmia	r3!, {r0, r1, r5}
 1856 062e 03CA     		ldmia	r2!, {r0, r1}
 1857 0630 03C3     		stmia	r3!, {r0, r1}
 1858 0632 229B     		ldr	r3, [sp, #136]
 1859 0634 0093     		str	r3, [sp]
 1860 0636 1E98     		ldr	r0, [sp, #120]
 1861 0638 1F99     		ldr	r1, [sp, #124]
 1862 063a 209A     		ldr	r2, [sp, #128]
ARM GAS  /tmp/ccrwQJPQ.s 			page 50


 1863 063c 219B     		ldr	r3, [sp, #132]
 1864 063e FFF7FEFF 		bl	charlie
 1865              	.LVL124:
  89:Src/charlie.c ****          return;
 1866              		.loc 2 89 8 view .LVU285
  89:Src/charlie.c ****          return;
 1867              		.loc 2 89 16 is_stmt 0 view .LVU286
 1868 0642 B04B     		ldr	r3, .L91
 1869 0644 1B68     		ldr	r3, [r3]
  89:Src/charlie.c ****          return;
 1870              		.loc 2 89 10 view .LVU287
 1871 0646 012B     		cmp	r3, #1
 1872 0648 00D1     		bne	.LCB1605
 1873 064a F5E4     		b	.L38	@long jump
 1874              	.LCB1605:
  91:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 1875              		.loc 2 91 8 is_stmt 1 view .LVU288
 1876 064c FA20     		movs	r0, #250
 1877 064e 4000     		lsls	r0, r0, #1
 1878 0650 FFF7FEFF 		bl	HAL_Delay
 1879              	.LVL125:
  92:Src/charlie.c ****        if(stop == 1)
 1880              		.loc 2 92 8 view .LVU289
 1881 0654 0423     		movs	r3, #4
 1882 0656 1093     		str	r3, [sp, #64]
 1883 0658 2DA8     		add	r0, sp, #180
 1884 065a 0BA9     		add	r1, sp, #44
 1885 065c 0B00     		movs	r3, r1
 1886 065e 0200     		movs	r2, r0
 1887 0660 23CA     		ldmia	r2!, {r0, r1, r5}
 1888 0662 23C3     		stmia	r3!, {r0, r1, r5}
 1889 0664 03CA     		ldmia	r2!, {r0, r1}
 1890 0666 03C3     		stmia	r3!, {r0, r1}
 1891 0668 28A8     		add	r0, sp, #160
 1892 066a 06A9     		add	r1, sp, #24
 1893 066c 0B00     		movs	r3, r1
 1894 066e 0200     		movs	r2, r0
 1895 0670 23CA     		ldmia	r2!, {r0, r1, r5}
 1896 0672 23C3     		stmia	r3!, {r0, r1, r5}
 1897 0674 03CA     		ldmia	r2!, {r0, r1}
 1898 0676 03C3     		stmia	r3!, {r0, r1}
 1899 0678 23A8     		add	r0, sp, #140
 1900 067a 01A9     		add	r1, sp, #4
 1901 067c 0B00     		movs	r3, r1
 1902 067e 0200     		movs	r2, r0
 1903 0680 23CA     		ldmia	r2!, {r0, r1, r5}
 1904 0682 23C3     		stmia	r3!, {r0, r1, r5}
 1905 0684 03CA     		ldmia	r2!, {r0, r1}
 1906 0686 03C3     		stmia	r3!, {r0, r1}
 1907 0688 229B     		ldr	r3, [sp, #136]
 1908 068a 0093     		str	r3, [sp]
 1909 068c 1E98     		ldr	r0, [sp, #120]
 1910 068e 1F99     		ldr	r1, [sp, #124]
 1911 0690 209A     		ldr	r2, [sp, #128]
 1912 0692 219B     		ldr	r3, [sp, #132]
 1913 0694 FFF7FEFF 		bl	charlie
 1914              	.LVL126:
ARM GAS  /tmp/ccrwQJPQ.s 			page 51


  93:Src/charlie.c ****          return;
 1915              		.loc 2 93 8 view .LVU290
  93:Src/charlie.c ****          return;
 1916              		.loc 2 93 16 is_stmt 0 view .LVU291
 1917 0698 9A4B     		ldr	r3, .L91
 1918 069a 1B68     		ldr	r3, [r3]
  93:Src/charlie.c ****          return;
 1919              		.loc 2 93 10 view .LVU292
 1920 069c 012B     		cmp	r3, #1
 1921 069e 00D1     		bne	.LCB1649
 1922 06a0 CAE4     		b	.L38	@long jump
 1923              	.LCB1649:
  95:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 1924              		.loc 2 95 8 is_stmt 1 view .LVU293
 1925 06a2 FA20     		movs	r0, #250
 1926 06a4 4000     		lsls	r0, r0, #1
 1927 06a6 FFF7FEFF 		bl	HAL_Delay
 1928              	.LVL127:
  96:Src/charlie.c ****        if(stop == 1)
 1929              		.loc 2 96 8 view .LVU294
 1930 06aa 0523     		movs	r3, #5
 1931 06ac 1093     		str	r3, [sp, #64]
 1932 06ae 2DA8     		add	r0, sp, #180
 1933 06b0 0BA9     		add	r1, sp, #44
 1934 06b2 0B00     		movs	r3, r1
 1935 06b4 0200     		movs	r2, r0
 1936 06b6 23CA     		ldmia	r2!, {r0, r1, r5}
 1937 06b8 23C3     		stmia	r3!, {r0, r1, r5}
 1938 06ba 03CA     		ldmia	r2!, {r0, r1}
 1939 06bc 03C3     		stmia	r3!, {r0, r1}
 1940 06be 28A8     		add	r0, sp, #160
 1941 06c0 06A9     		add	r1, sp, #24
 1942 06c2 0B00     		movs	r3, r1
 1943 06c4 0200     		movs	r2, r0
 1944 06c6 23CA     		ldmia	r2!, {r0, r1, r5}
 1945 06c8 23C3     		stmia	r3!, {r0, r1, r5}
 1946 06ca 03CA     		ldmia	r2!, {r0, r1}
 1947 06cc 03C3     		stmia	r3!, {r0, r1}
 1948 06ce 23A8     		add	r0, sp, #140
 1949 06d0 01A9     		add	r1, sp, #4
 1950 06d2 0B00     		movs	r3, r1
 1951 06d4 0200     		movs	r2, r0
 1952 06d6 23CA     		ldmia	r2!, {r0, r1, r5}
 1953 06d8 23C3     		stmia	r3!, {r0, r1, r5}
 1954 06da 03CA     		ldmia	r2!, {r0, r1}
 1955 06dc 03C3     		stmia	r3!, {r0, r1}
 1956 06de 229B     		ldr	r3, [sp, #136]
 1957 06e0 0093     		str	r3, [sp]
 1958 06e2 1E98     		ldr	r0, [sp, #120]
 1959 06e4 1F99     		ldr	r1, [sp, #124]
 1960 06e6 209A     		ldr	r2, [sp, #128]
 1961 06e8 219B     		ldr	r3, [sp, #132]
 1962 06ea FFF7FEFF 		bl	charlie
 1963              	.LVL128:
  97:Src/charlie.c ****          return;
 1964              		.loc 2 97 8 view .LVU295
  97:Src/charlie.c ****          return;
ARM GAS  /tmp/ccrwQJPQ.s 			page 52


 1965              		.loc 2 97 16 is_stmt 0 view .LVU296
 1966 06ee 854B     		ldr	r3, .L91
 1967 06f0 1B68     		ldr	r3, [r3]
  97:Src/charlie.c ****          return;
 1968              		.loc 2 97 10 view .LVU297
 1969 06f2 012B     		cmp	r3, #1
 1970 06f4 00D1     		bne	.LCB1693
 1971 06f6 9FE4     		b	.L38	@long jump
 1972              	.LCB1693:
  99:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 1973              		.loc 2 99 8 is_stmt 1 view .LVU298
 1974 06f8 FA20     		movs	r0, #250
 1975 06fa 4000     		lsls	r0, r0, #1
 1976 06fc FFF7FEFF 		bl	HAL_Delay
 1977              	.LVL129:
 100:Src/charlie.c ****        if(stop == 1)
 1978              		.loc 2 100 8 view .LVU299
 1979 0700 0623     		movs	r3, #6
 1980 0702 1093     		str	r3, [sp, #64]
 1981 0704 2DA8     		add	r0, sp, #180
 1982 0706 0BA9     		add	r1, sp, #44
 1983 0708 0B00     		movs	r3, r1
 1984 070a 0200     		movs	r2, r0
 1985 070c 23CA     		ldmia	r2!, {r0, r1, r5}
 1986 070e 23C3     		stmia	r3!, {r0, r1, r5}
 1987 0710 03CA     		ldmia	r2!, {r0, r1}
 1988 0712 03C3     		stmia	r3!, {r0, r1}
 1989 0714 28A8     		add	r0, sp, #160
 1990 0716 06A9     		add	r1, sp, #24
 1991 0718 0B00     		movs	r3, r1
 1992 071a 0200     		movs	r2, r0
 1993 071c 23CA     		ldmia	r2!, {r0, r1, r5}
 1994 071e 23C3     		stmia	r3!, {r0, r1, r5}
 1995 0720 03CA     		ldmia	r2!, {r0, r1}
 1996 0722 03C3     		stmia	r3!, {r0, r1}
 1997 0724 23A8     		add	r0, sp, #140
 1998 0726 01A9     		add	r1, sp, #4
 1999 0728 0B00     		movs	r3, r1
 2000 072a 0200     		movs	r2, r0
 2001 072c 23CA     		ldmia	r2!, {r0, r1, r5}
 2002 072e 23C3     		stmia	r3!, {r0, r1, r5}
 2003 0730 03CA     		ldmia	r2!, {r0, r1}
 2004 0732 03C3     		stmia	r3!, {r0, r1}
 2005 0734 229B     		ldr	r3, [sp, #136]
 2006 0736 0093     		str	r3, [sp]
 2007 0738 1E98     		ldr	r0, [sp, #120]
 2008 073a 1F99     		ldr	r1, [sp, #124]
 2009 073c 209A     		ldr	r2, [sp, #128]
 2010 073e 219B     		ldr	r3, [sp, #132]
 2011 0740 FFF7FEFF 		bl	charlie
 2012              	.LVL130:
 101:Src/charlie.c ****          return;
 2013              		.loc 2 101 8 view .LVU300
 101:Src/charlie.c ****          return;
 2014              		.loc 2 101 16 is_stmt 0 view .LVU301
 2015 0744 6F4B     		ldr	r3, .L91
 2016 0746 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccrwQJPQ.s 			page 53


 101:Src/charlie.c ****          return;
 2017              		.loc 2 101 10 view .LVU302
 2018 0748 012B     		cmp	r3, #1
 2019 074a 00D1     		bne	.LCB1737
 2020 074c 74E4     		b	.L38	@long jump
 2021              	.LCB1737:
 103:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 2022              		.loc 2 103 8 is_stmt 1 view .LVU303
 2023 074e FA20     		movs	r0, #250
 2024 0750 4000     		lsls	r0, r0, #1
 2025 0752 FFF7FEFF 		bl	HAL_Delay
 2026              	.LVL131:
 104:Src/charlie.c ****        if(stop == 1)
 2027              		.loc 2 104 8 view .LVU304
 2028 0756 0723     		movs	r3, #7
 2029 0758 1093     		str	r3, [sp, #64]
 2030 075a 2DA8     		add	r0, sp, #180
 2031 075c 0BA9     		add	r1, sp, #44
 2032 075e 0B00     		movs	r3, r1
 2033 0760 0200     		movs	r2, r0
 2034 0762 23CA     		ldmia	r2!, {r0, r1, r5}
 2035 0764 23C3     		stmia	r3!, {r0, r1, r5}
 2036 0766 03CA     		ldmia	r2!, {r0, r1}
 2037 0768 03C3     		stmia	r3!, {r0, r1}
 2038 076a 28A8     		add	r0, sp, #160
 2039 076c 06A9     		add	r1, sp, #24
 2040 076e 0B00     		movs	r3, r1
 2041 0770 0200     		movs	r2, r0
 2042 0772 23CA     		ldmia	r2!, {r0, r1, r5}
 2043 0774 23C3     		stmia	r3!, {r0, r1, r5}
 2044 0776 03CA     		ldmia	r2!, {r0, r1}
 2045 0778 03C3     		stmia	r3!, {r0, r1}
 2046 077a 23A8     		add	r0, sp, #140
 2047 077c 01A9     		add	r1, sp, #4
 2048 077e 0B00     		movs	r3, r1
 2049 0780 0200     		movs	r2, r0
 2050 0782 23CA     		ldmia	r2!, {r0, r1, r5}
 2051 0784 23C3     		stmia	r3!, {r0, r1, r5}
 2052 0786 03CA     		ldmia	r2!, {r0, r1}
 2053 0788 03C3     		stmia	r3!, {r0, r1}
 2054 078a 229B     		ldr	r3, [sp, #136]
 2055 078c 0093     		str	r3, [sp]
 2056 078e 1E98     		ldr	r0, [sp, #120]
 2057 0790 1F99     		ldr	r1, [sp, #124]
 2058 0792 209A     		ldr	r2, [sp, #128]
 2059 0794 219B     		ldr	r3, [sp, #132]
 2060 0796 FFF7FEFF 		bl	charlie
 2061              	.LVL132:
 105:Src/charlie.c ****          return;
 2062              		.loc 2 105 8 view .LVU305
 105:Src/charlie.c ****          return;
 2063              		.loc 2 105 16 is_stmt 0 view .LVU306
 2064 079a 5A4B     		ldr	r3, .L91
 2065 079c 1B68     		ldr	r3, [r3]
 105:Src/charlie.c ****          return;
 2066              		.loc 2 105 10 view .LVU307
 2067 079e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccrwQJPQ.s 			page 54


 2068 07a0 00D1     		bne	.LCB1781
 2069 07a2 49E4     		b	.L38	@long jump
 2070              	.LCB1781:
 107:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 2071              		.loc 2 107 8 is_stmt 1 view .LVU308
 2072 07a4 FA20     		movs	r0, #250
 2073 07a6 4000     		lsls	r0, r0, #1
 2074 07a8 FFF7FEFF 		bl	HAL_Delay
 2075              	.LVL133:
 108:Src/charlie.c ****        if(stop == 1)
 2076              		.loc 2 108 8 view .LVU309
 2077 07ac 0823     		movs	r3, #8
 2078 07ae 1093     		str	r3, [sp, #64]
 2079 07b0 2DA8     		add	r0, sp, #180
 2080 07b2 0BA9     		add	r1, sp, #44
 2081 07b4 0B00     		movs	r3, r1
 2082 07b6 0200     		movs	r2, r0
 2083 07b8 23CA     		ldmia	r2!, {r0, r1, r5}
 2084 07ba 23C3     		stmia	r3!, {r0, r1, r5}
 2085 07bc 03CA     		ldmia	r2!, {r0, r1}
 2086 07be 03C3     		stmia	r3!, {r0, r1}
 2087 07c0 28A8     		add	r0, sp, #160
 2088 07c2 06A9     		add	r1, sp, #24
 2089 07c4 0B00     		movs	r3, r1
 2090 07c6 0200     		movs	r2, r0
 2091 07c8 23CA     		ldmia	r2!, {r0, r1, r5}
 2092 07ca 23C3     		stmia	r3!, {r0, r1, r5}
 2093 07cc 03CA     		ldmia	r2!, {r0, r1}
 2094 07ce 03C3     		stmia	r3!, {r0, r1}
 2095 07d0 23A8     		add	r0, sp, #140
 2096 07d2 01A9     		add	r1, sp, #4
 2097 07d4 0B00     		movs	r3, r1
 2098 07d6 0200     		movs	r2, r0
 2099 07d8 23CA     		ldmia	r2!, {r0, r1, r5}
 2100 07da 23C3     		stmia	r3!, {r0, r1, r5}
 2101 07dc 03CA     		ldmia	r2!, {r0, r1}
 2102 07de 03C3     		stmia	r3!, {r0, r1}
 2103 07e0 229B     		ldr	r3, [sp, #136]
 2104 07e2 0093     		str	r3, [sp]
 2105 07e4 1E98     		ldr	r0, [sp, #120]
 2106 07e6 1F99     		ldr	r1, [sp, #124]
 2107 07e8 209A     		ldr	r2, [sp, #128]
 2108 07ea 219B     		ldr	r3, [sp, #132]
 2109 07ec FFF7FEFF 		bl	charlie
 2110              	.LVL134:
 109:Src/charlie.c ****          return;
 2111              		.loc 2 109 8 view .LVU310
 109:Src/charlie.c ****          return;
 2112              		.loc 2 109 16 is_stmt 0 view .LVU311
 2113 07f0 444B     		ldr	r3, .L91
 2114 07f2 1B68     		ldr	r3, [r3]
 109:Src/charlie.c ****          return;
 2115              		.loc 2 109 10 view .LVU312
 2116 07f4 012B     		cmp	r3, #1
 2117 07f6 00D1     		bne	.LCB1825
 2118 07f8 1EE4     		b	.L38	@long jump
 2119              	.LCB1825:
ARM GAS  /tmp/ccrwQJPQ.s 			page 55


 111:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 2120              		.loc 2 111 8 is_stmt 1 view .LVU313
 2121 07fa FA20     		movs	r0, #250
 2122 07fc 4000     		lsls	r0, r0, #1
 2123 07fe FFF7FEFF 		bl	HAL_Delay
 2124              	.LVL135:
 112:Src/charlie.c ****        if(stop == 1)
 2125              		.loc 2 112 8 view .LVU314
 2126 0802 0923     		movs	r3, #9
 2127 0804 1093     		str	r3, [sp, #64]
 2128 0806 2DA8     		add	r0, sp, #180
 2129 0808 0BA9     		add	r1, sp, #44
 2130 080a 0B00     		movs	r3, r1
 2131 080c 0200     		movs	r2, r0
 2132 080e 23CA     		ldmia	r2!, {r0, r1, r5}
 2133 0810 23C3     		stmia	r3!, {r0, r1, r5}
 2134 0812 03CA     		ldmia	r2!, {r0, r1}
 2135 0814 03C3     		stmia	r3!, {r0, r1}
 2136 0816 28A8     		add	r0, sp, #160
 2137 0818 06A9     		add	r1, sp, #24
 2138 081a 0B00     		movs	r3, r1
 2139 081c 0200     		movs	r2, r0
 2140 081e 23CA     		ldmia	r2!, {r0, r1, r5}
 2141 0820 23C3     		stmia	r3!, {r0, r1, r5}
 2142 0822 03CA     		ldmia	r2!, {r0, r1}
 2143 0824 03C3     		stmia	r3!, {r0, r1}
 2144 0826 23A8     		add	r0, sp, #140
 2145 0828 01A9     		add	r1, sp, #4
 2146 082a 0B00     		movs	r3, r1
 2147 082c 0200     		movs	r2, r0
 2148 082e 23CA     		ldmia	r2!, {r0, r1, r5}
 2149 0830 23C3     		stmia	r3!, {r0, r1, r5}
 2150 0832 03CA     		ldmia	r2!, {r0, r1}
 2151 0834 03C3     		stmia	r3!, {r0, r1}
 2152 0836 229B     		ldr	r3, [sp, #136]
 2153 0838 0093     		str	r3, [sp]
 2154 083a 1E98     		ldr	r0, [sp, #120]
 2155 083c 1F99     		ldr	r1, [sp, #124]
 2156 083e 209A     		ldr	r2, [sp, #128]
 2157 0840 219B     		ldr	r3, [sp, #132]
 2158 0842 FFF7FEFF 		bl	charlie
 2159              	.LVL136:
 113:Src/charlie.c ****          return;
 2160              		.loc 2 113 8 view .LVU315
 113:Src/charlie.c ****          return;
 2161              		.loc 2 113 16 is_stmt 0 view .LVU316
 2162 0846 2F4B     		ldr	r3, .L91
 2163 0848 1B68     		ldr	r3, [r3]
 113:Src/charlie.c ****          return;
 2164              		.loc 2 113 10 view .LVU317
 2165 084a 012B     		cmp	r3, #1
 2166 084c 01D1     		bne	.LCB1869
 2167 084e FFF7F3FB 		bl	.L38	@far jump
 2168              	.LCB1869:
 115:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 2169              		.loc 2 115 8 is_stmt 1 view .LVU318
 2170 0852 FA20     		movs	r0, #250
ARM GAS  /tmp/ccrwQJPQ.s 			page 56


 2171 0854 4000     		lsls	r0, r0, #1
 2172 0856 FFF7FEFF 		bl	HAL_Delay
 2173              	.LVL137:
 116:Src/charlie.c ****        if(stop == 1)
 2174              		.loc 2 116 8 view .LVU319
 2175 085a 0A23     		movs	r3, #10
 2176 085c 1093     		str	r3, [sp, #64]
 2177 085e 2DA8     		add	r0, sp, #180
 2178 0860 0BA9     		add	r1, sp, #44
 2179 0862 0B00     		movs	r3, r1
 2180 0864 0200     		movs	r2, r0
 2181 0866 23CA     		ldmia	r2!, {r0, r1, r5}
 2182 0868 23C3     		stmia	r3!, {r0, r1, r5}
 2183 086a 03CA     		ldmia	r2!, {r0, r1}
 2184 086c 03C3     		stmia	r3!, {r0, r1}
 2185 086e 28A8     		add	r0, sp, #160
 2186 0870 06A9     		add	r1, sp, #24
 2187 0872 0B00     		movs	r3, r1
 2188 0874 0200     		movs	r2, r0
 2189 0876 23CA     		ldmia	r2!, {r0, r1, r5}
 2190 0878 23C3     		stmia	r3!, {r0, r1, r5}
 2191 087a 03CA     		ldmia	r2!, {r0, r1}
 2192 087c 03C3     		stmia	r3!, {r0, r1}
 2193 087e 23A8     		add	r0, sp, #140
 2194 0880 01A9     		add	r1, sp, #4
 2195 0882 0B00     		movs	r3, r1
 2196 0884 0200     		movs	r2, r0
 2197 0886 23CA     		ldmia	r2!, {r0, r1, r5}
 2198 0888 23C3     		stmia	r3!, {r0, r1, r5}
 2199 088a 03CA     		ldmia	r2!, {r0, r1}
 2200 088c 03C3     		stmia	r3!, {r0, r1}
 2201 088e 229B     		ldr	r3, [sp, #136]
 2202 0890 0093     		str	r3, [sp]
 2203 0892 1E98     		ldr	r0, [sp, #120]
 2204 0894 1F99     		ldr	r1, [sp, #124]
 2205 0896 209A     		ldr	r2, [sp, #128]
 2206 0898 219B     		ldr	r3, [sp, #132]
 2207 089a FFF7FEFF 		bl	charlie
 2208              	.LVL138:
 117:Src/charlie.c ****          return;
 2209              		.loc 2 117 8 view .LVU320
 117:Src/charlie.c ****          return;
 2210              		.loc 2 117 16 is_stmt 0 view .LVU321
 2211 089e 194B     		ldr	r3, .L91
 2212 08a0 1B68     		ldr	r3, [r3]
 117:Src/charlie.c ****          return;
 2213              		.loc 2 117 10 view .LVU322
 2214 08a2 012B     		cmp	r3, #1
 2215 08a4 01D1     		bne	.LCB1913
 2216 08a6 FFF7C7FB 		bl	.L38	@far jump
 2217              	.LCB1913:
 119:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 2218              		.loc 2 119 8 is_stmt 1 view .LVU323
 2219 08aa FA20     		movs	r0, #250
 2220 08ac 4000     		lsls	r0, r0, #1
 2221 08ae FFF7FEFF 		bl	HAL_Delay
 2222              	.LVL139:
ARM GAS  /tmp/ccrwQJPQ.s 			page 57


 120:Src/charlie.c ****        if(stop == 1)
 2223              		.loc 2 120 8 view .LVU324
 2224 08b2 0B23     		movs	r3, #11
 2225 08b4 1093     		str	r3, [sp, #64]
 2226 08b6 2DA8     		add	r0, sp, #180
 2227 08b8 0BA9     		add	r1, sp, #44
 2228 08ba 0B00     		movs	r3, r1
 2229 08bc 0200     		movs	r2, r0
 2230 08be 23CA     		ldmia	r2!, {r0, r1, r5}
 2231 08c0 23C3     		stmia	r3!, {r0, r1, r5}
 2232 08c2 03CA     		ldmia	r2!, {r0, r1}
 2233 08c4 03C3     		stmia	r3!, {r0, r1}
 2234 08c6 28A8     		add	r0, sp, #160
 2235 08c8 06A9     		add	r1, sp, #24
 2236 08ca 0B00     		movs	r3, r1
 2237 08cc 0200     		movs	r2, r0
 2238 08ce 23CA     		ldmia	r2!, {r0, r1, r5}
 2239 08d0 23C3     		stmia	r3!, {r0, r1, r5}
 2240 08d2 03CA     		ldmia	r2!, {r0, r1}
 2241 08d4 03C3     		stmia	r3!, {r0, r1}
 2242 08d6 23A8     		add	r0, sp, #140
 2243 08d8 01A9     		add	r1, sp, #4
 2244 08da 0B00     		movs	r3, r1
 2245 08dc 0200     		movs	r2, r0
 2246 08de 23CA     		ldmia	r2!, {r0, r1, r5}
 2247 08e0 23C3     		stmia	r3!, {r0, r1, r5}
 2248 08e2 03CA     		ldmia	r2!, {r0, r1}
 2249 08e4 03C3     		stmia	r3!, {r0, r1}
 2250 08e6 229B     		ldr	r3, [sp, #136]
 2251 08e8 0093     		str	r3, [sp]
 2252 08ea 1E98     		ldr	r0, [sp, #120]
 2253 08ec 1F99     		ldr	r1, [sp, #124]
 2254 08ee 209A     		ldr	r2, [sp, #128]
 2255 08f0 219B     		ldr	r3, [sp, #132]
 2256 08f2 FFF7FEFF 		bl	charlie
 2257              	.LVL140:
 121:Src/charlie.c ****          return;
 2258              		.loc 2 121 8 view .LVU325
 121:Src/charlie.c ****          return;
 2259              		.loc 2 121 16 is_stmt 0 view .LVU326
 2260 08f6 034B     		ldr	r3, .L91
 2261 08f8 1B68     		ldr	r3, [r3]
 121:Src/charlie.c ****          return;
 2262              		.loc 2 121 10 view .LVU327
 2263 08fa 012B     		cmp	r3, #1
 2264 08fc 01D1     		bne	.LCB1957
 2265 08fe FFF79BFB 		bl	.L38	@far jump
 2266              	.LCB1957:
 2267 0902 01E0     		b	.L92
 2268              	.L93:
 2269              		.align	2
 2270              	.L91:
 2271 0904 00000000 		.word	.LANCHOR0
 2272              	.L92:
 123:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 2273              		.loc 2 123 8 is_stmt 1 view .LVU328
 2274 0908 FA20     		movs	r0, #250
ARM GAS  /tmp/ccrwQJPQ.s 			page 58


 2275 090a 4000     		lsls	r0, r0, #1
 2276 090c FFF7FEFF 		bl	HAL_Delay
 2277              	.LVL141:
 124:Src/charlie.c ****        if(stop == 1)
 2278              		.loc 2 124 8 view .LVU329
 2279 0910 0C23     		movs	r3, #12
 2280 0912 1093     		str	r3, [sp, #64]
 2281 0914 2DA8     		add	r0, sp, #180
 2282 0916 0BA9     		add	r1, sp, #44
 2283 0918 0B00     		movs	r3, r1
 2284 091a 0200     		movs	r2, r0
 2285 091c 23CA     		ldmia	r2!, {r0, r1, r5}
 2286 091e 23C3     		stmia	r3!, {r0, r1, r5}
 2287 0920 03CA     		ldmia	r2!, {r0, r1}
 2288 0922 03C3     		stmia	r3!, {r0, r1}
 2289 0924 28A8     		add	r0, sp, #160
 2290 0926 06A9     		add	r1, sp, #24
 2291 0928 0B00     		movs	r3, r1
 2292 092a 0200     		movs	r2, r0
 2293 092c 23CA     		ldmia	r2!, {r0, r1, r5}
 2294 092e 23C3     		stmia	r3!, {r0, r1, r5}
 2295 0930 03CA     		ldmia	r2!, {r0, r1}
 2296 0932 03C3     		stmia	r3!, {r0, r1}
 2297 0934 23A8     		add	r0, sp, #140
 2298 0936 01A9     		add	r1, sp, #4
 2299 0938 0B00     		movs	r3, r1
 2300 093a 0200     		movs	r2, r0
 2301 093c 23CA     		ldmia	r2!, {r0, r1, r5}
 2302 093e 23C3     		stmia	r3!, {r0, r1, r5}
 2303 0940 03CA     		ldmia	r2!, {r0, r1}
 2304 0942 03C3     		stmia	r3!, {r0, r1}
 2305 0944 229B     		ldr	r3, [sp, #136]
 2306 0946 0093     		str	r3, [sp]
 2307 0948 1E98     		ldr	r0, [sp, #120]
 2308 094a 1F99     		ldr	r1, [sp, #124]
 2309 094c 209A     		ldr	r2, [sp, #128]
 2310 094e 219B     		ldr	r3, [sp, #132]
 2311 0950 FFF7FEFF 		bl	charlie
 2312              	.LVL142:
 125:Src/charlie.c ****          return;
 2313              		.loc 2 125 8 view .LVU330
 125:Src/charlie.c ****          return;
 2314              		.loc 2 125 16 is_stmt 0 view .LVU331
 2315 0954 E74B     		ldr	r3, .L94
 2316 0956 1B68     		ldr	r3, [r3]
 125:Src/charlie.c ****          return;
 2317              		.loc 2 125 10 view .LVU332
 2318 0958 012B     		cmp	r3, #1
 2319 095a 01D1     		bne	.LCB2010
 2320 095c FFF76CFB 		bl	.L38	@far jump
 2321              	.LCB2010:
 127:Src/charlie.c ****    }
 2322              		.loc 2 127 8 is_stmt 1 view .LVU333
 2323 0960 FA20     		movs	r0, #250
 2324 0962 4000     		lsls	r0, r0, #1
 2325 0964 FFF7FEFF 		bl	HAL_Delay
 2326              	.LVL143:
ARM GAS  /tmp/ccrwQJPQ.s 			page 59


 2327 0968 FFF75EFB 		bl	.L42	@ far jump
 2328              	.L76:
 132:Src/charlie.c ****       for(int i=0; i<10000; i++){
 2329              		.loc 2 132 7 view .LVU334
 2330 096c 0023     		movs	r3, #0
 2331 096e 1093     		str	r3, [sp, #64]
 2332 0970 2DA8     		add	r0, sp, #180
 2333 0972 0BA9     		add	r1, sp, #44
 2334 0974 0B00     		movs	r3, r1
 2335 0976 0200     		movs	r2, r0
 2336 0978 23CA     		ldmia	r2!, {r0, r1, r5}
 2337 097a 23C3     		stmia	r3!, {r0, r1, r5}
 2338 097c 03CA     		ldmia	r2!, {r0, r1}
 2339 097e 03C3     		stmia	r3!, {r0, r1}
 2340 0980 28A8     		add	r0, sp, #160
 2341 0982 06A9     		add	r1, sp, #24
 2342 0984 0B00     		movs	r3, r1
 2343 0986 0200     		movs	r2, r0
 2344 0988 23CA     		ldmia	r2!, {r0, r1, r5}
 2345 098a 23C3     		stmia	r3!, {r0, r1, r5}
 2346 098c 03CA     		ldmia	r2!, {r0, r1}
 2347 098e 03C3     		stmia	r3!, {r0, r1}
 2348 0990 23A8     		add	r0, sp, #140
 2349 0992 01A9     		add	r1, sp, #4
 2350 0994 0B00     		movs	r3, r1
 2351 0996 0200     		movs	r2, r0
 2352 0998 23CA     		ldmia	r2!, {r0, r1, r5}
 2353 099a 23C3     		stmia	r3!, {r0, r1, r5}
 2354 099c 03CA     		ldmia	r2!, {r0, r1}
 2355 099e 03C3     		stmia	r3!, {r0, r1}
 2356 09a0 229B     		ldr	r3, [sp, #136]
 2357 09a2 0093     		str	r3, [sp]
 2358 09a4 1E98     		ldr	r0, [sp, #120]
 2359 09a6 1F99     		ldr	r1, [sp, #124]
 2360 09a8 209A     		ldr	r2, [sp, #128]
 2361 09aa 219B     		ldr	r3, [sp, #132]
 2362 09ac FFF7FEFF 		bl	charlie
 2363              	.LVL144:
 133:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2364              		.loc 2 133 7 view .LVU335
 2365              	.LBB4:
 133:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2366              		.loc 2 133 11 view .LVU336
 133:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2367              		.loc 2 133 15 is_stmt 0 view .LVU337
 2368 09b0 0026     		movs	r6, #0
 133:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2369              		.loc 2 133 7 view .LVU338
 2370 09b2 00E0     		b	.L44
 2371              	.LVL145:
 2372              	.L78:
 133:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2373              		.loc 2 133 29 is_stmt 1 discriminator 2 view .LVU339
 133:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2374              		.loc 2 133 30 is_stmt 0 discriminator 2 view .LVU340
 2375 09b4 0136     		adds	r6, r6, #1
 2376              	.LVL146:
ARM GAS  /tmp/ccrwQJPQ.s 			page 60


 2377              	.L44:
 133:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2378              		.loc 2 133 20 is_stmt 1 discriminator 1 view .LVU341
 133:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2379              		.loc 2 133 7 is_stmt 0 discriminator 1 view .LVU342
 2380 09b6 D04B     		ldr	r3, .L94+4
 2381 09b8 9E42     		cmp	r6, r3
 2382 09ba 01DD     		ble	.LCB2077
 2383 09bc FFF738FB 		bl	.L43	@far jump
 2384              	.LCB2077:
 2385              	.LBB5:
 134:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2386              		.loc 2 134 18 view .LVU343
 2387 09c0 0125     		movs	r5, #1
 2388              	.L46:
 2389              	.LVL147:
 134:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2390              		.loc 2 134 23 is_stmt 1 discriminator 1 view .LVU344
 134:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2391              		.loc 2 134 10 is_stmt 0 discriminator 1 view .LVU345
 2392 09c2 0C2D     		cmp	r5, #12
 2393 09c4 F6DC     		bgt	.L78
 135:Src/charlie.c ****        //      HAL_Delay(1);
 2394              		.loc 2 135 14 is_stmt 1 view .LVU346
 2395 09c6 1095     		str	r5, [sp, #64]
 2396 09c8 2DA8     		add	r0, sp, #180
 2397 09ca 0BA9     		add	r1, sp, #44
 2398 09cc 0B00     		movs	r3, r1
 2399 09ce 0200     		movs	r2, r0
 2400 09d0 83CA     		ldmia	r2!, {r0, r1, r7}
 2401 09d2 83C3     		stmia	r3!, {r0, r1, r7}
 2402 09d4 03CA     		ldmia	r2!, {r0, r1}
 2403 09d6 03C3     		stmia	r3!, {r0, r1}
 2404 09d8 28A8     		add	r0, sp, #160
 2405 09da 06A9     		add	r1, sp, #24
 2406 09dc 0B00     		movs	r3, r1
 2407 09de 0200     		movs	r2, r0
 2408 09e0 83CA     		ldmia	r2!, {r0, r1, r7}
 2409 09e2 83C3     		stmia	r3!, {r0, r1, r7}
 2410 09e4 03CA     		ldmia	r2!, {r0, r1}
 2411 09e6 03C3     		stmia	r3!, {r0, r1}
 2412 09e8 23A8     		add	r0, sp, #140
 2413 09ea 01A9     		add	r1, sp, #4
 2414 09ec 0B00     		movs	r3, r1
 2415 09ee 0200     		movs	r2, r0
 2416 09f0 83CA     		ldmia	r2!, {r0, r1, r7}
 2417 09f2 83C3     		stmia	r3!, {r0, r1, r7}
 2418 09f4 03CA     		ldmia	r2!, {r0, r1}
 2419 09f6 03C3     		stmia	r3!, {r0, r1}
 2420 09f8 229B     		ldr	r3, [sp, #136]
 2421 09fa 0093     		str	r3, [sp]
 2422 09fc 1E98     		ldr	r0, [sp, #120]
 2423 09fe 1F99     		ldr	r1, [sp, #124]
 2424 0a00 209A     		ldr	r2, [sp, #128]
 2425 0a02 219B     		ldr	r3, [sp, #132]
 2426 0a04 FFF7FEFF 		bl	charlie
 2427              	.LVL148:
ARM GAS  /tmp/ccrwQJPQ.s 			page 61


 137:Src/charlie.c ****                return;
 2428              		.loc 2 137 14 view .LVU347
 137:Src/charlie.c ****                return;
 2429              		.loc 2 137 22 is_stmt 0 view .LVU348
 2430 0a08 BA4B     		ldr	r3, .L94
 2431 0a0a 1B68     		ldr	r3, [r3]
 137:Src/charlie.c ****                return;
 2432              		.loc 2 137 16 view .LVU349
 2433 0a0c 012B     		cmp	r3, #1
 2434 0a0e 01D1     		bne	.LCB2124
 2435 0a10 FFF712FB 		bl	.L38	@far jump
 2436              	.LCB2124:
 134:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2437              		.loc 2 134 30 is_stmt 1 discriminator 2 view .LVU350
 134:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2438              		.loc 2 134 31 is_stmt 0 discriminator 2 view .LVU351
 2439 0a14 0135     		adds	r5, r5, #1
 2440              	.LVL149:
 134:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2441              		.loc 2 134 31 discriminator 2 view .LVU352
 2442 0a16 D4E7     		b	.L46
 2443              	.LVL150:
 2444              	.L80:
 134:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2445              		.loc 2 134 31 discriminator 2 view .LVU353
 2446              	.LBE5:
 2447              	.LBE4:
 2448              	.LBB6:
 148:Src/charlie.c ****             HAL_Delay(500);
 2449              		.loc 2 148 13 is_stmt 1 view .LVU354
 2450 0a18 0B33     		adds	r3, r3, #11
 2451              	.LVL151:
 148:Src/charlie.c ****             HAL_Delay(500);
 2452              		.loc 2 148 13 is_stmt 0 view .LVU355
 2453 0a1a 1093     		str	r3, [sp, #64]
 2454 0a1c 2DA8     		add	r0, sp, #180
 2455 0a1e 0BA9     		add	r1, sp, #44
 2456 0a20 0B00     		movs	r3, r1
 2457 0a22 0200     		movs	r2, r0
 2458 0a24 13CA     		ldmia	r2!, {r0, r1, r4}
 2459 0a26 13C3     		stmia	r3!, {r0, r1, r4}
 2460 0a28 03CA     		ldmia	r2!, {r0, r1}
 2461 0a2a 03C3     		stmia	r3!, {r0, r1}
 2462 0a2c 28A8     		add	r0, sp, #160
 2463 0a2e 06A9     		add	r1, sp, #24
 2464 0a30 0B00     		movs	r3, r1
 2465 0a32 0200     		movs	r2, r0
 2466 0a34 13CA     		ldmia	r2!, {r0, r1, r4}
 2467 0a36 13C3     		stmia	r3!, {r0, r1, r4}
 2468 0a38 03CA     		ldmia	r2!, {r0, r1}
 2469 0a3a 03C3     		stmia	r3!, {r0, r1}
 2470 0a3c 23A8     		add	r0, sp, #140
 2471 0a3e 01A9     		add	r1, sp, #4
 2472 0a40 0B00     		movs	r3, r1
 2473 0a42 0200     		movs	r2, r0
 2474 0a44 13CA     		ldmia	r2!, {r0, r1, r4}
 2475 0a46 13C3     		stmia	r3!, {r0, r1, r4}
ARM GAS  /tmp/ccrwQJPQ.s 			page 62


 2476 0a48 03CA     		ldmia	r2!, {r0, r1}
 2477 0a4a 03C3     		stmia	r3!, {r0, r1}
 2478 0a4c 229B     		ldr	r3, [sp, #136]
 2479 0a4e 0093     		str	r3, [sp]
 2480 0a50 1E98     		ldr	r0, [sp, #120]
 2481 0a52 1F99     		ldr	r1, [sp, #124]
 2482 0a54 209A     		ldr	r2, [sp, #128]
 2483 0a56 219B     		ldr	r3, [sp, #132]
 2484 0a58 FFF7FEFF 		bl	charlie
 2485              	.LVL152:
 149:Src/charlie.c ****             if(stop == 1)
 2486              		.loc 2 149 13 is_stmt 1 view .LVU356
 2487 0a5c FA20     		movs	r0, #250
 2488 0a5e 4000     		lsls	r0, r0, #1
 2489 0a60 FFF7FEFF 		bl	HAL_Delay
 2490              	.LVL153:
 150:Src/charlie.c ****                return;
 2491              		.loc 2 150 13 view .LVU357
 150:Src/charlie.c ****                return;
 2492              		.loc 2 150 21 is_stmt 0 view .LVU358
 2493 0a64 A34B     		ldr	r3, .L94
 2494 0a66 1B68     		ldr	r3, [r3]
 150:Src/charlie.c ****                return;
 2495              		.loc 2 150 15 view .LVU359
 2496 0a68 012B     		cmp	r3, #1
 2497 0a6a 00D0     		beq	.LCB2184
 2498 0a6c A1E1     		b	.L48	@long jump
 2499              	.LCB2184:
 150:Src/charlie.c ****                return;
 2500              		.loc 2 150 15 view .LVU360
 2501 0a6e FFF7E3FA 		bl	.L38	@ far jump
 2502              	.LVL154:
 2503              	.L81:
 2504              	.LBB7:
 154:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2505              		.loc 2 154 21 view .LVU361
 2506 0a72 0023     		movs	r3, #0
 2507              	.LVL155:
 154:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2508              		.loc 2 154 21 view .LVU362
 2509 0a74 9B46     		mov	fp, r3
 2510              	.L49:
 2511              	.LVL156:
 154:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2512              		.loc 2 154 27 is_stmt 1 discriminator 1 view .LVU363
 154:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2513              		.loc 2 154 13 is_stmt 0 discriminator 1 view .LVU364
 2514 0a76 A04B     		ldr	r3, .L94+4
 2515 0a78 9B45     		cmp	fp, r3
 2516 0a7a 00DD     		ble	.LCB2201
 2517 0a7c 9DE1     		b	.L50	@long jump
 2518              	.LCB2201:
 155:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 1);
 2519              		.loc 2 155 16 is_stmt 1 view .LVU365
 2520 0a7e 0A23     		movs	r3, #10
 2521 0a80 1093     		str	r3, [sp, #64]
 2522 0a82 2DAB     		add	r3, sp, #180
ARM GAS  /tmp/ccrwQJPQ.s 			page 63


 2523 0a84 9946     		mov	r9, r3
 2524 0a86 0BAB     		add	r3, sp, #44
 2525 0a88 9846     		mov	r8, r3
 2526 0a8a 4A46     		mov	r2, r9
 2527 0a8c 13CA     		ldmia	r2!, {r0, r1, r4}
 2528 0a8e 13C3     		stmia	r3!, {r0, r1, r4}
 2529 0a90 03CA     		ldmia	r2!, {r0, r1}
 2530 0a92 03C3     		stmia	r3!, {r0, r1}
 2531 0a94 28AF     		add	r7, sp, #160
 2532 0a96 06AE     		add	r6, sp, #24
 2533 0a98 3300     		movs	r3, r6
 2534 0a9a 3A00     		movs	r2, r7
 2535 0a9c 13CA     		ldmia	r2!, {r0, r1, r4}
 2536 0a9e 13C3     		stmia	r3!, {r0, r1, r4}
 2537 0aa0 03CA     		ldmia	r2!, {r0, r1}
 2538 0aa2 03C3     		stmia	r3!, {r0, r1}
 2539 0aa4 23AD     		add	r5, sp, #140
 2540 0aa6 01AB     		add	r3, sp, #4
 2541 0aa8 1393     		str	r3, [sp, #76]
 2542 0aaa 2A00     		movs	r2, r5
 2543 0aac 13CA     		ldmia	r2!, {r0, r1, r4}
 2544 0aae 13C3     		stmia	r3!, {r0, r1, r4}
 2545 0ab0 03CA     		ldmia	r2!, {r0, r1}
 2546 0ab2 03C3     		stmia	r3!, {r0, r1}
 2547 0ab4 229B     		ldr	r3, [sp, #136]
 2548 0ab6 0093     		str	r3, [sp]
 2549 0ab8 1E98     		ldr	r0, [sp, #120]
 2550 0aba 1F99     		ldr	r1, [sp, #124]
 2551 0abc 209A     		ldr	r2, [sp, #128]
 2552 0abe 219B     		ldr	r3, [sp, #132]
 2553 0ac0 FFF7FEFF 		bl	charlie
 2554              	.LVL157:
 156:Src/charlie.c ****                if(stop == 1)
 2555              		.loc 2 156 16 view .LVU366
 2556 0ac4 0123     		movs	r3, #1
 2557 0ac6 1093     		str	r3, [sp, #64]
 2558 0ac8 4346     		mov	r3, r8
 2559 0aca 4A46     		mov	r2, r9
 2560 0acc 13CA     		ldmia	r2!, {r0, r1, r4}
 2561 0ace 13C3     		stmia	r3!, {r0, r1, r4}
 2562 0ad0 03CA     		ldmia	r2!, {r0, r1}
 2563 0ad2 03C3     		stmia	r3!, {r0, r1}
 2564 0ad4 3300     		movs	r3, r6
 2565 0ad6 3A00     		movs	r2, r7
 2566 0ad8 13CA     		ldmia	r2!, {r0, r1, r4}
 2567 0ada 13C3     		stmia	r3!, {r0, r1, r4}
 2568 0adc 03CA     		ldmia	r2!, {r0, r1}
 2569 0ade 03C3     		stmia	r3!, {r0, r1}
 2570 0ae0 1399     		ldr	r1, [sp, #76]
 2571 0ae2 0B00     		movs	r3, r1
 2572 0ae4 2A00     		movs	r2, r5
 2573 0ae6 13CA     		ldmia	r2!, {r0, r1, r4}
 2574 0ae8 13C3     		stmia	r3!, {r0, r1, r4}
 2575 0aea 03CA     		ldmia	r2!, {r0, r1}
 2576 0aec 03C3     		stmia	r3!, {r0, r1}
 2577 0aee 229B     		ldr	r3, [sp, #136]
 2578 0af0 0093     		str	r3, [sp]
ARM GAS  /tmp/ccrwQJPQ.s 			page 64


 2579 0af2 1E98     		ldr	r0, [sp, #120]
 2580 0af4 1F99     		ldr	r1, [sp, #124]
 2581 0af6 209A     		ldr	r2, [sp, #128]
 2582 0af8 219B     		ldr	r3, [sp, #132]
 2583 0afa FFF7FEFF 		bl	charlie
 2584              	.LVL158:
 157:Src/charlie.c ****                   return;
 2585              		.loc 2 157 16 view .LVU367
 157:Src/charlie.c ****                   return;
 2586              		.loc 2 157 24 is_stmt 0 view .LVU368
 2587 0afe 7D4B     		ldr	r3, .L94
 2588 0b00 1B68     		ldr	r3, [r3]
 157:Src/charlie.c ****                   return;
 2589              		.loc 2 157 18 view .LVU369
 2590 0b02 012B     		cmp	r3, #1
 2591 0b04 01D1     		bne	.LCB2273
 2592 0b06 FFF797FA 		bl	.L38	@far jump
 2593              	.LCB2273:
 154:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2594              		.loc 2 154 36 is_stmt 1 discriminator 2 view .LVU370
 154:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2595              		.loc 2 154 37 is_stmt 0 discriminator 2 view .LVU371
 2596 0b0a 0123     		movs	r3, #1
 2597 0b0c 9C46     		mov	ip, r3
 2598 0b0e E344     		add	fp, fp, ip
 2599              	.LVL159:
 154:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2600              		.loc 2 154 37 discriminator 2 view .LVU372
 2601 0b10 B1E7     		b	.L49
 2602              	.LVL160:
 2603              	.L82:
 154:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2604              		.loc 2 154 37 discriminator 2 view .LVU373
 2605              	.LBE7:
 2606              	.LBB8:
 162:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2607              		.loc 2 162 21 view .LVU374
 2608 0b12 0023     		movs	r3, #0
 2609              	.LVL161:
 162:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2610              		.loc 2 162 21 view .LVU375
 2611 0b14 9B46     		mov	fp, r3
 2612              	.L52:
 2613              	.LVL162:
 162:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2614              		.loc 2 162 27 is_stmt 1 discriminator 1 view .LVU376
 162:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2615              		.loc 2 162 13 is_stmt 0 discriminator 1 view .LVU377
 2616 0b16 784B     		ldr	r3, .L94+4
 2617 0b18 9B45     		cmp	fp, r3
 2618 0b1a 00DD     		ble	.LCB2297
 2619 0b1c 51E1     		b	.L53	@long jump
 2620              	.LCB2297:
 163:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2621              		.loc 2 163 16 is_stmt 1 view .LVU378
 2622 0b1e 0223     		movs	r3, #2
 2623 0b20 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/ccrwQJPQ.s 			page 65


 2624 0b22 2DAB     		add	r3, sp, #180
 2625 0b24 9946     		mov	r9, r3
 2626 0b26 0BAB     		add	r3, sp, #44
 2627 0b28 9846     		mov	r8, r3
 2628 0b2a 4A46     		mov	r2, r9
 2629 0b2c 13CA     		ldmia	r2!, {r0, r1, r4}
 2630 0b2e 13C3     		stmia	r3!, {r0, r1, r4}
 2631 0b30 03CA     		ldmia	r2!, {r0, r1}
 2632 0b32 03C3     		stmia	r3!, {r0, r1}
 2633 0b34 28AF     		add	r7, sp, #160
 2634 0b36 06AE     		add	r6, sp, #24
 2635 0b38 3300     		movs	r3, r6
 2636 0b3a 3A00     		movs	r2, r7
 2637 0b3c 13CA     		ldmia	r2!, {r0, r1, r4}
 2638 0b3e 13C3     		stmia	r3!, {r0, r1, r4}
 2639 0b40 03CA     		ldmia	r2!, {r0, r1}
 2640 0b42 03C3     		stmia	r3!, {r0, r1}
 2641 0b44 23AD     		add	r5, sp, #140
 2642 0b46 01AB     		add	r3, sp, #4
 2643 0b48 1393     		str	r3, [sp, #76]
 2644 0b4a 2A00     		movs	r2, r5
 2645 0b4c 13CA     		ldmia	r2!, {r0, r1, r4}
 2646 0b4e 13C3     		stmia	r3!, {r0, r1, r4}
 2647 0b50 03CA     		ldmia	r2!, {r0, r1}
 2648 0b52 03C3     		stmia	r3!, {r0, r1}
 2649 0b54 229B     		ldr	r3, [sp, #136]
 2650 0b56 0093     		str	r3, [sp]
 2651 0b58 1E98     		ldr	r0, [sp, #120]
 2652 0b5a 1F99     		ldr	r1, [sp, #124]
 2653 0b5c 209A     		ldr	r2, [sp, #128]
 2654 0b5e 219B     		ldr	r3, [sp, #132]
 2655 0b60 FFF7FEFF 		bl	charlie
 2656              	.LVL163:
 164:Src/charlie.c ****                if(stop == 1)
 2657              		.loc 2 164 16 view .LVU379
 2658 0b64 0A23     		movs	r3, #10
 2659 0b66 1093     		str	r3, [sp, #64]
 2660 0b68 4346     		mov	r3, r8
 2661 0b6a 4A46     		mov	r2, r9
 2662 0b6c 13CA     		ldmia	r2!, {r0, r1, r4}
 2663 0b6e 13C3     		stmia	r3!, {r0, r1, r4}
 2664 0b70 03CA     		ldmia	r2!, {r0, r1}
 2665 0b72 03C3     		stmia	r3!, {r0, r1}
 2666 0b74 3300     		movs	r3, r6
 2667 0b76 3A00     		movs	r2, r7
 2668 0b78 13CA     		ldmia	r2!, {r0, r1, r4}
 2669 0b7a 13C3     		stmia	r3!, {r0, r1, r4}
 2670 0b7c 03CA     		ldmia	r2!, {r0, r1}
 2671 0b7e 03C3     		stmia	r3!, {r0, r1}
 2672 0b80 1399     		ldr	r1, [sp, #76]
 2673 0b82 0B00     		movs	r3, r1
 2674 0b84 2A00     		movs	r2, r5
 2675 0b86 13CA     		ldmia	r2!, {r0, r1, r4}
 2676 0b88 13C3     		stmia	r3!, {r0, r1, r4}
 2677 0b8a 03CA     		ldmia	r2!, {r0, r1}
 2678 0b8c 03C3     		stmia	r3!, {r0, r1}
 2679 0b8e 229B     		ldr	r3, [sp, #136]
ARM GAS  /tmp/ccrwQJPQ.s 			page 66


 2680 0b90 0093     		str	r3, [sp]
 2681 0b92 1E98     		ldr	r0, [sp, #120]
 2682 0b94 1F99     		ldr	r1, [sp, #124]
 2683 0b96 209A     		ldr	r2, [sp, #128]
 2684 0b98 219B     		ldr	r3, [sp, #132]
 2685 0b9a FFF7FEFF 		bl	charlie
 2686              	.LVL164:
 165:Src/charlie.c ****                   return;
 2687              		.loc 2 165 16 view .LVU380
 165:Src/charlie.c ****                   return;
 2688              		.loc 2 165 24 is_stmt 0 view .LVU381
 2689 0b9e 554B     		ldr	r3, .L94
 2690 0ba0 1B68     		ldr	r3, [r3]
 165:Src/charlie.c ****                   return;
 2691              		.loc 2 165 18 view .LVU382
 2692 0ba2 012B     		cmp	r3, #1
 2693 0ba4 01D1     		bne	.LCB2369
 2694 0ba6 FFF747FA 		bl	.L38	@far jump
 2695              	.LCB2369:
 162:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2696              		.loc 2 162 36 is_stmt 1 discriminator 2 view .LVU383
 162:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2697              		.loc 2 162 37 is_stmt 0 discriminator 2 view .LVU384
 2698 0baa 0123     		movs	r3, #1
 2699 0bac 9C46     		mov	ip, r3
 2700 0bae E344     		add	fp, fp, ip
 2701              	.LVL165:
 162:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2702              		.loc 2 162 37 discriminator 2 view .LVU385
 2703 0bb0 B1E7     		b	.L52
 2704              	.LVL166:
 2705              	.L79:
 162:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2706              		.loc 2 162 37 discriminator 2 view .LVU386
 2707              	.LBE8:
 2708              	.LBB9:
 170:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2709              		.loc 2 170 36 is_stmt 1 discriminator 2 view .LVU387
 170:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2710              		.loc 2 170 37 is_stmt 0 discriminator 2 view .LVU388
 2711 0bb2 0123     		movs	r3, #1
 2712 0bb4 9C46     		mov	ip, r3
 2713 0bb6 E344     		add	fp, fp, ip
 2714              	.LVL167:
 2715              	.L55:
 170:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2716              		.loc 2 170 27 is_stmt 1 discriminator 1 view .LVU389
 170:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2717              		.loc 2 170 13 is_stmt 0 discriminator 1 view .LVU390
 2718 0bb8 4F4B     		ldr	r3, .L94+4
 2719 0bba 9B45     		cmp	fp, r3
 2720 0bbc 00DD     		ble	.LCB2398
 2721 0bbe 04E1     		b	.L56	@long jump
 2722              	.LCB2398:
 171:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 9);
 2723              		.loc 2 171 16 is_stmt 1 view .LVU391
 2724 0bc0 0323     		movs	r3, #3
ARM GAS  /tmp/ccrwQJPQ.s 			page 67


 2725 0bc2 1093     		str	r3, [sp, #64]
 2726 0bc4 2DAB     		add	r3, sp, #180
 2727 0bc6 9946     		mov	r9, r3
 2728 0bc8 0BAB     		add	r3, sp, #44
 2729 0bca 9846     		mov	r8, r3
 2730 0bcc 4A46     		mov	r2, r9
 2731 0bce 13CA     		ldmia	r2!, {r0, r1, r4}
 2732 0bd0 13C3     		stmia	r3!, {r0, r1, r4}
 2733 0bd2 03CA     		ldmia	r2!, {r0, r1}
 2734 0bd4 03C3     		stmia	r3!, {r0, r1}
 2735 0bd6 28AF     		add	r7, sp, #160
 2736 0bd8 06AE     		add	r6, sp, #24
 2737 0bda 3300     		movs	r3, r6
 2738 0bdc 3A00     		movs	r2, r7
 2739 0bde 13CA     		ldmia	r2!, {r0, r1, r4}
 2740 0be0 13C3     		stmia	r3!, {r0, r1, r4}
 2741 0be2 03CA     		ldmia	r2!, {r0, r1}
 2742 0be4 03C3     		stmia	r3!, {r0, r1}
 2743 0be6 23AD     		add	r5, sp, #140
 2744 0be8 01AB     		add	r3, sp, #4
 2745 0bea 1393     		str	r3, [sp, #76]
 2746 0bec 2A00     		movs	r2, r5
 2747 0bee 13CA     		ldmia	r2!, {r0, r1, r4}
 2748 0bf0 13C3     		stmia	r3!, {r0, r1, r4}
 2749 0bf2 03CA     		ldmia	r2!, {r0, r1}
 2750 0bf4 03C3     		stmia	r3!, {r0, r1}
 2751 0bf6 229B     		ldr	r3, [sp, #136]
 2752 0bf8 0093     		str	r3, [sp]
 2753 0bfa 1E98     		ldr	r0, [sp, #120]
 2754 0bfc 1F99     		ldr	r1, [sp, #124]
 2755 0bfe 209A     		ldr	r2, [sp, #128]
 2756 0c00 219B     		ldr	r3, [sp, #132]
 2757 0c02 FFF7FEFF 		bl	charlie
 2758              	.LVL168:
 172:Src/charlie.c ****                if(stop == 1)
 2759              		.loc 2 172 16 view .LVU392
 2760 0c06 0923     		movs	r3, #9
 2761 0c08 1093     		str	r3, [sp, #64]
 2762 0c0a 4346     		mov	r3, r8
 2763 0c0c 4A46     		mov	r2, r9
 2764 0c0e 13CA     		ldmia	r2!, {r0, r1, r4}
 2765 0c10 13C3     		stmia	r3!, {r0, r1, r4}
 2766 0c12 03CA     		ldmia	r2!, {r0, r1}
 2767 0c14 03C3     		stmia	r3!, {r0, r1}
 2768 0c16 3300     		movs	r3, r6
 2769 0c18 3A00     		movs	r2, r7
 2770 0c1a 13CA     		ldmia	r2!, {r0, r1, r4}
 2771 0c1c 13C3     		stmia	r3!, {r0, r1, r4}
 2772 0c1e 03CA     		ldmia	r2!, {r0, r1}
 2773 0c20 03C3     		stmia	r3!, {r0, r1}
 2774 0c22 1399     		ldr	r1, [sp, #76]
 2775 0c24 0B00     		movs	r3, r1
 2776 0c26 2A00     		movs	r2, r5
 2777 0c28 13CA     		ldmia	r2!, {r0, r1, r4}
 2778 0c2a 13C3     		stmia	r3!, {r0, r1, r4}
 2779 0c2c 03CA     		ldmia	r2!, {r0, r1}
 2780 0c2e 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/ccrwQJPQ.s 			page 68


 2781 0c30 229B     		ldr	r3, [sp, #136]
 2782 0c32 0093     		str	r3, [sp]
 2783 0c34 1E98     		ldr	r0, [sp, #120]
 2784 0c36 1F99     		ldr	r1, [sp, #124]
 2785 0c38 209A     		ldr	r2, [sp, #128]
 2786 0c3a 219B     		ldr	r3, [sp, #132]
 2787 0c3c FFF7FEFF 		bl	charlie
 2788              	.LVL169:
 173:Src/charlie.c ****                   return;
 2789              		.loc 2 173 16 view .LVU393
 173:Src/charlie.c ****                   return;
 2790              		.loc 2 173 24 is_stmt 0 view .LVU394
 2791 0c40 2C4B     		ldr	r3, .L94
 2792 0c42 1B68     		ldr	r3, [r3]
 173:Src/charlie.c ****                   return;
 2793              		.loc 2 173 18 view .LVU395
 2794 0c44 012B     		cmp	r3, #1
 2795 0c46 B4D1     		bne	.L79
 2796 0c48 FFF7F6F9 		bl	.L38	@ far jump
 2797              	.LVL170:
 2798              	.L83:
 170:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2799              		.loc 2 170 21 view .LVU396
 2800 0c4c 0023     		movs	r3, #0
 2801              	.LVL171:
 170:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2802              		.loc 2 170 21 view .LVU397
 2803 0c4e 9B46     		mov	fp, r3
 2804 0c50 B2E7     		b	.L55
 2805              	.LVL172:
 2806              	.L84:
 170:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2807              		.loc 2 170 21 view .LVU398
 2808              	.LBE9:
 2809              	.LBB10:
 178:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 2810              		.loc 2 178 21 view .LVU399
 2811 0c52 0023     		movs	r3, #0
 2812              	.LVL173:
 178:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 2813              		.loc 2 178 21 view .LVU400
 2814 0c54 9B46     		mov	fp, r3
 2815              	.L58:
 2816              	.LVL174:
 178:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 2817              		.loc 2 178 27 is_stmt 1 discriminator 1 view .LVU401
 178:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 2818              		.loc 2 178 13 is_stmt 0 discriminator 1 view .LVU402
 2819 0c56 284B     		ldr	r3, .L94+4
 2820 0c58 9B45     		cmp	fp, r3
 2821 0c5a 00DD     		ble	.LCB2496
 2822 0c5c B9E0     		b	.L59	@long jump
 2823              	.LCB2496:
 179:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 8);
 2824              		.loc 2 179 16 is_stmt 1 view .LVU403
 2825 0c5e 0423     		movs	r3, #4
 2826 0c60 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/ccrwQJPQ.s 			page 69


 2827 0c62 2DAB     		add	r3, sp, #180
 2828 0c64 9946     		mov	r9, r3
 2829 0c66 0BAB     		add	r3, sp, #44
 2830 0c68 9846     		mov	r8, r3
 2831 0c6a 4A46     		mov	r2, r9
 2832 0c6c 13CA     		ldmia	r2!, {r0, r1, r4}
 2833 0c6e 13C3     		stmia	r3!, {r0, r1, r4}
 2834 0c70 03CA     		ldmia	r2!, {r0, r1}
 2835 0c72 03C3     		stmia	r3!, {r0, r1}
 2836 0c74 28AF     		add	r7, sp, #160
 2837 0c76 06AE     		add	r6, sp, #24
 2838 0c78 3300     		movs	r3, r6
 2839 0c7a 3A00     		movs	r2, r7
 2840 0c7c 13CA     		ldmia	r2!, {r0, r1, r4}
 2841 0c7e 13C3     		stmia	r3!, {r0, r1, r4}
 2842 0c80 03CA     		ldmia	r2!, {r0, r1}
 2843 0c82 03C3     		stmia	r3!, {r0, r1}
 2844 0c84 23AD     		add	r5, sp, #140
 2845 0c86 01AB     		add	r3, sp, #4
 2846 0c88 1393     		str	r3, [sp, #76]
 2847 0c8a 2A00     		movs	r2, r5
 2848 0c8c 13CA     		ldmia	r2!, {r0, r1, r4}
 2849 0c8e 13C3     		stmia	r3!, {r0, r1, r4}
 2850 0c90 03CA     		ldmia	r2!, {r0, r1}
 2851 0c92 03C3     		stmia	r3!, {r0, r1}
 2852 0c94 229B     		ldr	r3, [sp, #136]
 2853 0c96 0093     		str	r3, [sp]
 2854 0c98 1E98     		ldr	r0, [sp, #120]
 2855 0c9a 1F99     		ldr	r1, [sp, #124]
 2856 0c9c 209A     		ldr	r2, [sp, #128]
 2857 0c9e 219B     		ldr	r3, [sp, #132]
 2858 0ca0 FFF7FEFF 		bl	charlie
 2859              	.LVL175:
 180:Src/charlie.c ****                if(stop == 1)
 2860              		.loc 2 180 16 view .LVU404
 2861 0ca4 0823     		movs	r3, #8
 2862 0ca6 1093     		str	r3, [sp, #64]
 2863 0ca8 4346     		mov	r3, r8
 2864 0caa 4A46     		mov	r2, r9
 2865 0cac 13CA     		ldmia	r2!, {r0, r1, r4}
 2866 0cae 13C3     		stmia	r3!, {r0, r1, r4}
 2867 0cb0 03CA     		ldmia	r2!, {r0, r1}
 2868 0cb2 03C3     		stmia	r3!, {r0, r1}
 2869 0cb4 3300     		movs	r3, r6
 2870 0cb6 3A00     		movs	r2, r7
 2871 0cb8 13CA     		ldmia	r2!, {r0, r1, r4}
 2872 0cba 13C3     		stmia	r3!, {r0, r1, r4}
 2873 0cbc 03CA     		ldmia	r2!, {r0, r1}
 2874 0cbe 03C3     		stmia	r3!, {r0, r1}
 2875 0cc0 1399     		ldr	r1, [sp, #76]
 2876 0cc2 0B00     		movs	r3, r1
 2877 0cc4 2A00     		movs	r2, r5
 2878 0cc6 13CA     		ldmia	r2!, {r0, r1, r4}
 2879 0cc8 13C3     		stmia	r3!, {r0, r1, r4}
 2880 0cca 03CA     		ldmia	r2!, {r0, r1}
 2881 0ccc 03C3     		stmia	r3!, {r0, r1}
 2882 0cce 229B     		ldr	r3, [sp, #136]
ARM GAS  /tmp/ccrwQJPQ.s 			page 70


 2883 0cd0 0093     		str	r3, [sp]
 2884 0cd2 1E98     		ldr	r0, [sp, #120]
 2885 0cd4 1F99     		ldr	r1, [sp, #124]
 2886 0cd6 209A     		ldr	r2, [sp, #128]
 2887 0cd8 219B     		ldr	r3, [sp, #132]
 2888 0cda FFF7FEFF 		bl	charlie
 2889              	.LVL176:
 181:Src/charlie.c ****                   return;
 2890              		.loc 2 181 16 view .LVU405
 181:Src/charlie.c ****                   return;
 2891              		.loc 2 181 24 is_stmt 0 view .LVU406
 2892 0cde 054B     		ldr	r3, .L94
 2893 0ce0 1B68     		ldr	r3, [r3]
 181:Src/charlie.c ****                   return;
 2894              		.loc 2 181 18 view .LVU407
 2895 0ce2 012B     		cmp	r3, #1
 2896 0ce4 01D1     		bne	.LCB2568
 2897 0ce6 FFF7A7F9 		bl	.L38	@far jump
 2898              	.LCB2568:
 178:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 2899              		.loc 2 178 36 is_stmt 1 discriminator 2 view .LVU408
 178:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 2900              		.loc 2 178 37 is_stmt 0 discriminator 2 view .LVU409
 2901 0cea 0123     		movs	r3, #1
 2902 0cec 9C46     		mov	ip, r3
 2903 0cee E344     		add	fp, fp, ip
 2904              	.LVL177:
 178:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 2905              		.loc 2 178 37 discriminator 2 view .LVU410
 2906 0cf0 B1E7     		b	.L58
 2907              	.L95:
 2908 0cf2 C046     		.align	2
 2909              	.L94:
 2910 0cf4 00000000 		.word	.LANCHOR0
 2911 0cf8 0F270000 		.word	9999
 2912              	.LVL178:
 2913              	.L85:
 178:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 2914              		.loc 2 178 37 discriminator 2 view .LVU411
 2915              	.LBE10:
 2916              	.LBB11:
 186:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 2917              		.loc 2 186 21 view .LVU412
 2918 0cfc 0023     		movs	r3, #0
 2919              	.LVL179:
 186:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 2920              		.loc 2 186 21 view .LVU413
 2921 0cfe 9B46     		mov	fp, r3
 2922              	.L61:
 2923              	.LVL180:
 186:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 2924              		.loc 2 186 27 is_stmt 1 discriminator 1 view .LVU414
 186:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 2925              		.loc 2 186 13 is_stmt 0 discriminator 1 view .LVU415
 2926 0d00 4E4B     		ldr	r3, .L96
 2927 0d02 9B45     		cmp	fp, r3
 2928 0d04 68DC     		bgt	.L62
ARM GAS  /tmp/ccrwQJPQ.s 			page 71


 187:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 7);
 2929              		.loc 2 187 16 is_stmt 1 view .LVU416
 2930 0d06 0523     		movs	r3, #5
 2931 0d08 1093     		str	r3, [sp, #64]
 2932 0d0a 2DAB     		add	r3, sp, #180
 2933 0d0c 9946     		mov	r9, r3
 2934 0d0e 0BAB     		add	r3, sp, #44
 2935 0d10 9846     		mov	r8, r3
 2936 0d12 4A46     		mov	r2, r9
 2937 0d14 13CA     		ldmia	r2!, {r0, r1, r4}
 2938 0d16 13C3     		stmia	r3!, {r0, r1, r4}
 2939 0d18 03CA     		ldmia	r2!, {r0, r1}
 2940 0d1a 03C3     		stmia	r3!, {r0, r1}
 2941 0d1c 28AF     		add	r7, sp, #160
 2942 0d1e 06AE     		add	r6, sp, #24
 2943 0d20 3300     		movs	r3, r6
 2944 0d22 3A00     		movs	r2, r7
 2945 0d24 13CA     		ldmia	r2!, {r0, r1, r4}
 2946 0d26 13C3     		stmia	r3!, {r0, r1, r4}
 2947 0d28 03CA     		ldmia	r2!, {r0, r1}
 2948 0d2a 03C3     		stmia	r3!, {r0, r1}
 2949 0d2c 23AD     		add	r5, sp, #140
 2950 0d2e 01AB     		add	r3, sp, #4
 2951 0d30 1393     		str	r3, [sp, #76]
 2952 0d32 2A00     		movs	r2, r5
 2953 0d34 13CA     		ldmia	r2!, {r0, r1, r4}
 2954 0d36 13C3     		stmia	r3!, {r0, r1, r4}
 2955 0d38 03CA     		ldmia	r2!, {r0, r1}
 2956 0d3a 03C3     		stmia	r3!, {r0, r1}
 2957 0d3c 229B     		ldr	r3, [sp, #136]
 2958 0d3e 0093     		str	r3, [sp]
 2959 0d40 1E98     		ldr	r0, [sp, #120]
 2960 0d42 1F99     		ldr	r1, [sp, #124]
 2961 0d44 209A     		ldr	r2, [sp, #128]
 2962 0d46 219B     		ldr	r3, [sp, #132]
 2963 0d48 FFF7FEFF 		bl	charlie
 2964              	.LVL181:
 188:Src/charlie.c ****                if(stop == 1)
 2965              		.loc 2 188 16 view .LVU417
 2966 0d4c 0723     		movs	r3, #7
 2967 0d4e 1093     		str	r3, [sp, #64]
 2968 0d50 4346     		mov	r3, r8
 2969 0d52 4A46     		mov	r2, r9
 2970 0d54 13CA     		ldmia	r2!, {r0, r1, r4}
 2971 0d56 13C3     		stmia	r3!, {r0, r1, r4}
 2972 0d58 03CA     		ldmia	r2!, {r0, r1}
 2973 0d5a 03C3     		stmia	r3!, {r0, r1}
 2974 0d5c 3300     		movs	r3, r6
 2975 0d5e 3A00     		movs	r2, r7
 2976 0d60 13CA     		ldmia	r2!, {r0, r1, r4}
 2977 0d62 13C3     		stmia	r3!, {r0, r1, r4}
 2978 0d64 03CA     		ldmia	r2!, {r0, r1}
 2979 0d66 03C3     		stmia	r3!, {r0, r1}
 2980 0d68 1399     		ldr	r1, [sp, #76]
 2981 0d6a 0B00     		movs	r3, r1
 2982 0d6c 2A00     		movs	r2, r5
 2983 0d6e 13CA     		ldmia	r2!, {r0, r1, r4}
ARM GAS  /tmp/ccrwQJPQ.s 			page 72


 2984 0d70 13C3     		stmia	r3!, {r0, r1, r4}
 2985 0d72 03CA     		ldmia	r2!, {r0, r1}
 2986 0d74 03C3     		stmia	r3!, {r0, r1}
 2987 0d76 229B     		ldr	r3, [sp, #136]
 2988 0d78 0093     		str	r3, [sp]
 2989 0d7a 1E98     		ldr	r0, [sp, #120]
 2990 0d7c 1F99     		ldr	r1, [sp, #124]
 2991 0d7e 209A     		ldr	r2, [sp, #128]
 2992 0d80 219B     		ldr	r3, [sp, #132]
 2993 0d82 FFF7FEFF 		bl	charlie
 2994              	.LVL182:
 189:Src/charlie.c ****                   return;
 2995              		.loc 2 189 16 view .LVU418
 189:Src/charlie.c ****                   return;
 2996              		.loc 2 189 24 is_stmt 0 view .LVU419
 2997 0d86 2E4B     		ldr	r3, .L96+4
 2998 0d88 1B68     		ldr	r3, [r3]
 189:Src/charlie.c ****                   return;
 2999              		.loc 2 189 18 view .LVU420
 3000 0d8a 012B     		cmp	r3, #1
 3001 0d8c 01D1     		bne	.LCB2671
 3002 0d8e FFF753F9 		bl	.L38	@far jump
 3003              	.LCB2671:
 186:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3004              		.loc 2 186 36 is_stmt 1 discriminator 2 view .LVU421
 186:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3005              		.loc 2 186 37 is_stmt 0 discriminator 2 view .LVU422
 3006 0d92 0123     		movs	r3, #1
 3007 0d94 9C46     		mov	ip, r3
 3008 0d96 E344     		add	fp, fp, ip
 3009              	.LVL183:
 186:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3010              		.loc 2 186 37 discriminator 2 view .LVU423
 3011 0d98 B2E7     		b	.L61
 3012              	.LVL184:
 3013              	.L64:
 186:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3014              		.loc 2 186 37 discriminator 2 view .LVU424
 3015              	.LBE11:
 146:Src/charlie.c ****          if(i == 1){
 3016              		.loc 2 146 27 is_stmt 1 discriminator 2 view .LVU425
 146:Src/charlie.c ****          if(i == 1){
 3017              		.loc 2 146 28 is_stmt 0 discriminator 2 view .LVU426
 3018 0d9a 0123     		movs	r3, #1
 3019 0d9c 9C46     		mov	ip, r3
 3020 0d9e E244     		add	r10, r10, ip
 3021              	.LVL185:
 3022              	.L47:
 146:Src/charlie.c ****          if(i == 1){
 3023              		.loc 2 146 21 is_stmt 1 discriminator 1 view .LVU427
 146:Src/charlie.c ****          if(i == 1){
 3024              		.loc 2 146 7 is_stmt 0 discriminator 1 view .LVU428
 3025 0da0 5346     		mov	r3, r10
 3026 0da2 072B     		cmp	r3, #7
 3027 0da4 01DD     		ble	.LCB2698
 3028 0da6 FFF747F9 		bl	.L38	@far jump
 3029              	.LCB2698:
ARM GAS  /tmp/ccrwQJPQ.s 			page 73


 147:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 3030              		.loc 2 147 10 is_stmt 1 view .LVU429
 147:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 3031              		.loc 2 147 12 is_stmt 0 view .LVU430
 3032 0daa 5346     		mov	r3, r10
 3033 0dac 012B     		cmp	r3, #1
 3034 0dae 00D1     		bne	.LCB2702
 3035 0db0 32E6     		b	.L80	@long jump
 3036              	.LCB2702:
 3037              	.L48:
 153:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3038              		.loc 2 153 10 is_stmt 1 view .LVU431
 153:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3039              		.loc 2 153 12 is_stmt 0 view .LVU432
 3040 0db2 5346     		mov	r3, r10
 3041 0db4 022B     		cmp	r3, #2
 3042 0db6 00D1     		bne	.LCB2708
 3043 0db8 5BE6     		b	.L81	@long jump
 3044              	.LCB2708:
 3045              	.L50:
 161:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3046              		.loc 2 161 10 is_stmt 1 view .LVU433
 161:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3047              		.loc 2 161 12 is_stmt 0 view .LVU434
 3048 0dba 5346     		mov	r3, r10
 3049 0dbc 032B     		cmp	r3, #3
 3050 0dbe 00D1     		bne	.LCB2713
 3051 0dc0 A7E6     		b	.L82	@long jump
 3052              	.LCB2713:
 3053              	.L53:
 169:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3054              		.loc 2 169 10 is_stmt 1 view .LVU435
 169:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3055              		.loc 2 169 12 is_stmt 0 view .LVU436
 3056 0dc2 5346     		mov	r3, r10
 3057 0dc4 042B     		cmp	r3, #4
 3058 0dc6 00D1     		bne	.LCB2718
 3059 0dc8 40E7     		b	.L83	@long jump
 3060              	.LCB2718:
 3061              	.L56:
 177:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3062              		.loc 2 177 10 is_stmt 1 view .LVU437
 177:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3063              		.loc 2 177 12 is_stmt 0 view .LVU438
 3064 0dca 5346     		mov	r3, r10
 3065 0dcc 052B     		cmp	r3, #5
 3066 0dce 00D1     		bne	.LCB2723
 3067 0dd0 3FE7     		b	.L84	@long jump
 3068              	.LCB2723:
 3069              	.L59:
 185:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3070              		.loc 2 185 10 is_stmt 1 view .LVU439
 185:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3071              		.loc 2 185 12 is_stmt 0 view .LVU440
 3072 0dd2 5346     		mov	r3, r10
 3073 0dd4 062B     		cmp	r3, #6
 3074 0dd6 91D0     		beq	.L85
ARM GAS  /tmp/ccrwQJPQ.s 			page 74


 3075              	.L62:
 193:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 3076              		.loc 2 193 10 is_stmt 1 view .LVU441
 193:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 3077              		.loc 2 193 12 is_stmt 0 view .LVU442
 3078 0dd8 5346     		mov	r3, r10
 3079 0dda 072B     		cmp	r3, #7
 3080 0ddc DDD1     		bne	.L64
 3081              	.LVL186:
 194:Src/charlie.c ****             HAL_Delay(500);
 3082              		.loc 2 194 13 is_stmt 1 view .LVU443
 3083 0dde 013B     		subs	r3, r3, #1
 3084              	.LVL187:
 194:Src/charlie.c ****             HAL_Delay(500);
 3085              		.loc 2 194 13 is_stmt 0 view .LVU444
 3086 0de0 1093     		str	r3, [sp, #64]
 3087 0de2 2DA8     		add	r0, sp, #180
 3088 0de4 0BA9     		add	r1, sp, #44
 3089 0de6 0B00     		movs	r3, r1
 3090 0de8 0200     		movs	r2, r0
 3091 0dea 13CA     		ldmia	r2!, {r0, r1, r4}
 3092 0dec 13C3     		stmia	r3!, {r0, r1, r4}
 3093 0dee 03CA     		ldmia	r2!, {r0, r1}
 3094 0df0 03C3     		stmia	r3!, {r0, r1}
 3095 0df2 28A8     		add	r0, sp, #160
 3096 0df4 06A9     		add	r1, sp, #24
 3097 0df6 0B00     		movs	r3, r1
 3098 0df8 0200     		movs	r2, r0
 3099 0dfa 13CA     		ldmia	r2!, {r0, r1, r4}
 3100 0dfc 13C3     		stmia	r3!, {r0, r1, r4}
 3101 0dfe 03CA     		ldmia	r2!, {r0, r1}
 3102 0e00 03C3     		stmia	r3!, {r0, r1}
 3103 0e02 23A8     		add	r0, sp, #140
 3104 0e04 01A9     		add	r1, sp, #4
 3105 0e06 0B00     		movs	r3, r1
 3106 0e08 0200     		movs	r2, r0
 3107 0e0a 13CA     		ldmia	r2!, {r0, r1, r4}
 3108 0e0c 13C3     		stmia	r3!, {r0, r1, r4}
 3109 0e0e 03CA     		ldmia	r2!, {r0, r1}
 3110 0e10 03C3     		stmia	r3!, {r0, r1}
 3111 0e12 229B     		ldr	r3, [sp, #136]
 3112 0e14 0093     		str	r3, [sp]
 3113 0e16 1E98     		ldr	r0, [sp, #120]
 3114 0e18 1F99     		ldr	r1, [sp, #124]
 3115 0e1a 209A     		ldr	r2, [sp, #128]
 3116 0e1c 219B     		ldr	r3, [sp, #132]
 3117 0e1e FFF7FEFF 		bl	charlie
 3118              	.LVL188:
 195:Src/charlie.c ****             if(stop == 1)
 3119              		.loc 2 195 13 is_stmt 1 view .LVU445
 3120 0e22 FA20     		movs	r0, #250
 3121 0e24 4000     		lsls	r0, r0, #1
 3122 0e26 FFF7FEFF 		bl	HAL_Delay
 3123              	.LVL189:
 196:Src/charlie.c ****                return;
 3124              		.loc 2 196 13 view .LVU446
 196:Src/charlie.c ****                return;
ARM GAS  /tmp/ccrwQJPQ.s 			page 75


 3125              		.loc 2 196 21 is_stmt 0 view .LVU447
 3126 0e2a 054B     		ldr	r3, .L96+4
 3127 0e2c 1B68     		ldr	r3, [r3]
 196:Src/charlie.c ****                return;
 3128              		.loc 2 196 15 view .LVU448
 3129 0e2e 012B     		cmp	r3, #1
 3130 0e30 B3D1     		bne	.L64
 3131 0e32 FFF701F9 		bl	.L38	@ far jump
 3132              	.LVL190:
 3133              	.L77:
 146:Src/charlie.c ****          if(i == 1){
 3134              		.loc 2 146 15 view .LVU449
 3135 0e36 0123     		movs	r3, #1
 3136 0e38 9A46     		mov	r10, r3
 3137 0e3a B1E7     		b	.L47
 3138              	.L97:
 3139              		.align	2
 3140              	.L96:
 3141 0e3c 0F270000 		.word	9999
 3142 0e40 00000000 		.word	.LANCHOR0
 3143              	.LBE6:
 3144              		.cfi_endproc
 3145              	.LFE44:
 3147              		.section	.text.initA,"ax",%progbits
 3148              		.align	1
 3149              		.global	initA
 3150              		.syntax unified
 3151              		.code	16
 3152              		.thumb_func
 3153              		.fpu softvfp
 3155              	initA:
 3156              	.LVL191:
 3157              	.LFB46:
 392:Src/charlie.c **** 
 393:Src/charlie.c **** GPIO_InitTypeDef initA(){
 3158              		.loc 2 393 25 is_stmt 1 view -0
 3159              		.cfi_startproc
 3160              		@ args = 0, pretend = 0, frame = 24
 3161              		@ frame_needed = 0, uses_anonymous_args = 0
 3162              		.loc 2 393 25 is_stmt 0 view .LVU451
 3163 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3164              	.LCFI12:
 3165              		.cfi_def_cfa_offset 20
 3166              		.cfi_offset 4, -20
 3167              		.cfi_offset 5, -16
 3168              		.cfi_offset 6, -12
 3169              		.cfi_offset 7, -8
 3170              		.cfi_offset 14, -4
 3171 0002 87B0     		sub	sp, sp, #28
 3172              	.LCFI13:
 3173              		.cfi_def_cfa_offset 48
 3174 0004 0500     		movs	r5, r0
 394:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3175              		.loc 2 394 3 is_stmt 1 view .LVU452
 3176              		.loc 2 394 20 is_stmt 0 view .LVU453
 3177 0006 01AC     		add	r4, sp, #4
 3178 0008 1422     		movs	r2, #20
ARM GAS  /tmp/ccrwQJPQ.s 			page 76


 3179 000a 0021     		movs	r1, #0
 3180 000c 2000     		movs	r0, r4
 3181              	.LVL192:
 3182              		.loc 2 394 20 view .LVU454
 3183 000e FFF7FEFF 		bl	memset
 3184              	.LVL193:
 395:Src/charlie.c **** 
 396:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 397:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, A_Pin, GPIO_PIN_RESET);
 3185              		.loc 2 397 3 is_stmt 1 view .LVU455
 3186 0012 9020     		movs	r0, #144
 3187 0014 0022     		movs	r2, #0
 3188 0016 0121     		movs	r1, #1
 3189 0018 C005     		lsls	r0, r0, #23
 3190 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3191              	.LVL194:
 398:Src/charlie.c **** 
 399:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 400:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3192              		.loc 2 400 3 view .LVU456
 3193              		.loc 2 400 23 is_stmt 0 view .LVU457
 3194 001e 8023     		movs	r3, #128
 3195 0020 5B00     		lsls	r3, r3, #1
 3196 0022 0193     		str	r3, [sp, #4]
 401:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3197              		.loc 2 401 3 is_stmt 1 view .LVU458
 3198              		.loc 2 401 24 is_stmt 0 view .LVU459
 3199 0024 0026     		movs	r6, #0
 3200 0026 6660     		str	r6, [r4, #4]
 402:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3201              		.loc 2 402 3 is_stmt 1 view .LVU460
 3202              		.loc 2 402 24 is_stmt 0 view .LVU461
 3203 0028 0127     		movs	r7, #1
 3204 002a A760     		str	r7, [r4, #8]
 403:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3205              		.loc 2 403 3 is_stmt 1 view .LVU462
 3206 002c 2100     		movs	r1, r4
 3207 002e 0748     		ldr	r0, .L99
 3208 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3209              	.LVL195:
 404:Src/charlie.c **** 
 405:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 406:Src/charlie.c ****   GPIO_InitStruct.Pin = A_Pin;
 3210              		.loc 2 406 3 view .LVU463
 3211              		.loc 2 406 23 is_stmt 0 view .LVU464
 3212 0034 0197     		str	r7, [sp, #4]
 407:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3213              		.loc 2 407 3 is_stmt 1 view .LVU465
 3214              		.loc 2 407 24 is_stmt 0 view .LVU466
 3215 0036 6760     		str	r7, [r4, #4]
 408:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3216              		.loc 2 408 3 is_stmt 1 view .LVU467
 3217              		.loc 2 408 24 is_stmt 0 view .LVU468
 3218 0038 A660     		str	r6, [r4, #8]
 409:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3219              		.loc 2 409 3 is_stmt 1 view .LVU469
 3220              		.loc 2 409 25 is_stmt 0 view .LVU470
ARM GAS  /tmp/ccrwQJPQ.s 			page 77


 3221 003a E660     		str	r6, [r4, #12]
 410:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 411:Src/charlie.c **** 
 412:Src/charlie.c ****   return GPIO_InitStruct;
 3222              		.loc 2 412 3 is_stmt 1 view .LVU471
 3223              		.loc 2 412 10 is_stmt 0 view .LVU472
 3224 003c 2B00     		movs	r3, r5
 3225 003e 07CC     		ldmia	r4!, {r0, r1, r2}
 3226 0040 07C3     		stmia	r3!, {r0, r1, r2}
 3227 0042 06CC     		ldmia	r4!, {r1, r2}
 3228 0044 06C3     		stmia	r3!, {r1, r2}
 413:Src/charlie.c **** }
 3229              		.loc 2 413 1 view .LVU473
 3230 0046 2800     		movs	r0, r5
 3231 0048 07B0     		add	sp, sp, #28
 3232              		@ sp needed
 3233              	.LVL196:
 3234              		.loc 2 413 1 view .LVU474
 3235 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 3236              	.L100:
 3237              		.align	2
 3238              	.L99:
 3239 004c 00040048 		.word	1207960576
 3240              		.cfi_endproc
 3241              	.LFE46:
 3243              		.section	.text.initB,"ax",%progbits
 3244              		.align	1
 3245              		.global	initB
 3246              		.syntax unified
 3247              		.code	16
 3248              		.thumb_func
 3249              		.fpu softvfp
 3251              	initB:
 3252              	.LVL197:
 3253              	.LFB47:
 414:Src/charlie.c **** 
 415:Src/charlie.c **** GPIO_InitTypeDef initB(){
 3254              		.loc 2 415 25 is_stmt 1 view -0
 3255              		.cfi_startproc
 3256              		@ args = 0, pretend = 0, frame = 24
 3257              		@ frame_needed = 0, uses_anonymous_args = 0
 3258              		.loc 2 415 25 is_stmt 0 view .LVU476
 3259 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3260              	.LCFI14:
 3261              		.cfi_def_cfa_offset 20
 3262              		.cfi_offset 4, -20
 3263              		.cfi_offset 5, -16
 3264              		.cfi_offset 6, -12
 3265              		.cfi_offset 7, -8
 3266              		.cfi_offset 14, -4
 3267 0002 87B0     		sub	sp, sp, #28
 3268              	.LCFI15:
 3269              		.cfi_def_cfa_offset 48
 3270 0004 0500     		movs	r5, r0
 416:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3271              		.loc 2 416 3 is_stmt 1 view .LVU477
 3272              		.loc 2 416 20 is_stmt 0 view .LVU478
ARM GAS  /tmp/ccrwQJPQ.s 			page 78


 3273 0006 01AC     		add	r4, sp, #4
 3274 0008 1422     		movs	r2, #20
 3275 000a 0021     		movs	r1, #0
 3276 000c 2000     		movs	r0, r4
 3277              	.LVL198:
 3278              		.loc 2 416 20 view .LVU479
 3279 000e FFF7FEFF 		bl	memset
 3280              	.LVL199:
 417:Src/charlie.c **** 
 418:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 419:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, B_Pin, GPIO_PIN_RESET);
 3281              		.loc 2 419 3 is_stmt 1 view .LVU480
 3282 0012 9020     		movs	r0, #144
 3283 0014 0022     		movs	r2, #0
 3284 0016 0221     		movs	r1, #2
 3285 0018 C005     		lsls	r0, r0, #23
 3286 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3287              	.LVL200:
 420:Src/charlie.c **** 
 421:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 422:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3288              		.loc 2 422 3 view .LVU481
 3289              		.loc 2 422 23 is_stmt 0 view .LVU482
 3290 001e 8023     		movs	r3, #128
 3291 0020 5B00     		lsls	r3, r3, #1
 3292 0022 0193     		str	r3, [sp, #4]
 423:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3293              		.loc 2 423 3 is_stmt 1 view .LVU483
 3294              		.loc 2 423 24 is_stmt 0 view .LVU484
 3295 0024 0026     		movs	r6, #0
 3296 0026 6660     		str	r6, [r4, #4]
 424:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3297              		.loc 2 424 3 is_stmt 1 view .LVU485
 3298              		.loc 2 424 24 is_stmt 0 view .LVU486
 3299 0028 0127     		movs	r7, #1
 3300 002a A760     		str	r7, [r4, #8]
 425:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3301              		.loc 2 425 3 is_stmt 1 view .LVU487
 3302 002c 2100     		movs	r1, r4
 3303 002e 0848     		ldr	r0, .L102
 3304 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3305              	.LVL201:
 426:Src/charlie.c **** 
 427:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 428:Src/charlie.c ****   GPIO_InitStruct.Pin = B_Pin;
 3306              		.loc 2 428 3 view .LVU488
 3307              		.loc 2 428 23 is_stmt 0 view .LVU489
 3308 0034 0223     		movs	r3, #2
 3309 0036 0193     		str	r3, [sp, #4]
 429:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3310              		.loc 2 429 3 is_stmt 1 view .LVU490
 3311              		.loc 2 429 24 is_stmt 0 view .LVU491
 3312 0038 6760     		str	r7, [r4, #4]
 430:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3313              		.loc 2 430 3 is_stmt 1 view .LVU492
 3314              		.loc 2 430 24 is_stmt 0 view .LVU493
 3315 003a A660     		str	r6, [r4, #8]
ARM GAS  /tmp/ccrwQJPQ.s 			page 79


 431:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3316              		.loc 2 431 3 is_stmt 1 view .LVU494
 3317              		.loc 2 431 25 is_stmt 0 view .LVU495
 3318 003c E660     		str	r6, [r4, #12]
 432:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 433:Src/charlie.c **** 
 434:Src/charlie.c ****   return GPIO_InitStruct;
 3319              		.loc 2 434 3 is_stmt 1 view .LVU496
 3320              		.loc 2 434 10 is_stmt 0 view .LVU497
 3321 003e 2B00     		movs	r3, r5
 3322 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 3323 0042 07C3     		stmia	r3!, {r0, r1, r2}
 3324 0044 06CC     		ldmia	r4!, {r1, r2}
 3325 0046 06C3     		stmia	r3!, {r1, r2}
 435:Src/charlie.c **** }
 3326              		.loc 2 435 1 view .LVU498
 3327 0048 2800     		movs	r0, r5
 3328 004a 07B0     		add	sp, sp, #28
 3329              		@ sp needed
 3330              	.LVL202:
 3331              		.loc 2 435 1 view .LVU499
 3332 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 3333              	.L103:
 3334 004e C046     		.align	2
 3335              	.L102:
 3336 0050 00040048 		.word	1207960576
 3337              		.cfi_endproc
 3338              	.LFE47:
 3340              		.section	.text.initC,"ax",%progbits
 3341              		.align	1
 3342              		.global	initC
 3343              		.syntax unified
 3344              		.code	16
 3345              		.thumb_func
 3346              		.fpu softvfp
 3348              	initC:
 3349              	.LVL203:
 3350              	.LFB48:
 436:Src/charlie.c **** 
 437:Src/charlie.c **** GPIO_InitTypeDef initC(){
 3351              		.loc 2 437 25 is_stmt 1 view -0
 3352              		.cfi_startproc
 3353              		@ args = 0, pretend = 0, frame = 24
 3354              		@ frame_needed = 0, uses_anonymous_args = 0
 3355              		.loc 2 437 25 is_stmt 0 view .LVU501
 3356 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3357              	.LCFI16:
 3358              		.cfi_def_cfa_offset 20
 3359              		.cfi_offset 4, -20
 3360              		.cfi_offset 5, -16
 3361              		.cfi_offset 6, -12
 3362              		.cfi_offset 7, -8
 3363              		.cfi_offset 14, -4
 3364 0002 87B0     		sub	sp, sp, #28
 3365              	.LCFI17:
 3366              		.cfi_def_cfa_offset 48
 3367 0004 0500     		movs	r5, r0
ARM GAS  /tmp/ccrwQJPQ.s 			page 80


 438:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3368              		.loc 2 438 3 is_stmt 1 view .LVU502
 3369              		.loc 2 438 20 is_stmt 0 view .LVU503
 3370 0006 01AC     		add	r4, sp, #4
 3371 0008 1422     		movs	r2, #20
 3372 000a 0021     		movs	r1, #0
 3373 000c 2000     		movs	r0, r4
 3374              	.LVL204:
 3375              		.loc 2 438 20 view .LVU504
 3376 000e FFF7FEFF 		bl	memset
 3377              	.LVL205:
 439:Src/charlie.c **** 
 440:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 441:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, C_Pin, GPIO_PIN_RESET);
 3378              		.loc 2 441 3 is_stmt 1 view .LVU505
 3379 0012 9020     		movs	r0, #144
 3380 0014 0022     		movs	r2, #0
 3381 0016 0421     		movs	r1, #4
 3382 0018 C005     		lsls	r0, r0, #23
 3383 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3384              	.LVL206:
 442:Src/charlie.c **** 
 443:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 444:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3385              		.loc 2 444 3 view .LVU506
 3386              		.loc 2 444 23 is_stmt 0 view .LVU507
 3387 001e 8023     		movs	r3, #128
 3388 0020 5B00     		lsls	r3, r3, #1
 3389 0022 0193     		str	r3, [sp, #4]
 445:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3390              		.loc 2 445 3 is_stmt 1 view .LVU508
 3391              		.loc 2 445 24 is_stmt 0 view .LVU509
 3392 0024 0026     		movs	r6, #0
 3393 0026 6660     		str	r6, [r4, #4]
 446:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3394              		.loc 2 446 3 is_stmt 1 view .LVU510
 3395              		.loc 2 446 24 is_stmt 0 view .LVU511
 3396 0028 0127     		movs	r7, #1
 3397 002a A760     		str	r7, [r4, #8]
 447:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3398              		.loc 2 447 3 is_stmt 1 view .LVU512
 3399 002c 2100     		movs	r1, r4
 3400 002e 0848     		ldr	r0, .L105
 3401 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3402              	.LVL207:
 448:Src/charlie.c **** 
 449:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 450:Src/charlie.c ****   GPIO_InitStruct.Pin = C_Pin;
 3403              		.loc 2 450 3 view .LVU513
 3404              		.loc 2 450 23 is_stmt 0 view .LVU514
 3405 0034 0423     		movs	r3, #4
 3406 0036 0193     		str	r3, [sp, #4]
 451:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3407              		.loc 2 451 3 is_stmt 1 view .LVU515
 3408              		.loc 2 451 24 is_stmt 0 view .LVU516
 3409 0038 6760     		str	r7, [r4, #4]
 452:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccrwQJPQ.s 			page 81


 3410              		.loc 2 452 3 is_stmt 1 view .LVU517
 3411              		.loc 2 452 24 is_stmt 0 view .LVU518
 3412 003a A660     		str	r6, [r4, #8]
 453:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3413              		.loc 2 453 3 is_stmt 1 view .LVU519
 3414              		.loc 2 453 25 is_stmt 0 view .LVU520
 3415 003c E660     		str	r6, [r4, #12]
 454:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 455:Src/charlie.c **** 
 456:Src/charlie.c ****   return GPIO_InitStruct;
 3416              		.loc 2 456 3 is_stmt 1 view .LVU521
 3417              		.loc 2 456 10 is_stmt 0 view .LVU522
 3418 003e 2B00     		movs	r3, r5
 3419 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 3420 0042 07C3     		stmia	r3!, {r0, r1, r2}
 3421 0044 06CC     		ldmia	r4!, {r1, r2}
 3422 0046 06C3     		stmia	r3!, {r1, r2}
 457:Src/charlie.c **** }
 3423              		.loc 2 457 1 view .LVU523
 3424 0048 2800     		movs	r0, r5
 3425 004a 07B0     		add	sp, sp, #28
 3426              		@ sp needed
 3427              	.LVL208:
 3428              		.loc 2 457 1 view .LVU524
 3429 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 3430              	.L106:
 3431 004e C046     		.align	2
 3432              	.L105:
 3433 0050 00040048 		.word	1207960576
 3434              		.cfi_endproc
 3435              	.LFE48:
 3437              		.section	.text.initD,"ax",%progbits
 3438              		.align	1
 3439              		.global	initD
 3440              		.syntax unified
 3441              		.code	16
 3442              		.thumb_func
 3443              		.fpu softvfp
 3445              	initD:
 3446              	.LVL209:
 3447              	.LFB49:
 458:Src/charlie.c **** 
 459:Src/charlie.c **** GPIO_InitTypeDef initD(){
 3448              		.loc 2 459 25 is_stmt 1 view -0
 3449              		.cfi_startproc
 3450              		@ args = 0, pretend = 0, frame = 24
 3451              		@ frame_needed = 0, uses_anonymous_args = 0
 3452              		.loc 2 459 25 is_stmt 0 view .LVU526
 3453 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3454              	.LCFI18:
 3455              		.cfi_def_cfa_offset 20
 3456              		.cfi_offset 4, -20
 3457              		.cfi_offset 5, -16
 3458              		.cfi_offset 6, -12
 3459              		.cfi_offset 7, -8
 3460              		.cfi_offset 14, -4
 3461 0002 87B0     		sub	sp, sp, #28
ARM GAS  /tmp/ccrwQJPQ.s 			page 82


 3462              	.LCFI19:
 3463              		.cfi_def_cfa_offset 48
 3464 0004 0500     		movs	r5, r0
 460:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3465              		.loc 2 460 3 is_stmt 1 view .LVU527
 3466              		.loc 2 460 20 is_stmt 0 view .LVU528
 3467 0006 01AC     		add	r4, sp, #4
 3468 0008 1422     		movs	r2, #20
 3469 000a 0021     		movs	r1, #0
 3470 000c 2000     		movs	r0, r4
 3471              	.LVL210:
 3472              		.loc 2 460 20 view .LVU529
 3473 000e FFF7FEFF 		bl	memset
 3474              	.LVL211:
 461:Src/charlie.c **** 
 462:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 463:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, D_Pin, GPIO_PIN_RESET);
 3475              		.loc 2 463 3 is_stmt 1 view .LVU530
 3476 0012 9020     		movs	r0, #144
 3477 0014 0022     		movs	r2, #0
 3478 0016 0821     		movs	r1, #8
 3479 0018 C005     		lsls	r0, r0, #23
 3480 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3481              	.LVL212:
 464:Src/charlie.c **** 
 465:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 466:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3482              		.loc 2 466 3 view .LVU531
 3483              		.loc 2 466 23 is_stmt 0 view .LVU532
 3484 001e 8023     		movs	r3, #128
 3485 0020 5B00     		lsls	r3, r3, #1
 3486 0022 0193     		str	r3, [sp, #4]
 467:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3487              		.loc 2 467 3 is_stmt 1 view .LVU533
 3488              		.loc 2 467 24 is_stmt 0 view .LVU534
 3489 0024 0026     		movs	r6, #0
 3490 0026 6660     		str	r6, [r4, #4]
 468:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3491              		.loc 2 468 3 is_stmt 1 view .LVU535
 3492              		.loc 2 468 24 is_stmt 0 view .LVU536
 3493 0028 0127     		movs	r7, #1
 3494 002a A760     		str	r7, [r4, #8]
 469:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3495              		.loc 2 469 3 is_stmt 1 view .LVU537
 3496 002c 2100     		movs	r1, r4
 3497 002e 0848     		ldr	r0, .L108
 3498 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3499              	.LVL213:
 470:Src/charlie.c **** 
 471:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 472:Src/charlie.c ****   GPIO_InitStruct.Pin = D_Pin;
 3500              		.loc 2 472 3 view .LVU538
 3501              		.loc 2 472 23 is_stmt 0 view .LVU539
 3502 0034 0823     		movs	r3, #8
 3503 0036 0193     		str	r3, [sp, #4]
 473:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3504              		.loc 2 473 3 is_stmt 1 view .LVU540
ARM GAS  /tmp/ccrwQJPQ.s 			page 83


 3505              		.loc 2 473 24 is_stmt 0 view .LVU541
 3506 0038 6760     		str	r7, [r4, #4]
 474:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3507              		.loc 2 474 3 is_stmt 1 view .LVU542
 3508              		.loc 2 474 24 is_stmt 0 view .LVU543
 3509 003a A660     		str	r6, [r4, #8]
 475:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3510              		.loc 2 475 3 is_stmt 1 view .LVU544
 3511              		.loc 2 475 25 is_stmt 0 view .LVU545
 3512 003c E660     		str	r6, [r4, #12]
 476:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 477:Src/charlie.c **** 
 478:Src/charlie.c ****   return GPIO_InitStruct;
 3513              		.loc 2 478 3 is_stmt 1 view .LVU546
 3514              		.loc 2 478 10 is_stmt 0 view .LVU547
 3515 003e 2B00     		movs	r3, r5
 3516 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 3517 0042 07C3     		stmia	r3!, {r0, r1, r2}
 3518 0044 06CC     		ldmia	r4!, {r1, r2}
 3519 0046 06C3     		stmia	r3!, {r1, r2}
 479:Src/charlie.c **** }
 3520              		.loc 2 479 1 view .LVU548
 3521 0048 2800     		movs	r0, r5
 3522 004a 07B0     		add	sp, sp, #28
 3523              		@ sp needed
 3524              	.LVL214:
 3525              		.loc 2 479 1 view .LVU549
 3526 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 3527              	.L109:
 3528 004e C046     		.align	2
 3529              	.L108:
 3530 0050 00040048 		.word	1207960576
 3531              		.cfi_endproc
 3532              	.LFE49:
 3534              		.section	.text.SystemClock_Config,"ax",%progbits
 3535              		.align	1
 3536              		.global	SystemClock_Config
 3537              		.syntax unified
 3538              		.code	16
 3539              		.thumb_func
 3540              		.fpu softvfp
 3542              	SystemClock_Config:
 3543              	.LFB51:
 172:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 3544              		.loc 1 172 1 is_stmt 1 view -0
 3545              		.cfi_startproc
 3546              		@ args = 0, pretend = 0, frame = 96
 3547              		@ frame_needed = 0, uses_anonymous_args = 0
 3548 0000 10B5     		push	{r4, lr}
 3549              	.LCFI20:
 3550              		.cfi_def_cfa_offset 8
 3551              		.cfi_offset 4, -8
 3552              		.cfi_offset 14, -4
 3553 0002 98B0     		sub	sp, sp, #96
 3554              	.LCFI21:
 3555              		.cfi_def_cfa_offset 104
 173:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccrwQJPQ.s 			page 84


 3556              		.loc 1 173 3 view .LVU551
 173:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3557              		.loc 1 173 22 is_stmt 0 view .LVU552
 3558 0004 3022     		movs	r2, #48
 3559 0006 0021     		movs	r1, #0
 3560 0008 0CA8     		add	r0, sp, #48
 3561 000a FFF7FEFF 		bl	memset
 3562              	.LVL215:
 174:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 3563              		.loc 1 174 3 is_stmt 1 view .LVU553
 174:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 3564              		.loc 1 174 22 is_stmt 0 view .LVU554
 3565 000e 1022     		movs	r2, #16
 3566 0010 0021     		movs	r1, #0
 3567 0012 07A8     		add	r0, sp, #28
 3568 0014 FFF7FEFF 		bl	memset
 3569              	.LVL216:
 175:Src/main.c    **** 
 3570              		.loc 1 175 3 is_stmt 1 view .LVU555
 175:Src/main.c    **** 
 3571              		.loc 1 175 28 is_stmt 0 view .LVU556
 3572 0018 1822     		movs	r2, #24
 3573 001a 0021     		movs	r1, #0
 3574 001c 01A8     		add	r0, sp, #4
 3575 001e FFF7FEFF 		bl	memset
 3576              	.LVL217:
 179:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3577              		.loc 1 179 3 is_stmt 1 view .LVU557
 179:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3578              		.loc 1 179 36 is_stmt 0 view .LVU558
 3579 0022 2823     		movs	r3, #40
 3580 0024 0B93     		str	r3, [sp, #44]
 180:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3581              		.loc 1 180 3 is_stmt 1 view .LVU559
 180:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3582              		.loc 1 180 32 is_stmt 0 view .LVU560
 3583 0026 273B     		subs	r3, r3, #39
 3584 0028 1393     		str	r3, [sp, #76]
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 3585              		.loc 1 181 3 is_stmt 1 view .LVU561
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 3586              		.loc 1 181 30 is_stmt 0 view .LVU562
 3587 002a 1293     		str	r3, [sp, #72]
 182:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3588              		.loc 1 182 3 is_stmt 1 view .LVU563
 183:Src/main.c    ****   {
 3589              		.loc 1 183 3 view .LVU564
 183:Src/main.c    ****   {
 3590              		.loc 1 183 7 is_stmt 0 view .LVU565
 3591 002c 0BA8     		add	r0, sp, #44
 3592 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 3593              	.LVL218:
 189:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 3594              		.loc 1 189 3 is_stmt 1 view .LVU566
 189:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 3595              		.loc 1 189 31 is_stmt 0 view .LVU567
 3596 0032 0723     		movs	r3, #7
ARM GAS  /tmp/ccrwQJPQ.s 			page 85


 3597 0034 0793     		str	r3, [sp, #28]
 191:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3598              		.loc 1 191 3 is_stmt 1 view .LVU568
 191:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3599              		.loc 1 191 34 is_stmt 0 view .LVU569
 3600 0036 043B     		subs	r3, r3, #4
 3601 0038 0893     		str	r3, [sp, #32]
 192:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3602              		.loc 1 192 3 is_stmt 1 view .LVU570
 192:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3603              		.loc 1 192 35 is_stmt 0 view .LVU571
 3604 003a 0024     		movs	r4, #0
 3605 003c 0994     		str	r4, [sp, #36]
 193:Src/main.c    **** 
 3606              		.loc 1 193 3 is_stmt 1 view .LVU572
 193:Src/main.c    **** 
 3607              		.loc 1 193 36 is_stmt 0 view .LVU573
 3608 003e 0A94     		str	r4, [sp, #40]
 195:Src/main.c    ****   {
 3609              		.loc 1 195 3 is_stmt 1 view .LVU574
 195:Src/main.c    ****   {
 3610              		.loc 1 195 7 is_stmt 0 view .LVU575
 3611 0040 0121     		movs	r1, #1
 3612 0042 07A8     		add	r0, sp, #28
 3613 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3614              	.LVL219:
 199:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3615              		.loc 1 199 3 is_stmt 1 view .LVU576
 199:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3616              		.loc 1 199 38 is_stmt 0 view .LVU577
 3617 0048 C023     		movs	r3, #192
 3618 004a 9B02     		lsls	r3, r3, #10
 3619 004c 0193     		str	r3, [sp, #4]
 200:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 3620              		.loc 1 200 3 is_stmt 1 view .LVU578
 200:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 3621              		.loc 1 200 35 is_stmt 0 view .LVU579
 3622 004e 8023     		movs	r3, #128
 3623 0050 9B00     		lsls	r3, r3, #2
 3624 0052 0293     		str	r3, [sp, #8]
 201:Src/main.c    **** 
 3625              		.loc 1 201 3 is_stmt 1 view .LVU580
 201:Src/main.c    **** 
 3626              		.loc 1 201 35 is_stmt 0 view .LVU581
 3627 0054 0694     		str	r4, [sp, #24]
 203:Src/main.c    ****   {
 3628              		.loc 1 203 3 is_stmt 1 view .LVU582
 203:Src/main.c    ****   {
 3629              		.loc 1 203 7 is_stmt 0 view .LVU583
 3630 0056 01A8     		add	r0, sp, #4
 3631 0058 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3632              	.LVL220:
 207:Src/main.c    **** 
 3633              		.loc 1 207 1 view .LVU584
 3634 005c 18B0     		add	sp, sp, #96
 3635              		@ sp needed
 3636 005e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccrwQJPQ.s 			page 86


 3637              		.cfi_endproc
 3638              	.LFE51:
 3640              		.section	.text.main,"ax",%progbits
 3641              		.align	1
 3642              		.global	main
 3643              		.syntax unified
 3644              		.code	16
 3645              		.thumb_func
 3646              		.fpu softvfp
 3648              	main:
 3649              	.LFB50:
  86:Src/main.c    ****   /* USER CODE BEGIN 1 */
 3650              		.loc 1 86 1 is_stmt 1 view -0
 3651              		.cfi_startproc
 3652              		@ Volatile: function does not return.
 3653              		@ args = 0, pretend = 0, frame = 88
 3654              		@ frame_needed = 0, uses_anonymous_args = 0
 3655 0000 30B5     		push	{r4, r5, lr}
 3656              	.LCFI22:
 3657              		.cfi_def_cfa_offset 12
 3658              		.cfi_offset 4, -12
 3659              		.cfi_offset 5, -8
 3660              		.cfi_offset 14, -4
 3661 0002 A9B0     		sub	sp, sp, #164
 3662              	.LCFI23:
 3663              		.cfi_def_cfa_offset 176
  94:Src/main.c    **** 
 3664              		.loc 1 94 3 view .LVU586
 3665 0004 FFF7FEFF 		bl	HAL_Init
 3666              	.LVL221:
 101:Src/main.c    **** 
 3667              		.loc 1 101 3 view .LVU587
 3668 0008 FFF7FEFF 		bl	SystemClock_Config
 3669              	.LVL222:
 108:Src/main.c    ****   MX_USB_DEVICE_Init();
 3670              		.loc 1 108 3 view .LVU588
 3671 000c FFF7FEFF 		bl	MX_GPIO_Init
 3672              	.LVL223:
 109:Src/main.c    ****   MX_RTC_Init();
 3673              		.loc 1 109 3 view .LVU589
 3674 0010 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 3675              	.LVL224:
 110:Src/main.c    ****   MX_TIM1_Init();
 3676              		.loc 1 110 3 view .LVU590
 3677 0014 FFF7FEFF 		bl	MX_RTC_Init
 3678              	.LVL225:
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 3679              		.loc 1 111 3 view .LVU591
 3680 0018 FFF7FEFF 		bl	MX_TIM1_Init
 3681              	.LVL226:
 113:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 3682              		.loc 1 113 3 view .LVU592
 113:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 3683              		.loc 1 113 27 is_stmt 0 view .LVU593
 3684 001c 23A8     		add	r0, sp, #140
 3685 001e FFF7FEFF 		bl	initA
 3686              	.LVL227:
ARM GAS  /tmp/ccrwQJPQ.s 			page 87


 114:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 3687              		.loc 1 114 3 is_stmt 1 view .LVU594
 114:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 3688              		.loc 1 114 27 is_stmt 0 view .LVU595
 3689 0022 1EA8     		add	r0, sp, #120
 3690 0024 FFF7FEFF 		bl	initB
 3691              	.LVL228:
 115:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 3692              		.loc 1 115 3 is_stmt 1 view .LVU596
 115:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 3693              		.loc 1 115 27 is_stmt 0 view .LVU597
 3694 0028 19A8     		add	r0, sp, #100
 3695 002a FFF7FEFF 		bl	initC
 3696              	.LVL229:
 116:Src/main.c    **** 
 3697              		.loc 1 116 3 is_stmt 1 view .LVU598
 116:Src/main.c    **** 
 3698              		.loc 1 116 27 is_stmt 0 view .LVU599
 3699 002e 14A8     		add	r0, sp, #80
 3700 0030 FFF7FEFF 		bl	initD
 3701              	.LVL230:
 118:Src/main.c    **** 
 3702              		.loc 1 118 3 is_stmt 1 view .LVU600
 118:Src/main.c    **** 
 3703              		.loc 1 118 8 is_stmt 0 view .LVU601
 3704 0034 3E4B     		ldr	r3, .L122
 3705 0036 0022     		movs	r2, #0
 3706 0038 1A60     		str	r2, [r3]
 3707 003a 2DE0     		b	.L115
 3708              	.L121:
 134:Src/main.c    ****     }
 3709              		.loc 1 134 8 is_stmt 1 view .LVU602
 3710 003c 1093     		str	r3, [sp, #64]
 3711 003e 14A8     		add	r0, sp, #80
 3712 0040 0BA9     		add	r1, sp, #44
 3713 0042 0B00     		movs	r3, r1
 3714 0044 0200     		movs	r2, r0
 3715 0046 13CA     		ldmia	r2!, {r0, r1, r4}
 3716 0048 13C3     		stmia	r3!, {r0, r1, r4}
 3717 004a 03CA     		ldmia	r2!, {r0, r1}
 3718 004c 03C3     		stmia	r3!, {r0, r1}
 3719 004e 19A8     		add	r0, sp, #100
 3720 0050 06A9     		add	r1, sp, #24
 3721 0052 0B00     		movs	r3, r1
 3722 0054 0200     		movs	r2, r0
 3723 0056 13CA     		ldmia	r2!, {r0, r1, r4}
 3724 0058 13C3     		stmia	r3!, {r0, r1, r4}
 3725 005a 03CA     		ldmia	r2!, {r0, r1}
 3726 005c 03C3     		stmia	r3!, {r0, r1}
 3727 005e 1EA8     		add	r0, sp, #120
 3728 0060 01A9     		add	r1, sp, #4
 3729 0062 0B00     		movs	r3, r1
 3730 0064 0200     		movs	r2, r0
 3731 0066 13CA     		ldmia	r2!, {r0, r1, r4}
 3732 0068 13C3     		stmia	r3!, {r0, r1, r4}
 3733 006a 03CA     		ldmia	r2!, {r0, r1}
 3734 006c 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/ccrwQJPQ.s 			page 88


 3735 006e 279B     		ldr	r3, [sp, #156]
 3736 0070 1393     		str	r3, [sp, #76]
 3737 0072 0093     		str	r3, [sp]
 3738 0074 2398     		ldr	r0, [sp, #140]
 3739 0076 2499     		ldr	r1, [sp, #144]
 3740 0078 259A     		ldr	r2, [sp, #148]
 3741 007a 269B     		ldr	r3, [sp, #152]
 3742 007c FFF7FEFF 		bl	dance
 3743              	.LVL231:
 3744              	.L112:
 137:Src/main.c    ****       HAL_Delay(100);
 3745              		.loc 1 137 5 view .LVU603
 137:Src/main.c    ****       HAL_Delay(100);
 3746              		.loc 1 137 13 is_stmt 0 view .LVU604
 3747 0080 2B4B     		ldr	r3, .L122
 3748 0082 1B68     		ldr	r3, [r3]
 137:Src/main.c    ****       HAL_Delay(100);
 3749              		.loc 1 137 7 view .LVU605
 3750 0084 012B     		cmp	r3, #1
 3751 0086 0CD0     		beq	.L118
 3752              	.L113:
 147:Src/main.c    ****       HAL_Delay(100);
 3753              		.loc 1 147 5 is_stmt 1 view .LVU606
 147:Src/main.c    ****       HAL_Delay(100);
 3754              		.loc 1 147 13 is_stmt 0 view .LVU607
 3755 0088 294B     		ldr	r3, .L122
 3756 008a 1B68     		ldr	r3, [r3]
 147:Src/main.c    ****       HAL_Delay(100);
 3757              		.loc 1 147 7 view .LVU608
 3758 008c 012B     		cmp	r3, #1
 3759 008e 25D0     		beq	.L119
 3760              	.L114:
 156:Src/main.c    ****       HAL_Delay(100);
 3761              		.loc 1 156 5 is_stmt 1 view .LVU609
 156:Src/main.c    ****       HAL_Delay(100);
 3762              		.loc 1 156 13 is_stmt 0 view .LVU610
 3763 0090 274B     		ldr	r3, .L122
 3764 0092 1B68     		ldr	r3, [r3]
 156:Src/main.c    ****       HAL_Delay(100);
 3765              		.loc 1 156 7 view .LVU611
 3766 0094 012B     		cmp	r3, #1
 3767 0096 3BD0     		beq	.L120
 3768              	.L115:
 124:Src/main.c    ****   {
 3769              		.loc 1 124 3 is_stmt 1 view .LVU612
 131:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 3770              		.loc 1 131 5 view .LVU613
 131:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 3771              		.loc 1 131 20 is_stmt 0 view .LVU614
 3772 0098 264B     		ldr	r3, .L122+4
 3773 009a 1B68     		ldr	r3, [r3]
 131:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 3774              		.loc 1 131 7 view .LVU615
 3775 009c 052B     		cmp	r3, #5
 3776 009e EFD0     		beq	.L112
 3777 00a0 CCE7     		b	.L121
 3778              	.L118:
ARM GAS  /tmp/ccrwQJPQ.s 			page 89


 137:Src/main.c    ****       HAL_Delay(100);
 3779              		.loc 1 137 26 discriminator 1 view .LVU616
 3780 00a2 254B     		ldr	r3, .L122+8
 3781 00a4 1B68     		ldr	r3, [r3]
 137:Src/main.c    ****       HAL_Delay(100);
 3782              		.loc 1 137 18 discriminator 1 view .LVU617
 3783 00a6 012B     		cmp	r3, #1
 3784 00a8 EED1     		bne	.L113
 138:Src/main.c    ****       stop =0;
 3785              		.loc 1 138 7 is_stmt 1 view .LVU618
 3786 00aa 6420     		movs	r0, #100
 3787 00ac FFF7FEFF 		bl	HAL_Delay
 3788              	.LVL232:
 139:Src/main.c    ****       mamboNumber = 5;
 3789              		.loc 1 139 7 view .LVU619
 139:Src/main.c    ****       mamboNumber = 5;
 3790              		.loc 1 139 12 is_stmt 0 view .LVU620
 3791 00b0 1F4B     		ldr	r3, .L122
 3792 00b2 0022     		movs	r2, #0
 3793 00b4 1A60     		str	r2, [r3]
 140:Src/main.c    ****       HAL_RTC_GetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 3794              		.loc 1 140 7 is_stmt 1 view .LVU621
 140:Src/main.c    ****       HAL_RTC_GetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 3795              		.loc 1 140 19 is_stmt 0 view .LVU622
 3796 00b6 1F4B     		ldr	r3, .L122+4
 3797 00b8 0532     		adds	r2, r2, #5
 3798 00ba 1A60     		str	r2, [r3]
 141:Src/main.c    ****       RTCtime.Hours++;
 3799              		.loc 1 141 7 is_stmt 1 view .LVU623
 3800 00bc 1F4C     		ldr	r4, .L122+12
 3801 00be 204D     		ldr	r5, .L122+16
 3802 00c0 0022     		movs	r2, #0
 3803 00c2 2100     		movs	r1, r4
 3804 00c4 2800     		movs	r0, r5
 3805 00c6 FFF7FEFF 		bl	HAL_RTC_GetTime
 3806              	.LVL233:
 142:Src/main.c    ****       HAL_RTC_SetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 3807              		.loc 1 142 7 view .LVU624
 142:Src/main.c    ****       HAL_RTC_SetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 3808              		.loc 1 142 14 is_stmt 0 view .LVU625
 3809 00ca 2378     		ldrb	r3, [r4]
 142:Src/main.c    ****       HAL_RTC_SetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 3810              		.loc 1 142 20 view .LVU626
 3811 00cc 0133     		adds	r3, r3, #1
 3812 00ce 2370     		strb	r3, [r4]
 143:Src/main.c    **** 
 3813              		.loc 1 143 7 is_stmt 1 view .LVU627
 3814 00d0 0022     		movs	r2, #0
 3815 00d2 2100     		movs	r1, r4
 3816 00d4 2800     		movs	r0, r5
 3817 00d6 FFF7FEFF 		bl	HAL_RTC_SetTime
 3818              	.LVL234:
 3819 00da D5E7     		b	.L113
 3820              	.L119:
 147:Src/main.c    ****       HAL_Delay(100);
 3821              		.loc 1 147 28 is_stmt 0 discriminator 1 view .LVU628
 3822 00dc 194B     		ldr	r3, .L122+20
ARM GAS  /tmp/ccrwQJPQ.s 			page 90


 3823 00de 1B68     		ldr	r3, [r3]
 147:Src/main.c    ****       HAL_Delay(100);
 3824              		.loc 1 147 18 discriminator 1 view .LVU629
 3825 00e0 012B     		cmp	r3, #1
 3826 00e2 D5D1     		bne	.L114
 148:Src/main.c    ****       stop =0;
 3827              		.loc 1 148 7 is_stmt 1 view .LVU630
 3828 00e4 6420     		movs	r0, #100
 3829 00e6 FFF7FEFF 		bl	HAL_Delay
 3830              	.LVL235:
 149:Src/main.c    ****       mamboNumber = 5;
 3831              		.loc 1 149 7 view .LVU631
 149:Src/main.c    ****       mamboNumber = 5;
 3832              		.loc 1 149 12 is_stmt 0 view .LVU632
 3833 00ea 114B     		ldr	r3, .L122
 3834 00ec 0022     		movs	r2, #0
 3835 00ee 1A60     		str	r2, [r3]
 150:Src/main.c    ****       HAL_RTC_GetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 3836              		.loc 1 150 7 is_stmt 1 view .LVU633
 150:Src/main.c    ****       HAL_RTC_GetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 3837              		.loc 1 150 19 is_stmt 0 view .LVU634
 3838 00f0 104B     		ldr	r3, .L122+4
 3839 00f2 0532     		adds	r2, r2, #5
 3840 00f4 1A60     		str	r2, [r3]
 151:Src/main.c    ****       RTCtime.Minutes+5;
 3841              		.loc 1 151 7 is_stmt 1 view .LVU635
 3842 00f6 114D     		ldr	r5, .L122+12
 3843 00f8 114C     		ldr	r4, .L122+16
 3844 00fa 0022     		movs	r2, #0
 3845 00fc 2900     		movs	r1, r5
 3846 00fe 2000     		movs	r0, r4
 3847 0100 FFF7FEFF 		bl	HAL_RTC_GetTime
 3848              	.LVL236:
 152:Src/main.c    ****       HAL_RTC_SetTime(&hrtc, &RTCtime, RTC_FORMAT_BIN);
 3849              		.loc 1 152 7 view .LVU636
 153:Src/main.c    **** 
 3850              		.loc 1 153 7 view .LVU637
 3851 0104 0022     		movs	r2, #0
 3852 0106 2900     		movs	r1, r5
 3853 0108 2000     		movs	r0, r4
 3854 010a FFF7FEFF 		bl	HAL_RTC_SetTime
 3855              	.LVL237:
 3856 010e BFE7     		b	.L114
 3857              	.L120:
 157:Src/main.c    ****       stop =0;
 3858              		.loc 1 157 7 view .LVU638
 3859 0110 6420     		movs	r0, #100
 3860 0112 FFF7FEFF 		bl	HAL_Delay
 3861              	.LVL238:
 158:Src/main.c    ****       mamboNumber++;
 3862              		.loc 1 158 7 view .LVU639
 158:Src/main.c    ****       mamboNumber++;
 3863              		.loc 1 158 12 is_stmt 0 view .LVU640
 3864 0116 064B     		ldr	r3, .L122
 3865 0118 0022     		movs	r2, #0
 3866 011a 1A60     		str	r2, [r3]
 159:Src/main.c    ****       if(mamboNumber > 5)
ARM GAS  /tmp/ccrwQJPQ.s 			page 91


 3867              		.loc 1 159 7 is_stmt 1 view .LVU641
 159:Src/main.c    ****       if(mamboNumber > 5)
 3868              		.loc 1 159 18 is_stmt 0 view .LVU642
 3869 011c 054A     		ldr	r2, .L122+4
 3870 011e 1368     		ldr	r3, [r2]
 3871 0120 0133     		adds	r3, r3, #1
 3872 0122 1360     		str	r3, [r2]
 160:Src/main.c    ****          mamboNumber = 0;
 3873              		.loc 1 160 7 is_stmt 1 view .LVU643
 160:Src/main.c    ****          mamboNumber = 0;
 3874              		.loc 1 160 9 is_stmt 0 view .LVU644
 3875 0124 052B     		cmp	r3, #5
 3876 0126 B7DD     		ble	.L115
 161:Src/main.c    ****     }
 3877              		.loc 1 161 10 is_stmt 1 view .LVU645
 161:Src/main.c    ****     }
 3878              		.loc 1 161 22 is_stmt 0 view .LVU646
 3879 0128 1300     		movs	r3, r2
 3880 012a 0022     		movs	r2, #0
 3881 012c 1A60     		str	r2, [r3]
 3882 012e B3E7     		b	.L115
 3883              	.L123:
 3884              		.align	2
 3885              	.L122:
 3886 0130 00000000 		.word	.LANCHOR0
 3887 0134 00000000 		.word	.LANCHOR1
 3888 0138 00000000 		.word	.LANCHOR2
 3889 013c 00000000 		.word	RTCtime
 3890 0140 00000000 		.word	hrtc
 3891 0144 00000000 		.word	.LANCHOR3
 3892              		.cfi_endproc
 3893              	.LFE50:
 3895              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 3896              		.align	1
 3897              		.global	HAL_GPIO_EXTI_Callback
 3898              		.syntax unified
 3899              		.code	16
 3900              		.thumb_func
 3901              		.fpu softvfp
 3903              	HAL_GPIO_EXTI_Callback:
 3904              	.LVL239:
 3905              	.LFB55:
 331:Src/main.c    **** 
 332:Src/main.c    **** /* USER CODE BEGIN 4 */
 333:Src/main.c    **** 
 334:Src/main.c    **** /**
 335:Src/main.c    **** * @brief Interrupt callback for GPIOs
 336:Src/main.c    **** */
 337:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 338:Src/main.c    **** {
 3906              		.loc 1 338 1 is_stmt 1 view -0
 3907              		.cfi_startproc
 3908              		@ args = 0, pretend = 0, frame = 0
 3909              		@ frame_needed = 0, uses_anonymous_args = 0
 3910              		@ link register save eliminated.
 339:Src/main.c    ****     // Mode
 340:Src/main.c    ****     if ( GPIO_Pin == GPIO_PIN_8) {
ARM GAS  /tmp/ccrwQJPQ.s 			page 92


 3911              		.loc 1 340 5 view .LVU648
 3912              		.loc 1 340 8 is_stmt 0 view .LVU649
 3913 0000 8023     		movs	r3, #128
 3914 0002 5B00     		lsls	r3, r3, #1
 3915 0004 9842     		cmp	r0, r3
 3916 0006 09D0     		beq	.L128
 341:Src/main.c    ****       stop = 1;
 342:Src/main.c    ****     }
 343:Src/main.c    ****     // Minute  
 344:Src/main.c    ****     else if ( GPIO_Pin == GPIO_PIN_6) {
 3917              		.loc 1 344 10 is_stmt 1 view .LVU650
 3918              		.loc 1 344 13 is_stmt 0 view .LVU651
 3919 0008 4028     		cmp	r0, #64
 3920 000a 0BD0     		beq	.L129
 345:Src/main.c    ****       stop = 1;
 346:Src/main.c    ****       minute = 1;
 347:Src/main.c    ****     }
 348:Src/main.c    ****     // Hour 
 349:Src/main.c    ****     else if ( GPIO_Pin == GPIO_PIN_5) {
 3921              		.loc 1 349 10 is_stmt 1 view .LVU652
 3922              		.loc 1 349 13 is_stmt 0 view .LVU653
 3923 000c 2028     		cmp	r0, #32
 3924 000e 08D1     		bne	.L124
 350:Src/main.c    ****       stop = 1;
 3925              		.loc 1 350 7 is_stmt 1 view .LVU654
 3926              		.loc 1 350 12 is_stmt 0 view .LVU655
 3927 0010 0123     		movs	r3, #1
 3928 0012 074A     		ldr	r2, .L130
 3929 0014 1360     		str	r3, [r2]
 351:Src/main.c    ****       hour = 1;
 3930              		.loc 1 351 7 is_stmt 1 view .LVU656
 3931              		.loc 1 351 12 is_stmt 0 view .LVU657
 3932 0016 074A     		ldr	r2, .L130+4
 3933 0018 1360     		str	r3, [r2]
 352:Src/main.c    ****     }
 353:Src/main.c    **** 
 354:Src/main.c    **** }
 3934              		.loc 1 354 1 view .LVU658
 3935 001a 02E0     		b	.L124
 3936              	.L128:
 341:Src/main.c    ****     }
 3937              		.loc 1 341 7 is_stmt 1 view .LVU659
 341:Src/main.c    ****     }
 3938              		.loc 1 341 12 is_stmt 0 view .LVU660
 3939 001c 044B     		ldr	r3, .L130
 3940 001e 0122     		movs	r2, #1
 3941 0020 1A60     		str	r2, [r3]
 3942              	.L124:
 3943              		.loc 1 354 1 view .LVU661
 3944              		@ sp needed
 3945 0022 7047     		bx	lr
 3946              	.L129:
 345:Src/main.c    ****       minute = 1;
 3947              		.loc 1 345 7 is_stmt 1 view .LVU662
 345:Src/main.c    ****       minute = 1;
 3948              		.loc 1 345 12 is_stmt 0 view .LVU663
 3949 0024 0123     		movs	r3, #1
ARM GAS  /tmp/ccrwQJPQ.s 			page 93


 3950 0026 024A     		ldr	r2, .L130
 3951 0028 1360     		str	r3, [r2]
 346:Src/main.c    ****     }
 3952              		.loc 1 346 7 is_stmt 1 view .LVU664
 346:Src/main.c    ****     }
 3953              		.loc 1 346 14 is_stmt 0 view .LVU665
 3954 002a 034A     		ldr	r2, .L130+8
 3955 002c 1360     		str	r3, [r2]
 3956 002e F8E7     		b	.L124
 3957              	.L131:
 3958              		.align	2
 3959              	.L130:
 3960 0030 00000000 		.word	.LANCHOR0
 3961 0034 00000000 		.word	.LANCHOR2
 3962 0038 00000000 		.word	.LANCHOR3
 3963              		.cfi_endproc
 3964              	.LFE55:
 3966              		.section	.text.Error_Handler,"ax",%progbits
 3967              		.align	1
 3968              		.global	Error_Handler
 3969              		.syntax unified
 3970              		.code	16
 3971              		.thumb_func
 3972              		.fpu softvfp
 3974              	Error_Handler:
 3975              	.LFB56:
 355:Src/main.c    **** 
 356:Src/main.c    **** /* USER CODE END 4 */
 357:Src/main.c    **** 
 358:Src/main.c    **** /**
 359:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 360:Src/main.c    ****   * @retval None
 361:Src/main.c    ****   */
 362:Src/main.c    **** void Error_Handler(void)
 363:Src/main.c    **** {
 3976              		.loc 1 363 1 is_stmt 1 view -0
 3977              		.cfi_startproc
 3978              		@ args = 0, pretend = 0, frame = 0
 3979              		@ frame_needed = 0, uses_anonymous_args = 0
 3980              		@ link register save eliminated.
 364:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 365:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 368:Src/main.c    **** }
 3981              		.loc 1 368 1 view .LVU667
 3982              		@ sp needed
 3983 0000 7047     		bx	lr
 3984              		.cfi_endproc
 3985              	.LFE56:
 3987              		.comm	RTCtime,20,4
 3988              		.global	minute
 3989              		.global	hour
 3990              		.global	stop
 3991              		.global	mamboNumber
 3992              		.comm	htim1,64,4
 3993              		.comm	hrtc,32,4
ARM GAS  /tmp/ccrwQJPQ.s 			page 94


 3994              		.section	.bss.hour,"aw",%nobits
 3995              		.align	2
 3996              		.set	.LANCHOR2,. + 0
 3999              	hour:
 4000 0000 00000000 		.space	4
 4001              		.section	.bss.minute,"aw",%nobits
 4002              		.align	2
 4003              		.set	.LANCHOR3,. + 0
 4006              	minute:
 4007 0000 00000000 		.space	4
 4008              		.section	.bss.stop,"aw",%nobits
 4009              		.align	2
 4010              		.set	.LANCHOR0,. + 0
 4013              	stop:
 4014 0000 00000000 		.space	4
 4015              		.section	.data.mamboNumber,"aw"
 4016              		.align	2
 4017              		.set	.LANCHOR1,. + 0
 4020              	mamboNumber:
 4021 0000 04000000 		.word	4
 4022              		.text
 4023              	.Letext0:
 4024              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4025              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4026              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 4027              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 4028              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 4029              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 4030              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 4031              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 4032              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 4033              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rtc.h"
 4034              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 4035              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 4036              		.file 15 "/usr/arm-none-eabi/include/sys/lock.h"
 4037              		.file 16 "/usr/arm-none-eabi/include/sys/_types.h"
 4038              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 4039              		.file 18 "/usr/arm-none-eabi/include/sys/reent.h"
 4040              		.file 19 "/usr/arm-none-eabi/include/stdlib.h"
 4041              		.file 20 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 4042              		.file 21 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 4043              		.file 22 "Inc/usb_device.h"
 4044              		.file 23 "<built-in>"
ARM GAS  /tmp/ccrwQJPQ.s 			page 95


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccrwQJPQ.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccrwQJPQ.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccrwQJPQ.s:132    .text.MX_GPIO_Init:0000000000000070 $d
     /tmp/ccrwQJPQ.s:139    .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccrwQJPQ.s:145    .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccrwQJPQ.s:193    .text.MX_RTC_Init:0000000000000024 $d
                            *COM*:0000000000000020 hrtc
     /tmp/ccrwQJPQ.s:199    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccrwQJPQ.s:205    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccrwQJPQ.s:293    .text.MX_TIM1_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccrwQJPQ.s:299    .text.clock:0000000000000000 $t
     /tmp/ccrwQJPQ.s:306    .text.clock:0000000000000000 clock
     /tmp/ccrwQJPQ.s:329    .text.charlie:0000000000000000 $t
     /tmp/ccrwQJPQ.s:336    .text.charlie:0000000000000000 charlie
     /tmp/ccrwQJPQ.s:909    .text.dance:0000000000000000 $t
     /tmp/ccrwQJPQ.s:916    .text.dance:0000000000000000 dance
     /tmp/ccrwQJPQ.s:1622   .text.dance:0000000000000494 $d
     /tmp/ccrwQJPQ.s:1625   .text.dance:0000000000000498 $t
     /tmp/ccrwQJPQ.s:1682   .text.dance:00000000000004f8 $d
     /tmp/ccrwQJPQ.s:1685   .text.dance:00000000000004fc $t
     /tmp/ccrwQJPQ.s:2271   .text.dance:0000000000000904 $d
     /tmp/ccrwQJPQ.s:2274   .text.dance:0000000000000908 $t
     /tmp/ccrwQJPQ.s:2910   .text.dance:0000000000000cf4 $d
     /tmp/ccrwQJPQ.s:2918   .text.dance:0000000000000cfc $t
     /tmp/ccrwQJPQ.s:3141   .text.dance:0000000000000e3c $d
     /tmp/ccrwQJPQ.s:3148   .text.initA:0000000000000000 $t
     /tmp/ccrwQJPQ.s:3155   .text.initA:0000000000000000 initA
     /tmp/ccrwQJPQ.s:3239   .text.initA:000000000000004c $d
     /tmp/ccrwQJPQ.s:3244   .text.initB:0000000000000000 $t
     /tmp/ccrwQJPQ.s:3251   .text.initB:0000000000000000 initB
     /tmp/ccrwQJPQ.s:3336   .text.initB:0000000000000050 $d
     /tmp/ccrwQJPQ.s:3341   .text.initC:0000000000000000 $t
     /tmp/ccrwQJPQ.s:3348   .text.initC:0000000000000000 initC
     /tmp/ccrwQJPQ.s:3433   .text.initC:0000000000000050 $d
     /tmp/ccrwQJPQ.s:3438   .text.initD:0000000000000000 $t
     /tmp/ccrwQJPQ.s:3445   .text.initD:0000000000000000 initD
     /tmp/ccrwQJPQ.s:3530   .text.initD:0000000000000050 $d
     /tmp/ccrwQJPQ.s:3535   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccrwQJPQ.s:3542   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccrwQJPQ.s:3641   .text.main:0000000000000000 $t
     /tmp/ccrwQJPQ.s:3648   .text.main:0000000000000000 main
     /tmp/ccrwQJPQ.s:3886   .text.main:0000000000000130 $d
                            *COM*:0000000000000014 RTCtime
     /tmp/ccrwQJPQ.s:3896   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccrwQJPQ.s:3903   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccrwQJPQ.s:3960   .text.HAL_GPIO_EXTI_Callback:0000000000000030 $d
     /tmp/ccrwQJPQ.s:3967   .text.Error_Handler:0000000000000000 $t
     /tmp/ccrwQJPQ.s:3974   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccrwQJPQ.s:4006   .bss.minute:0000000000000000 minute
     /tmp/ccrwQJPQ.s:3999   .bss.hour:0000000000000000 hour
     /tmp/ccrwQJPQ.s:4013   .bss.stop:0000000000000000 stop
     /tmp/ccrwQJPQ.s:4020   .data.mamboNumber:0000000000000000 mamboNumber
     /tmp/ccrwQJPQ.s:3995   .bss.hour:0000000000000000 $d
     /tmp/ccrwQJPQ.s:4002   .bss.minute:0000000000000000 $d
ARM GAS  /tmp/ccrwQJPQ.s 			page 96


     /tmp/ccrwQJPQ.s:4009   .bss.stop:0000000000000000 $d
     /tmp/ccrwQJPQ.s:4016   .data.mamboNumber:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RTC_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_GPIO_DeInit
HAL_GPIO_WritePin
HAL_Delay
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_RTC_GetTime
HAL_RTC_SetTime
