ARM GAS  /tmp/cckp0GEV.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB55:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usb_device.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "charlie.c"
  28:Src/main.c    **** //#include "semihosting.c"
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/cckp0GEV.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** RTC_HandleTypeDef hrtc;
  48:Src/main.c    **** 
  49:Src/main.c    **** TIM_HandleTypeDef htim1;
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** //void dance();
  54:Src/main.c    **** 
  55:Src/main.c    **** // Keep track of what dance we are on
  56:Src/main.c    **** int mamboNumber = 4;
  57:Src/main.c    **** // Stopper for the inturrupt funciton
  58:Src/main.c    **** int stopFlag = 0;
  59:Src/main.c    **** // Flag to switch to time 
  60:Src/main.c    **** int hourFlag= 0;
  61:Src/main.c    **** int minuteFlag = 0;
  62:Src/main.c    **** 
  63:Src/main.c    **** // RTC defs
  64:Src/main.c    **** RTC_TimeTypeDef RTCtime;
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PV */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  69:Src/main.c    **** void SystemClock_Config(void);
  70:Src/main.c    **** static void MX_GPIO_Init(void);
  71:Src/main.c    **** static void MX_RTC_Init(void);
  72:Src/main.c    **** static void MX_TIM1_Init(void);
  73:Src/main.c    **** /* USER CODE BEGIN PFP */
  74:Src/main.c    **** 
  75:Src/main.c    **** void dance();
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  79:Src/main.c    **** /* USER CODE BEGIN 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /**
  84:Src/main.c    ****   * @brief  The application entry point.
  85:Src/main.c    ****   * @retval int
  86:Src/main.c    ****   */
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
  90:Src/main.c    **** 
ARM GAS  /tmp/cckp0GEV.s 			page 3


  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Configure the system clock */
 103:Src/main.c    ****   SystemClock_Config();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Initialize all configured peripherals */
 110:Src/main.c    ****   MX_GPIO_Init();
 111:Src/main.c    ****   MX_USB_DEVICE_Init();
 112:Src/main.c    ****   MX_RTC_Init();
 113:Src/main.c    ****   MX_TIM1_Init();
 114:Src/main.c    ****   /* USER CODE BEGIN 2 */
 115:Src/main.c    ****   GPIO_InitTypeDef PinA = initA();
 116:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 117:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 118:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 119:Src/main.c    **** 
 120:Src/main.c    ****   stopFlag = 0;
 121:Src/main.c    ****   int newMinutes = 0;
 122:Src/main.c    ****   int newHours = 0;
 123:Src/main.c    **** 
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE END 2 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Infinite loop */
 128:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 129:Src/main.c    ****   while (1)
 130:Src/main.c    ****   {
 131:Src/main.c    ****     /* USER CODE END WHILE */
 132:Src/main.c    **** 
 133:Src/main.c    ****     /* USER CODE BEGIN 3 */
 134:Src/main.c    **** 
 135:Src/main.c    ****     // Ladies and gentlemen, this is Mambo Number Five
 136:Src/main.c    ****     if(mamboNumber == 5)
 137:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 138:Src/main.c    **** 
 139:Src/main.c    ****    // if(mamboNumber == 6)
 140:Src/main.c    ****    //   trySleep(PinA, PinB, PinC, PinD, hrtc);
 141:Src/main.c    **** 
 142:Src/main.c    ****     // Or not...
 143:Src/main.c    ****     else
 144:Src/main.c    ****        dance(PinA, PinB, PinC, PinD, mamboNumber);
 145:Src/main.c    **** 
 146:Src/main.c    **** 
 147:Src/main.c    ****     // Increase hour by one
ARM GAS  /tmp/cckp0GEV.s 			page 4


 148:Src/main.c    ****     if(stopFlag == 1 && hourFlag == 1){
 149:Src/main.c    ****       HAL_StatusTypeDef res;
 150:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 151:Src/main.c    ****       RTC_TimeTypeDef newTime;
 152:Src/main.c    ****       RTC_DateTypeDef currentDate;
 153:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 154:Src/main.c    ****       memset(&newTime, 0, sizeof(newTime));
 155:Src/main.c    ****       memset(&currentTime, 0, sizeof(currentTime));
 156:Src/main.c    **** 
 157:Src/main.c    ****       //say("In hour button\n");
 158:Src/main.c    ****       HAL_Delay(100);
 159:Src/main.c    **** 
 160:Src/main.c    ****       
 161:Src/main.c    ****       char buf[30];
 162:Src/main.c    ****       
 163:Src/main.c    ****       // Clear out our flags
 164:Src/main.c    ****       stopFlag =0;
 165:Src/main.c    ****       hourFlag =0;
 166:Src/main.c    ****       mamboNumber = 5;
 167:Src/main.c    **** 
 168:Src/main.c    ****       
 169:Src/main.c    ****       res = HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 170:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 171:Src/main.c    ****       // for rtc time dont unlock...
 172:Src/main.c    ****       // You dont want to know how long I fought this
 173:Src/main.c    ****       res = HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 174:Src/main.c    ****       newHours = currentTime.Hours;
 175:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 176:Src/main.c    ****       //say(buf);
 177:Src/main.c    **** 
 178:Src/main.c    ****       if(newHours >12)
 179:Src/main.c    ****          newTime.Hours = 1;
 180:Src/main.c    ****       else
 181:Src/main.c    ****          newTime.Hours = ++newHours;
 182:Src/main.c    **** 
 183:Src/main.c    ****       newTime.Minutes = 0; 
 184:Src/main.c    ****       newTime.Seconds = 0; 
 185:Src/main.c    **** 
 186:Src/main.c    **** 
 187:Src/main.c    ****       res = HAL_RTC_SetTime(&hrtc, &newTime, RTC_FORMAT_BIN);
 188:Src/main.c    ****       if(res != 0){
 189:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 190:Src/main.c    ****          //say(buf);
 191:Src/main.c    ****       }
 192:Src/main.c    **** 
 193:Src/main.c    ****     }
 194:Src/main.c    **** 
 195:Src/main.c    ****     // Increase minute by 10
 196:Src/main.c    ****     if(stopFlag == 1 && minuteFlag == 1){
 197:Src/main.c    ****       HAL_StatusTypeDef res;
 198:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 199:Src/main.c    ****       RTC_TimeTypeDef newTime;
 200:Src/main.c    ****       RTC_DateTypeDef currentDate;
 201:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 202:Src/main.c    ****       //say("In minute button\n");
 203:Src/main.c    ****       HAL_Delay(100);
 204:Src/main.c    ****       char buf[30];
ARM GAS  /tmp/cckp0GEV.s 			page 5


 205:Src/main.c    **** 
 206:Src/main.c    ****       // Clear out flags
 207:Src/main.c    ****       stopFlag =0;
 208:Src/main.c    ****       minuteFlag =0;
 209:Src/main.c    ****       mamboNumber = 5;
 210:Src/main.c    **** 
 211:Src/main.c    ****       res = HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 212:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 213:Src/main.c    ****       // for rtc time dont unlock...
 214:Src/main.c    ****       // You dont want to know how long I fought this
 215:Src/main.c    ****       res = HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 216:Src/main.c    **** 
 217:Src/main.c    ****       newMinutes = currentTime.Minutes;
 218:Src/main.c    **** 
 219:Src/main.c    ****       newTime.Seconds = 0; 
 220:Src/main.c    ****       
 221:Src/main.c    ****       if(newMinutes < 55){
 222:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 223:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 224:Src/main.c    ****       }
 225:Src/main.c    ****       else{
 226:Src/main.c    ****          newTime.Minutes = 0;
 227:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 228:Src/main.c    ****       }
 229:Src/main.c    **** 
 230:Src/main.c    ****       sprintf(buf,"minute is %d \n", currentTime.Minutes);
 231:Src/main.c    ****       //say(buf);
 232:Src/main.c    **** 
 233:Src/main.c    ****       res = HAL_RTC_SetTime(&hrtc, &newTime, RTC_FORMAT_BIN);
 234:Src/main.c    ****       if(res != 0){
 235:Src/main.c    ****          sprintf(buf,"minute time error %d \n", res);
 236:Src/main.c    ****          //say(buf);
 237:Src/main.c    ****       }
 238:Src/main.c    ****     }
 239:Src/main.c    **** 
 240:Src/main.c    ****     // Switch mode
 241:Src/main.c    ****     if(stopFlag == 1){
 242:Src/main.c    ****     /*
 243:Src/main.c    ****       char buf[20];
 244:Src/main.c    ****       sprintf(buf,"We are in mode %d \n", mamboNumber);
 245:Src/main.c    ****       say(buf);
 246:Src/main.c    ****       */
 247:Src/main.c    **** 
 248:Src/main.c    ****       HAL_Delay(100);
 249:Src/main.c    ****       stopFlag =0;
 250:Src/main.c    ****       mamboNumber++;
 251:Src/main.c    ****       if(mamboNumber > 5)
 252:Src/main.c    ****          mamboNumber = 0;
 253:Src/main.c    ****     }
 254:Src/main.c    ****   }
 255:Src/main.c    ****   /* USER CODE END 3 */
 256:Src/main.c    **** }
 257:Src/main.c    **** 
 258:Src/main.c    **** /**
 259:Src/main.c    ****   * @brief System Clock Configuration
 260:Src/main.c    ****   * @retval None
 261:Src/main.c    ****   */
ARM GAS  /tmp/cckp0GEV.s 			page 6


 262:Src/main.c    **** void SystemClock_Config(void)
 263:Src/main.c    **** {
 264:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 265:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 266:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 267:Src/main.c    **** 
 268:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 269:Src/main.c    ****   */
 270:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_LSI;
 271:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 272:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 273:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 274:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 275:Src/main.c    ****   {
 276:Src/main.c    ****     Error_Handler();
 277:Src/main.c    ****   }
 278:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 279:Src/main.c    ****   */
 280:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 281:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 282:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 283:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 284:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 285:Src/main.c    **** 
 286:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 287:Src/main.c    ****   {
 288:Src/main.c    ****     Error_Handler();
 289:Src/main.c    ****   }
 290:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_RTC;
 291:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 292:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 293:Src/main.c    **** 
 294:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 295:Src/main.c    ****   {
 296:Src/main.c    ****     Error_Handler();
 297:Src/main.c    ****   }
 298:Src/main.c    **** }
 299:Src/main.c    **** 
 300:Src/main.c    **** /**
 301:Src/main.c    ****   * @brief RTC Initialization Function
 302:Src/main.c    ****   * @param None
 303:Src/main.c    ****   * @retval None
 304:Src/main.c    ****   */
 305:Src/main.c    **** static void MX_RTC_Init(void)
 306:Src/main.c    **** {
 307:Src/main.c    **** 
 308:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 309:Src/main.c    **** 
 310:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 311:Src/main.c    **** 
 312:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 313:Src/main.c    **** 
 314:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 315:Src/main.c    ****   /** Initialize RTC Only 
 316:Src/main.c    ****   */
 317:Src/main.c    ****   hrtc.Instance = RTC;
 318:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
ARM GAS  /tmp/cckp0GEV.s 			page 7


 319:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 320:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 321:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 322:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 323:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 324:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 325:Src/main.c    ****   {
 326:Src/main.c    ****     Error_Handler();
 327:Src/main.c    ****   }
 328:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 2 */
 329:Src/main.c    **** 
 330:Src/main.c    ****   /* USER CODE END RTC_Init 2 */
 331:Src/main.c    **** 
 332:Src/main.c    **** }
 333:Src/main.c    **** 
 334:Src/main.c    **** /**
 335:Src/main.c    ****   * @brief TIM1 Initialization Function
 336:Src/main.c    ****   * @param None
 337:Src/main.c    ****   * @retval None
 338:Src/main.c    ****   */
 339:Src/main.c    **** static void MX_TIM1_Init(void)
 340:Src/main.c    **** {
 341:Src/main.c    **** 
 342:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 343:Src/main.c    **** 
 344:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 345:Src/main.c    **** 
 346:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 347:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 352:Src/main.c    ****   htim1.Instance = TIM1;
 353:Src/main.c    ****   htim1.Init.Prescaler = 0;
 354:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 355:Src/main.c    ****   htim1.Init.Period = 0;
 356:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 357:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 358:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 359:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 360:Src/main.c    ****   {
 361:Src/main.c    ****     Error_Handler();
 362:Src/main.c    ****   }
 363:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 364:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 365:Src/main.c    ****   {
 366:Src/main.c    ****     Error_Handler();
 367:Src/main.c    ****   }
 368:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 369:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 370:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 371:Src/main.c    ****   {
 372:Src/main.c    ****     Error_Handler();
 373:Src/main.c    ****   }
 374:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 375:Src/main.c    **** 
ARM GAS  /tmp/cckp0GEV.s 			page 8


 376:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 377:Src/main.c    **** 
 378:Src/main.c    **** }
 379:Src/main.c    **** 
 380:Src/main.c    **** /**
 381:Src/main.c    ****   * @brief GPIO Initialization Function
 382:Src/main.c    ****   * @param None
 383:Src/main.c    ****   * @retval None
 384:Src/main.c    ****   */
 385:Src/main.c    **** static void MX_GPIO_Init(void)
 386:Src/main.c    **** {
  26              		.loc 1 386 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 387:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 387 3 view .LVU1
  41              		.loc 1 387 20 is_stmt 0 view .LVU2
  42 0004 1422     		movs	r2, #20
  43 0006 0021     		movs	r1, #0
  44 0008 03A8     		add	r0, sp, #12
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 388:Src/main.c    **** 
 389:Src/main.c    ****   /* GPIO Ports Clock Enable */
 390:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  47              		.loc 1 390 3 is_stmt 1 view .LVU3
  48              	.LBB2:
  49              		.loc 1 390 3 view .LVU4
  50              		.loc 1 390 3 view .LVU5
  51 000e 204B     		ldr	r3, .L2
  52 0010 5969     		ldr	r1, [r3, #20]
  53 0012 8020     		movs	r0, #128
  54 0014 C002     		lsls	r0, r0, #11
  55 0016 0143     		orrs	r1, r0
  56 0018 5961     		str	r1, [r3, #20]
  57              		.loc 1 390 3 view .LVU6
  58 001a 5A69     		ldr	r2, [r3, #20]
  59 001c 0240     		ands	r2, r0
  60 001e 0192     		str	r2, [sp, #4]
  61              		.loc 1 390 3 view .LVU7
  62 0020 019A     		ldr	r2, [sp, #4]
  63              	.LBE2:
  64              		.loc 1 390 3 view .LVU8
 391:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 391 3 view .LVU9
  66              	.LBB3:
ARM GAS  /tmp/cckp0GEV.s 			page 9


  67              		.loc 1 391 3 view .LVU10
  68              		.loc 1 391 3 view .LVU11
  69 0022 5A69     		ldr	r2, [r3, #20]
  70 0024 8021     		movs	r1, #128
  71 0026 8902     		lsls	r1, r1, #10
  72 0028 0A43     		orrs	r2, r1
  73 002a 5A61     		str	r2, [r3, #20]
  74              		.loc 1 391 3 view .LVU12
  75 002c 5B69     		ldr	r3, [r3, #20]
  76 002e 0B40     		ands	r3, r1
  77 0030 0293     		str	r3, [sp, #8]
  78              		.loc 1 391 3 view .LVU13
  79 0032 029B     		ldr	r3, [sp, #8]
  80              	.LBE3:
  81              		.loc 1 391 3 view .LVU14
 392:Src/main.c    **** 
 393:Src/main.c    ****   /*Configure GPIO pin Output Level */
 394:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, A_Pin|B_Pin|C_Pin|D_Pin, GPIO_PIN_RESET);
  82              		.loc 1 394 3 view .LVU15
  83 0034 9024     		movs	r4, #144
  84 0036 E405     		lsls	r4, r4, #23
  85 0038 0022     		movs	r2, #0
  86 003a 0F21     		movs	r1, #15
  87 003c 2000     		movs	r0, r4
  88 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  89              	.LVL1:
 395:Src/main.c    **** 
 396:Src/main.c    ****   /*Configure GPIO pin : Mode_Pin */
 397:Src/main.c    ****   GPIO_InitStruct.Pin = Mode_Pin;
  90              		.loc 1 397 3 view .LVU16
  91              		.loc 1 397 23 is_stmt 0 view .LVU17
  92 0042 8023     		movs	r3, #128
  93 0044 5B00     		lsls	r3, r3, #1
  94 0046 0393     		str	r3, [sp, #12]
 398:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  95              		.loc 1 398 3 is_stmt 1 view .LVU18
  96              		.loc 1 398 24 is_stmt 0 view .LVU19
  97 0048 124E     		ldr	r6, .L2+4
  98 004a 0496     		str	r6, [sp, #16]
 399:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
  99              		.loc 1 399 3 is_stmt 1 view .LVU20
 100              		.loc 1 399 24 is_stmt 0 view .LVU21
 101 004c 0125     		movs	r5, #1
 102 004e 0595     		str	r5, [sp, #20]
 400:Src/main.c    ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 103              		.loc 1 400 3 is_stmt 1 view .LVU22
 104 0050 03A9     		add	r1, sp, #12
 105 0052 1148     		ldr	r0, .L2+8
 106 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL2:
 401:Src/main.c    **** 
 402:Src/main.c    ****   /*Configure GPIO pins : A_Pin B_Pin C_Pin D_Pin */
 403:Src/main.c    ****   GPIO_InitStruct.Pin = A_Pin|B_Pin|C_Pin|D_Pin;
 108              		.loc 1 403 3 view .LVU23
 109              		.loc 1 403 23 is_stmt 0 view .LVU24
 110 0058 0F23     		movs	r3, #15
 111 005a 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cckp0GEV.s 			page 10


 404:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 112              		.loc 1 404 3 is_stmt 1 view .LVU25
 113              		.loc 1 404 24 is_stmt 0 view .LVU26
 114 005c 0495     		str	r5, [sp, #16]
 405:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 115              		.loc 1 405 3 is_stmt 1 view .LVU27
 116              		.loc 1 405 24 is_stmt 0 view .LVU28
 117 005e 0023     		movs	r3, #0
 118 0060 0593     		str	r3, [sp, #20]
 406:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119              		.loc 1 406 3 is_stmt 1 view .LVU29
 120              		.loc 1 406 25 is_stmt 0 view .LVU30
 121 0062 0693     		str	r3, [sp, #24]
 407:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 122              		.loc 1 407 3 is_stmt 1 view .LVU31
 123 0064 03A9     		add	r1, sp, #12
 124 0066 2000     		movs	r0, r4
 125 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL3:
 408:Src/main.c    **** 
 409:Src/main.c    ****   /*Configure GPIO pins : Hour_Pin Minute_Pin */
 410:Src/main.c    ****   GPIO_InitStruct.Pin = Hour_Pin|Minute_Pin;
 127              		.loc 1 410 3 view .LVU32
 128              		.loc 1 410 23 is_stmt 0 view .LVU33
 129 006c 6023     		movs	r3, #96
 130 006e 0393     		str	r3, [sp, #12]
 411:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 131              		.loc 1 411 3 is_stmt 1 view .LVU34
 132              		.loc 1 411 24 is_stmt 0 view .LVU35
 133 0070 0496     		str	r6, [sp, #16]
 412:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 134              		.loc 1 412 3 is_stmt 1 view .LVU36
 135              		.loc 1 412 24 is_stmt 0 view .LVU37
 136 0072 0595     		str	r5, [sp, #20]
 413:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 413 3 is_stmt 1 view .LVU38
 138 0074 03A9     		add	r1, sp, #12
 139 0076 2000     		movs	r0, r4
 140 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL4:
 414:Src/main.c    **** 
 415:Src/main.c    ****   /* EXTI interrupt init*/
 416:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 142              		.loc 1 416 3 view .LVU39
 143 007c 0022     		movs	r2, #0
 144 007e 0021     		movs	r1, #0
 145 0080 0720     		movs	r0, #7
 146 0082 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 147              	.LVL5:
 417:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 148              		.loc 1 417 3 view .LVU40
 149 0086 0720     		movs	r0, #7
 150 0088 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 151              	.LVL6:
 418:Src/main.c    **** 
 419:Src/main.c    **** }
 152              		.loc 1 419 1 is_stmt 0 view .LVU41
ARM GAS  /tmp/cckp0GEV.s 			page 11


 153 008c 08B0     		add	sp, sp, #32
 154              		@ sp needed
 155 008e 70BD     		pop	{r4, r5, r6, pc}
 156              	.L3:
 157              		.align	2
 158              	.L2:
 159 0090 00100240 		.word	1073876992
 160 0094 00002110 		.word	270598144
 161 0098 00040048 		.word	1207960576
 162              		.cfi_endproc
 163              	.LFE55:
 165              		.section	.text.MX_RTC_Init,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.code	16
 169              		.thumb_func
 170              		.fpu softvfp
 172              	MX_RTC_Init:
 173              	.LFB53:
 306:Src/main.c    **** 
 174              		.loc 1 306 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 10B5     		push	{r4, lr}
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
 317:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 183              		.loc 1 317 3 view .LVU43
 317:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 184              		.loc 1 317 17 is_stmt 0 view .LVU44
 185 0002 0848     		ldr	r0, .L5
 186 0004 084B     		ldr	r3, .L5+4
 187 0006 0360     		str	r3, [r0]
 318:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 188              		.loc 1 318 3 is_stmt 1 view .LVU45
 318:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 189              		.loc 1 318 24 is_stmt 0 view .LVU46
 190 0008 4023     		movs	r3, #64
 191 000a 4360     		str	r3, [r0, #4]
 319:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 192              		.loc 1 319 3 is_stmt 1 view .LVU47
 319:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 193              		.loc 1 319 26 is_stmt 0 view .LVU48
 194 000c 3F33     		adds	r3, r3, #63
 195 000e 8360     		str	r3, [r0, #8]
 320:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 196              		.loc 1 320 3 is_stmt 1 view .LVU49
 320:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 197              		.loc 1 320 25 is_stmt 0 view .LVU50
 198 0010 8033     		adds	r3, r3, #128
 199 0012 C360     		str	r3, [r0, #12]
 321:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 200              		.loc 1 321 3 is_stmt 1 view .LVU51
 321:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
ARM GAS  /tmp/cckp0GEV.s 			page 12


 201              		.loc 1 321 20 is_stmt 0 view .LVU52
 202 0014 0023     		movs	r3, #0
 203 0016 0361     		str	r3, [r0, #16]
 322:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 204              		.loc 1 322 3 is_stmt 1 view .LVU53
 322:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 205              		.loc 1 322 28 is_stmt 0 view .LVU54
 206 0018 4361     		str	r3, [r0, #20]
 323:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 207              		.loc 1 323 3 is_stmt 1 view .LVU55
 323:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 208              		.loc 1 323 24 is_stmt 0 view .LVU56
 209 001a 8361     		str	r3, [r0, #24]
 324:Src/main.c    ****   {
 210              		.loc 1 324 3 is_stmt 1 view .LVU57
 324:Src/main.c    ****   {
 211              		.loc 1 324 7 is_stmt 0 view .LVU58
 212 001c FFF7FEFF 		bl	HAL_RTC_Init
 213              	.LVL7:
 332:Src/main.c    **** 
 214              		.loc 1 332 1 view .LVU59
 215              		@ sp needed
 216 0020 10BD     		pop	{r4, pc}
 217              	.L6:
 218 0022 C046     		.align	2
 219              	.L5:
 220 0024 00000000 		.word	hrtc
 221 0028 00280040 		.word	1073752064
 222              		.cfi_endproc
 223              	.LFE53:
 225              		.section	.text.MX_TIM1_Init,"ax",%progbits
 226              		.align	1
 227              		.syntax unified
 228              		.code	16
 229              		.thumb_func
 230              		.fpu softvfp
 232              	MX_TIM1_Init:
 233              	.LFB54:
 340:Src/main.c    **** 
 234              		.loc 1 340 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 24
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 30B5     		push	{r4, r5, lr}
 239              	.LCFI3:
 240              		.cfi_def_cfa_offset 12
 241              		.cfi_offset 4, -12
 242              		.cfi_offset 5, -8
 243              		.cfi_offset 14, -4
 244 0002 87B0     		sub	sp, sp, #28
 245              	.LCFI4:
 246              		.cfi_def_cfa_offset 40
 346:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 247              		.loc 1 346 3 view .LVU61
 346:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 248              		.loc 1 346 26 is_stmt 0 view .LVU62
 249 0004 1022     		movs	r2, #16
ARM GAS  /tmp/cckp0GEV.s 			page 13


 250 0006 0021     		movs	r1, #0
 251 0008 02A8     		add	r0, sp, #8
 252 000a FFF7FEFF 		bl	memset
 253              	.LVL8:
 347:Src/main.c    **** 
 254              		.loc 1 347 3 is_stmt 1 view .LVU63
 347:Src/main.c    **** 
 255              		.loc 1 347 27 is_stmt 0 view .LVU64
 256 000e 0822     		movs	r2, #8
 257 0010 0021     		movs	r1, #0
 258 0012 6846     		mov	r0, sp
 259 0014 FFF7FEFF 		bl	memset
 260              	.LVL9:
 352:Src/main.c    ****   htim1.Init.Prescaler = 0;
 261              		.loc 1 352 3 is_stmt 1 view .LVU65
 352:Src/main.c    ****   htim1.Init.Prescaler = 0;
 262              		.loc 1 352 18 is_stmt 0 view .LVU66
 263 0018 0D4C     		ldr	r4, .L8
 264 001a 0E4B     		ldr	r3, .L8+4
 265 001c 2360     		str	r3, [r4]
 353:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 266              		.loc 1 353 3 is_stmt 1 view .LVU67
 353:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 267              		.loc 1 353 24 is_stmt 0 view .LVU68
 268 001e 0025     		movs	r5, #0
 269 0020 6560     		str	r5, [r4, #4]
 354:Src/main.c    ****   htim1.Init.Period = 0;
 270              		.loc 1 354 3 is_stmt 1 view .LVU69
 354:Src/main.c    ****   htim1.Init.Period = 0;
 271              		.loc 1 354 26 is_stmt 0 view .LVU70
 272 0022 A560     		str	r5, [r4, #8]
 355:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 273              		.loc 1 355 3 is_stmt 1 view .LVU71
 355:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 274              		.loc 1 355 21 is_stmt 0 view .LVU72
 275 0024 E560     		str	r5, [r4, #12]
 356:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 276              		.loc 1 356 3 is_stmt 1 view .LVU73
 356:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 277              		.loc 1 356 28 is_stmt 0 view .LVU74
 278 0026 2561     		str	r5, [r4, #16]
 357:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 279              		.loc 1 357 3 is_stmt 1 view .LVU75
 357:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 280              		.loc 1 357 32 is_stmt 0 view .LVU76
 281 0028 6561     		str	r5, [r4, #20]
 358:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 282              		.loc 1 358 3 is_stmt 1 view .LVU77
 358:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 283              		.loc 1 358 32 is_stmt 0 view .LVU78
 284 002a A561     		str	r5, [r4, #24]
 359:Src/main.c    ****   {
 285              		.loc 1 359 3 is_stmt 1 view .LVU79
 359:Src/main.c    ****   {
 286              		.loc 1 359 7 is_stmt 0 view .LVU80
 287 002c 2000     		movs	r0, r4
 288 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  /tmp/cckp0GEV.s 			page 14


 289              	.LVL10:
 363:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 290              		.loc 1 363 3 is_stmt 1 view .LVU81
 363:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 291              		.loc 1 363 34 is_stmt 0 view .LVU82
 292 0032 8023     		movs	r3, #128
 293 0034 5B01     		lsls	r3, r3, #5
 294 0036 0293     		str	r3, [sp, #8]
 364:Src/main.c    ****   {
 295              		.loc 1 364 3 is_stmt 1 view .LVU83
 364:Src/main.c    ****   {
 296              		.loc 1 364 7 is_stmt 0 view .LVU84
 297 0038 02A9     		add	r1, sp, #8
 298 003a 2000     		movs	r0, r4
 299 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 300              	.LVL11:
 368:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 301              		.loc 1 368 3 is_stmt 1 view .LVU85
 368:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 302              		.loc 1 368 37 is_stmt 0 view .LVU86
 303 0040 0095     		str	r5, [sp]
 369:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 304              		.loc 1 369 3 is_stmt 1 view .LVU87
 369:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 305              		.loc 1 369 33 is_stmt 0 view .LVU88
 306 0042 0195     		str	r5, [sp, #4]
 370:Src/main.c    ****   {
 307              		.loc 1 370 3 is_stmt 1 view .LVU89
 370:Src/main.c    ****   {
 308              		.loc 1 370 7 is_stmt 0 view .LVU90
 309 0044 6946     		mov	r1, sp
 310 0046 2000     		movs	r0, r4
 311 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 312              	.LVL12:
 378:Src/main.c    **** 
 313              		.loc 1 378 1 view .LVU91
 314 004c 07B0     		add	sp, sp, #28
 315              		@ sp needed
 316 004e 30BD     		pop	{r4, r5, pc}
 317              	.L9:
 318              		.align	2
 319              	.L8:
 320 0050 00000000 		.word	htim1
 321 0054 002C0140 		.word	1073818624
 322              		.cfi_endproc
 323              	.LFE54:
 325              		.section	.text.charlie,"ax",%progbits
 326              		.align	1
 327              		.global	charlie
 328              		.syntax unified
 329              		.code	16
 330              		.thumb_func
 331              		.fpu softvfp
 333              	charlie:
 334              	.LVL13:
 335              	.LFB46:
 336              		.file 2 "Src/charlie.c"
ARM GAS  /tmp/cckp0GEV.s 			page 15


   1:Src/charlie.c **** //Charlieplexing Library
   2:Src/charlie.c **** //William Rickert March2020
   3:Src/charlie.c **** 
   4:Src/charlie.c **** 
   5:Src/charlie.c **** extern int stopFlag;
   6:Src/charlie.c **** extern int minuteFlag;
   7:Src/charlie.c **** extern int hourFlag;
   8:Src/charlie.c **** 
   9:Src/charlie.c **** void charlie(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef 
  10:Src/charlie.c **** void hands(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  11:Src/charlie.c **** //void StopOneSec();
  12:Src/charlie.c **** void say();
  13:Src/charlie.c **** 
  14:Src/charlie.c **** // Function to get current time and determine what to display
  15:Src/charlie.c **** void clock(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  16:Src/charlie.c ****    RTC_TimeTypeDef RTCtime;
  17:Src/charlie.c ****    RTC_DateTypeDef RTCdate;
  18:Src/charlie.c ****    HAL_RTC_GetTime(&whatTime, &RTCtime, RTC_FORMAT_BIN);
  19:Src/charlie.c ****    HAL_RTC_GetDate(&whatTime, &RTCdate, RTC_FORMAT_BIN);
  20:Src/charlie.c **** 
  21:Src/charlie.c ****    int minutes = RTCtime.Minutes;
  22:Src/charlie.c ****    int hours = RTCtime.Hours;
  23:Src/charlie.c ****    int displayMin = 0;
  24:Src/charlie.c **** 
  25:Src/charlie.c **** 
  26:Src/charlie.c ****    if(minutes > 0 && minutes < 3)
  27:Src/charlie.c ****       displayMin = 12;
  28:Src/charlie.c ****    else if(minutes > 3 && minutes < 7)
  29:Src/charlie.c ****       displayMin = 1;
  30:Src/charlie.c ****    else if(minutes > 7 && minutes < 12)
  31:Src/charlie.c ****       displayMin = 2;
  32:Src/charlie.c ****    else if(minutes > 12 && minutes < 17)
  33:Src/charlie.c ****       displayMin = 3;
  34:Src/charlie.c ****    else if(minutes > 17 && minutes < 22)
  35:Src/charlie.c ****       displayMin = 4;
  36:Src/charlie.c ****    else if(minutes > 22 && minutes < 27)
  37:Src/charlie.c ****       displayMin = 5;
  38:Src/charlie.c ****    else if(minutes > 27 && minutes < 32)
  39:Src/charlie.c ****       displayMin = 6;
  40:Src/charlie.c ****    else if(minutes > 32 && minutes < 37)
  41:Src/charlie.c ****       displayMin = 7;
  42:Src/charlie.c ****    else if(minutes > 37 && minutes < 42)
  43:Src/charlie.c ****       displayMin = 8;
  44:Src/charlie.c ****    else if(minutes > 42 && minutes < 47)
  45:Src/charlie.c ****       displayMin = 9;
  46:Src/charlie.c ****    else if(minutes > 47 && minutes < 52)
  47:Src/charlie.c ****       displayMin = 10;
  48:Src/charlie.c ****    else if(minutes > 52 && minutes < 57)
  49:Src/charlie.c ****       displayMin = 11;
  50:Src/charlie.c ****    else if(minutes > 57 && minutes < 61)
  51:Src/charlie.c ****       displayMin = 12;
  52:Src/charlie.c **** 
  53:Src/charlie.c ****    hands(PinA, PinB, PinC, PinD, hours, displayMin);
  54:Src/charlie.c ****    
  55:Src/charlie.c **** }
  56:Src/charlie.c **** 
  57:Src/charlie.c **** // Function to display current time
ARM GAS  /tmp/cckp0GEV.s 			page 16


  58:Src/charlie.c **** void hands(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  59:Src/charlie.c **** 
  60:Src/charlie.c **** //   say("in hands");
  61:Src/charlie.c ****    for(int i = 0; i < 100; i++){
  62:Src/charlie.c **** 
  63:Src/charlie.c ****       for(int j = 0; j < 10; j++){
  64:Src/charlie.c ****  //     say("first\n");
  65:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, hours);
  66:Src/charlie.c ****          HAL_Delay(100);
  67:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
  68:Src/charlie.c ****             return;
  69:Src/charlie.c ****       }
  70:Src/charlie.c ****       for(int k = 0; k < 500; k++){
  71:Src/charlie.c ****  //     say("second\n");
  72:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, hours);
  73:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, minutes);
  74:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
  75:Src/charlie.c ****             return;
  76:Src/charlie.c ****       }
  77:Src/charlie.c ****    }
  78:Src/charlie.c **** }
  79:Src/charlie.c **** 
  80:Src/charlie.c **** void dance(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  81:Src/charlie.c ****    // Off
  82:Src/charlie.c ****    if(mambo == 0){
  83:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
  84:Src/charlie.c ****    }
  85:Src/charlie.c **** 
  86:Src/charlie.c **** /*
  87:Src/charlie.c ****    // Slow, low power, Spin
  88:Src/charlie.c ****    if(mambo == 8){
  89:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
  90:Src/charlie.c ****        if(stopFlag == 1)
  91:Src/charlie.c ****          return;
  92:Src/charlie.c ****        StopOneSec();
  93:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
  94:Src/charlie.c ****        if(stopFlag == 1)
  95:Src/charlie.c ****          return;
  96:Src/charlie.c ****        StopOneSec();
  97:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
  98:Src/charlie.c ****        if(stopFlag == 1)
  99:Src/charlie.c ****          return;
 100:Src/charlie.c ****        StopOneSec();
 101:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 102:Src/charlie.c ****        if(stopFlag == 1)
 103:Src/charlie.c ****          return;
 104:Src/charlie.c ****        StopOneSec();
 105:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 106:Src/charlie.c ****        if(stopFlag == 1)
 107:Src/charlie.c ****          return;
 108:Src/charlie.c ****        StopOneSec();
 109:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 110:Src/charlie.c ****        if(stopFlag == 1)
 111:Src/charlie.c ****          return;
 112:Src/charlie.c ****        StopOneSec();
 113:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 114:Src/charlie.c ****        if(stopFlag == 1)
ARM GAS  /tmp/cckp0GEV.s 			page 17


 115:Src/charlie.c ****          return;
 116:Src/charlie.c ****        StopOneSec();
 117:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 118:Src/charlie.c ****        if(stopFlag == 1)
 119:Src/charlie.c ****          return;
 120:Src/charlie.c ****        StopOneSec();
 121:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 122:Src/charlie.c ****        if(stopFlag == 1)
 123:Src/charlie.c ****          return;
 124:Src/charlie.c ****        StopOneSec();
 125:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 126:Src/charlie.c ****        if(stopFlag == 1)
 127:Src/charlie.c ****          return;
 128:Src/charlie.c ****        StopOneSec();
 129:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 130:Src/charlie.c ****        if(stopFlag == 1)
 131:Src/charlie.c ****          return;
 132:Src/charlie.c ****        StopOneSec();
 133:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 134:Src/charlie.c ****        if(stopFlag == 1)
 135:Src/charlie.c ****          return;
 136:Src/charlie.c ****        StopOneSec();
 137:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 138:Src/charlie.c ****        if(stopFlag == 1)
 139:Src/charlie.c ****          return;
 140:Src/charlie.c ****        StopOneSec();
 141:Src/charlie.c ****    }
 142:Src/charlie.c **** */
 143:Src/charlie.c ****    // Slow Spin
 144:Src/charlie.c ****    if(mambo == 1){
 145:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 146:Src/charlie.c ****        if(stopFlag == 1)
 147:Src/charlie.c ****          return;
 148:Src/charlie.c ****        HAL_Delay(1000);
 149:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 150:Src/charlie.c ****        if(stopFlag == 1)
 151:Src/charlie.c ****          return;
 152:Src/charlie.c ****        HAL_Delay(1000);
 153:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 154:Src/charlie.c ****        if(stopFlag == 1)
 155:Src/charlie.c ****          return;
 156:Src/charlie.c ****        HAL_Delay(1000);
 157:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 158:Src/charlie.c ****        if(stopFlag == 1)
 159:Src/charlie.c ****          return;
 160:Src/charlie.c ****        HAL_Delay(1000);
 161:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 162:Src/charlie.c ****        if(stopFlag == 1)
 163:Src/charlie.c ****          return;
 164:Src/charlie.c ****        HAL_Delay(1000);
 165:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 166:Src/charlie.c ****        if(stopFlag == 1)
 167:Src/charlie.c ****          return;
 168:Src/charlie.c ****        HAL_Delay(1000);
 169:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 170:Src/charlie.c ****        if(stopFlag == 1)
 171:Src/charlie.c ****          return;
ARM GAS  /tmp/cckp0GEV.s 			page 18


 172:Src/charlie.c ****        HAL_Delay(1000);
 173:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 174:Src/charlie.c ****        if(stopFlag == 1)
 175:Src/charlie.c ****          return;
 176:Src/charlie.c ****        HAL_Delay(1000);
 177:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 178:Src/charlie.c ****        if(stopFlag == 1)
 179:Src/charlie.c ****          return;
 180:Src/charlie.c ****        HAL_Delay(1000);
 181:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 182:Src/charlie.c ****        if(stopFlag == 1)
 183:Src/charlie.c ****          return;
 184:Src/charlie.c ****        HAL_Delay(1000);
 185:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 186:Src/charlie.c ****        if(stopFlag == 1)
 187:Src/charlie.c ****          return;
 188:Src/charlie.c ****        HAL_Delay(1000);
 189:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 190:Src/charlie.c ****        if(stopFlag == 1)
 191:Src/charlie.c ****          return;
 192:Src/charlie.c ****        HAL_Delay(1000);
 193:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 194:Src/charlie.c ****        if(stopFlag == 1)
 195:Src/charlie.c ****          return;
 196:Src/charlie.c ****        HAL_Delay(1000);
 197:Src/charlie.c ****    }
 198:Src/charlie.c **** 
 199:Src/charlie.c ****    // Fast Spin
 200:Src/charlie.c ****    if(mambo == 2){
 201:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 202:Src/charlie.c ****        if(stopFlag == 1)
 203:Src/charlie.c ****          return;
 204:Src/charlie.c ****        HAL_Delay(500);
 205:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 206:Src/charlie.c ****        if(stopFlag == 1)
 207:Src/charlie.c ****          return;
 208:Src/charlie.c ****        HAL_Delay(500);
 209:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 210:Src/charlie.c ****        if(stopFlag == 1)
 211:Src/charlie.c ****          return;
 212:Src/charlie.c ****        HAL_Delay(500);
 213:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 214:Src/charlie.c ****        if(stopFlag == 1)
 215:Src/charlie.c ****          return;
 216:Src/charlie.c ****        HAL_Delay(500);
 217:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 218:Src/charlie.c ****        if(stopFlag == 1)
 219:Src/charlie.c ****          return;
 220:Src/charlie.c ****        HAL_Delay(500);
 221:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 222:Src/charlie.c ****        if(stopFlag == 1)
 223:Src/charlie.c ****          return;
 224:Src/charlie.c ****        HAL_Delay(500);
 225:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 226:Src/charlie.c ****        if(stopFlag == 1)
 227:Src/charlie.c ****          return;
 228:Src/charlie.c ****        HAL_Delay(500);
ARM GAS  /tmp/cckp0GEV.s 			page 19


 229:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 230:Src/charlie.c ****        if(stopFlag == 1)
 231:Src/charlie.c ****          return;
 232:Src/charlie.c ****        HAL_Delay(500);
 233:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 234:Src/charlie.c ****        if(stopFlag == 1)
 235:Src/charlie.c ****          return;
 236:Src/charlie.c ****        HAL_Delay(500);
 237:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 238:Src/charlie.c ****        if(stopFlag == 1)
 239:Src/charlie.c ****          return;
 240:Src/charlie.c ****        HAL_Delay(500);
 241:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 242:Src/charlie.c ****        if(stopFlag == 1)
 243:Src/charlie.c ****          return;
 244:Src/charlie.c ****        HAL_Delay(500);
 245:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 246:Src/charlie.c ****        if(stopFlag == 1)
 247:Src/charlie.c ****          return;
 248:Src/charlie.c ****        HAL_Delay(500);
 249:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 250:Src/charlie.c ****        if(stopFlag == 1)
 251:Src/charlie.c ****          return;
 252:Src/charlie.c ****        HAL_Delay(500);
 253:Src/charlie.c ****    }
 254:Src/charlie.c **** 
 255:Src/charlie.c ****    // POV light up all lights
 256:Src/charlie.c ****    if(mambo == 3){
 257:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 258:Src/charlie.c ****       for(int i=0; i<10000; i++){
 259:Src/charlie.c ****          for(int j=1; j<=12; j++){
 260:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 261:Src/charlie.c ****        //      HAL_Delay(1);
 262:Src/charlie.c ****              if(stopFlag == 1)
 263:Src/charlie.c ****                return;
 264:Src/charlie.c ****             
 265:Src/charlie.c ****          } 
 266:Src/charlie.c ****       }
 267:Src/charlie.c ****    } 
 268:Src/charlie.c **** 
 269:Src/charlie.c ****    // Doubles
 270:Src/charlie.c ****    if(mambo == 4){
 271:Src/charlie.c ****       for(int i =1; i<=7; i++){
 272:Src/charlie.c ****          if(i == 1){
 273:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 274:Src/charlie.c ****             HAL_Delay(500);
 275:Src/charlie.c ****             if(stopFlag == 1)
 276:Src/charlie.c ****                return;
 277:Src/charlie.c ****          }
 278:Src/charlie.c ****          if(i == 2){
 279:Src/charlie.c ****             for(int j =0; j<10000; j++){
 280:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 281:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 1);
 282:Src/charlie.c ****                if(stopFlag == 1)
 283:Src/charlie.c ****                   return;
 284:Src/charlie.c ****             }
 285:Src/charlie.c ****             HAL_Delay(10);
ARM GAS  /tmp/cckp0GEV.s 			page 20


 286:Src/charlie.c ****          }
 287:Src/charlie.c ****          if(i == 3){
 288:Src/charlie.c ****             for(int j =0; j<10000; j++){
 289:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 290:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 291:Src/charlie.c ****                if(stopFlag == 1)
 292:Src/charlie.c ****                   return;
 293:Src/charlie.c ****             }
 294:Src/charlie.c ****          }
 295:Src/charlie.c ****          if(i == 4){
 296:Src/charlie.c ****             for(int j =0; j<10000; j++){
 297:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 298:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 9);
 299:Src/charlie.c ****                if(stopFlag == 1)
 300:Src/charlie.c ****                   return;
 301:Src/charlie.c ****             }
 302:Src/charlie.c ****          }
 303:Src/charlie.c ****          if(i == 5){
 304:Src/charlie.c ****             for(int j =0; j<10000; j++){
 305:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 306:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 8);
 307:Src/charlie.c ****                if(stopFlag == 1)
 308:Src/charlie.c ****                   return;
 309:Src/charlie.c ****             }
 310:Src/charlie.c ****          }
 311:Src/charlie.c ****          if(i == 6){
 312:Src/charlie.c ****             for(int j =0; j<10000; j++){
 313:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 314:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 7);
 315:Src/charlie.c ****                if(stopFlag == 1)
 316:Src/charlie.c ****                   return;
 317:Src/charlie.c ****             }
 318:Src/charlie.c ****          }
 319:Src/charlie.c ****          if(i == 7){
 320:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 321:Src/charlie.c ****             HAL_Delay(500);
 322:Src/charlie.c ****             if(stopFlag == 1)
 323:Src/charlie.c ****                return;
 324:Src/charlie.c **** 
 325:Src/charlie.c ****          }
 326:Src/charlie.c **** 
 327:Src/charlie.c ****       }
 328:Src/charlie.c ****       
 329:Src/charlie.c ****    }  
 330:Src/charlie.c **** 
 331:Src/charlie.c **** 
 332:Src/charlie.c **** }
 333:Src/charlie.c **** 
 334:Src/charlie.c **** void charlie(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef 
 337              		.loc 2 334 114 is_stmt 1 view -0
 338              		.cfi_startproc
 339              		@ args = 84, pretend = 16, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		.loc 2 334 114 is_stmt 0 view .LVU93
 342 0000 84B0     		sub	sp, sp, #16
 343              	.LCFI5:
 344              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cckp0GEV.s 			page 21


 345 0002 70B5     		push	{r4, r5, r6, lr}
 346              	.LCFI6:
 347              		.cfi_def_cfa_offset 32
 348              		.cfi_offset 4, -32
 349              		.cfi_offset 5, -28
 350              		.cfi_offset 6, -24
 351              		.cfi_offset 14, -20
 352 0004 0490     		str	r0, [sp, #16]
 353 0006 0591     		str	r1, [sp, #20]
 354 0008 0692     		str	r2, [sp, #24]
 355 000a 0793     		str	r3, [sp, #28]
 356 000c 189C     		ldr	r4, [sp, #96]
 335:Src/charlie.c ****    if(pos == 0){
 357              		.loc 2 335 4 is_stmt 1 view .LVU94
 358              		.loc 2 335 6 is_stmt 0 view .LVU95
 359 000e 002C     		cmp	r4, #0
 360 0010 24D0     		beq	.L24
 361              	.L11:
 336:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 337:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 338:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 339:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 340:Src/charlie.c ****    }
 341:Src/charlie.c **** 
 342:Src/charlie.c **** 
 343:Src/charlie.c ****    // 12'oclock
 344:Src/charlie.c ****    // A = 1
 345:Src/charlie.c ****    // B = Z
 346:Src/charlie.c ****    // C = 0
 347:Src/charlie.c ****    // D = Z
 348:Src/charlie.c ****    if(pos == 12){
 362              		.loc 2 348 4 is_stmt 1 view .LVU96
 363              		.loc 2 348 6 is_stmt 0 view .LVU97
 364 0012 0C2C     		cmp	r4, #12
 365 0014 35D0     		beq	.L25
 366              	.L12:
 349:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 350:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 351:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 352:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 353:Src/charlie.c **** 
 354:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 355:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 356:Src/charlie.c ****       }
 357:Src/charlie.c **** 
 358:Src/charlie.c ****    // 1'oclock
 359:Src/charlie.c ****    // A = 1
 360:Src/charlie.c ****    // B = Z
 361:Src/charlie.c ****    // C = 0
 362:Src/charlie.c ****    // D = Z
 363:Src/charlie.c ****    if(pos == 1){
 367              		.loc 2 363 4 is_stmt 1 view .LVU98
 368              		.loc 2 363 6 is_stmt 0 view .LVU99
 369 0016 012C     		cmp	r4, #1
 370 0018 50D0     		beq	.L26
 371              	.L13:
 364:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
ARM GAS  /tmp/cckp0GEV.s 			page 22


 365:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 366:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 367:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 368:Src/charlie.c **** 
 369:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 370:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 371:Src/charlie.c ****       }
 372:Src/charlie.c **** 
 373:Src/charlie.c **** 
 374:Src/charlie.c ****    // 2'oclock
 375:Src/charlie.c ****    // A = Z
 376:Src/charlie.c ****    // B = 1
 377:Src/charlie.c ****    // C = Z
 378:Src/charlie.c ****    // D = 0
 379:Src/charlie.c ****    if(pos == 2){
 372              		.loc 2 379 4 is_stmt 1 view .LVU100
 373              		.loc 2 379 6 is_stmt 0 view .LVU101
 374 001a 022C     		cmp	r4, #2
 375 001c 6BD0     		beq	.L27
 376              	.L14:
 380:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 381:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 382:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 383:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 384:Src/charlie.c **** 
 385:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 386:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 387:Src/charlie.c ****       }
 388:Src/charlie.c **** 
 389:Src/charlie.c ****    // 3'oclock
 390:Src/charlie.c ****    // A = Z
 391:Src/charlie.c ****    // B = 1
 392:Src/charlie.c ****    // C = Z
 393:Src/charlie.c ****    // D = 0
 394:Src/charlie.c ****    if(pos == 3){
 377              		.loc 2 394 4 is_stmt 1 view .LVU102
 378              		.loc 2 394 6 is_stmt 0 view .LVU103
 379 001e 032C     		cmp	r4, #3
 380 0020 00D1     		bne	.LCB286
 381 0022 85E0     		b	.L28	@long jump
 382              	.LCB286:
 383              	.L15:
 395:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 396:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 397:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 398:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 399:Src/charlie.c **** 
 400:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 401:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 402:Src/charlie.c ****       }
 403:Src/charlie.c **** 
 404:Src/charlie.c **** 
 405:Src/charlie.c ****    // 4'oclock
 406:Src/charlie.c ****    // A = 1
 407:Src/charlie.c ****    // B = Z
 408:Src/charlie.c ****    // C = Z
 409:Src/charlie.c ****    // D = 0
ARM GAS  /tmp/cckp0GEV.s 			page 23


 410:Src/charlie.c ****    if(pos == 4){
 384              		.loc 2 410 4 is_stmt 1 view .LVU104
 385              		.loc 2 410 6 is_stmt 0 view .LVU105
 386 0024 042C     		cmp	r4, #4
 387 0026 00D1     		bne	.LCB290
 388 0028 9FE0     		b	.L29	@long jump
 389              	.LCB290:
 390              	.L16:
 411:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 412:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 413:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 414:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 415:Src/charlie.c **** 
 416:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 417:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 418:Src/charlie.c ****       }
 419:Src/charlie.c **** 
 420:Src/charlie.c ****    // 5'oclock
 421:Src/charlie.c ****    // A = 0
 422:Src/charlie.c ****    // B = Z
 423:Src/charlie.c ****    // C = Z
 424:Src/charlie.c ****    // D = 1
 425:Src/charlie.c ****    if(pos == 5){
 391              		.loc 2 425 4 is_stmt 1 view .LVU106
 392              		.loc 2 425 6 is_stmt 0 view .LVU107
 393 002a 052C     		cmp	r4, #5
 394 002c 00D1     		bne	.LCB294
 395 002e B9E0     		b	.L30	@long jump
 396              	.LCB294:
 397              	.L17:
 426:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 427:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 428:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 429:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 430:Src/charlie.c **** 
 431:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 432:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 433:Src/charlie.c ****       }
 434:Src/charlie.c **** 
 435:Src/charlie.c ****    // 6'oclock
 436:Src/charlie.c ****    if(pos == 6){
 398              		.loc 2 436 4 is_stmt 1 view .LVU108
 399              		.loc 2 436 6 is_stmt 0 view .LVU109
 400 0030 062C     		cmp	r4, #6
 401 0032 00D1     		bne	.LCB298
 402 0034 D3E0     		b	.L31	@long jump
 403              	.LCB298:
 404              	.L18:
 437:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 438:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 439:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 440:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 441:Src/charlie.c **** 
 442:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 443:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 444:Src/charlie.c ****       }
 445:Src/charlie.c **** 
ARM GAS  /tmp/cckp0GEV.s 			page 24


 446:Src/charlie.c ****    // 7'oclock
 447:Src/charlie.c ****    if(pos == 7){
 405              		.loc 2 447 4 is_stmt 1 view .LVU110
 406              		.loc 2 447 6 is_stmt 0 view .LVU111
 407 0036 072C     		cmp	r4, #7
 408 0038 00D1     		bne	.LCB302
 409 003a EDE0     		b	.L32	@long jump
 410              	.LCB302:
 411              	.L19:
 448:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 449:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 450:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 451:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 452:Src/charlie.c ****       
 453:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 454:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 455:Src/charlie.c ****       }
 456:Src/charlie.c **** 
 457:Src/charlie.c ****    // 8'oclock
 458:Src/charlie.c ****    // A = Z
 459:Src/charlie.c ****    // B = 1
 460:Src/charlie.c ****    // C = 0
 461:Src/charlie.c ****    // D = Z
 462:Src/charlie.c ****    if(pos == 8){
 412              		.loc 2 462 4 is_stmt 1 view .LVU112
 413              		.loc 2 462 6 is_stmt 0 view .LVU113
 414 003c 082C     		cmp	r4, #8
 415 003e 00D1     		bne	.LCB306
 416 0040 07E1     		b	.L33	@long jump
 417              	.LCB306:
 418              	.L20:
 463:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 464:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 465:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 466:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 467:Src/charlie.c **** 
 468:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 469:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 470:Src/charlie.c ****       }
 471:Src/charlie.c **** 
 472:Src/charlie.c ****    // 9'oclock
 473:Src/charlie.c ****    // A = Z
 474:Src/charlie.c ****    // B = 1
 475:Src/charlie.c ****    // C = 0
 476:Src/charlie.c ****    // D = Z
 477:Src/charlie.c ****    if(pos == 9){
 419              		.loc 2 477 4 is_stmt 1 view .LVU114
 420              		.loc 2 477 6 is_stmt 0 view .LVU115
 421 0042 092C     		cmp	r4, #9
 422 0044 00D1     		bne	.LCB310
 423 0046 21E1     		b	.L34	@long jump
 424              	.LCB310:
 425              	.L21:
 478:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 479:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 480:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 481:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
ARM GAS  /tmp/cckp0GEV.s 			page 25


 482:Src/charlie.c **** 
 483:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 484:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 485:Src/charlie.c ****       }
 486:Src/charlie.c **** 
 487:Src/charlie.c ****    // 10'oclock
 488:Src/charlie.c ****    // A = Z
 489:Src/charlie.c ****    // B = Z
 490:Src/charlie.c ****    // C = 0
 491:Src/charlie.c ****    // D = 1
 492:Src/charlie.c ****    if(pos == 10){
 426              		.loc 2 492 4 is_stmt 1 view .LVU116
 427              		.loc 2 492 6 is_stmt 0 view .LVU117
 428 0048 0A2C     		cmp	r4, #10
 429 004a 00D1     		bne	.LCB314
 430 004c 3BE1     		b	.L35	@long jump
 431              	.LCB314:
 432              	.L22:
 493:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 494:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 495:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 496:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 497:Src/charlie.c **** 
 498:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 499:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 500:Src/charlie.c ****       }
 501:Src/charlie.c ****    
 502:Src/charlie.c ****    // 11'oclock
 503:Src/charlie.c ****    // A = Z
 504:Src/charlie.c ****    // B = Z
 505:Src/charlie.c ****    // C = 1
 506:Src/charlie.c ****    // D = 0
 507:Src/charlie.c ****    if(pos == 11){
 433              		.loc 2 507 4 is_stmt 1 view .LVU118
 434              		.loc 2 507 6 is_stmt 0 view .LVU119
 435 004e 0B2C     		cmp	r4, #11
 436 0050 00D1     		bne	.LCB318
 437 0052 55E1     		b	.L36	@long jump
 438              	.LCB318:
 439              	.L10:
 508:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 509:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 510:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 511:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 512:Src/charlie.c ****             
 513:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 514:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 515:Src/charlie.c ****       }
 516:Src/charlie.c **** 
 517:Src/charlie.c **** }
 440              		.loc 2 517 1 view .LVU120
 441              		@ sp needed
 442 0054 70BC     		pop	{r4, r5, r6}
 443 0056 08BC     		pop	{r3}
 444 0058 04B0     		add	sp, sp, #16
 445 005a 1847     		bx	r3
 446              	.L24:
ARM GAS  /tmp/cckp0GEV.s 			page 26


 336:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 447              		.loc 2 336 7 is_stmt 1 view .LVU121
 448 005c 9025     		movs	r5, #144
 449 005e ED05     		lsls	r5, r5, #23
 450 0060 0121     		movs	r1, #1
 451 0062 2800     		movs	r0, r5
 452 0064 FFF7FEFF 		bl	HAL_GPIO_DeInit
 453              	.LVL14:
 337:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 454              		.loc 2 337 7 view .LVU122
 455 0068 0221     		movs	r1, #2
 456 006a 2800     		movs	r0, r5
 457 006c FFF7FEFF 		bl	HAL_GPIO_DeInit
 458              	.LVL15:
 338:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 459              		.loc 2 338 7 view .LVU123
 460 0070 0421     		movs	r1, #4
 461 0072 2800     		movs	r0, r5
 462 0074 FFF7FEFF 		bl	HAL_GPIO_DeInit
 463              	.LVL16:
 339:Src/charlie.c ****    }
 464              		.loc 2 339 7 view .LVU124
 465 0078 0821     		movs	r1, #8
 466 007a 2800     		movs	r0, r5
 467 007c FFF7FEFF 		bl	HAL_GPIO_DeInit
 468              	.LVL17:
 469 0080 C7E7     		b	.L11
 470              	.L25:
 349:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 471              		.loc 2 349 7 view .LVU125
 472 0082 9025     		movs	r5, #144
 473 0084 ED05     		lsls	r5, r5, #23
 474 0086 04A9     		add	r1, sp, #16
 475 0088 2800     		movs	r0, r5
 476 008a FFF7FEFF 		bl	HAL_GPIO_Init
 477              	.LVL18:
 350:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 478              		.loc 2 350 7 view .LVU126
 479 008e 0EA9     		add	r1, sp, #56
 480 0090 2800     		movs	r0, r5
 481 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 482              	.LVL19:
 351:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 483              		.loc 2 351 7 view .LVU127
 484 0096 0221     		movs	r1, #2
 485 0098 2800     		movs	r0, r5
 486 009a FFF7FEFF 		bl	HAL_GPIO_DeInit
 487              	.LVL20:
 352:Src/charlie.c **** 
 488              		.loc 2 352 7 view .LVU128
 489 009e 0821     		movs	r1, #8
 490 00a0 2800     		movs	r0, r5
 491 00a2 FFF7FEFF 		bl	HAL_GPIO_DeInit
 492              	.LVL21:
 354:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 493              		.loc 2 354 7 view .LVU129
 494 00a6 0122     		movs	r2, #1
ARM GAS  /tmp/cckp0GEV.s 			page 27


 495 00a8 0121     		movs	r1, #1
 496 00aa 2800     		movs	r0, r5
 497 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 498              	.LVL22:
 355:Src/charlie.c ****       }
 499              		.loc 2 355 7 view .LVU130
 500 00b0 0022     		movs	r2, #0
 501 00b2 0421     		movs	r1, #4
 502 00b4 2800     		movs	r0, r5
 503 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 504              	.LVL23:
 505 00ba ACE7     		b	.L12
 506              	.L26:
 364:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 507              		.loc 2 364 7 view .LVU131
 508 00bc 9025     		movs	r5, #144
 509 00be ED05     		lsls	r5, r5, #23
 510 00c0 04A9     		add	r1, sp, #16
 511 00c2 2800     		movs	r0, r5
 512 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 513              	.LVL24:
 365:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 514              		.loc 2 365 7 view .LVU132
 515 00c8 0EA9     		add	r1, sp, #56
 516 00ca 2800     		movs	r0, r5
 517 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 518              	.LVL25:
 366:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 519              		.loc 2 366 7 view .LVU133
 520 00d0 0221     		movs	r1, #2
 521 00d2 2800     		movs	r0, r5
 522 00d4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 523              	.LVL26:
 367:Src/charlie.c **** 
 524              		.loc 2 367 7 view .LVU134
 525 00d8 0821     		movs	r1, #8
 526 00da 2800     		movs	r0, r5
 527 00dc FFF7FEFF 		bl	HAL_GPIO_DeInit
 528              	.LVL27:
 369:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 529              		.loc 2 369 7 view .LVU135
 530 00e0 0022     		movs	r2, #0
 531 00e2 0121     		movs	r1, #1
 532 00e4 2800     		movs	r0, r5
 533 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 534              	.LVL28:
 370:Src/charlie.c ****       }
 535              		.loc 2 370 7 view .LVU136
 536 00ea 0122     		movs	r2, #1
 537 00ec 0421     		movs	r1, #4
 538 00ee 2800     		movs	r0, r5
 539 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 540              	.LVL29:
 541 00f4 91E7     		b	.L13
 542              	.L27:
 380:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 543              		.loc 2 380 7 view .LVU137
ARM GAS  /tmp/cckp0GEV.s 			page 28


 544 00f6 9025     		movs	r5, #144
 545 00f8 ED05     		lsls	r5, r5, #23
 546 00fa 09A9     		add	r1, sp, #36
 547 00fc 2800     		movs	r0, r5
 548 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 549              	.LVL30:
 381:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 550              		.loc 2 381 7 view .LVU138
 551 0102 13A9     		add	r1, sp, #76
 552 0104 2800     		movs	r0, r5
 553 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 554              	.LVL31:
 382:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 555              		.loc 2 382 7 view .LVU139
 556 010a 0121     		movs	r1, #1
 557 010c 2800     		movs	r0, r5
 558 010e FFF7FEFF 		bl	HAL_GPIO_DeInit
 559              	.LVL32:
 383:Src/charlie.c **** 
 560              		.loc 2 383 7 view .LVU140
 561 0112 0421     		movs	r1, #4
 562 0114 2800     		movs	r0, r5
 563 0116 FFF7FEFF 		bl	HAL_GPIO_DeInit
 564              	.LVL33:
 385:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 565              		.loc 2 385 7 view .LVU141
 566 011a 0122     		movs	r2, #1
 567 011c 0221     		movs	r1, #2
 568 011e 2800     		movs	r0, r5
 569 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 570              	.LVL34:
 386:Src/charlie.c ****       }
 571              		.loc 2 386 7 view .LVU142
 572 0124 0022     		movs	r2, #0
 573 0126 0821     		movs	r1, #8
 574 0128 2800     		movs	r0, r5
 575 012a FFF7FEFF 		bl	HAL_GPIO_WritePin
 576              	.LVL35:
 577 012e 76E7     		b	.L14
 578              	.L28:
 395:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 579              		.loc 2 395 7 view .LVU143
 580 0130 9025     		movs	r5, #144
 581 0132 ED05     		lsls	r5, r5, #23
 582 0134 09A9     		add	r1, sp, #36
 583 0136 2800     		movs	r0, r5
 584 0138 FFF7FEFF 		bl	HAL_GPIO_Init
 585              	.LVL36:
 396:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 586              		.loc 2 396 7 view .LVU144
 587 013c 13A9     		add	r1, sp, #76
 588 013e 2800     		movs	r0, r5
 589 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 590              	.LVL37:
 397:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 591              		.loc 2 397 7 view .LVU145
 592 0144 0121     		movs	r1, #1
ARM GAS  /tmp/cckp0GEV.s 			page 29


 593 0146 2800     		movs	r0, r5
 594 0148 FFF7FEFF 		bl	HAL_GPIO_DeInit
 595              	.LVL38:
 398:Src/charlie.c **** 
 596              		.loc 2 398 7 view .LVU146
 597 014c 0421     		movs	r1, #4
 598 014e 2800     		movs	r0, r5
 599 0150 FFF7FEFF 		bl	HAL_GPIO_DeInit
 600              	.LVL39:
 400:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 601              		.loc 2 400 7 view .LVU147
 602 0154 0022     		movs	r2, #0
 603 0156 0221     		movs	r1, #2
 604 0158 2800     		movs	r0, r5
 605 015a FFF7FEFF 		bl	HAL_GPIO_WritePin
 606              	.LVL40:
 401:Src/charlie.c ****       }
 607              		.loc 2 401 7 view .LVU148
 608 015e 0122     		movs	r2, #1
 609 0160 0821     		movs	r1, #8
 610 0162 2800     		movs	r0, r5
 611 0164 FFF7FEFF 		bl	HAL_GPIO_WritePin
 612              	.LVL41:
 613 0168 5CE7     		b	.L15
 614              	.L29:
 411:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 615              		.loc 2 411 7 view .LVU149
 616 016a 9025     		movs	r5, #144
 617 016c ED05     		lsls	r5, r5, #23
 618 016e 04A9     		add	r1, sp, #16
 619 0170 2800     		movs	r0, r5
 620 0172 FFF7FEFF 		bl	HAL_GPIO_Init
 621              	.LVL42:
 412:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 622              		.loc 2 412 7 view .LVU150
 623 0176 13A9     		add	r1, sp, #76
 624 0178 2800     		movs	r0, r5
 625 017a FFF7FEFF 		bl	HAL_GPIO_Init
 626              	.LVL43:
 413:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 627              		.loc 2 413 7 view .LVU151
 628 017e 0221     		movs	r1, #2
 629 0180 2800     		movs	r0, r5
 630 0182 FFF7FEFF 		bl	HAL_GPIO_DeInit
 631              	.LVL44:
 414:Src/charlie.c **** 
 632              		.loc 2 414 7 view .LVU152
 633 0186 0421     		movs	r1, #4
 634 0188 2800     		movs	r0, r5
 635 018a FFF7FEFF 		bl	HAL_GPIO_DeInit
 636              	.LVL45:
 416:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 637              		.loc 2 416 7 view .LVU153
 638 018e 0122     		movs	r2, #1
 639 0190 0121     		movs	r1, #1
 640 0192 2800     		movs	r0, r5
 641 0194 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cckp0GEV.s 			page 30


 642              	.LVL46:
 417:Src/charlie.c ****       }
 643              		.loc 2 417 7 view .LVU154
 644 0198 0022     		movs	r2, #0
 645 019a 0821     		movs	r1, #8
 646 019c 2800     		movs	r0, r5
 647 019e FFF7FEFF 		bl	HAL_GPIO_WritePin
 648              	.LVL47:
 649 01a2 42E7     		b	.L16
 650              	.L30:
 426:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 651              		.loc 2 426 7 view .LVU155
 652 01a4 9025     		movs	r5, #144
 653 01a6 ED05     		lsls	r5, r5, #23
 654 01a8 04A9     		add	r1, sp, #16
 655 01aa 2800     		movs	r0, r5
 656 01ac FFF7FEFF 		bl	HAL_GPIO_Init
 657              	.LVL48:
 427:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 658              		.loc 2 427 7 view .LVU156
 659 01b0 13A9     		add	r1, sp, #76
 660 01b2 2800     		movs	r0, r5
 661 01b4 FFF7FEFF 		bl	HAL_GPIO_Init
 662              	.LVL49:
 428:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 663              		.loc 2 428 7 view .LVU157
 664 01b8 0221     		movs	r1, #2
 665 01ba 2800     		movs	r0, r5
 666 01bc FFF7FEFF 		bl	HAL_GPIO_DeInit
 667              	.LVL50:
 429:Src/charlie.c **** 
 668              		.loc 2 429 7 view .LVU158
 669 01c0 0421     		movs	r1, #4
 670 01c2 2800     		movs	r0, r5
 671 01c4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 672              	.LVL51:
 431:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 673              		.loc 2 431 7 view .LVU159
 674 01c8 0022     		movs	r2, #0
 675 01ca 0121     		movs	r1, #1
 676 01cc 2800     		movs	r0, r5
 677 01ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 678              	.LVL52:
 432:Src/charlie.c ****       }
 679              		.loc 2 432 7 view .LVU160
 680 01d2 0122     		movs	r2, #1
 681 01d4 0821     		movs	r1, #8
 682 01d6 2800     		movs	r0, r5
 683 01d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 684              	.LVL53:
 685 01dc 28E7     		b	.L17
 686              	.L31:
 437:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 687              		.loc 2 437 7 view .LVU161
 688 01de 9025     		movs	r5, #144
 689 01e0 ED05     		lsls	r5, r5, #23
 690 01e2 04A9     		add	r1, sp, #16
ARM GAS  /tmp/cckp0GEV.s 			page 31


 691 01e4 2800     		movs	r0, r5
 692 01e6 FFF7FEFF 		bl	HAL_GPIO_Init
 693              	.LVL54:
 438:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 694              		.loc 2 438 7 view .LVU162
 695 01ea 09A9     		add	r1, sp, #36
 696 01ec 2800     		movs	r0, r5
 697 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 698              	.LVL55:
 439:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 699              		.loc 2 439 7 view .LVU163
 700 01f2 0421     		movs	r1, #4
 701 01f4 2800     		movs	r0, r5
 702 01f6 FFF7FEFF 		bl	HAL_GPIO_DeInit
 703              	.LVL56:
 440:Src/charlie.c **** 
 704              		.loc 2 440 7 view .LVU164
 705 01fa 0821     		movs	r1, #8
 706 01fc 2800     		movs	r0, r5
 707 01fe FFF7FEFF 		bl	HAL_GPIO_DeInit
 708              	.LVL57:
 442:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 709              		.loc 2 442 7 view .LVU165
 710 0202 0122     		movs	r2, #1
 711 0204 0121     		movs	r1, #1
 712 0206 2800     		movs	r0, r5
 713 0208 FFF7FEFF 		bl	HAL_GPIO_WritePin
 714              	.LVL58:
 443:Src/charlie.c ****       }
 715              		.loc 2 443 7 view .LVU166
 716 020c 0022     		movs	r2, #0
 717 020e 0221     		movs	r1, #2
 718 0210 2800     		movs	r0, r5
 719 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 720              	.LVL59:
 721 0216 0EE7     		b	.L18
 722              	.L32:
 448:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 723              		.loc 2 448 7 view .LVU167
 724 0218 9025     		movs	r5, #144
 725 021a ED05     		lsls	r5, r5, #23
 726 021c 04A9     		add	r1, sp, #16
 727 021e 2800     		movs	r0, r5
 728 0220 FFF7FEFF 		bl	HAL_GPIO_Init
 729              	.LVL60:
 449:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 730              		.loc 2 449 7 view .LVU168
 731 0224 09A9     		add	r1, sp, #36
 732 0226 2800     		movs	r0, r5
 733 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 734              	.LVL61:
 450:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 735              		.loc 2 450 7 view .LVU169
 736 022c 0421     		movs	r1, #4
 737 022e 2800     		movs	r0, r5
 738 0230 FFF7FEFF 		bl	HAL_GPIO_DeInit
 739              	.LVL62:
ARM GAS  /tmp/cckp0GEV.s 			page 32


 451:Src/charlie.c ****       
 740              		.loc 2 451 7 view .LVU170
 741 0234 0821     		movs	r1, #8
 742 0236 2800     		movs	r0, r5
 743 0238 FFF7FEFF 		bl	HAL_GPIO_DeInit
 744              	.LVL63:
 453:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 745              		.loc 2 453 7 view .LVU171
 746 023c 0022     		movs	r2, #0
 747 023e 0121     		movs	r1, #1
 748 0240 2800     		movs	r0, r5
 749 0242 FFF7FEFF 		bl	HAL_GPIO_WritePin
 750              	.LVL64:
 454:Src/charlie.c ****       }
 751              		.loc 2 454 7 view .LVU172
 752 0246 0122     		movs	r2, #1
 753 0248 0221     		movs	r1, #2
 754 024a 2800     		movs	r0, r5
 755 024c FFF7FEFF 		bl	HAL_GPIO_WritePin
 756              	.LVL65:
 757 0250 F4E6     		b	.L19
 758              	.L33:
 463:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 759              		.loc 2 463 7 view .LVU173
 760 0252 9025     		movs	r5, #144
 761 0254 ED05     		lsls	r5, r5, #23
 762 0256 09A9     		add	r1, sp, #36
 763 0258 2800     		movs	r0, r5
 764 025a FFF7FEFF 		bl	HAL_GPIO_Init
 765              	.LVL66:
 464:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 766              		.loc 2 464 7 view .LVU174
 767 025e 0EA9     		add	r1, sp, #56
 768 0260 2800     		movs	r0, r5
 769 0262 FFF7FEFF 		bl	HAL_GPIO_Init
 770              	.LVL67:
 465:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 771              		.loc 2 465 7 view .LVU175
 772 0266 0121     		movs	r1, #1
 773 0268 2800     		movs	r0, r5
 774 026a FFF7FEFF 		bl	HAL_GPIO_DeInit
 775              	.LVL68:
 466:Src/charlie.c **** 
 776              		.loc 2 466 7 view .LVU176
 777 026e 0821     		movs	r1, #8
 778 0270 2800     		movs	r0, r5
 779 0272 FFF7FEFF 		bl	HAL_GPIO_DeInit
 780              	.LVL69:
 468:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 781              		.loc 2 468 7 view .LVU177
 782 0276 0122     		movs	r2, #1
 783 0278 0221     		movs	r1, #2
 784 027a 2800     		movs	r0, r5
 785 027c FFF7FEFF 		bl	HAL_GPIO_WritePin
 786              	.LVL70:
 469:Src/charlie.c ****       }
 787              		.loc 2 469 7 view .LVU178
ARM GAS  /tmp/cckp0GEV.s 			page 33


 788 0280 0022     		movs	r2, #0
 789 0282 0421     		movs	r1, #4
 790 0284 2800     		movs	r0, r5
 791 0286 FFF7FEFF 		bl	HAL_GPIO_WritePin
 792              	.LVL71:
 793 028a DAE6     		b	.L20
 794              	.L34:
 478:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 795              		.loc 2 478 7 view .LVU179
 796 028c 9025     		movs	r5, #144
 797 028e ED05     		lsls	r5, r5, #23
 798 0290 09A9     		add	r1, sp, #36
 799 0292 2800     		movs	r0, r5
 800 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 801              	.LVL72:
 479:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 802              		.loc 2 479 7 view .LVU180
 803 0298 0EA9     		add	r1, sp, #56
 804 029a 2800     		movs	r0, r5
 805 029c FFF7FEFF 		bl	HAL_GPIO_Init
 806              	.LVL73:
 480:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 807              		.loc 2 480 7 view .LVU181
 808 02a0 0121     		movs	r1, #1
 809 02a2 2800     		movs	r0, r5
 810 02a4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 811              	.LVL74:
 481:Src/charlie.c **** 
 812              		.loc 2 481 7 view .LVU182
 813 02a8 0821     		movs	r1, #8
 814 02aa 2800     		movs	r0, r5
 815 02ac FFF7FEFF 		bl	HAL_GPIO_DeInit
 816              	.LVL75:
 483:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 817              		.loc 2 483 7 view .LVU183
 818 02b0 0022     		movs	r2, #0
 819 02b2 0221     		movs	r1, #2
 820 02b4 2800     		movs	r0, r5
 821 02b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 822              	.LVL76:
 484:Src/charlie.c ****       }
 823              		.loc 2 484 7 view .LVU184
 824 02ba 0122     		movs	r2, #1
 825 02bc 0421     		movs	r1, #4
 826 02be 2800     		movs	r0, r5
 827 02c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 828              	.LVL77:
 829 02c4 C0E6     		b	.L21
 830              	.L35:
 493:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 831              		.loc 2 493 7 view .LVU185
 832 02c6 9025     		movs	r5, #144
 833 02c8 ED05     		lsls	r5, r5, #23
 834 02ca 0EA9     		add	r1, sp, #56
 835 02cc 2800     		movs	r0, r5
 836 02ce FFF7FEFF 		bl	HAL_GPIO_Init
 837              	.LVL78:
ARM GAS  /tmp/cckp0GEV.s 			page 34


 494:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 838              		.loc 2 494 7 view .LVU186
 839 02d2 13A9     		add	r1, sp, #76
 840 02d4 2800     		movs	r0, r5
 841 02d6 FFF7FEFF 		bl	HAL_GPIO_Init
 842              	.LVL79:
 495:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 843              		.loc 2 495 7 view .LVU187
 844 02da 0121     		movs	r1, #1
 845 02dc 2800     		movs	r0, r5
 846 02de FFF7FEFF 		bl	HAL_GPIO_DeInit
 847              	.LVL80:
 496:Src/charlie.c **** 
 848              		.loc 2 496 7 view .LVU188
 849 02e2 0221     		movs	r1, #2
 850 02e4 2800     		movs	r0, r5
 851 02e6 FFF7FEFF 		bl	HAL_GPIO_DeInit
 852              	.LVL81:
 498:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 853              		.loc 2 498 7 view .LVU189
 854 02ea 0122     		movs	r2, #1
 855 02ec 0421     		movs	r1, #4
 856 02ee 2800     		movs	r0, r5
 857 02f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 858              	.LVL82:
 499:Src/charlie.c ****       }
 859              		.loc 2 499 7 view .LVU190
 860 02f4 0022     		movs	r2, #0
 861 02f6 0821     		movs	r1, #8
 862 02f8 2800     		movs	r0, r5
 863 02fa FFF7FEFF 		bl	HAL_GPIO_WritePin
 864              	.LVL83:
 865 02fe A6E6     		b	.L22
 866              	.L36:
 508:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 867              		.loc 2 508 7 view .LVU191
 868 0300 9024     		movs	r4, #144
 869 0302 E405     		lsls	r4, r4, #23
 870 0304 0EA9     		add	r1, sp, #56
 871 0306 2000     		movs	r0, r4
 872 0308 FFF7FEFF 		bl	HAL_GPIO_Init
 873              	.LVL84:
 509:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 874              		.loc 2 509 7 view .LVU192
 875 030c 13A9     		add	r1, sp, #76
 876 030e 2000     		movs	r0, r4
 877 0310 FFF7FEFF 		bl	HAL_GPIO_Init
 878              	.LVL85:
 510:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 879              		.loc 2 510 7 view .LVU193
 880 0314 0121     		movs	r1, #1
 881 0316 2000     		movs	r0, r4
 882 0318 FFF7FEFF 		bl	HAL_GPIO_DeInit
 883              	.LVL86:
 511:Src/charlie.c ****             
 884              		.loc 2 511 7 view .LVU194
 885 031c 0221     		movs	r1, #2
ARM GAS  /tmp/cckp0GEV.s 			page 35


 886 031e 2000     		movs	r0, r4
 887 0320 FFF7FEFF 		bl	HAL_GPIO_DeInit
 888              	.LVL87:
 513:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 889              		.loc 2 513 7 view .LVU195
 890 0324 0022     		movs	r2, #0
 891 0326 0421     		movs	r1, #4
 892 0328 2000     		movs	r0, r4
 893 032a FFF7FEFF 		bl	HAL_GPIO_WritePin
 894              	.LVL88:
 514:Src/charlie.c ****       }
 895              		.loc 2 514 7 view .LVU196
 896 032e 0122     		movs	r2, #1
 897 0330 0821     		movs	r1, #8
 898 0332 2000     		movs	r0, r4
 899 0334 FFF7FEFF 		bl	HAL_GPIO_WritePin
 900              	.LVL89:
 901              		.loc 2 517 1 is_stmt 0 view .LVU197
 902 0338 8CE6     		b	.L10
 903              		.cfi_endproc
 904              	.LFE46:
 906              		.section	.text.hands,"ax",%progbits
 907              		.align	1
 908              		.global	hands
 909              		.syntax unified
 910              		.code	16
 911              		.thumb_func
 912              		.fpu softvfp
 914              	hands:
 915              	.LVL90:
 916              	.LFB44:
  58:Src/charlie.c **** 
 917              		.loc 2 58 127 is_stmt 1 view -0
 918              		.cfi_startproc
 919              		@ args = 88, pretend = 16, frame = 16
 920              		@ frame_needed = 0, uses_anonymous_args = 0
  58:Src/charlie.c **** 
 921              		.loc 2 58 127 is_stmt 0 view .LVU199
 922 0000 84B0     		sub	sp, sp, #16
 923              	.LCFI7:
 924              		.cfi_def_cfa_offset 16
 925 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 926              	.LCFI8:
 927              		.cfi_def_cfa_offset 36
 928              		.cfi_offset 4, -36
 929              		.cfi_offset 5, -32
 930              		.cfi_offset 6, -28
 931              		.cfi_offset 7, -24
 932              		.cfi_offset 14, -20
 933 0004 DE46     		mov	lr, fp
 934 0006 5746     		mov	r7, r10
 935 0008 4E46     		mov	r6, r9
 936 000a 4546     		mov	r5, r8
 937 000c E0B5     		push	{r5, r6, r7, lr}
 938              	.LCFI9:
 939              		.cfi_def_cfa_offset 52
 940              		.cfi_offset 8, -52
ARM GAS  /tmp/cckp0GEV.s 			page 36


 941              		.cfi_offset 9, -48
 942              		.cfi_offset 10, -44
 943              		.cfi_offset 11, -40
 944 000e 97B0     		sub	sp, sp, #92
 945              	.LCFI10:
 946              		.cfi_def_cfa_offset 144
 947 0010 2090     		str	r0, [sp, #128]
 948 0012 2191     		str	r1, [sp, #132]
 949 0014 2292     		str	r2, [sp, #136]
 950 0016 2393     		str	r3, [sp, #140]
 951 0018 349B     		ldr	r3, [sp, #208]
 952 001a 9A46     		mov	r10, r3
 953 001c 359B     		ldr	r3, [sp, #212]
 954 001e 9846     		mov	r8, r3
  61:Src/charlie.c **** 
 955              		.loc 2 61 4 is_stmt 1 view .LVU200
 956              	.LBB4:
  61:Src/charlie.c **** 
 957              		.loc 2 61 8 view .LVU201
 958              	.LVL91:
  61:Src/charlie.c **** 
 959              		.loc 2 61 12 is_stmt 0 view .LVU202
 960 0020 0023     		movs	r3, #0
 961 0022 1593     		str	r3, [sp, #84]
 962              	.LVL92:
 963              	.L38:
  61:Src/charlie.c **** 
 964              		.loc 2 61 19 is_stmt 1 discriminator 1 view .LVU203
  61:Src/charlie.c **** 
 965              		.loc 2 61 4 is_stmt 0 discriminator 1 view .LVU204
 966 0024 159B     		ldr	r3, [sp, #84]
 967 0026 632B     		cmp	r3, #99
 968 0028 00DD     		ble	.LCB788
 969 002a 89E0     		b	.L37	@long jump
 970              	.LCB788:
 971              	.LBB5:
  63:Src/charlie.c ****  //     say("first\n");
 972              		.loc 2 63 15 view .LVU205
 973 002c 0024     		movs	r4, #0
 974 002e 5546     		mov	r5, r10
 975 0030 4646     		mov	r6, r8
 976 0032 00E0     		b	.L43
 977              	.LVL93:
 978              	.L46:
  63:Src/charlie.c ****  //     say("first\n");
 979              		.loc 2 63 30 is_stmt 1 discriminator 2 view .LVU206
  63:Src/charlie.c ****  //     say("first\n");
 980              		.loc 2 63 31 is_stmt 0 discriminator 2 view .LVU207
 981 0034 0134     		adds	r4, r4, #1
 982              	.LVL94:
 983              	.L43:
  63:Src/charlie.c ****  //     say("first\n");
 984              		.loc 2 63 22 is_stmt 1 discriminator 1 view .LVU208
  63:Src/charlie.c ****  //     say("first\n");
 985              		.loc 2 63 7 is_stmt 0 discriminator 1 view .LVU209
 986 0036 092C     		cmp	r4, #9
 987 0038 2CDC     		bgt	.L45
ARM GAS  /tmp/cckp0GEV.s 			page 37


  65:Src/charlie.c ****          HAL_Delay(100);
 988              		.loc 2 65 10 is_stmt 1 view .LVU210
 989 003a 1095     		str	r5, [sp, #64]
 990 003c 2FA8     		add	r0, sp, #188
 991 003e 0BA9     		add	r1, sp, #44
 992 0040 0B00     		movs	r3, r1
 993 0042 0200     		movs	r2, r0
 994 0044 83CA     		ldmia	r2!, {r0, r1, r7}
 995 0046 83C3     		stmia	r3!, {r0, r1, r7}
 996 0048 03CA     		ldmia	r2!, {r0, r1}
 997 004a 03C3     		stmia	r3!, {r0, r1}
 998 004c 2AA8     		add	r0, sp, #168
 999 004e 06A9     		add	r1, sp, #24
 1000 0050 0B00     		movs	r3, r1
 1001 0052 0200     		movs	r2, r0
 1002 0054 83CA     		ldmia	r2!, {r0, r1, r7}
 1003 0056 83C3     		stmia	r3!, {r0, r1, r7}
 1004 0058 03CA     		ldmia	r2!, {r0, r1}
 1005 005a 03C3     		stmia	r3!, {r0, r1}
 1006 005c 25A8     		add	r0, sp, #148
 1007 005e 01A9     		add	r1, sp, #4
 1008 0060 0B00     		movs	r3, r1
 1009 0062 0200     		movs	r2, r0
 1010 0064 83CA     		ldmia	r2!, {r0, r1, r7}
 1011 0066 83C3     		stmia	r3!, {r0, r1, r7}
 1012 0068 03CA     		ldmia	r2!, {r0, r1}
 1013 006a 03C3     		stmia	r3!, {r0, r1}
 1014 006c 249B     		ldr	r3, [sp, #144]
 1015 006e 0093     		str	r3, [sp]
 1016 0070 2098     		ldr	r0, [sp, #128]
 1017 0072 2199     		ldr	r1, [sp, #132]
 1018 0074 229A     		ldr	r2, [sp, #136]
 1019 0076 239B     		ldr	r3, [sp, #140]
 1020 0078 FFF7FEFF 		bl	charlie
 1021              	.LVL95:
  66:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
 1022              		.loc 2 66 10 view .LVU211
 1023 007c 6420     		movs	r0, #100
 1024 007e FFF7FEFF 		bl	HAL_Delay
 1025              	.LVL96:
  67:Src/charlie.c ****             return;
 1026              		.loc 2 67 10 view .LVU212
  67:Src/charlie.c ****             return;
 1027              		.loc 2 67 22 is_stmt 0 view .LVU213
 1028 0082 364B     		ldr	r3, .L49
 1029 0084 1B68     		ldr	r3, [r3]
  67:Src/charlie.c ****             return;
 1030              		.loc 2 67 12 view .LVU214
 1031 0086 012B     		cmp	r3, #1
 1032 0088 5AD0     		beq	.L37
  67:Src/charlie.c ****             return;
 1033              		.loc 2 67 27 discriminator 1 view .LVU215
 1034 008a 012E     		cmp	r6, #1
 1035 008c 58D0     		beq	.L37
  67:Src/charlie.c ****             return;
 1036              		.loc 2 67 43 discriminator 2 view .LVU216
 1037 008e 012D     		cmp	r5, #1
ARM GAS  /tmp/cckp0GEV.s 			page 38


 1038 0090 D0D1     		bne	.L46
 1039 0092 55E0     		b	.L37
 1040              	.L45:
 1041 0094 AA46     		mov	r10, r5
 1042 0096 B046     		mov	r8, r6
 1043              	.LBE5:
 1044              	.LBB6:
  70:Src/charlie.c ****  //     say("second\n");
 1045              		.loc 2 70 15 view .LVU217
 1046 0098 0023     		movs	r3, #0
 1047 009a 9946     		mov	r9, r3
 1048 009c 02E0     		b	.L41
 1049              	.LVL97:
 1050              	.L48:
  70:Src/charlie.c ****  //     say("second\n");
 1051              		.loc 2 70 31 is_stmt 1 discriminator 2 view .LVU218
  70:Src/charlie.c ****  //     say("second\n");
 1052              		.loc 2 70 32 is_stmt 0 discriminator 2 view .LVU219
 1053 009e 0123     		movs	r3, #1
 1054 00a0 9C46     		mov	ip, r3
 1055 00a2 E144     		add	r9, r9, ip
 1056              	.LVL98:
 1057              	.L41:
  70:Src/charlie.c ****  //     say("second\n");
 1058              		.loc 2 70 22 is_stmt 1 discriminator 1 view .LVU220
  70:Src/charlie.c ****  //     say("second\n");
 1059              		.loc 2 70 7 is_stmt 0 discriminator 1 view .LVU221
 1060 00a4 FA23     		movs	r3, #250
 1061 00a6 5B00     		lsls	r3, r3, #1
 1062 00a8 9945     		cmp	r9, r3
 1063 00aa 53DA     		bge	.L47
  72:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, minutes);
 1064              		.loc 2 72 10 is_stmt 1 view .LVU222
 1065 00ac 5346     		mov	r3, r10
 1066 00ae 1093     		str	r3, [sp, #64]
 1067 00b0 2FAB     		add	r3, sp, #188
 1068 00b2 9B46     		mov	fp, r3
 1069 00b4 0BAB     		add	r3, sp, #44
 1070 00b6 1393     		str	r3, [sp, #76]
 1071 00b8 5A46     		mov	r2, fp
 1072 00ba 13CA     		ldmia	r2!, {r0, r1, r4}
 1073 00bc 13C3     		stmia	r3!, {r0, r1, r4}
 1074 00be 03CA     		ldmia	r2!, {r0, r1}
 1075 00c0 03C3     		stmia	r3!, {r0, r1}
 1076 00c2 2AAF     		add	r7, sp, #168
 1077 00c4 06AE     		add	r6, sp, #24
 1078 00c6 3300     		movs	r3, r6
 1079 00c8 3A00     		movs	r2, r7
 1080 00ca 13CA     		ldmia	r2!, {r0, r1, r4}
 1081 00cc 13C3     		stmia	r3!, {r0, r1, r4}
 1082 00ce 03CA     		ldmia	r2!, {r0, r1}
 1083 00d0 03C3     		stmia	r3!, {r0, r1}
 1084 00d2 25AD     		add	r5, sp, #148
 1085 00d4 01AB     		add	r3, sp, #4
 1086 00d6 1493     		str	r3, [sp, #80]
 1087 00d8 2A00     		movs	r2, r5
 1088 00da 13CA     		ldmia	r2!, {r0, r1, r4}
ARM GAS  /tmp/cckp0GEV.s 			page 39


 1089 00dc 13C3     		stmia	r3!, {r0, r1, r4}
 1090 00de 03CA     		ldmia	r2!, {r0, r1}
 1091 00e0 03C3     		stmia	r3!, {r0, r1}
 1092 00e2 249A     		ldr	r2, [sp, #144]
 1093 00e4 0092     		str	r2, [sp]
 1094 00e6 2098     		ldr	r0, [sp, #128]
 1095 00e8 2199     		ldr	r1, [sp, #132]
 1096 00ea 229A     		ldr	r2, [sp, #136]
 1097 00ec 239B     		ldr	r3, [sp, #140]
 1098 00ee FFF7FEFF 		bl	charlie
 1099              	.LVL99:
  73:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
 1100              		.loc 2 73 10 view .LVU223
 1101 00f2 4246     		mov	r2, r8
 1102 00f4 1092     		str	r2, [sp, #64]
 1103 00f6 1399     		ldr	r1, [sp, #76]
 1104 00f8 0B00     		movs	r3, r1
 1105 00fa 5A46     		mov	r2, fp
 1106 00fc 13CA     		ldmia	r2!, {r0, r1, r4}
 1107 00fe 13C3     		stmia	r3!, {r0, r1, r4}
 1108 0100 03CA     		ldmia	r2!, {r0, r1}
 1109 0102 03C3     		stmia	r3!, {r0, r1}
 1110 0104 3300     		movs	r3, r6
 1111 0106 3A00     		movs	r2, r7
 1112 0108 13CA     		ldmia	r2!, {r0, r1, r4}
 1113 010a 13C3     		stmia	r3!, {r0, r1, r4}
 1114 010c 03CA     		ldmia	r2!, {r0, r1}
 1115 010e 03C3     		stmia	r3!, {r0, r1}
 1116 0110 149B     		ldr	r3, [sp, #80]
 1117 0112 2A00     		movs	r2, r5
 1118 0114 13CA     		ldmia	r2!, {r0, r1, r4}
 1119 0116 13C3     		stmia	r3!, {r0, r1, r4}
 1120 0118 03CA     		ldmia	r2!, {r0, r1}
 1121 011a 03C3     		stmia	r3!, {r0, r1}
 1122 011c 249B     		ldr	r3, [sp, #144]
 1123 011e 0093     		str	r3, [sp]
 1124 0120 2098     		ldr	r0, [sp, #128]
 1125 0122 2199     		ldr	r1, [sp, #132]
 1126 0124 229A     		ldr	r2, [sp, #136]
 1127 0126 239B     		ldr	r3, [sp, #140]
 1128 0128 FFF7FEFF 		bl	charlie
 1129              	.LVL100:
  74:Src/charlie.c ****             return;
 1130              		.loc 2 74 10 view .LVU224
  74:Src/charlie.c ****             return;
 1131              		.loc 2 74 22 is_stmt 0 view .LVU225
 1132 012c 0B4B     		ldr	r3, .L49
 1133 012e 1B68     		ldr	r3, [r3]
  74:Src/charlie.c ****             return;
 1134              		.loc 2 74 12 view .LVU226
 1135 0130 012B     		cmp	r3, #1
 1136 0132 05D0     		beq	.L37
  74:Src/charlie.c ****             return;
 1137              		.loc 2 74 27 discriminator 1 view .LVU227
 1138 0134 4346     		mov	r3, r8
 1139 0136 012B     		cmp	r3, #1
 1140 0138 02D0     		beq	.L37
ARM GAS  /tmp/cckp0GEV.s 			page 40


  74:Src/charlie.c ****             return;
 1141              		.loc 2 74 43 discriminator 2 view .LVU228
 1142 013a 5346     		mov	r3, r10
 1143 013c 012B     		cmp	r3, #1
 1144 013e AED1     		bne	.L48
 1145              	.LVL101:
 1146              	.L37:
  74:Src/charlie.c ****             return;
 1147              		.loc 2 74 43 discriminator 2 view .LVU229
 1148              	.LBE6:
 1149              	.LBE4:
  78:Src/charlie.c **** 
 1150              		.loc 2 78 1 view .LVU230
 1151 0140 17B0     		add	sp, sp, #92
 1152              		@ sp needed
 1153 0142 3CBC     		pop	{r2, r3, r4, r5}
 1154 0144 9046     		mov	r8, r2
 1155 0146 9946     		mov	r9, r3
 1156 0148 A246     		mov	r10, r4
 1157 014a AB46     		mov	fp, r5
 1158 014c F0BC     		pop	{r4, r5, r6, r7}
 1159 014e 08BC     		pop	{r3}
 1160 0150 04B0     		add	sp, sp, #16
 1161 0152 1847     		bx	r3
 1162              	.LVL102:
 1163              	.L47:
 1164              	.LBB7:
  61:Src/charlie.c **** 
 1165              		.loc 2 61 28 is_stmt 1 discriminator 2 view .LVU231
  61:Src/charlie.c **** 
 1166              		.loc 2 61 29 is_stmt 0 discriminator 2 view .LVU232
 1167 0154 159B     		ldr	r3, [sp, #84]
 1168 0156 0133     		adds	r3, r3, #1
 1169 0158 1593     		str	r3, [sp, #84]
 1170              	.LVL103:
  61:Src/charlie.c **** 
 1171              		.loc 2 61 29 discriminator 2 view .LVU233
 1172 015a 63E7     		b	.L38
 1173              	.L50:
 1174              		.align	2
 1175              	.L49:
 1176 015c 00000000 		.word	.LANCHOR0
 1177              	.LBE7:
 1178              		.cfi_endproc
 1179              	.LFE44:
 1181              		.section	.text.clock,"ax",%progbits
 1182              		.align	1
 1183              		.global	clock
 1184              		.syntax unified
 1185              		.code	16
 1186              		.thumb_func
 1187              		.fpu softvfp
 1189              	clock:
 1190              	.LFB43:
  15:Src/charlie.c ****    RTC_TimeTypeDef RTCtime;
 1191              		.loc 2 15 131 is_stmt 1 view -0
 1192              		.cfi_startproc
ARM GAS  /tmp/cckp0GEV.s 			page 41


 1193              		@ args = 112, pretend = 16, frame = 24
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195 0000 84B0     		sub	sp, sp, #16
 1196              	.LCFI11:
 1197              		.cfi_def_cfa_offset 16
 1198 0002 10B5     		push	{r4, lr}
 1199              	.LCFI12:
 1200              		.cfi_def_cfa_offset 24
 1201              		.cfi_offset 4, -24
 1202              		.cfi_offset 14, -20
 1203 0004 98B0     		sub	sp, sp, #96
 1204              	.LCFI13:
 1205              		.cfi_def_cfa_offset 120
 1206 0006 1A90     		str	r0, [sp, #104]
 1207 0008 1B91     		str	r1, [sp, #108]
 1208 000a 1C92     		str	r2, [sp, #112]
 1209 000c 1D93     		str	r3, [sp, #116]
  16:Src/charlie.c ****    RTC_DateTypeDef RTCdate;
 1210              		.loc 2 16 4 view .LVU235
  17:Src/charlie.c ****    HAL_RTC_GetTime(&whatTime, &RTCtime, RTC_FORMAT_BIN);
 1211              		.loc 2 17 4 view .LVU236
  18:Src/charlie.c ****    HAL_RTC_GetDate(&whatTime, &RTCdate, RTC_FORMAT_BIN);
 1212              		.loc 2 18 4 view .LVU237
 1213 000e 0022     		movs	r2, #0
 1214 0010 13A9     		add	r1, sp, #76
 1215 0012 2EA8     		add	r0, sp, #184
 1216 0014 FFF7FEFF 		bl	HAL_RTC_GetTime
 1217              	.LVL104:
  19:Src/charlie.c **** 
 1218              		.loc 2 19 4 view .LVU238
 1219 0018 0022     		movs	r2, #0
 1220 001a 12A9     		add	r1, sp, #72
 1221 001c 2EA8     		add	r0, sp, #184
 1222 001e FFF7FEFF 		bl	HAL_RTC_GetDate
 1223              	.LVL105:
  21:Src/charlie.c ****    int hours = RTCtime.Hours;
 1224              		.loc 2 21 4 view .LVU239
  21:Src/charlie.c ****    int hours = RTCtime.Hours;
 1225              		.loc 2 21 25 is_stmt 0 view .LVU240
 1226 0022 6B46     		mov	r3, sp
 1227 0024 4D22     		movs	r2, #77
 1228 0026 9B18     		adds	r3, r3, r2
 1229 0028 1B78     		ldrb	r3, [r3]
 1230              	.LVL106:
  22:Src/charlie.c ****    int displayMin = 0;
 1231              		.loc 2 22 4 is_stmt 1 view .LVU241
  22:Src/charlie.c ****    int displayMin = 0;
 1232              		.loc 2 22 23 is_stmt 0 view .LVU242
 1233 002a 6A46     		mov	r2, sp
 1234 002c 4C21     		movs	r1, #76
 1235 002e 5218     		adds	r2, r2, r1
 1236 0030 1278     		ldrb	r2, [r2]
 1237              	.LVL107:
  23:Src/charlie.c **** 
 1238              		.loc 2 23 4 is_stmt 1 view .LVU243
  26:Src/charlie.c ****       displayMin = 12;
 1239              		.loc 2 26 4 view .LVU244
ARM GAS  /tmp/cckp0GEV.s 			page 42


  26:Src/charlie.c ****       displayMin = 12;
 1240              		.loc 2 26 19 is_stmt 0 view .LVU245
 1241 0032 591E     		subs	r1, r3, #1
  26:Src/charlie.c ****       displayMin = 12;
 1242              		.loc 2 26 6 view .LVU246
 1243 0034 0129     		cmp	r1, #1
 1244 0036 25D9     		bls	.L53
  28:Src/charlie.c ****       displayMin = 1;
 1245              		.loc 2 28 9 is_stmt 1 view .LVU247
  28:Src/charlie.c ****       displayMin = 1;
 1246              		.loc 2 28 24 is_stmt 0 view .LVU248
 1247 0038 191F     		subs	r1, r3, #4
  28:Src/charlie.c ****       displayMin = 1;
 1248              		.loc 2 28 11 view .LVU249
 1249 003a 0229     		cmp	r1, #2
 1250 003c 4AD9     		bls	.L54
  30:Src/charlie.c ****       displayMin = 2;
 1251              		.loc 2 30 9 is_stmt 1 view .LVU250
  30:Src/charlie.c ****       displayMin = 2;
 1252              		.loc 2 30 24 is_stmt 0 view .LVU251
 1253 003e 0439     		subs	r1, r1, #4
  30:Src/charlie.c ****       displayMin = 2;
 1254              		.loc 2 30 11 view .LVU252
 1255 0040 0329     		cmp	r1, #3
 1256 0042 49D9     		bls	.L55
  32:Src/charlie.c ****       displayMin = 3;
 1257              		.loc 2 32 9 is_stmt 1 view .LVU253
  32:Src/charlie.c ****       displayMin = 3;
 1258              		.loc 2 32 25 is_stmt 0 view .LVU254
 1259 0044 0539     		subs	r1, r1, #5
  32:Src/charlie.c ****       displayMin = 3;
 1260              		.loc 2 32 11 view .LVU255
 1261 0046 0329     		cmp	r1, #3
 1262 0048 48D9     		bls	.L56
  34:Src/charlie.c ****       displayMin = 4;
 1263              		.loc 2 34 9 is_stmt 1 view .LVU256
  34:Src/charlie.c ****       displayMin = 4;
 1264              		.loc 2 34 25 is_stmt 0 view .LVU257
 1265 004a 0539     		subs	r1, r1, #5
  34:Src/charlie.c ****       displayMin = 4;
 1266              		.loc 2 34 11 view .LVU258
 1267 004c 0329     		cmp	r1, #3
 1268 004e 47D9     		bls	.L57
  36:Src/charlie.c ****       displayMin = 5;
 1269              		.loc 2 36 9 is_stmt 1 view .LVU259
  36:Src/charlie.c ****       displayMin = 5;
 1270              		.loc 2 36 25 is_stmt 0 view .LVU260
 1271 0050 0539     		subs	r1, r1, #5
  36:Src/charlie.c ****       displayMin = 5;
 1272              		.loc 2 36 11 view .LVU261
 1273 0052 0329     		cmp	r1, #3
 1274 0054 46D9     		bls	.L58
  38:Src/charlie.c ****       displayMin = 6;
 1275              		.loc 2 38 9 is_stmt 1 view .LVU262
  38:Src/charlie.c ****       displayMin = 6;
 1276              		.loc 2 38 25 is_stmt 0 view .LVU263
 1277 0056 0539     		subs	r1, r1, #5
ARM GAS  /tmp/cckp0GEV.s 			page 43


  38:Src/charlie.c ****       displayMin = 6;
 1278              		.loc 2 38 11 view .LVU264
 1279 0058 0329     		cmp	r1, #3
 1280 005a 45D9     		bls	.L59
  40:Src/charlie.c ****       displayMin = 7;
 1281              		.loc 2 40 9 is_stmt 1 view .LVU265
  40:Src/charlie.c ****       displayMin = 7;
 1282              		.loc 2 40 25 is_stmt 0 view .LVU266
 1283 005c 0539     		subs	r1, r1, #5
  40:Src/charlie.c ****       displayMin = 7;
 1284              		.loc 2 40 11 view .LVU267
 1285 005e 0329     		cmp	r1, #3
 1286 0060 44D9     		bls	.L60
  42:Src/charlie.c ****       displayMin = 8;
 1287              		.loc 2 42 9 is_stmt 1 view .LVU268
  42:Src/charlie.c ****       displayMin = 8;
 1288              		.loc 2 42 25 is_stmt 0 view .LVU269
 1289 0062 0539     		subs	r1, r1, #5
  42:Src/charlie.c ****       displayMin = 8;
 1290              		.loc 2 42 11 view .LVU270
 1291 0064 0329     		cmp	r1, #3
 1292 0066 43D9     		bls	.L61
  44:Src/charlie.c ****       displayMin = 9;
 1293              		.loc 2 44 9 is_stmt 1 view .LVU271
  44:Src/charlie.c ****       displayMin = 9;
 1294              		.loc 2 44 25 is_stmt 0 view .LVU272
 1295 0068 0539     		subs	r1, r1, #5
  44:Src/charlie.c ****       displayMin = 9;
 1296              		.loc 2 44 11 view .LVU273
 1297 006a 0329     		cmp	r1, #3
 1298 006c 42D9     		bls	.L62
  46:Src/charlie.c ****       displayMin = 10;
 1299              		.loc 2 46 9 is_stmt 1 view .LVU274
  46:Src/charlie.c ****       displayMin = 10;
 1300              		.loc 2 46 25 is_stmt 0 view .LVU275
 1301 006e 0539     		subs	r1, r1, #5
  46:Src/charlie.c ****       displayMin = 10;
 1302              		.loc 2 46 11 view .LVU276
 1303 0070 0329     		cmp	r1, #3
 1304 0072 41D9     		bls	.L63
  48:Src/charlie.c ****       displayMin = 11;
 1305              		.loc 2 48 9 is_stmt 1 view .LVU277
  48:Src/charlie.c ****       displayMin = 11;
 1306              		.loc 2 48 25 is_stmt 0 view .LVU278
 1307 0074 0539     		subs	r1, r1, #5
  48:Src/charlie.c ****       displayMin = 11;
 1308              		.loc 2 48 11 view .LVU279
 1309 0076 0329     		cmp	r1, #3
 1310 0078 40D9     		bls	.L64
  50:Src/charlie.c ****       displayMin = 12;
 1311              		.loc 2 50 9 is_stmt 1 view .LVU280
  50:Src/charlie.c ****       displayMin = 12;
 1312              		.loc 2 50 25 is_stmt 0 view .LVU281
 1313 007a 3A3B     		subs	r3, r3, #58
 1314              	.LVL108:
  50:Src/charlie.c ****       displayMin = 12;
 1315              		.loc 2 50 11 view .LVU282
ARM GAS  /tmp/cckp0GEV.s 			page 44


 1316 007c 022B     		cmp	r3, #2
 1317 007e 3FD9     		bls	.L65
  23:Src/charlie.c **** 
 1318              		.loc 2 23 8 view .LVU283
 1319 0080 0023     		movs	r3, #0
 1320              	.LVL109:
  23:Src/charlie.c **** 
 1321              		.loc 2 23 8 view .LVU284
 1322 0082 00E0     		b	.L52
 1323              	.LVL110:
 1324              	.L53:
  27:Src/charlie.c ****    else if(minutes > 3 && minutes < 7)
 1325              		.loc 2 27 18 view .LVU285
 1326 0084 0C23     		movs	r3, #12
 1327              	.LVL111:
 1328              	.L52:
  53:Src/charlie.c ****    
 1329              		.loc 2 53 4 is_stmt 1 view .LVU286
 1330 0086 1193     		str	r3, [sp, #68]
 1331              	.LVL112:
  53:Src/charlie.c ****    
 1332              		.loc 2 53 4 is_stmt 0 view .LVU287
 1333 0088 1092     		str	r2, [sp, #64]
 1334 008a 29A8     		add	r0, sp, #164
 1335 008c 0BA9     		add	r1, sp, #44
 1336 008e 0B00     		movs	r3, r1
 1337              	.LVL113:
  53:Src/charlie.c ****    
 1338              		.loc 2 53 4 view .LVU288
 1339 0090 0200     		movs	r2, r0
 1340              	.LVL114:
  53:Src/charlie.c ****    
 1341              		.loc 2 53 4 view .LVU289
 1342 0092 13CA     		ldmia	r2!, {r0, r1, r4}
 1343 0094 13C3     		stmia	r3!, {r0, r1, r4}
 1344 0096 03CA     		ldmia	r2!, {r0, r1}
 1345 0098 03C3     		stmia	r3!, {r0, r1}
 1346 009a 24A8     		add	r0, sp, #144
 1347 009c 06A9     		add	r1, sp, #24
 1348 009e 0B00     		movs	r3, r1
 1349 00a0 0200     		movs	r2, r0
 1350 00a2 13CA     		ldmia	r2!, {r0, r1, r4}
 1351 00a4 13C3     		stmia	r3!, {r0, r1, r4}
 1352 00a6 03CA     		ldmia	r2!, {r0, r1}
 1353 00a8 03C3     		stmia	r3!, {r0, r1}
 1354 00aa 1FA8     		add	r0, sp, #124
 1355 00ac 01A9     		add	r1, sp, #4
 1356 00ae 0B00     		movs	r3, r1
 1357 00b0 0200     		movs	r2, r0
 1358 00b2 13CA     		ldmia	r2!, {r0, r1, r4}
 1359 00b4 13C3     		stmia	r3!, {r0, r1, r4}
 1360 00b6 03CA     		ldmia	r2!, {r0, r1}
 1361 00b8 03C3     		stmia	r3!, {r0, r1}
 1362 00ba 1E9B     		ldr	r3, [sp, #120]
 1363 00bc 0093     		str	r3, [sp]
 1364 00be 1A98     		ldr	r0, [sp, #104]
 1365 00c0 1B99     		ldr	r1, [sp, #108]
ARM GAS  /tmp/cckp0GEV.s 			page 45


 1366 00c2 1C9A     		ldr	r2, [sp, #112]
 1367 00c4 1D9B     		ldr	r3, [sp, #116]
 1368 00c6 FFF7FEFF 		bl	hands
 1369              	.LVL115:
  55:Src/charlie.c **** 
 1370              		.loc 2 55 1 view .LVU290
 1371 00ca 18B0     		add	sp, sp, #96
 1372              		@ sp needed
 1373 00cc 10BC     		pop	{r4}
 1374 00ce 08BC     		pop	{r3}
 1375 00d0 04B0     		add	sp, sp, #16
 1376 00d2 1847     		bx	r3
 1377              	.LVL116:
 1378              	.L54:
  29:Src/charlie.c ****    else if(minutes > 7 && minutes < 12)
 1379              		.loc 2 29 18 view .LVU291
 1380 00d4 0123     		movs	r3, #1
 1381              	.LVL117:
  29:Src/charlie.c ****    else if(minutes > 7 && minutes < 12)
 1382              		.loc 2 29 18 view .LVU292
 1383 00d6 D6E7     		b	.L52
 1384              	.LVL118:
 1385              	.L55:
  31:Src/charlie.c ****    else if(minutes > 12 && minutes < 17)
 1386              		.loc 2 31 18 view .LVU293
 1387 00d8 0223     		movs	r3, #2
 1388              	.LVL119:
  31:Src/charlie.c ****    else if(minutes > 12 && minutes < 17)
 1389              		.loc 2 31 18 view .LVU294
 1390 00da D4E7     		b	.L52
 1391              	.LVL120:
 1392              	.L56:
  33:Src/charlie.c ****    else if(minutes > 17 && minutes < 22)
 1393              		.loc 2 33 18 view .LVU295
 1394 00dc 0323     		movs	r3, #3
 1395              	.LVL121:
  33:Src/charlie.c ****    else if(minutes > 17 && minutes < 22)
 1396              		.loc 2 33 18 view .LVU296
 1397 00de D2E7     		b	.L52
 1398              	.LVL122:
 1399              	.L57:
  35:Src/charlie.c ****    else if(minutes > 22 && minutes < 27)
 1400              		.loc 2 35 18 view .LVU297
 1401 00e0 0423     		movs	r3, #4
 1402              	.LVL123:
  35:Src/charlie.c ****    else if(minutes > 22 && minutes < 27)
 1403              		.loc 2 35 18 view .LVU298
 1404 00e2 D0E7     		b	.L52
 1405              	.LVL124:
 1406              	.L58:
  37:Src/charlie.c ****    else if(minutes > 27 && minutes < 32)
 1407              		.loc 2 37 18 view .LVU299
 1408 00e4 0523     		movs	r3, #5
 1409              	.LVL125:
  37:Src/charlie.c ****    else if(minutes > 27 && minutes < 32)
 1410              		.loc 2 37 18 view .LVU300
 1411 00e6 CEE7     		b	.L52
ARM GAS  /tmp/cckp0GEV.s 			page 46


 1412              	.LVL126:
 1413              	.L59:
  39:Src/charlie.c ****    else if(minutes > 32 && minutes < 37)
 1414              		.loc 2 39 18 view .LVU301
 1415 00e8 0623     		movs	r3, #6
 1416              	.LVL127:
  39:Src/charlie.c ****    else if(minutes > 32 && minutes < 37)
 1417              		.loc 2 39 18 view .LVU302
 1418 00ea CCE7     		b	.L52
 1419              	.LVL128:
 1420              	.L60:
  41:Src/charlie.c ****    else if(minutes > 37 && minutes < 42)
 1421              		.loc 2 41 18 view .LVU303
 1422 00ec 0723     		movs	r3, #7
 1423              	.LVL129:
  41:Src/charlie.c ****    else if(minutes > 37 && minutes < 42)
 1424              		.loc 2 41 18 view .LVU304
 1425 00ee CAE7     		b	.L52
 1426              	.LVL130:
 1427              	.L61:
  43:Src/charlie.c ****    else if(minutes > 42 && minutes < 47)
 1428              		.loc 2 43 18 view .LVU305
 1429 00f0 0823     		movs	r3, #8
 1430              	.LVL131:
  43:Src/charlie.c ****    else if(minutes > 42 && minutes < 47)
 1431              		.loc 2 43 18 view .LVU306
 1432 00f2 C8E7     		b	.L52
 1433              	.LVL132:
 1434              	.L62:
  45:Src/charlie.c ****    else if(minutes > 47 && minutes < 52)
 1435              		.loc 2 45 18 view .LVU307
 1436 00f4 0923     		movs	r3, #9
 1437              	.LVL133:
  45:Src/charlie.c ****    else if(minutes > 47 && minutes < 52)
 1438              		.loc 2 45 18 view .LVU308
 1439 00f6 C6E7     		b	.L52
 1440              	.LVL134:
 1441              	.L63:
  47:Src/charlie.c ****    else if(minutes > 52 && minutes < 57)
 1442              		.loc 2 47 18 view .LVU309
 1443 00f8 0A23     		movs	r3, #10
 1444              	.LVL135:
  47:Src/charlie.c ****    else if(minutes > 52 && minutes < 57)
 1445              		.loc 2 47 18 view .LVU310
 1446 00fa C4E7     		b	.L52
 1447              	.LVL136:
 1448              	.L64:
  49:Src/charlie.c ****    else if(minutes > 57 && minutes < 61)
 1449              		.loc 2 49 18 view .LVU311
 1450 00fc 0B23     		movs	r3, #11
 1451              	.LVL137:
  49:Src/charlie.c ****    else if(minutes > 57 && minutes < 61)
 1452              		.loc 2 49 18 view .LVU312
 1453 00fe C2E7     		b	.L52
 1454              	.L65:
  51:Src/charlie.c **** 
 1455              		.loc 2 51 18 view .LVU313
ARM GAS  /tmp/cckp0GEV.s 			page 47


 1456 0100 0C23     		movs	r3, #12
 1457 0102 C0E7     		b	.L52
 1458              		.cfi_endproc
 1459              	.LFE43:
 1461              		.section	.text.dance,"ax",%progbits
 1462              		.align	1
 1463              		.global	dance
 1464              		.syntax unified
 1465              		.code	16
 1466              		.thumb_func
 1467              		.fpu softvfp
 1469              	dance:
 1470              	.LVL138:
 1471              	.LFB45:
  80:Src/charlie.c ****    // Off
 1472              		.loc 2 80 114 is_stmt 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 84, pretend = 16, frame = 8
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Src/charlie.c ****    // Off
 1476              		.loc 2 80 114 is_stmt 0 view .LVU315
 1477 0000 84B0     		sub	sp, sp, #16
 1478              	.LCFI14:
 1479              		.cfi_def_cfa_offset 16
 1480 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1481              	.LCFI15:
 1482              		.cfi_def_cfa_offset 36
 1483              		.cfi_offset 4, -36
 1484              		.cfi_offset 5, -32
 1485              		.cfi_offset 6, -28
 1486              		.cfi_offset 7, -24
 1487              		.cfi_offset 14, -20
 1488 0004 DE46     		mov	lr, fp
 1489 0006 5746     		mov	r7, r10
 1490 0008 4E46     		mov	r6, r9
 1491 000a 4546     		mov	r5, r8
 1492 000c E0B5     		push	{r5, r6, r7, lr}
 1493              	.LCFI16:
 1494              		.cfi_def_cfa_offset 52
 1495              		.cfi_offset 8, -52
 1496              		.cfi_offset 9, -48
 1497              		.cfi_offset 10, -44
 1498              		.cfi_offset 11, -40
 1499 000e 95B0     		sub	sp, sp, #84
 1500              	.LCFI17:
 1501              		.cfi_def_cfa_offset 136
 1502 0010 1E90     		str	r0, [sp, #120]
 1503 0012 1F91     		str	r1, [sp, #124]
 1504 0014 2092     		str	r2, [sp, #128]
 1505 0016 2193     		str	r3, [sp, #132]
 1506 0018 329C     		ldr	r4, [sp, #200]
  82:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1507              		.loc 2 82 4 is_stmt 1 view .LVU316
  82:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1508              		.loc 2 82 6 is_stmt 0 view .LVU317
 1509 001a 002C     		cmp	r4, #0
 1510 001c 16D0     		beq	.L101
ARM GAS  /tmp/cckp0GEV.s 			page 48


 1511              	.L67:
 144:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1512              		.loc 2 144 4 is_stmt 1 view .LVU318
 144:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1513              		.loc 2 144 6 is_stmt 0 view .LVU319
 1514 001e 012C     		cmp	r4, #1
 1515 0020 37D0     		beq	.L102
 1516              	.L68:
 200:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1517              		.loc 2 200 4 is_stmt 1 view .LVU320
 200:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1518              		.loc 2 200 6 is_stmt 0 view .LVU321
 1519 0022 022C     		cmp	r4, #2
 1520 0024 00D1     		bne	.LCB1292
 1521 0026 69E2     		b	.L103	@long jump
 1522              	.LCB1292:
 1523              	.L70:
 256:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 1524              		.loc 2 256 4 is_stmt 1 view .LVU322
 256:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 1525              		.loc 2 256 6 is_stmt 0 view .LVU323
 1526 0028 032C     		cmp	r4, #3
 1527 002a 01D1     		bne	.LCB1296
 1528 002c 00F09EFC 		bl	.L104	@far jump
 1529              	.LCB1296:
 1530              	.L71:
 270:Src/charlie.c ****       for(int i =1; i<=7; i++){
 1531              		.loc 2 270 4 is_stmt 1 view .LVU324
 270:Src/charlie.c ****       for(int i =1; i<=7; i++){
 1532              		.loc 2 270 6 is_stmt 0 view .LVU325
 1533 0030 042C     		cmp	r4, #4
 1534 0032 01D1     		bne	.LCB1300
 1535 0034 00F001FF 		bl	.L105	@far jump
 1536              	.LCB1300:
 1537              	.LVL139:
 1538              	.L66:
 332:Src/charlie.c **** 
 1539              		.loc 2 332 1 view .LVU326
 1540 0038 15B0     		add	sp, sp, #84
 1541              		@ sp needed
 1542 003a 3CBC     		pop	{r2, r3, r4, r5}
 1543 003c 9046     		mov	r8, r2
 1544 003e 9946     		mov	r9, r3
 1545 0040 A246     		mov	r10, r4
 1546 0042 AB46     		mov	fp, r5
 1547 0044 F0BC     		pop	{r4, r5, r6, r7}
 1548 0046 08BC     		pop	{r3}
 1549 0048 04B0     		add	sp, sp, #16
 1550 004a 1847     		bx	r3
 1551              	.LVL140:
 1552              	.L101:
  83:Src/charlie.c ****    }
 1553              		.loc 2 83 8 is_stmt 1 view .LVU327
 1554 004c 0023     		movs	r3, #0
 1555 004e 1093     		str	r3, [sp, #64]
 1556 0050 2DA8     		add	r0, sp, #180
 1557 0052 0BA9     		add	r1, sp, #44
ARM GAS  /tmp/cckp0GEV.s 			page 49


 1558 0054 0B00     		movs	r3, r1
 1559 0056 0200     		movs	r2, r0
 1560 0058 23CA     		ldmia	r2!, {r0, r1, r5}
 1561 005a 23C3     		stmia	r3!, {r0, r1, r5}
 1562 005c 03CA     		ldmia	r2!, {r0, r1}
 1563 005e 03C3     		stmia	r3!, {r0, r1}
 1564 0060 28A8     		add	r0, sp, #160
 1565 0062 06A9     		add	r1, sp, #24
 1566 0064 0B00     		movs	r3, r1
 1567 0066 0200     		movs	r2, r0
 1568 0068 23CA     		ldmia	r2!, {r0, r1, r5}
 1569 006a 23C3     		stmia	r3!, {r0, r1, r5}
 1570 006c 03CA     		ldmia	r2!, {r0, r1}
 1571 006e 03C3     		stmia	r3!, {r0, r1}
 1572 0070 23A8     		add	r0, sp, #140
 1573 0072 01A9     		add	r1, sp, #4
 1574 0074 0B00     		movs	r3, r1
 1575 0076 0200     		movs	r2, r0
 1576 0078 23CA     		ldmia	r2!, {r0, r1, r5}
 1577 007a 23C3     		stmia	r3!, {r0, r1, r5}
 1578 007c 03CA     		ldmia	r2!, {r0, r1}
 1579 007e 03C3     		stmia	r3!, {r0, r1}
 1580 0080 229B     		ldr	r3, [sp, #136]
 1581 0082 0093     		str	r3, [sp]
 1582 0084 1E98     		ldr	r0, [sp, #120]
 1583 0086 1F99     		ldr	r1, [sp, #124]
 1584 0088 209A     		ldr	r2, [sp, #128]
 1585 008a 219B     		ldr	r3, [sp, #132]
 1586 008c FFF7FEFF 		bl	charlie
 1587              	.LVL141:
 1588 0090 C5E7     		b	.L67
 1589              	.L102:
 145:Src/charlie.c ****        if(stopFlag == 1)
 1590              		.loc 2 145 8 view .LVU328
 1591 0092 0023     		movs	r3, #0
 1592 0094 1093     		str	r3, [sp, #64]
 1593 0096 2DA8     		add	r0, sp, #180
 1594 0098 0BA9     		add	r1, sp, #44
 1595 009a 0B00     		movs	r3, r1
 1596 009c 0200     		movs	r2, r0
 1597 009e 23CA     		ldmia	r2!, {r0, r1, r5}
 1598 00a0 23C3     		stmia	r3!, {r0, r1, r5}
 1599 00a2 03CA     		ldmia	r2!, {r0, r1}
 1600 00a4 03C3     		stmia	r3!, {r0, r1}
 1601 00a6 28A8     		add	r0, sp, #160
 1602 00a8 06A9     		add	r1, sp, #24
 1603 00aa 0B00     		movs	r3, r1
 1604 00ac 0200     		movs	r2, r0
 1605 00ae 23CA     		ldmia	r2!, {r0, r1, r5}
 1606 00b0 23C3     		stmia	r3!, {r0, r1, r5}
 1607 00b2 03CA     		ldmia	r2!, {r0, r1}
 1608 00b4 03C3     		stmia	r3!, {r0, r1}
 1609 00b6 23A8     		add	r0, sp, #140
 1610 00b8 01A9     		add	r1, sp, #4
 1611 00ba 0B00     		movs	r3, r1
 1612 00bc 0200     		movs	r2, r0
 1613 00be 23CA     		ldmia	r2!, {r0, r1, r5}
ARM GAS  /tmp/cckp0GEV.s 			page 50


 1614 00c0 23C3     		stmia	r3!, {r0, r1, r5}
 1615 00c2 03CA     		ldmia	r2!, {r0, r1}
 1616 00c4 03C3     		stmia	r3!, {r0, r1}
 1617 00c6 229B     		ldr	r3, [sp, #136]
 1618 00c8 0093     		str	r3, [sp]
 1619 00ca 1E98     		ldr	r0, [sp, #120]
 1620 00cc 1F99     		ldr	r1, [sp, #124]
 1621 00ce 209A     		ldr	r2, [sp, #128]
 1622 00d0 219B     		ldr	r3, [sp, #132]
 1623 00d2 FFF7FEFF 		bl	charlie
 1624              	.LVL142:
 146:Src/charlie.c ****          return;
 1625              		.loc 2 146 8 view .LVU329
 146:Src/charlie.c ****          return;
 1626              		.loc 2 146 20 is_stmt 0 view .LVU330
 1627 00d6 EF4B     		ldr	r3, .L115
 1628 00d8 1B68     		ldr	r3, [r3]
 146:Src/charlie.c ****          return;
 1629              		.loc 2 146 10 view .LVU331
 1630 00da 012B     		cmp	r3, #1
 1631 00dc ACD0     		beq	.L66
 148:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 1632              		.loc 2 148 8 is_stmt 1 view .LVU332
 1633 00de FA20     		movs	r0, #250
 1634 00e0 8000     		lsls	r0, r0, #2
 1635 00e2 FFF7FEFF 		bl	HAL_Delay
 1636              	.LVL143:
 149:Src/charlie.c ****        if(stopFlag == 1)
 1637              		.loc 2 149 8 view .LVU333
 1638 00e6 0123     		movs	r3, #1
 1639 00e8 1093     		str	r3, [sp, #64]
 1640 00ea 2DA8     		add	r0, sp, #180
 1641 00ec 0BA9     		add	r1, sp, #44
 1642 00ee 0B00     		movs	r3, r1
 1643 00f0 0200     		movs	r2, r0
 1644 00f2 23CA     		ldmia	r2!, {r0, r1, r5}
 1645 00f4 23C3     		stmia	r3!, {r0, r1, r5}
 1646 00f6 03CA     		ldmia	r2!, {r0, r1}
 1647 00f8 03C3     		stmia	r3!, {r0, r1}
 1648 00fa 28A8     		add	r0, sp, #160
 1649 00fc 06A9     		add	r1, sp, #24
 1650 00fe 0B00     		movs	r3, r1
 1651 0100 0200     		movs	r2, r0
 1652 0102 23CA     		ldmia	r2!, {r0, r1, r5}
 1653 0104 23C3     		stmia	r3!, {r0, r1, r5}
 1654 0106 03CA     		ldmia	r2!, {r0, r1}
 1655 0108 03C3     		stmia	r3!, {r0, r1}
 1656 010a 23A8     		add	r0, sp, #140
 1657 010c 01A9     		add	r1, sp, #4
 1658 010e 0B00     		movs	r3, r1
 1659 0110 0200     		movs	r2, r0
 1660 0112 23CA     		ldmia	r2!, {r0, r1, r5}
 1661 0114 23C3     		stmia	r3!, {r0, r1, r5}
 1662 0116 03CA     		ldmia	r2!, {r0, r1}
 1663 0118 03C3     		stmia	r3!, {r0, r1}
 1664 011a 229B     		ldr	r3, [sp, #136]
 1665 011c 0093     		str	r3, [sp]
ARM GAS  /tmp/cckp0GEV.s 			page 51


 1666 011e 1E98     		ldr	r0, [sp, #120]
 1667 0120 1F99     		ldr	r1, [sp, #124]
 1668 0122 209A     		ldr	r2, [sp, #128]
 1669 0124 219B     		ldr	r3, [sp, #132]
 1670 0126 FFF7FEFF 		bl	charlie
 1671              	.LVL144:
 150:Src/charlie.c ****          return;
 1672              		.loc 2 150 8 view .LVU334
 150:Src/charlie.c ****          return;
 1673              		.loc 2 150 20 is_stmt 0 view .LVU335
 1674 012a DA4B     		ldr	r3, .L115
 1675 012c 1B68     		ldr	r3, [r3]
 150:Src/charlie.c ****          return;
 1676              		.loc 2 150 10 view .LVU336
 1677 012e 012B     		cmp	r3, #1
 1678 0130 00D1     		bne	.LCB1442
 1679 0132 81E7     		b	.L66	@long jump
 1680              	.LCB1442:
 152:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 1681              		.loc 2 152 8 is_stmt 1 view .LVU337
 1682 0134 FA20     		movs	r0, #250
 1683 0136 8000     		lsls	r0, r0, #2
 1684 0138 FFF7FEFF 		bl	HAL_Delay
 1685              	.LVL145:
 153:Src/charlie.c ****        if(stopFlag == 1)
 1686              		.loc 2 153 8 view .LVU338
 1687 013c 0223     		movs	r3, #2
 1688 013e 1093     		str	r3, [sp, #64]
 1689 0140 2DA8     		add	r0, sp, #180
 1690 0142 0BA9     		add	r1, sp, #44
 1691 0144 0B00     		movs	r3, r1
 1692 0146 0200     		movs	r2, r0
 1693 0148 23CA     		ldmia	r2!, {r0, r1, r5}
 1694 014a 23C3     		stmia	r3!, {r0, r1, r5}
 1695 014c 03CA     		ldmia	r2!, {r0, r1}
 1696 014e 03C3     		stmia	r3!, {r0, r1}
 1697 0150 28A8     		add	r0, sp, #160
 1698 0152 06A9     		add	r1, sp, #24
 1699 0154 0B00     		movs	r3, r1
 1700 0156 0200     		movs	r2, r0
 1701 0158 23CA     		ldmia	r2!, {r0, r1, r5}
 1702 015a 23C3     		stmia	r3!, {r0, r1, r5}
 1703 015c 03CA     		ldmia	r2!, {r0, r1}
 1704 015e 03C3     		stmia	r3!, {r0, r1}
 1705 0160 23A8     		add	r0, sp, #140
 1706 0162 01A9     		add	r1, sp, #4
 1707 0164 0B00     		movs	r3, r1
 1708 0166 0200     		movs	r2, r0
 1709 0168 23CA     		ldmia	r2!, {r0, r1, r5}
 1710 016a 23C3     		stmia	r3!, {r0, r1, r5}
 1711 016c 03CA     		ldmia	r2!, {r0, r1}
 1712 016e 03C3     		stmia	r3!, {r0, r1}
 1713 0170 229B     		ldr	r3, [sp, #136]
 1714 0172 0093     		str	r3, [sp]
 1715 0174 1E98     		ldr	r0, [sp, #120]
 1716 0176 1F99     		ldr	r1, [sp, #124]
 1717 0178 209A     		ldr	r2, [sp, #128]
ARM GAS  /tmp/cckp0GEV.s 			page 52


 1718 017a 219B     		ldr	r3, [sp, #132]
 1719 017c FFF7FEFF 		bl	charlie
 1720              	.LVL146:
 154:Src/charlie.c ****          return;
 1721              		.loc 2 154 8 view .LVU339
 154:Src/charlie.c ****          return;
 1722              		.loc 2 154 20 is_stmt 0 view .LVU340
 1723 0180 C44B     		ldr	r3, .L115
 1724 0182 1B68     		ldr	r3, [r3]
 154:Src/charlie.c ****          return;
 1725              		.loc 2 154 10 view .LVU341
 1726 0184 012B     		cmp	r3, #1
 1727 0186 00D1     		bne	.LCB1486
 1728 0188 56E7     		b	.L66	@long jump
 1729              	.LCB1486:
 156:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 1730              		.loc 2 156 8 is_stmt 1 view .LVU342
 1731 018a FA20     		movs	r0, #250
 1732 018c 8000     		lsls	r0, r0, #2
 1733 018e FFF7FEFF 		bl	HAL_Delay
 1734              	.LVL147:
 157:Src/charlie.c ****        if(stopFlag == 1)
 1735              		.loc 2 157 8 view .LVU343
 1736 0192 0323     		movs	r3, #3
 1737 0194 1093     		str	r3, [sp, #64]
 1738 0196 2DA8     		add	r0, sp, #180
 1739 0198 0BA9     		add	r1, sp, #44
 1740 019a 0B00     		movs	r3, r1
 1741 019c 0200     		movs	r2, r0
 1742 019e 23CA     		ldmia	r2!, {r0, r1, r5}
 1743 01a0 23C3     		stmia	r3!, {r0, r1, r5}
 1744 01a2 03CA     		ldmia	r2!, {r0, r1}
 1745 01a4 03C3     		stmia	r3!, {r0, r1}
 1746 01a6 28A8     		add	r0, sp, #160
 1747 01a8 06A9     		add	r1, sp, #24
 1748 01aa 0B00     		movs	r3, r1
 1749 01ac 0200     		movs	r2, r0
 1750 01ae 23CA     		ldmia	r2!, {r0, r1, r5}
 1751 01b0 23C3     		stmia	r3!, {r0, r1, r5}
 1752 01b2 03CA     		ldmia	r2!, {r0, r1}
 1753 01b4 03C3     		stmia	r3!, {r0, r1}
 1754 01b6 23A8     		add	r0, sp, #140
 1755 01b8 01A9     		add	r1, sp, #4
 1756 01ba 0B00     		movs	r3, r1
 1757 01bc 0200     		movs	r2, r0
 1758 01be 23CA     		ldmia	r2!, {r0, r1, r5}
 1759 01c0 23C3     		stmia	r3!, {r0, r1, r5}
 1760 01c2 03CA     		ldmia	r2!, {r0, r1}
 1761 01c4 03C3     		stmia	r3!, {r0, r1}
 1762 01c6 229B     		ldr	r3, [sp, #136]
 1763 01c8 0093     		str	r3, [sp]
 1764 01ca 1E98     		ldr	r0, [sp, #120]
 1765 01cc 1F99     		ldr	r1, [sp, #124]
 1766 01ce 209A     		ldr	r2, [sp, #128]
 1767 01d0 219B     		ldr	r3, [sp, #132]
 1768 01d2 FFF7FEFF 		bl	charlie
 1769              	.LVL148:
ARM GAS  /tmp/cckp0GEV.s 			page 53


 158:Src/charlie.c ****          return;
 1770              		.loc 2 158 8 view .LVU344
 158:Src/charlie.c ****          return;
 1771              		.loc 2 158 20 is_stmt 0 view .LVU345
 1772 01d6 AF4B     		ldr	r3, .L115
 1773 01d8 1B68     		ldr	r3, [r3]
 158:Src/charlie.c ****          return;
 1774              		.loc 2 158 10 view .LVU346
 1775 01da 012B     		cmp	r3, #1
 1776 01dc 00D1     		bne	.LCB1530
 1777 01de 2BE7     		b	.L66	@long jump
 1778              	.LCB1530:
 160:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 1779              		.loc 2 160 8 is_stmt 1 view .LVU347
 1780 01e0 FA20     		movs	r0, #250
 1781 01e2 8000     		lsls	r0, r0, #2
 1782 01e4 FFF7FEFF 		bl	HAL_Delay
 1783              	.LVL149:
 161:Src/charlie.c ****        if(stopFlag == 1)
 1784              		.loc 2 161 8 view .LVU348
 1785 01e8 0423     		movs	r3, #4
 1786 01ea 1093     		str	r3, [sp, #64]
 1787 01ec 2DA8     		add	r0, sp, #180
 1788 01ee 0BA9     		add	r1, sp, #44
 1789 01f0 0B00     		movs	r3, r1
 1790 01f2 0200     		movs	r2, r0
 1791 01f4 23CA     		ldmia	r2!, {r0, r1, r5}
 1792 01f6 23C3     		stmia	r3!, {r0, r1, r5}
 1793 01f8 03CA     		ldmia	r2!, {r0, r1}
 1794 01fa 03C3     		stmia	r3!, {r0, r1}
 1795 01fc 28A8     		add	r0, sp, #160
 1796 01fe 06A9     		add	r1, sp, #24
 1797 0200 0B00     		movs	r3, r1
 1798 0202 0200     		movs	r2, r0
 1799 0204 23CA     		ldmia	r2!, {r0, r1, r5}
 1800 0206 23C3     		stmia	r3!, {r0, r1, r5}
 1801 0208 03CA     		ldmia	r2!, {r0, r1}
 1802 020a 03C3     		stmia	r3!, {r0, r1}
 1803 020c 23A8     		add	r0, sp, #140
 1804 020e 01A9     		add	r1, sp, #4
 1805 0210 0B00     		movs	r3, r1
 1806 0212 0200     		movs	r2, r0
 1807 0214 23CA     		ldmia	r2!, {r0, r1, r5}
 1808 0216 23C3     		stmia	r3!, {r0, r1, r5}
 1809 0218 03CA     		ldmia	r2!, {r0, r1}
 1810 021a 03C3     		stmia	r3!, {r0, r1}
 1811 021c 229B     		ldr	r3, [sp, #136]
 1812 021e 0093     		str	r3, [sp]
 1813 0220 1E98     		ldr	r0, [sp, #120]
 1814 0222 1F99     		ldr	r1, [sp, #124]
 1815 0224 209A     		ldr	r2, [sp, #128]
 1816 0226 219B     		ldr	r3, [sp, #132]
 1817 0228 FFF7FEFF 		bl	charlie
 1818              	.LVL150:
 162:Src/charlie.c ****          return;
 1819              		.loc 2 162 8 view .LVU349
 162:Src/charlie.c ****          return;
ARM GAS  /tmp/cckp0GEV.s 			page 54


 1820              		.loc 2 162 20 is_stmt 0 view .LVU350
 1821 022c 994B     		ldr	r3, .L115
 1822 022e 1B68     		ldr	r3, [r3]
 162:Src/charlie.c ****          return;
 1823              		.loc 2 162 10 view .LVU351
 1824 0230 012B     		cmp	r3, #1
 1825 0232 00D1     		bne	.LCB1574
 1826 0234 00E7     		b	.L66	@long jump
 1827              	.LCB1574:
 164:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 1828              		.loc 2 164 8 is_stmt 1 view .LVU352
 1829 0236 FA20     		movs	r0, #250
 1830 0238 8000     		lsls	r0, r0, #2
 1831 023a FFF7FEFF 		bl	HAL_Delay
 1832              	.LVL151:
 165:Src/charlie.c ****        if(stopFlag == 1)
 1833              		.loc 2 165 8 view .LVU353
 1834 023e 0523     		movs	r3, #5
 1835 0240 1093     		str	r3, [sp, #64]
 1836 0242 2DA8     		add	r0, sp, #180
 1837 0244 0BA9     		add	r1, sp, #44
 1838 0246 0B00     		movs	r3, r1
 1839 0248 0200     		movs	r2, r0
 1840 024a 23CA     		ldmia	r2!, {r0, r1, r5}
 1841 024c 23C3     		stmia	r3!, {r0, r1, r5}
 1842 024e 03CA     		ldmia	r2!, {r0, r1}
 1843 0250 03C3     		stmia	r3!, {r0, r1}
 1844 0252 28A8     		add	r0, sp, #160
 1845 0254 06A9     		add	r1, sp, #24
 1846 0256 0B00     		movs	r3, r1
 1847 0258 0200     		movs	r2, r0
 1848 025a 23CA     		ldmia	r2!, {r0, r1, r5}
 1849 025c 23C3     		stmia	r3!, {r0, r1, r5}
 1850 025e 03CA     		ldmia	r2!, {r0, r1}
 1851 0260 03C3     		stmia	r3!, {r0, r1}
 1852 0262 23A8     		add	r0, sp, #140
 1853 0264 01A9     		add	r1, sp, #4
 1854 0266 0B00     		movs	r3, r1
 1855 0268 0200     		movs	r2, r0
 1856 026a 23CA     		ldmia	r2!, {r0, r1, r5}
 1857 026c 23C3     		stmia	r3!, {r0, r1, r5}
 1858 026e 03CA     		ldmia	r2!, {r0, r1}
 1859 0270 03C3     		stmia	r3!, {r0, r1}
 1860 0272 229B     		ldr	r3, [sp, #136]
 1861 0274 0093     		str	r3, [sp]
 1862 0276 1E98     		ldr	r0, [sp, #120]
 1863 0278 1F99     		ldr	r1, [sp, #124]
 1864 027a 209A     		ldr	r2, [sp, #128]
 1865 027c 219B     		ldr	r3, [sp, #132]
 1866 027e FFF7FEFF 		bl	charlie
 1867              	.LVL152:
 166:Src/charlie.c ****          return;
 1868              		.loc 2 166 8 view .LVU354
 166:Src/charlie.c ****          return;
 1869              		.loc 2 166 20 is_stmt 0 view .LVU355
 1870 0282 844B     		ldr	r3, .L115
 1871 0284 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cckp0GEV.s 			page 55


 166:Src/charlie.c ****          return;
 1872              		.loc 2 166 10 view .LVU356
 1873 0286 012B     		cmp	r3, #1
 1874 0288 00D1     		bne	.LCB1618
 1875 028a D5E6     		b	.L66	@long jump
 1876              	.LCB1618:
 168:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 1877              		.loc 2 168 8 is_stmt 1 view .LVU357
 1878 028c FA20     		movs	r0, #250
 1879 028e 8000     		lsls	r0, r0, #2
 1880 0290 FFF7FEFF 		bl	HAL_Delay
 1881              	.LVL153:
 169:Src/charlie.c ****        if(stopFlag == 1)
 1882              		.loc 2 169 8 view .LVU358
 1883 0294 0623     		movs	r3, #6
 1884 0296 1093     		str	r3, [sp, #64]
 1885 0298 2DA8     		add	r0, sp, #180
 1886 029a 0BA9     		add	r1, sp, #44
 1887 029c 0B00     		movs	r3, r1
 1888 029e 0200     		movs	r2, r0
 1889 02a0 23CA     		ldmia	r2!, {r0, r1, r5}
 1890 02a2 23C3     		stmia	r3!, {r0, r1, r5}
 1891 02a4 03CA     		ldmia	r2!, {r0, r1}
 1892 02a6 03C3     		stmia	r3!, {r0, r1}
 1893 02a8 28A8     		add	r0, sp, #160
 1894 02aa 06A9     		add	r1, sp, #24
 1895 02ac 0B00     		movs	r3, r1
 1896 02ae 0200     		movs	r2, r0
 1897 02b0 23CA     		ldmia	r2!, {r0, r1, r5}
 1898 02b2 23C3     		stmia	r3!, {r0, r1, r5}
 1899 02b4 03CA     		ldmia	r2!, {r0, r1}
 1900 02b6 03C3     		stmia	r3!, {r0, r1}
 1901 02b8 23A8     		add	r0, sp, #140
 1902 02ba 01A9     		add	r1, sp, #4
 1903 02bc 0B00     		movs	r3, r1
 1904 02be 0200     		movs	r2, r0
 1905 02c0 23CA     		ldmia	r2!, {r0, r1, r5}
 1906 02c2 23C3     		stmia	r3!, {r0, r1, r5}
 1907 02c4 03CA     		ldmia	r2!, {r0, r1}
 1908 02c6 03C3     		stmia	r3!, {r0, r1}
 1909 02c8 229B     		ldr	r3, [sp, #136]
 1910 02ca 0093     		str	r3, [sp]
 1911 02cc 1E98     		ldr	r0, [sp, #120]
 1912 02ce 1F99     		ldr	r1, [sp, #124]
 1913 02d0 209A     		ldr	r2, [sp, #128]
 1914 02d2 219B     		ldr	r3, [sp, #132]
 1915 02d4 FFF7FEFF 		bl	charlie
 1916              	.LVL154:
 170:Src/charlie.c ****          return;
 1917              		.loc 2 170 8 view .LVU359
 170:Src/charlie.c ****          return;
 1918              		.loc 2 170 20 is_stmt 0 view .LVU360
 1919 02d8 6E4B     		ldr	r3, .L115
 1920 02da 1B68     		ldr	r3, [r3]
 170:Src/charlie.c ****          return;
 1921              		.loc 2 170 10 view .LVU361
 1922 02dc 012B     		cmp	r3, #1
ARM GAS  /tmp/cckp0GEV.s 			page 56


 1923 02de 00D1     		bne	.LCB1662
 1924 02e0 AAE6     		b	.L66	@long jump
 1925              	.LCB1662:
 172:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 1926              		.loc 2 172 8 is_stmt 1 view .LVU362
 1927 02e2 FA20     		movs	r0, #250
 1928 02e4 8000     		lsls	r0, r0, #2
 1929 02e6 FFF7FEFF 		bl	HAL_Delay
 1930              	.LVL155:
 173:Src/charlie.c ****        if(stopFlag == 1)
 1931              		.loc 2 173 8 view .LVU363
 1932 02ea 0723     		movs	r3, #7
 1933 02ec 1093     		str	r3, [sp, #64]
 1934 02ee 2DA8     		add	r0, sp, #180
 1935 02f0 0BA9     		add	r1, sp, #44
 1936 02f2 0B00     		movs	r3, r1
 1937 02f4 0200     		movs	r2, r0
 1938 02f6 23CA     		ldmia	r2!, {r0, r1, r5}
 1939 02f8 23C3     		stmia	r3!, {r0, r1, r5}
 1940 02fa 03CA     		ldmia	r2!, {r0, r1}
 1941 02fc 03C3     		stmia	r3!, {r0, r1}
 1942 02fe 28A8     		add	r0, sp, #160
 1943 0300 06A9     		add	r1, sp, #24
 1944 0302 0B00     		movs	r3, r1
 1945 0304 0200     		movs	r2, r0
 1946 0306 23CA     		ldmia	r2!, {r0, r1, r5}
 1947 0308 23C3     		stmia	r3!, {r0, r1, r5}
 1948 030a 03CA     		ldmia	r2!, {r0, r1}
 1949 030c 03C3     		stmia	r3!, {r0, r1}
 1950 030e 23A8     		add	r0, sp, #140
 1951 0310 01A9     		add	r1, sp, #4
 1952 0312 0B00     		movs	r3, r1
 1953 0314 0200     		movs	r2, r0
 1954 0316 23CA     		ldmia	r2!, {r0, r1, r5}
 1955 0318 23C3     		stmia	r3!, {r0, r1, r5}
 1956 031a 03CA     		ldmia	r2!, {r0, r1}
 1957 031c 03C3     		stmia	r3!, {r0, r1}
 1958 031e 229B     		ldr	r3, [sp, #136]
 1959 0320 0093     		str	r3, [sp]
 1960 0322 1E98     		ldr	r0, [sp, #120]
 1961 0324 1F99     		ldr	r1, [sp, #124]
 1962 0326 209A     		ldr	r2, [sp, #128]
 1963 0328 219B     		ldr	r3, [sp, #132]
 1964 032a FFF7FEFF 		bl	charlie
 1965              	.LVL156:
 174:Src/charlie.c ****          return;
 1966              		.loc 2 174 8 view .LVU364
 174:Src/charlie.c ****          return;
 1967              		.loc 2 174 20 is_stmt 0 view .LVU365
 1968 032e 594B     		ldr	r3, .L115
 1969 0330 1B68     		ldr	r3, [r3]
 174:Src/charlie.c ****          return;
 1970              		.loc 2 174 10 view .LVU366
 1971 0332 012B     		cmp	r3, #1
 1972 0334 00D1     		bne	.LCB1706
 1973 0336 7FE6     		b	.L66	@long jump
 1974              	.LCB1706:
ARM GAS  /tmp/cckp0GEV.s 			page 57


 176:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 1975              		.loc 2 176 8 is_stmt 1 view .LVU367
 1976 0338 FA20     		movs	r0, #250
 1977 033a 8000     		lsls	r0, r0, #2
 1978 033c FFF7FEFF 		bl	HAL_Delay
 1979              	.LVL157:
 177:Src/charlie.c ****        if(stopFlag == 1)
 1980              		.loc 2 177 8 view .LVU368
 1981 0340 0823     		movs	r3, #8
 1982 0342 1093     		str	r3, [sp, #64]
 1983 0344 2DA8     		add	r0, sp, #180
 1984 0346 0BA9     		add	r1, sp, #44
 1985 0348 0B00     		movs	r3, r1
 1986 034a 0200     		movs	r2, r0
 1987 034c 23CA     		ldmia	r2!, {r0, r1, r5}
 1988 034e 23C3     		stmia	r3!, {r0, r1, r5}
 1989 0350 03CA     		ldmia	r2!, {r0, r1}
 1990 0352 03C3     		stmia	r3!, {r0, r1}
 1991 0354 28A8     		add	r0, sp, #160
 1992 0356 06A9     		add	r1, sp, #24
 1993 0358 0B00     		movs	r3, r1
 1994 035a 0200     		movs	r2, r0
 1995 035c 23CA     		ldmia	r2!, {r0, r1, r5}
 1996 035e 23C3     		stmia	r3!, {r0, r1, r5}
 1997 0360 03CA     		ldmia	r2!, {r0, r1}
 1998 0362 03C3     		stmia	r3!, {r0, r1}
 1999 0364 23A8     		add	r0, sp, #140
 2000 0366 01A9     		add	r1, sp, #4
 2001 0368 0B00     		movs	r3, r1
 2002 036a 0200     		movs	r2, r0
 2003 036c 23CA     		ldmia	r2!, {r0, r1, r5}
 2004 036e 23C3     		stmia	r3!, {r0, r1, r5}
 2005 0370 03CA     		ldmia	r2!, {r0, r1}
 2006 0372 03C3     		stmia	r3!, {r0, r1}
 2007 0374 229B     		ldr	r3, [sp, #136]
 2008 0376 0093     		str	r3, [sp]
 2009 0378 1E98     		ldr	r0, [sp, #120]
 2010 037a 1F99     		ldr	r1, [sp, #124]
 2011 037c 209A     		ldr	r2, [sp, #128]
 2012 037e 219B     		ldr	r3, [sp, #132]
 2013 0380 FFF7FEFF 		bl	charlie
 2014              	.LVL158:
 178:Src/charlie.c ****          return;
 2015              		.loc 2 178 8 view .LVU369
 178:Src/charlie.c ****          return;
 2016              		.loc 2 178 20 is_stmt 0 view .LVU370
 2017 0384 434B     		ldr	r3, .L115
 2018 0386 1B68     		ldr	r3, [r3]
 178:Src/charlie.c ****          return;
 2019              		.loc 2 178 10 view .LVU371
 2020 0388 012B     		cmp	r3, #1
 2021 038a 00D1     		bne	.LCB1750
 2022 038c 54E6     		b	.L66	@long jump
 2023              	.LCB1750:
 180:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 2024              		.loc 2 180 8 is_stmt 1 view .LVU372
 2025 038e FA20     		movs	r0, #250
ARM GAS  /tmp/cckp0GEV.s 			page 58


 2026 0390 8000     		lsls	r0, r0, #2
 2027 0392 FFF7FEFF 		bl	HAL_Delay
 2028              	.LVL159:
 181:Src/charlie.c ****        if(stopFlag == 1)
 2029              		.loc 2 181 8 view .LVU373
 2030 0396 0923     		movs	r3, #9
 2031 0398 1093     		str	r3, [sp, #64]
 2032 039a 2DA8     		add	r0, sp, #180
 2033 039c 0BA9     		add	r1, sp, #44
 2034 039e 0B00     		movs	r3, r1
 2035 03a0 0200     		movs	r2, r0
 2036 03a2 23CA     		ldmia	r2!, {r0, r1, r5}
 2037 03a4 23C3     		stmia	r3!, {r0, r1, r5}
 2038 03a6 03CA     		ldmia	r2!, {r0, r1}
 2039 03a8 03C3     		stmia	r3!, {r0, r1}
 2040 03aa 28A8     		add	r0, sp, #160
 2041 03ac 06A9     		add	r1, sp, #24
 2042 03ae 0B00     		movs	r3, r1
 2043 03b0 0200     		movs	r2, r0
 2044 03b2 23CA     		ldmia	r2!, {r0, r1, r5}
 2045 03b4 23C3     		stmia	r3!, {r0, r1, r5}
 2046 03b6 03CA     		ldmia	r2!, {r0, r1}
 2047 03b8 03C3     		stmia	r3!, {r0, r1}
 2048 03ba 23A8     		add	r0, sp, #140
 2049 03bc 01A9     		add	r1, sp, #4
 2050 03be 0B00     		movs	r3, r1
 2051 03c0 0200     		movs	r2, r0
 2052 03c2 23CA     		ldmia	r2!, {r0, r1, r5}
 2053 03c4 23C3     		stmia	r3!, {r0, r1, r5}
 2054 03c6 03CA     		ldmia	r2!, {r0, r1}
 2055 03c8 03C3     		stmia	r3!, {r0, r1}
 2056 03ca 229B     		ldr	r3, [sp, #136]
 2057 03cc 0093     		str	r3, [sp]
 2058 03ce 1E98     		ldr	r0, [sp, #120]
 2059 03d0 1F99     		ldr	r1, [sp, #124]
 2060 03d2 209A     		ldr	r2, [sp, #128]
 2061 03d4 219B     		ldr	r3, [sp, #132]
 2062 03d6 FFF7FEFF 		bl	charlie
 2063              	.LVL160:
 182:Src/charlie.c ****          return;
 2064              		.loc 2 182 8 view .LVU374
 182:Src/charlie.c ****          return;
 2065              		.loc 2 182 20 is_stmt 0 view .LVU375
 2066 03da 2E4B     		ldr	r3, .L115
 2067 03dc 1B68     		ldr	r3, [r3]
 182:Src/charlie.c ****          return;
 2068              		.loc 2 182 10 view .LVU376
 2069 03de 012B     		cmp	r3, #1
 2070 03e0 00D1     		bne	.LCB1794
 2071 03e2 29E6     		b	.L66	@long jump
 2072              	.LCB1794:
 184:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 2073              		.loc 2 184 8 is_stmt 1 view .LVU377
 2074 03e4 FA20     		movs	r0, #250
 2075 03e6 8000     		lsls	r0, r0, #2
 2076 03e8 FFF7FEFF 		bl	HAL_Delay
 2077              	.LVL161:
ARM GAS  /tmp/cckp0GEV.s 			page 59


 185:Src/charlie.c ****        if(stopFlag == 1)
 2078              		.loc 2 185 8 view .LVU378
 2079 03ec 0A23     		movs	r3, #10
 2080 03ee 1093     		str	r3, [sp, #64]
 2081 03f0 2DA8     		add	r0, sp, #180
 2082 03f2 0BA9     		add	r1, sp, #44
 2083 03f4 0B00     		movs	r3, r1
 2084 03f6 0200     		movs	r2, r0
 2085 03f8 23CA     		ldmia	r2!, {r0, r1, r5}
 2086 03fa 23C3     		stmia	r3!, {r0, r1, r5}
 2087 03fc 03CA     		ldmia	r2!, {r0, r1}
 2088 03fe 03C3     		stmia	r3!, {r0, r1}
 2089 0400 28A8     		add	r0, sp, #160
 2090 0402 06A9     		add	r1, sp, #24
 2091 0404 0B00     		movs	r3, r1
 2092 0406 0200     		movs	r2, r0
 2093 0408 23CA     		ldmia	r2!, {r0, r1, r5}
 2094 040a 23C3     		stmia	r3!, {r0, r1, r5}
 2095 040c 03CA     		ldmia	r2!, {r0, r1}
 2096 040e 03C3     		stmia	r3!, {r0, r1}
 2097 0410 23A8     		add	r0, sp, #140
 2098 0412 01A9     		add	r1, sp, #4
 2099 0414 0B00     		movs	r3, r1
 2100 0416 0200     		movs	r2, r0
 2101 0418 23CA     		ldmia	r2!, {r0, r1, r5}
 2102 041a 23C3     		stmia	r3!, {r0, r1, r5}
 2103 041c 03CA     		ldmia	r2!, {r0, r1}
 2104 041e 03C3     		stmia	r3!, {r0, r1}
 2105 0420 229B     		ldr	r3, [sp, #136]
 2106 0422 0093     		str	r3, [sp]
 2107 0424 1E98     		ldr	r0, [sp, #120]
 2108 0426 1F99     		ldr	r1, [sp, #124]
 2109 0428 209A     		ldr	r2, [sp, #128]
 2110 042a 219B     		ldr	r3, [sp, #132]
 2111 042c FFF7FEFF 		bl	charlie
 2112              	.LVL162:
 186:Src/charlie.c ****          return;
 2113              		.loc 2 186 8 view .LVU379
 186:Src/charlie.c ****          return;
 2114              		.loc 2 186 20 is_stmt 0 view .LVU380
 2115 0430 184B     		ldr	r3, .L115
 2116 0432 1B68     		ldr	r3, [r3]
 186:Src/charlie.c ****          return;
 2117              		.loc 2 186 10 view .LVU381
 2118 0434 012B     		cmp	r3, #1
 2119 0436 00D1     		bne	.LCB1838
 2120 0438 FEE5     		b	.L66	@long jump
 2121              	.LCB1838:
 188:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 2122              		.loc 2 188 8 is_stmt 1 view .LVU382
 2123 043a FA20     		movs	r0, #250
 2124 043c 8000     		lsls	r0, r0, #2
 2125 043e FFF7FEFF 		bl	HAL_Delay
 2126              	.LVL163:
 189:Src/charlie.c ****        if(stopFlag == 1)
 2127              		.loc 2 189 8 view .LVU383
 2128 0442 0B23     		movs	r3, #11
ARM GAS  /tmp/cckp0GEV.s 			page 60


 2129 0444 1093     		str	r3, [sp, #64]
 2130 0446 2DA8     		add	r0, sp, #180
 2131 0448 0BA9     		add	r1, sp, #44
 2132 044a 0B00     		movs	r3, r1
 2133 044c 0200     		movs	r2, r0
 2134 044e 23CA     		ldmia	r2!, {r0, r1, r5}
 2135 0450 23C3     		stmia	r3!, {r0, r1, r5}
 2136 0452 03CA     		ldmia	r2!, {r0, r1}
 2137 0454 03C3     		stmia	r3!, {r0, r1}
 2138 0456 28A8     		add	r0, sp, #160
 2139 0458 06A9     		add	r1, sp, #24
 2140 045a 0B00     		movs	r3, r1
 2141 045c 0200     		movs	r2, r0
 2142 045e 23CA     		ldmia	r2!, {r0, r1, r5}
 2143 0460 23C3     		stmia	r3!, {r0, r1, r5}
 2144 0462 03CA     		ldmia	r2!, {r0, r1}
 2145 0464 03C3     		stmia	r3!, {r0, r1}
 2146 0466 23A8     		add	r0, sp, #140
 2147 0468 01A9     		add	r1, sp, #4
 2148 046a 0B00     		movs	r3, r1
 2149 046c 0200     		movs	r2, r0
 2150 046e 23CA     		ldmia	r2!, {r0, r1, r5}
 2151 0470 23C3     		stmia	r3!, {r0, r1, r5}
 2152 0472 03CA     		ldmia	r2!, {r0, r1}
 2153 0474 03C3     		stmia	r3!, {r0, r1}
 2154 0476 229B     		ldr	r3, [sp, #136]
 2155 0478 0093     		str	r3, [sp]
 2156 047a 1E98     		ldr	r0, [sp, #120]
 2157 047c 1F99     		ldr	r1, [sp, #124]
 2158 047e 209A     		ldr	r2, [sp, #128]
 2159 0480 219B     		ldr	r3, [sp, #132]
 2160 0482 FFF7FEFF 		bl	charlie
 2161              	.LVL164:
 190:Src/charlie.c ****          return;
 2162              		.loc 2 190 8 view .LVU384
 190:Src/charlie.c ****          return;
 2163              		.loc 2 190 20 is_stmt 0 view .LVU385
 2164 0486 034B     		ldr	r3, .L115
 2165 0488 1B68     		ldr	r3, [r3]
 190:Src/charlie.c ****          return;
 2166              		.loc 2 190 10 view .LVU386
 2167 048a 012B     		cmp	r3, #1
 2168 048c 00D1     		bne	.LCB1882
 2169 048e D3E5     		b	.L66	@long jump
 2170              	.LCB1882:
 2171 0490 02E0     		b	.L116
 2172              	.L117:
 2173 0492 C046     		.align	2
 2174              	.L115:
 2175 0494 00000000 		.word	.LANCHOR0
 2176              	.L116:
 192:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 2177              		.loc 2 192 8 is_stmt 1 view .LVU387
 2178 0498 FA20     		movs	r0, #250
 2179 049a 8000     		lsls	r0, r0, #2
 2180 049c FFF7FEFF 		bl	HAL_Delay
 2181              	.LVL165:
ARM GAS  /tmp/cckp0GEV.s 			page 61


 193:Src/charlie.c ****        if(stopFlag == 1)
 2182              		.loc 2 193 8 view .LVU388
 2183 04a0 0C23     		movs	r3, #12
 2184 04a2 1093     		str	r3, [sp, #64]
 2185 04a4 2DA8     		add	r0, sp, #180
 2186 04a6 0BA9     		add	r1, sp, #44
 2187 04a8 0B00     		movs	r3, r1
 2188 04aa 0200     		movs	r2, r0
 2189 04ac 23CA     		ldmia	r2!, {r0, r1, r5}
 2190 04ae 23C3     		stmia	r3!, {r0, r1, r5}
 2191 04b0 03CA     		ldmia	r2!, {r0, r1}
 2192 04b2 03C3     		stmia	r3!, {r0, r1}
 2193 04b4 28A8     		add	r0, sp, #160
 2194 04b6 06A9     		add	r1, sp, #24
 2195 04b8 0B00     		movs	r3, r1
 2196 04ba 0200     		movs	r2, r0
 2197 04bc 23CA     		ldmia	r2!, {r0, r1, r5}
 2198 04be 23C3     		stmia	r3!, {r0, r1, r5}
 2199 04c0 03CA     		ldmia	r2!, {r0, r1}
 2200 04c2 03C3     		stmia	r3!, {r0, r1}
 2201 04c4 23A8     		add	r0, sp, #140
 2202 04c6 01A9     		add	r1, sp, #4
 2203 04c8 0B00     		movs	r3, r1
 2204 04ca 0200     		movs	r2, r0
 2205 04cc 23CA     		ldmia	r2!, {r0, r1, r5}
 2206 04ce 23C3     		stmia	r3!, {r0, r1, r5}
 2207 04d0 03CA     		ldmia	r2!, {r0, r1}
 2208 04d2 03C3     		stmia	r3!, {r0, r1}
 2209 04d4 229B     		ldr	r3, [sp, #136]
 2210 04d6 0093     		str	r3, [sp]
 2211 04d8 1E98     		ldr	r0, [sp, #120]
 2212 04da 1F99     		ldr	r1, [sp, #124]
 2213 04dc 209A     		ldr	r2, [sp, #128]
 2214 04de 219B     		ldr	r3, [sp, #132]
 2215 04e0 FFF7FEFF 		bl	charlie
 2216              	.LVL166:
 194:Src/charlie.c ****          return;
 2217              		.loc 2 194 8 view .LVU389
 194:Src/charlie.c ****          return;
 2218              		.loc 2 194 20 is_stmt 0 view .LVU390
 2219 04e4 044B     		ldr	r3, .L118
 2220 04e6 1B68     		ldr	r3, [r3]
 194:Src/charlie.c ****          return;
 2221              		.loc 2 194 10 view .LVU391
 2222 04e8 012B     		cmp	r3, #1
 2223 04ea 00D1     		bne	.LCB1935
 2224 04ec A4E5     		b	.L66	@long jump
 2225              	.LCB1935:
 196:Src/charlie.c ****    }
 2226              		.loc 2 196 8 is_stmt 1 view .LVU392
 2227 04ee FA20     		movs	r0, #250
 2228 04f0 8000     		lsls	r0, r0, #2
 2229 04f2 FFF7FEFF 		bl	HAL_Delay
 2230              	.LVL167:
 2231 04f6 94E5     		b	.L68
 2232              	.L119:
 2233              		.align	2
ARM GAS  /tmp/cckp0GEV.s 			page 62


 2234              	.L118:
 2235 04f8 00000000 		.word	.LANCHOR0
 2236              	.L103:
 201:Src/charlie.c ****        if(stopFlag == 1)
 2237              		.loc 2 201 8 view .LVU393
 2238 04fc 0023     		movs	r3, #0
 2239 04fe 1093     		str	r3, [sp, #64]
 2240 0500 2DA8     		add	r0, sp, #180
 2241 0502 0BA9     		add	r1, sp, #44
 2242 0504 0B00     		movs	r3, r1
 2243 0506 0200     		movs	r2, r0
 2244 0508 23CA     		ldmia	r2!, {r0, r1, r5}
 2245 050a 23C3     		stmia	r3!, {r0, r1, r5}
 2246 050c 03CA     		ldmia	r2!, {r0, r1}
 2247 050e 03C3     		stmia	r3!, {r0, r1}
 2248 0510 28A8     		add	r0, sp, #160
 2249 0512 06A9     		add	r1, sp, #24
 2250 0514 0B00     		movs	r3, r1
 2251 0516 0200     		movs	r2, r0
 2252 0518 23CA     		ldmia	r2!, {r0, r1, r5}
 2253 051a 23C3     		stmia	r3!, {r0, r1, r5}
 2254 051c 03CA     		ldmia	r2!, {r0, r1}
 2255 051e 03C3     		stmia	r3!, {r0, r1}
 2256 0520 23A8     		add	r0, sp, #140
 2257 0522 01A9     		add	r1, sp, #4
 2258 0524 0B00     		movs	r3, r1
 2259 0526 0200     		movs	r2, r0
 2260 0528 23CA     		ldmia	r2!, {r0, r1, r5}
 2261 052a 23C3     		stmia	r3!, {r0, r1, r5}
 2262 052c 03CA     		ldmia	r2!, {r0, r1}
 2263 052e 03C3     		stmia	r3!, {r0, r1}
 2264 0530 229B     		ldr	r3, [sp, #136]
 2265 0532 0093     		str	r3, [sp]
 2266 0534 1E98     		ldr	r0, [sp, #120]
 2267 0536 1F99     		ldr	r1, [sp, #124]
 2268 0538 209A     		ldr	r2, [sp, #128]
 2269 053a 219B     		ldr	r3, [sp, #132]
 2270 053c FFF7FEFF 		bl	charlie
 2271              	.LVL168:
 202:Src/charlie.c ****          return;
 2272              		.loc 2 202 8 view .LVU394
 202:Src/charlie.c ****          return;
 2273              		.loc 2 202 20 is_stmt 0 view .LVU395
 2274 0540 F04B     		ldr	r3, .L120
 2275 0542 1B68     		ldr	r3, [r3]
 202:Src/charlie.c ****          return;
 2276              		.loc 2 202 10 view .LVU396
 2277 0544 012B     		cmp	r3, #1
 2278 0546 00D1     		bne	.LCB1989
 2279 0548 76E5     		b	.L66	@long jump
 2280              	.LCB1989:
 204:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 2281              		.loc 2 204 8 is_stmt 1 view .LVU397
 2282 054a FA20     		movs	r0, #250
 2283 054c 4000     		lsls	r0, r0, #1
 2284 054e FFF7FEFF 		bl	HAL_Delay
 2285              	.LVL169:
ARM GAS  /tmp/cckp0GEV.s 			page 63


 205:Src/charlie.c ****        if(stopFlag == 1)
 2286              		.loc 2 205 8 view .LVU398
 2287 0552 0123     		movs	r3, #1
 2288 0554 1093     		str	r3, [sp, #64]
 2289 0556 2DA8     		add	r0, sp, #180
 2290 0558 0BA9     		add	r1, sp, #44
 2291 055a 0B00     		movs	r3, r1
 2292 055c 0200     		movs	r2, r0
 2293 055e 23CA     		ldmia	r2!, {r0, r1, r5}
 2294 0560 23C3     		stmia	r3!, {r0, r1, r5}
 2295 0562 03CA     		ldmia	r2!, {r0, r1}
 2296 0564 03C3     		stmia	r3!, {r0, r1}
 2297 0566 28A8     		add	r0, sp, #160
 2298 0568 06A9     		add	r1, sp, #24
 2299 056a 0B00     		movs	r3, r1
 2300 056c 0200     		movs	r2, r0
 2301 056e 23CA     		ldmia	r2!, {r0, r1, r5}
 2302 0570 23C3     		stmia	r3!, {r0, r1, r5}
 2303 0572 03CA     		ldmia	r2!, {r0, r1}
 2304 0574 03C3     		stmia	r3!, {r0, r1}
 2305 0576 23A8     		add	r0, sp, #140
 2306 0578 01A9     		add	r1, sp, #4
 2307 057a 0B00     		movs	r3, r1
 2308 057c 0200     		movs	r2, r0
 2309 057e 23CA     		ldmia	r2!, {r0, r1, r5}
 2310 0580 23C3     		stmia	r3!, {r0, r1, r5}
 2311 0582 03CA     		ldmia	r2!, {r0, r1}
 2312 0584 03C3     		stmia	r3!, {r0, r1}
 2313 0586 229B     		ldr	r3, [sp, #136]
 2314 0588 0093     		str	r3, [sp]
 2315 058a 1E98     		ldr	r0, [sp, #120]
 2316 058c 1F99     		ldr	r1, [sp, #124]
 2317 058e 209A     		ldr	r2, [sp, #128]
 2318 0590 219B     		ldr	r3, [sp, #132]
 2319 0592 FFF7FEFF 		bl	charlie
 2320              	.LVL170:
 206:Src/charlie.c ****          return;
 2321              		.loc 2 206 8 view .LVU399
 206:Src/charlie.c ****          return;
 2322              		.loc 2 206 20 is_stmt 0 view .LVU400
 2323 0596 DB4B     		ldr	r3, .L120
 2324 0598 1B68     		ldr	r3, [r3]
 206:Src/charlie.c ****          return;
 2325              		.loc 2 206 10 view .LVU401
 2326 059a 012B     		cmp	r3, #1
 2327 059c 00D1     		bne	.LCB2033
 2328 059e 4BE5     		b	.L66	@long jump
 2329              	.LCB2033:
 208:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 2330              		.loc 2 208 8 is_stmt 1 view .LVU402
 2331 05a0 FA20     		movs	r0, #250
 2332 05a2 4000     		lsls	r0, r0, #1
 2333 05a4 FFF7FEFF 		bl	HAL_Delay
 2334              	.LVL171:
 209:Src/charlie.c ****        if(stopFlag == 1)
 2335              		.loc 2 209 8 view .LVU403
 2336 05a8 0223     		movs	r3, #2
ARM GAS  /tmp/cckp0GEV.s 			page 64


 2337 05aa 1093     		str	r3, [sp, #64]
 2338 05ac 2DA8     		add	r0, sp, #180
 2339 05ae 0BA9     		add	r1, sp, #44
 2340 05b0 0B00     		movs	r3, r1
 2341 05b2 0200     		movs	r2, r0
 2342 05b4 23CA     		ldmia	r2!, {r0, r1, r5}
 2343 05b6 23C3     		stmia	r3!, {r0, r1, r5}
 2344 05b8 03CA     		ldmia	r2!, {r0, r1}
 2345 05ba 03C3     		stmia	r3!, {r0, r1}
 2346 05bc 28A8     		add	r0, sp, #160
 2347 05be 06A9     		add	r1, sp, #24
 2348 05c0 0B00     		movs	r3, r1
 2349 05c2 0200     		movs	r2, r0
 2350 05c4 23CA     		ldmia	r2!, {r0, r1, r5}
 2351 05c6 23C3     		stmia	r3!, {r0, r1, r5}
 2352 05c8 03CA     		ldmia	r2!, {r0, r1}
 2353 05ca 03C3     		stmia	r3!, {r0, r1}
 2354 05cc 23A8     		add	r0, sp, #140
 2355 05ce 01A9     		add	r1, sp, #4
 2356 05d0 0B00     		movs	r3, r1
 2357 05d2 0200     		movs	r2, r0
 2358 05d4 23CA     		ldmia	r2!, {r0, r1, r5}
 2359 05d6 23C3     		stmia	r3!, {r0, r1, r5}
 2360 05d8 03CA     		ldmia	r2!, {r0, r1}
 2361 05da 03C3     		stmia	r3!, {r0, r1}
 2362 05dc 229B     		ldr	r3, [sp, #136]
 2363 05de 0093     		str	r3, [sp]
 2364 05e0 1E98     		ldr	r0, [sp, #120]
 2365 05e2 1F99     		ldr	r1, [sp, #124]
 2366 05e4 209A     		ldr	r2, [sp, #128]
 2367 05e6 219B     		ldr	r3, [sp, #132]
 2368 05e8 FFF7FEFF 		bl	charlie
 2369              	.LVL172:
 210:Src/charlie.c ****          return;
 2370              		.loc 2 210 8 view .LVU404
 210:Src/charlie.c ****          return;
 2371              		.loc 2 210 20 is_stmt 0 view .LVU405
 2372 05ec C54B     		ldr	r3, .L120
 2373 05ee 1B68     		ldr	r3, [r3]
 210:Src/charlie.c ****          return;
 2374              		.loc 2 210 10 view .LVU406
 2375 05f0 012B     		cmp	r3, #1
 2376 05f2 00D1     		bne	.LCB2077
 2377 05f4 20E5     		b	.L66	@long jump
 2378              	.LCB2077:
 212:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 2379              		.loc 2 212 8 is_stmt 1 view .LVU407
 2380 05f6 FA20     		movs	r0, #250
 2381 05f8 4000     		lsls	r0, r0, #1
 2382 05fa FFF7FEFF 		bl	HAL_Delay
 2383              	.LVL173:
 213:Src/charlie.c ****        if(stopFlag == 1)
 2384              		.loc 2 213 8 view .LVU408
 2385 05fe 0323     		movs	r3, #3
 2386 0600 1093     		str	r3, [sp, #64]
 2387 0602 2DA8     		add	r0, sp, #180
 2388 0604 0BA9     		add	r1, sp, #44
ARM GAS  /tmp/cckp0GEV.s 			page 65


 2389 0606 0B00     		movs	r3, r1
 2390 0608 0200     		movs	r2, r0
 2391 060a 23CA     		ldmia	r2!, {r0, r1, r5}
 2392 060c 23C3     		stmia	r3!, {r0, r1, r5}
 2393 060e 03CA     		ldmia	r2!, {r0, r1}
 2394 0610 03C3     		stmia	r3!, {r0, r1}
 2395 0612 28A8     		add	r0, sp, #160
 2396 0614 06A9     		add	r1, sp, #24
 2397 0616 0B00     		movs	r3, r1
 2398 0618 0200     		movs	r2, r0
 2399 061a 23CA     		ldmia	r2!, {r0, r1, r5}
 2400 061c 23C3     		stmia	r3!, {r0, r1, r5}
 2401 061e 03CA     		ldmia	r2!, {r0, r1}
 2402 0620 03C3     		stmia	r3!, {r0, r1}
 2403 0622 23A8     		add	r0, sp, #140
 2404 0624 01A9     		add	r1, sp, #4
 2405 0626 0B00     		movs	r3, r1
 2406 0628 0200     		movs	r2, r0
 2407 062a 23CA     		ldmia	r2!, {r0, r1, r5}
 2408 062c 23C3     		stmia	r3!, {r0, r1, r5}
 2409 062e 03CA     		ldmia	r2!, {r0, r1}
 2410 0630 03C3     		stmia	r3!, {r0, r1}
 2411 0632 229B     		ldr	r3, [sp, #136]
 2412 0634 0093     		str	r3, [sp]
 2413 0636 1E98     		ldr	r0, [sp, #120]
 2414 0638 1F99     		ldr	r1, [sp, #124]
 2415 063a 209A     		ldr	r2, [sp, #128]
 2416 063c 219B     		ldr	r3, [sp, #132]
 2417 063e FFF7FEFF 		bl	charlie
 2418              	.LVL174:
 214:Src/charlie.c ****          return;
 2419              		.loc 2 214 8 view .LVU409
 214:Src/charlie.c ****          return;
 2420              		.loc 2 214 20 is_stmt 0 view .LVU410
 2421 0642 B04B     		ldr	r3, .L120
 2422 0644 1B68     		ldr	r3, [r3]
 214:Src/charlie.c ****          return;
 2423              		.loc 2 214 10 view .LVU411
 2424 0646 012B     		cmp	r3, #1
 2425 0648 00D1     		bne	.LCB2121
 2426 064a F5E4     		b	.L66	@long jump
 2427              	.LCB2121:
 216:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 2428              		.loc 2 216 8 is_stmt 1 view .LVU412
 2429 064c FA20     		movs	r0, #250
 2430 064e 4000     		lsls	r0, r0, #1
 2431 0650 FFF7FEFF 		bl	HAL_Delay
 2432              	.LVL175:
 217:Src/charlie.c ****        if(stopFlag == 1)
 2433              		.loc 2 217 8 view .LVU413
 2434 0654 0423     		movs	r3, #4
 2435 0656 1093     		str	r3, [sp, #64]
 2436 0658 2DA8     		add	r0, sp, #180
 2437 065a 0BA9     		add	r1, sp, #44
 2438 065c 0B00     		movs	r3, r1
 2439 065e 0200     		movs	r2, r0
 2440 0660 23CA     		ldmia	r2!, {r0, r1, r5}
ARM GAS  /tmp/cckp0GEV.s 			page 66


 2441 0662 23C3     		stmia	r3!, {r0, r1, r5}
 2442 0664 03CA     		ldmia	r2!, {r0, r1}
 2443 0666 03C3     		stmia	r3!, {r0, r1}
 2444 0668 28A8     		add	r0, sp, #160
 2445 066a 06A9     		add	r1, sp, #24
 2446 066c 0B00     		movs	r3, r1
 2447 066e 0200     		movs	r2, r0
 2448 0670 23CA     		ldmia	r2!, {r0, r1, r5}
 2449 0672 23C3     		stmia	r3!, {r0, r1, r5}
 2450 0674 03CA     		ldmia	r2!, {r0, r1}
 2451 0676 03C3     		stmia	r3!, {r0, r1}
 2452 0678 23A8     		add	r0, sp, #140
 2453 067a 01A9     		add	r1, sp, #4
 2454 067c 0B00     		movs	r3, r1
 2455 067e 0200     		movs	r2, r0
 2456 0680 23CA     		ldmia	r2!, {r0, r1, r5}
 2457 0682 23C3     		stmia	r3!, {r0, r1, r5}
 2458 0684 03CA     		ldmia	r2!, {r0, r1}
 2459 0686 03C3     		stmia	r3!, {r0, r1}
 2460 0688 229B     		ldr	r3, [sp, #136]
 2461 068a 0093     		str	r3, [sp]
 2462 068c 1E98     		ldr	r0, [sp, #120]
 2463 068e 1F99     		ldr	r1, [sp, #124]
 2464 0690 209A     		ldr	r2, [sp, #128]
 2465 0692 219B     		ldr	r3, [sp, #132]
 2466 0694 FFF7FEFF 		bl	charlie
 2467              	.LVL176:
 218:Src/charlie.c ****          return;
 2468              		.loc 2 218 8 view .LVU414
 218:Src/charlie.c ****          return;
 2469              		.loc 2 218 20 is_stmt 0 view .LVU415
 2470 0698 9A4B     		ldr	r3, .L120
 2471 069a 1B68     		ldr	r3, [r3]
 218:Src/charlie.c ****          return;
 2472              		.loc 2 218 10 view .LVU416
 2473 069c 012B     		cmp	r3, #1
 2474 069e 00D1     		bne	.LCB2165
 2475 06a0 CAE4     		b	.L66	@long jump
 2476              	.LCB2165:
 220:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 2477              		.loc 2 220 8 is_stmt 1 view .LVU417
 2478 06a2 FA20     		movs	r0, #250
 2479 06a4 4000     		lsls	r0, r0, #1
 2480 06a6 FFF7FEFF 		bl	HAL_Delay
 2481              	.LVL177:
 221:Src/charlie.c ****        if(stopFlag == 1)
 2482              		.loc 2 221 8 view .LVU418
 2483 06aa 0523     		movs	r3, #5
 2484 06ac 1093     		str	r3, [sp, #64]
 2485 06ae 2DA8     		add	r0, sp, #180
 2486 06b0 0BA9     		add	r1, sp, #44
 2487 06b2 0B00     		movs	r3, r1
 2488 06b4 0200     		movs	r2, r0
 2489 06b6 23CA     		ldmia	r2!, {r0, r1, r5}
 2490 06b8 23C3     		stmia	r3!, {r0, r1, r5}
 2491 06ba 03CA     		ldmia	r2!, {r0, r1}
 2492 06bc 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 67


 2493 06be 28A8     		add	r0, sp, #160
 2494 06c0 06A9     		add	r1, sp, #24
 2495 06c2 0B00     		movs	r3, r1
 2496 06c4 0200     		movs	r2, r0
 2497 06c6 23CA     		ldmia	r2!, {r0, r1, r5}
 2498 06c8 23C3     		stmia	r3!, {r0, r1, r5}
 2499 06ca 03CA     		ldmia	r2!, {r0, r1}
 2500 06cc 03C3     		stmia	r3!, {r0, r1}
 2501 06ce 23A8     		add	r0, sp, #140
 2502 06d0 01A9     		add	r1, sp, #4
 2503 06d2 0B00     		movs	r3, r1
 2504 06d4 0200     		movs	r2, r0
 2505 06d6 23CA     		ldmia	r2!, {r0, r1, r5}
 2506 06d8 23C3     		stmia	r3!, {r0, r1, r5}
 2507 06da 03CA     		ldmia	r2!, {r0, r1}
 2508 06dc 03C3     		stmia	r3!, {r0, r1}
 2509 06de 229B     		ldr	r3, [sp, #136]
 2510 06e0 0093     		str	r3, [sp]
 2511 06e2 1E98     		ldr	r0, [sp, #120]
 2512 06e4 1F99     		ldr	r1, [sp, #124]
 2513 06e6 209A     		ldr	r2, [sp, #128]
 2514 06e8 219B     		ldr	r3, [sp, #132]
 2515 06ea FFF7FEFF 		bl	charlie
 2516              	.LVL178:
 222:Src/charlie.c ****          return;
 2517              		.loc 2 222 8 view .LVU419
 222:Src/charlie.c ****          return;
 2518              		.loc 2 222 20 is_stmt 0 view .LVU420
 2519 06ee 854B     		ldr	r3, .L120
 2520 06f0 1B68     		ldr	r3, [r3]
 222:Src/charlie.c ****          return;
 2521              		.loc 2 222 10 view .LVU421
 2522 06f2 012B     		cmp	r3, #1
 2523 06f4 00D1     		bne	.LCB2209
 2524 06f6 9FE4     		b	.L66	@long jump
 2525              	.LCB2209:
 224:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 2526              		.loc 2 224 8 is_stmt 1 view .LVU422
 2527 06f8 FA20     		movs	r0, #250
 2528 06fa 4000     		lsls	r0, r0, #1
 2529 06fc FFF7FEFF 		bl	HAL_Delay
 2530              	.LVL179:
 225:Src/charlie.c ****        if(stopFlag == 1)
 2531              		.loc 2 225 8 view .LVU423
 2532 0700 0623     		movs	r3, #6
 2533 0702 1093     		str	r3, [sp, #64]
 2534 0704 2DA8     		add	r0, sp, #180
 2535 0706 0BA9     		add	r1, sp, #44
 2536 0708 0B00     		movs	r3, r1
 2537 070a 0200     		movs	r2, r0
 2538 070c 23CA     		ldmia	r2!, {r0, r1, r5}
 2539 070e 23C3     		stmia	r3!, {r0, r1, r5}
 2540 0710 03CA     		ldmia	r2!, {r0, r1}
 2541 0712 03C3     		stmia	r3!, {r0, r1}
 2542 0714 28A8     		add	r0, sp, #160
 2543 0716 06A9     		add	r1, sp, #24
 2544 0718 0B00     		movs	r3, r1
ARM GAS  /tmp/cckp0GEV.s 			page 68


 2545 071a 0200     		movs	r2, r0
 2546 071c 23CA     		ldmia	r2!, {r0, r1, r5}
 2547 071e 23C3     		stmia	r3!, {r0, r1, r5}
 2548 0720 03CA     		ldmia	r2!, {r0, r1}
 2549 0722 03C3     		stmia	r3!, {r0, r1}
 2550 0724 23A8     		add	r0, sp, #140
 2551 0726 01A9     		add	r1, sp, #4
 2552 0728 0B00     		movs	r3, r1
 2553 072a 0200     		movs	r2, r0
 2554 072c 23CA     		ldmia	r2!, {r0, r1, r5}
 2555 072e 23C3     		stmia	r3!, {r0, r1, r5}
 2556 0730 03CA     		ldmia	r2!, {r0, r1}
 2557 0732 03C3     		stmia	r3!, {r0, r1}
 2558 0734 229B     		ldr	r3, [sp, #136]
 2559 0736 0093     		str	r3, [sp]
 2560 0738 1E98     		ldr	r0, [sp, #120]
 2561 073a 1F99     		ldr	r1, [sp, #124]
 2562 073c 209A     		ldr	r2, [sp, #128]
 2563 073e 219B     		ldr	r3, [sp, #132]
 2564 0740 FFF7FEFF 		bl	charlie
 2565              	.LVL180:
 226:Src/charlie.c ****          return;
 2566              		.loc 2 226 8 view .LVU424
 226:Src/charlie.c ****          return;
 2567              		.loc 2 226 20 is_stmt 0 view .LVU425
 2568 0744 6F4B     		ldr	r3, .L120
 2569 0746 1B68     		ldr	r3, [r3]
 226:Src/charlie.c ****          return;
 2570              		.loc 2 226 10 view .LVU426
 2571 0748 012B     		cmp	r3, #1
 2572 074a 00D1     		bne	.LCB2253
 2573 074c 74E4     		b	.L66	@long jump
 2574              	.LCB2253:
 228:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 2575              		.loc 2 228 8 is_stmt 1 view .LVU427
 2576 074e FA20     		movs	r0, #250
 2577 0750 4000     		lsls	r0, r0, #1
 2578 0752 FFF7FEFF 		bl	HAL_Delay
 2579              	.LVL181:
 229:Src/charlie.c ****        if(stopFlag == 1)
 2580              		.loc 2 229 8 view .LVU428
 2581 0756 0723     		movs	r3, #7
 2582 0758 1093     		str	r3, [sp, #64]
 2583 075a 2DA8     		add	r0, sp, #180
 2584 075c 0BA9     		add	r1, sp, #44
 2585 075e 0B00     		movs	r3, r1
 2586 0760 0200     		movs	r2, r0
 2587 0762 23CA     		ldmia	r2!, {r0, r1, r5}
 2588 0764 23C3     		stmia	r3!, {r0, r1, r5}
 2589 0766 03CA     		ldmia	r2!, {r0, r1}
 2590 0768 03C3     		stmia	r3!, {r0, r1}
 2591 076a 28A8     		add	r0, sp, #160
 2592 076c 06A9     		add	r1, sp, #24
 2593 076e 0B00     		movs	r3, r1
 2594 0770 0200     		movs	r2, r0
 2595 0772 23CA     		ldmia	r2!, {r0, r1, r5}
 2596 0774 23C3     		stmia	r3!, {r0, r1, r5}
ARM GAS  /tmp/cckp0GEV.s 			page 69


 2597 0776 03CA     		ldmia	r2!, {r0, r1}
 2598 0778 03C3     		stmia	r3!, {r0, r1}
 2599 077a 23A8     		add	r0, sp, #140
 2600 077c 01A9     		add	r1, sp, #4
 2601 077e 0B00     		movs	r3, r1
 2602 0780 0200     		movs	r2, r0
 2603 0782 23CA     		ldmia	r2!, {r0, r1, r5}
 2604 0784 23C3     		stmia	r3!, {r0, r1, r5}
 2605 0786 03CA     		ldmia	r2!, {r0, r1}
 2606 0788 03C3     		stmia	r3!, {r0, r1}
 2607 078a 229B     		ldr	r3, [sp, #136]
 2608 078c 0093     		str	r3, [sp]
 2609 078e 1E98     		ldr	r0, [sp, #120]
 2610 0790 1F99     		ldr	r1, [sp, #124]
 2611 0792 209A     		ldr	r2, [sp, #128]
 2612 0794 219B     		ldr	r3, [sp, #132]
 2613 0796 FFF7FEFF 		bl	charlie
 2614              	.LVL182:
 230:Src/charlie.c ****          return;
 2615              		.loc 2 230 8 view .LVU429
 230:Src/charlie.c ****          return;
 2616              		.loc 2 230 20 is_stmt 0 view .LVU430
 2617 079a 5A4B     		ldr	r3, .L120
 2618 079c 1B68     		ldr	r3, [r3]
 230:Src/charlie.c ****          return;
 2619              		.loc 2 230 10 view .LVU431
 2620 079e 012B     		cmp	r3, #1
 2621 07a0 00D1     		bne	.LCB2297
 2622 07a2 49E4     		b	.L66	@long jump
 2623              	.LCB2297:
 232:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 2624              		.loc 2 232 8 is_stmt 1 view .LVU432
 2625 07a4 FA20     		movs	r0, #250
 2626 07a6 4000     		lsls	r0, r0, #1
 2627 07a8 FFF7FEFF 		bl	HAL_Delay
 2628              	.LVL183:
 233:Src/charlie.c ****        if(stopFlag == 1)
 2629              		.loc 2 233 8 view .LVU433
 2630 07ac 0823     		movs	r3, #8
 2631 07ae 1093     		str	r3, [sp, #64]
 2632 07b0 2DA8     		add	r0, sp, #180
 2633 07b2 0BA9     		add	r1, sp, #44
 2634 07b4 0B00     		movs	r3, r1
 2635 07b6 0200     		movs	r2, r0
 2636 07b8 23CA     		ldmia	r2!, {r0, r1, r5}
 2637 07ba 23C3     		stmia	r3!, {r0, r1, r5}
 2638 07bc 03CA     		ldmia	r2!, {r0, r1}
 2639 07be 03C3     		stmia	r3!, {r0, r1}
 2640 07c0 28A8     		add	r0, sp, #160
 2641 07c2 06A9     		add	r1, sp, #24
 2642 07c4 0B00     		movs	r3, r1
 2643 07c6 0200     		movs	r2, r0
 2644 07c8 23CA     		ldmia	r2!, {r0, r1, r5}
 2645 07ca 23C3     		stmia	r3!, {r0, r1, r5}
 2646 07cc 03CA     		ldmia	r2!, {r0, r1}
 2647 07ce 03C3     		stmia	r3!, {r0, r1}
 2648 07d0 23A8     		add	r0, sp, #140
ARM GAS  /tmp/cckp0GEV.s 			page 70


 2649 07d2 01A9     		add	r1, sp, #4
 2650 07d4 0B00     		movs	r3, r1
 2651 07d6 0200     		movs	r2, r0
 2652 07d8 23CA     		ldmia	r2!, {r0, r1, r5}
 2653 07da 23C3     		stmia	r3!, {r0, r1, r5}
 2654 07dc 03CA     		ldmia	r2!, {r0, r1}
 2655 07de 03C3     		stmia	r3!, {r0, r1}
 2656 07e0 229B     		ldr	r3, [sp, #136]
 2657 07e2 0093     		str	r3, [sp]
 2658 07e4 1E98     		ldr	r0, [sp, #120]
 2659 07e6 1F99     		ldr	r1, [sp, #124]
 2660 07e8 209A     		ldr	r2, [sp, #128]
 2661 07ea 219B     		ldr	r3, [sp, #132]
 2662 07ec FFF7FEFF 		bl	charlie
 2663              	.LVL184:
 234:Src/charlie.c ****          return;
 2664              		.loc 2 234 8 view .LVU434
 234:Src/charlie.c ****          return;
 2665              		.loc 2 234 20 is_stmt 0 view .LVU435
 2666 07f0 444B     		ldr	r3, .L120
 2667 07f2 1B68     		ldr	r3, [r3]
 234:Src/charlie.c ****          return;
 2668              		.loc 2 234 10 view .LVU436
 2669 07f4 012B     		cmp	r3, #1
 2670 07f6 00D1     		bne	.LCB2341
 2671 07f8 1EE4     		b	.L66	@long jump
 2672              	.LCB2341:
 236:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 2673              		.loc 2 236 8 is_stmt 1 view .LVU437
 2674 07fa FA20     		movs	r0, #250
 2675 07fc 4000     		lsls	r0, r0, #1
 2676 07fe FFF7FEFF 		bl	HAL_Delay
 2677              	.LVL185:
 237:Src/charlie.c ****        if(stopFlag == 1)
 2678              		.loc 2 237 8 view .LVU438
 2679 0802 0923     		movs	r3, #9
 2680 0804 1093     		str	r3, [sp, #64]
 2681 0806 2DA8     		add	r0, sp, #180
 2682 0808 0BA9     		add	r1, sp, #44
 2683 080a 0B00     		movs	r3, r1
 2684 080c 0200     		movs	r2, r0
 2685 080e 23CA     		ldmia	r2!, {r0, r1, r5}
 2686 0810 23C3     		stmia	r3!, {r0, r1, r5}
 2687 0812 03CA     		ldmia	r2!, {r0, r1}
 2688 0814 03C3     		stmia	r3!, {r0, r1}
 2689 0816 28A8     		add	r0, sp, #160
 2690 0818 06A9     		add	r1, sp, #24
 2691 081a 0B00     		movs	r3, r1
 2692 081c 0200     		movs	r2, r0
 2693 081e 23CA     		ldmia	r2!, {r0, r1, r5}
 2694 0820 23C3     		stmia	r3!, {r0, r1, r5}
 2695 0822 03CA     		ldmia	r2!, {r0, r1}
 2696 0824 03C3     		stmia	r3!, {r0, r1}
 2697 0826 23A8     		add	r0, sp, #140
 2698 0828 01A9     		add	r1, sp, #4
 2699 082a 0B00     		movs	r3, r1
 2700 082c 0200     		movs	r2, r0
ARM GAS  /tmp/cckp0GEV.s 			page 71


 2701 082e 23CA     		ldmia	r2!, {r0, r1, r5}
 2702 0830 23C3     		stmia	r3!, {r0, r1, r5}
 2703 0832 03CA     		ldmia	r2!, {r0, r1}
 2704 0834 03C3     		stmia	r3!, {r0, r1}
 2705 0836 229B     		ldr	r3, [sp, #136]
 2706 0838 0093     		str	r3, [sp]
 2707 083a 1E98     		ldr	r0, [sp, #120]
 2708 083c 1F99     		ldr	r1, [sp, #124]
 2709 083e 209A     		ldr	r2, [sp, #128]
 2710 0840 219B     		ldr	r3, [sp, #132]
 2711 0842 FFF7FEFF 		bl	charlie
 2712              	.LVL186:
 238:Src/charlie.c ****          return;
 2713              		.loc 2 238 8 view .LVU439
 238:Src/charlie.c ****          return;
 2714              		.loc 2 238 20 is_stmt 0 view .LVU440
 2715 0846 2F4B     		ldr	r3, .L120
 2716 0848 1B68     		ldr	r3, [r3]
 238:Src/charlie.c ****          return;
 2717              		.loc 2 238 10 view .LVU441
 2718 084a 012B     		cmp	r3, #1
 2719 084c 01D1     		bne	.LCB2385
 2720 084e FFF7F3FB 		bl	.L66	@far jump
 2721              	.LCB2385:
 240:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 2722              		.loc 2 240 8 is_stmt 1 view .LVU442
 2723 0852 FA20     		movs	r0, #250
 2724 0854 4000     		lsls	r0, r0, #1
 2725 0856 FFF7FEFF 		bl	HAL_Delay
 2726              	.LVL187:
 241:Src/charlie.c ****        if(stopFlag == 1)
 2727              		.loc 2 241 8 view .LVU443
 2728 085a 0A23     		movs	r3, #10
 2729 085c 1093     		str	r3, [sp, #64]
 2730 085e 2DA8     		add	r0, sp, #180
 2731 0860 0BA9     		add	r1, sp, #44
 2732 0862 0B00     		movs	r3, r1
 2733 0864 0200     		movs	r2, r0
 2734 0866 23CA     		ldmia	r2!, {r0, r1, r5}
 2735 0868 23C3     		stmia	r3!, {r0, r1, r5}
 2736 086a 03CA     		ldmia	r2!, {r0, r1}
 2737 086c 03C3     		stmia	r3!, {r0, r1}
 2738 086e 28A8     		add	r0, sp, #160
 2739 0870 06A9     		add	r1, sp, #24
 2740 0872 0B00     		movs	r3, r1
 2741 0874 0200     		movs	r2, r0
 2742 0876 23CA     		ldmia	r2!, {r0, r1, r5}
 2743 0878 23C3     		stmia	r3!, {r0, r1, r5}
 2744 087a 03CA     		ldmia	r2!, {r0, r1}
 2745 087c 03C3     		stmia	r3!, {r0, r1}
 2746 087e 23A8     		add	r0, sp, #140
 2747 0880 01A9     		add	r1, sp, #4
 2748 0882 0B00     		movs	r3, r1
 2749 0884 0200     		movs	r2, r0
 2750 0886 23CA     		ldmia	r2!, {r0, r1, r5}
 2751 0888 23C3     		stmia	r3!, {r0, r1, r5}
 2752 088a 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 72


 2753 088c 03C3     		stmia	r3!, {r0, r1}
 2754 088e 229B     		ldr	r3, [sp, #136]
 2755 0890 0093     		str	r3, [sp]
 2756 0892 1E98     		ldr	r0, [sp, #120]
 2757 0894 1F99     		ldr	r1, [sp, #124]
 2758 0896 209A     		ldr	r2, [sp, #128]
 2759 0898 219B     		ldr	r3, [sp, #132]
 2760 089a FFF7FEFF 		bl	charlie
 2761              	.LVL188:
 242:Src/charlie.c ****          return;
 2762              		.loc 2 242 8 view .LVU444
 242:Src/charlie.c ****          return;
 2763              		.loc 2 242 20 is_stmt 0 view .LVU445
 2764 089e 194B     		ldr	r3, .L120
 2765 08a0 1B68     		ldr	r3, [r3]
 242:Src/charlie.c ****          return;
 2766              		.loc 2 242 10 view .LVU446
 2767 08a2 012B     		cmp	r3, #1
 2768 08a4 01D1     		bne	.LCB2429
 2769 08a6 FFF7C7FB 		bl	.L66	@far jump
 2770              	.LCB2429:
 244:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 2771              		.loc 2 244 8 is_stmt 1 view .LVU447
 2772 08aa FA20     		movs	r0, #250
 2773 08ac 4000     		lsls	r0, r0, #1
 2774 08ae FFF7FEFF 		bl	HAL_Delay
 2775              	.LVL189:
 245:Src/charlie.c ****        if(stopFlag == 1)
 2776              		.loc 2 245 8 view .LVU448
 2777 08b2 0B23     		movs	r3, #11
 2778 08b4 1093     		str	r3, [sp, #64]
 2779 08b6 2DA8     		add	r0, sp, #180
 2780 08b8 0BA9     		add	r1, sp, #44
 2781 08ba 0B00     		movs	r3, r1
 2782 08bc 0200     		movs	r2, r0
 2783 08be 23CA     		ldmia	r2!, {r0, r1, r5}
 2784 08c0 23C3     		stmia	r3!, {r0, r1, r5}
 2785 08c2 03CA     		ldmia	r2!, {r0, r1}
 2786 08c4 03C3     		stmia	r3!, {r0, r1}
 2787 08c6 28A8     		add	r0, sp, #160
 2788 08c8 06A9     		add	r1, sp, #24
 2789 08ca 0B00     		movs	r3, r1
 2790 08cc 0200     		movs	r2, r0
 2791 08ce 23CA     		ldmia	r2!, {r0, r1, r5}
 2792 08d0 23C3     		stmia	r3!, {r0, r1, r5}
 2793 08d2 03CA     		ldmia	r2!, {r0, r1}
 2794 08d4 03C3     		stmia	r3!, {r0, r1}
 2795 08d6 23A8     		add	r0, sp, #140
 2796 08d8 01A9     		add	r1, sp, #4
 2797 08da 0B00     		movs	r3, r1
 2798 08dc 0200     		movs	r2, r0
 2799 08de 23CA     		ldmia	r2!, {r0, r1, r5}
 2800 08e0 23C3     		stmia	r3!, {r0, r1, r5}
 2801 08e2 03CA     		ldmia	r2!, {r0, r1}
 2802 08e4 03C3     		stmia	r3!, {r0, r1}
 2803 08e6 229B     		ldr	r3, [sp, #136]
 2804 08e8 0093     		str	r3, [sp]
ARM GAS  /tmp/cckp0GEV.s 			page 73


 2805 08ea 1E98     		ldr	r0, [sp, #120]
 2806 08ec 1F99     		ldr	r1, [sp, #124]
 2807 08ee 209A     		ldr	r2, [sp, #128]
 2808 08f0 219B     		ldr	r3, [sp, #132]
 2809 08f2 FFF7FEFF 		bl	charlie
 2810              	.LVL190:
 246:Src/charlie.c ****          return;
 2811              		.loc 2 246 8 view .LVU449
 246:Src/charlie.c ****          return;
 2812              		.loc 2 246 20 is_stmt 0 view .LVU450
 2813 08f6 034B     		ldr	r3, .L120
 2814 08f8 1B68     		ldr	r3, [r3]
 246:Src/charlie.c ****          return;
 2815              		.loc 2 246 10 view .LVU451
 2816 08fa 012B     		cmp	r3, #1
 2817 08fc 01D1     		bne	.LCB2473
 2818 08fe FFF79BFB 		bl	.L66	@far jump
 2819              	.LCB2473:
 2820 0902 01E0     		b	.L121
 2821              	.L122:
 2822              		.align	2
 2823              	.L120:
 2824 0904 00000000 		.word	.LANCHOR0
 2825              	.L121:
 248:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 2826              		.loc 2 248 8 is_stmt 1 view .LVU452
 2827 0908 FA20     		movs	r0, #250
 2828 090a 4000     		lsls	r0, r0, #1
 2829 090c FFF7FEFF 		bl	HAL_Delay
 2830              	.LVL191:
 249:Src/charlie.c ****        if(stopFlag == 1)
 2831              		.loc 2 249 8 view .LVU453
 2832 0910 0C23     		movs	r3, #12
 2833 0912 1093     		str	r3, [sp, #64]
 2834 0914 2DA8     		add	r0, sp, #180
 2835 0916 0BA9     		add	r1, sp, #44
 2836 0918 0B00     		movs	r3, r1
 2837 091a 0200     		movs	r2, r0
 2838 091c 23CA     		ldmia	r2!, {r0, r1, r5}
 2839 091e 23C3     		stmia	r3!, {r0, r1, r5}
 2840 0920 03CA     		ldmia	r2!, {r0, r1}
 2841 0922 03C3     		stmia	r3!, {r0, r1}
 2842 0924 28A8     		add	r0, sp, #160
 2843 0926 06A9     		add	r1, sp, #24
 2844 0928 0B00     		movs	r3, r1
 2845 092a 0200     		movs	r2, r0
 2846 092c 23CA     		ldmia	r2!, {r0, r1, r5}
 2847 092e 23C3     		stmia	r3!, {r0, r1, r5}
 2848 0930 03CA     		ldmia	r2!, {r0, r1}
 2849 0932 03C3     		stmia	r3!, {r0, r1}
 2850 0934 23A8     		add	r0, sp, #140
 2851 0936 01A9     		add	r1, sp, #4
 2852 0938 0B00     		movs	r3, r1
 2853 093a 0200     		movs	r2, r0
 2854 093c 23CA     		ldmia	r2!, {r0, r1, r5}
 2855 093e 23C3     		stmia	r3!, {r0, r1, r5}
 2856 0940 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 74


 2857 0942 03C3     		stmia	r3!, {r0, r1}
 2858 0944 229B     		ldr	r3, [sp, #136]
 2859 0946 0093     		str	r3, [sp]
 2860 0948 1E98     		ldr	r0, [sp, #120]
 2861 094a 1F99     		ldr	r1, [sp, #124]
 2862 094c 209A     		ldr	r2, [sp, #128]
 2863 094e 219B     		ldr	r3, [sp, #132]
 2864 0950 FFF7FEFF 		bl	charlie
 2865              	.LVL192:
 250:Src/charlie.c ****          return;
 2866              		.loc 2 250 8 view .LVU454
 250:Src/charlie.c ****          return;
 2867              		.loc 2 250 20 is_stmt 0 view .LVU455
 2868 0954 E84B     		ldr	r3, .L123
 2869 0956 1B68     		ldr	r3, [r3]
 250:Src/charlie.c ****          return;
 2870              		.loc 2 250 10 view .LVU456
 2871 0958 012B     		cmp	r3, #1
 2872 095a 01D1     		bne	.LCB2526
 2873 095c FFF76CFB 		bl	.L66	@far jump
 2874              	.LCB2526:
 252:Src/charlie.c ****    }
 2875              		.loc 2 252 8 is_stmt 1 view .LVU457
 2876 0960 FA20     		movs	r0, #250
 2877 0962 4000     		lsls	r0, r0, #1
 2878 0964 FFF7FEFF 		bl	HAL_Delay
 2879              	.LVL193:
 2880 0968 FFF75EFB 		bl	.L70	@ far jump
 2881              	.L104:
 257:Src/charlie.c ****       for(int i=0; i<10000; i++){
 2882              		.loc 2 257 7 view .LVU458
 2883 096c 0023     		movs	r3, #0
 2884 096e 1093     		str	r3, [sp, #64]
 2885 0970 2DA8     		add	r0, sp, #180
 2886 0972 0BA9     		add	r1, sp, #44
 2887 0974 0B00     		movs	r3, r1
 2888 0976 0200     		movs	r2, r0
 2889 0978 23CA     		ldmia	r2!, {r0, r1, r5}
 2890 097a 23C3     		stmia	r3!, {r0, r1, r5}
 2891 097c 03CA     		ldmia	r2!, {r0, r1}
 2892 097e 03C3     		stmia	r3!, {r0, r1}
 2893 0980 28A8     		add	r0, sp, #160
 2894 0982 06A9     		add	r1, sp, #24
 2895 0984 0B00     		movs	r3, r1
 2896 0986 0200     		movs	r2, r0
 2897 0988 23CA     		ldmia	r2!, {r0, r1, r5}
 2898 098a 23C3     		stmia	r3!, {r0, r1, r5}
 2899 098c 03CA     		ldmia	r2!, {r0, r1}
 2900 098e 03C3     		stmia	r3!, {r0, r1}
 2901 0990 23A8     		add	r0, sp, #140
 2902 0992 01A9     		add	r1, sp, #4
 2903 0994 0B00     		movs	r3, r1
 2904 0996 0200     		movs	r2, r0
 2905 0998 23CA     		ldmia	r2!, {r0, r1, r5}
 2906 099a 23C3     		stmia	r3!, {r0, r1, r5}
 2907 099c 03CA     		ldmia	r2!, {r0, r1}
 2908 099e 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 75


 2909 09a0 229B     		ldr	r3, [sp, #136]
 2910 09a2 0093     		str	r3, [sp]
 2911 09a4 1E98     		ldr	r0, [sp, #120]
 2912 09a6 1F99     		ldr	r1, [sp, #124]
 2913 09a8 209A     		ldr	r2, [sp, #128]
 2914 09aa 219B     		ldr	r3, [sp, #132]
 2915 09ac FFF7FEFF 		bl	charlie
 2916              	.LVL194:
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2917              		.loc 2 258 7 view .LVU459
 2918              	.LBB8:
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2919              		.loc 2 258 11 view .LVU460
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2920              		.loc 2 258 15 is_stmt 0 view .LVU461
 2921 09b0 0026     		movs	r6, #0
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2922              		.loc 2 258 7 view .LVU462
 2923 09b2 00E0     		b	.L72
 2924              	.LVL195:
 2925              	.L106:
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2926              		.loc 2 258 29 is_stmt 1 discriminator 2 view .LVU463
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2927              		.loc 2 258 30 is_stmt 0 discriminator 2 view .LVU464
 2928 09b4 0136     		adds	r6, r6, #1
 2929              	.LVL196:
 2930              	.L72:
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2931              		.loc 2 258 20 is_stmt 1 discriminator 1 view .LVU465
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2932              		.loc 2 258 7 is_stmt 0 discriminator 1 view .LVU466
 2933 09b6 D14B     		ldr	r3, .L123+4
 2934 09b8 9E42     		cmp	r6, r3
 2935 09ba 01DD     		ble	.LCB2593
 2936 09bc FFF738FB 		bl	.L71	@far jump
 2937              	.LCB2593:
 2938              	.LBB9:
 259:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2939              		.loc 2 259 18 view .LVU467
 2940 09c0 0125     		movs	r5, #1
 2941              	.L74:
 2942              	.LVL197:
 259:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2943              		.loc 2 259 23 is_stmt 1 discriminator 1 view .LVU468
 259:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2944              		.loc 2 259 10 is_stmt 0 discriminator 1 view .LVU469
 2945 09c2 0C2D     		cmp	r5, #12
 2946 09c4 F6DC     		bgt	.L106
 260:Src/charlie.c ****        //      HAL_Delay(1);
 2947              		.loc 2 260 14 is_stmt 1 view .LVU470
 2948 09c6 1095     		str	r5, [sp, #64]
 2949 09c8 2DA8     		add	r0, sp, #180
 2950 09ca 0BA9     		add	r1, sp, #44
 2951 09cc 0B00     		movs	r3, r1
 2952 09ce 0200     		movs	r2, r0
 2953 09d0 83CA     		ldmia	r2!, {r0, r1, r7}
ARM GAS  /tmp/cckp0GEV.s 			page 76


 2954 09d2 83C3     		stmia	r3!, {r0, r1, r7}
 2955 09d4 03CA     		ldmia	r2!, {r0, r1}
 2956 09d6 03C3     		stmia	r3!, {r0, r1}
 2957 09d8 28A8     		add	r0, sp, #160
 2958 09da 06A9     		add	r1, sp, #24
 2959 09dc 0B00     		movs	r3, r1
 2960 09de 0200     		movs	r2, r0
 2961 09e0 83CA     		ldmia	r2!, {r0, r1, r7}
 2962 09e2 83C3     		stmia	r3!, {r0, r1, r7}
 2963 09e4 03CA     		ldmia	r2!, {r0, r1}
 2964 09e6 03C3     		stmia	r3!, {r0, r1}
 2965 09e8 23A8     		add	r0, sp, #140
 2966 09ea 01A9     		add	r1, sp, #4
 2967 09ec 0B00     		movs	r3, r1
 2968 09ee 0200     		movs	r2, r0
 2969 09f0 83CA     		ldmia	r2!, {r0, r1, r7}
 2970 09f2 83C3     		stmia	r3!, {r0, r1, r7}
 2971 09f4 03CA     		ldmia	r2!, {r0, r1}
 2972 09f6 03C3     		stmia	r3!, {r0, r1}
 2973 09f8 229B     		ldr	r3, [sp, #136]
 2974 09fa 0093     		str	r3, [sp]
 2975 09fc 1E98     		ldr	r0, [sp, #120]
 2976 09fe 1F99     		ldr	r1, [sp, #124]
 2977 0a00 209A     		ldr	r2, [sp, #128]
 2978 0a02 219B     		ldr	r3, [sp, #132]
 2979 0a04 FFF7FEFF 		bl	charlie
 2980              	.LVL198:
 262:Src/charlie.c ****                return;
 2981              		.loc 2 262 14 view .LVU471
 262:Src/charlie.c ****                return;
 2982              		.loc 2 262 26 is_stmt 0 view .LVU472
 2983 0a08 BB4B     		ldr	r3, .L123
 2984 0a0a 1B68     		ldr	r3, [r3]
 262:Src/charlie.c ****                return;
 2985              		.loc 2 262 16 view .LVU473
 2986 0a0c 012B     		cmp	r3, #1
 2987 0a0e 01D1     		bne	.LCB2640
 2988 0a10 FFF712FB 		bl	.L66	@far jump
 2989              	.LCB2640:
 259:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2990              		.loc 2 259 30 is_stmt 1 discriminator 2 view .LVU474
 259:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2991              		.loc 2 259 31 is_stmt 0 discriminator 2 view .LVU475
 2992 0a14 0135     		adds	r5, r5, #1
 2993              	.LVL199:
 259:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2994              		.loc 2 259 31 discriminator 2 view .LVU476
 2995 0a16 D4E7     		b	.L74
 2996              	.LVL200:
 2997              	.L109:
 259:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2998              		.loc 2 259 31 discriminator 2 view .LVU477
 2999              	.LBE9:
 3000              	.LBE8:
 3001              	.LBB10:
 273:Src/charlie.c ****             HAL_Delay(500);
 3002              		.loc 2 273 13 is_stmt 1 view .LVU478
ARM GAS  /tmp/cckp0GEV.s 			page 77


 3003 0a18 0B33     		adds	r3, r3, #11
 3004              	.LVL201:
 273:Src/charlie.c ****             HAL_Delay(500);
 3005              		.loc 2 273 13 is_stmt 0 view .LVU479
 3006 0a1a 1093     		str	r3, [sp, #64]
 3007 0a1c 2DA8     		add	r0, sp, #180
 3008 0a1e 0BA9     		add	r1, sp, #44
 3009 0a20 0B00     		movs	r3, r1
 3010 0a22 0200     		movs	r2, r0
 3011 0a24 13CA     		ldmia	r2!, {r0, r1, r4}
 3012 0a26 13C3     		stmia	r3!, {r0, r1, r4}
 3013 0a28 03CA     		ldmia	r2!, {r0, r1}
 3014 0a2a 03C3     		stmia	r3!, {r0, r1}
 3015 0a2c 28A8     		add	r0, sp, #160
 3016 0a2e 06A9     		add	r1, sp, #24
 3017 0a30 0B00     		movs	r3, r1
 3018 0a32 0200     		movs	r2, r0
 3019 0a34 13CA     		ldmia	r2!, {r0, r1, r4}
 3020 0a36 13C3     		stmia	r3!, {r0, r1, r4}
 3021 0a38 03CA     		ldmia	r2!, {r0, r1}
 3022 0a3a 03C3     		stmia	r3!, {r0, r1}
 3023 0a3c 23A8     		add	r0, sp, #140
 3024 0a3e 01A9     		add	r1, sp, #4
 3025 0a40 0B00     		movs	r3, r1
 3026 0a42 0200     		movs	r2, r0
 3027 0a44 13CA     		ldmia	r2!, {r0, r1, r4}
 3028 0a46 13C3     		stmia	r3!, {r0, r1, r4}
 3029 0a48 03CA     		ldmia	r2!, {r0, r1}
 3030 0a4a 03C3     		stmia	r3!, {r0, r1}
 3031 0a4c 229B     		ldr	r3, [sp, #136]
 3032 0a4e 0093     		str	r3, [sp]
 3033 0a50 1E98     		ldr	r0, [sp, #120]
 3034 0a52 1F99     		ldr	r1, [sp, #124]
 3035 0a54 209A     		ldr	r2, [sp, #128]
 3036 0a56 219B     		ldr	r3, [sp, #132]
 3037 0a58 FFF7FEFF 		bl	charlie
 3038              	.LVL202:
 274:Src/charlie.c ****             if(stopFlag == 1)
 3039              		.loc 2 274 13 is_stmt 1 view .LVU480
 3040 0a5c FA20     		movs	r0, #250
 3041 0a5e 4000     		lsls	r0, r0, #1
 3042 0a60 FFF7FEFF 		bl	HAL_Delay
 3043              	.LVL203:
 275:Src/charlie.c ****                return;
 3044              		.loc 2 275 13 view .LVU481
 275:Src/charlie.c ****                return;
 3045              		.loc 2 275 25 is_stmt 0 view .LVU482
 3046 0a64 A44B     		ldr	r3, .L123
 3047 0a66 1B68     		ldr	r3, [r3]
 275:Src/charlie.c ****                return;
 3048              		.loc 2 275 15 view .LVU483
 3049 0a68 012B     		cmp	r3, #1
 3050 0a6a 00D0     		beq	.LCB2700
 3051 0a6c A3E1     		b	.L76	@long jump
 3052              	.LCB2700:
 275:Src/charlie.c ****                return;
 3053              		.loc 2 275 15 view .LVU484
ARM GAS  /tmp/cckp0GEV.s 			page 78


 3054 0a6e FFF7E3FA 		bl	.L66	@ far jump
 3055              	.LVL204:
 3056              	.L110:
 3057              	.LBB11:
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 3058              		.loc 2 279 21 view .LVU485
 3059 0a72 0023     		movs	r3, #0
 3060              	.LVL205:
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 3061              		.loc 2 279 21 view .LVU486
 3062 0a74 9B46     		mov	fp, r3
 3063              	.L77:
 3064              	.LVL206:
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 3065              		.loc 2 279 27 is_stmt 1 discriminator 1 view .LVU487
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 3066              		.loc 2 279 13 is_stmt 0 discriminator 1 view .LVU488
 3067 0a76 A14B     		ldr	r3, .L123+4
 3068 0a78 9B45     		cmp	fp, r3
 3069 0a7a 49DC     		bgt	.L107
 280:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 1);
 3070              		.loc 2 280 16 is_stmt 1 view .LVU489
 3071 0a7c 0B23     		movs	r3, #11
 3072 0a7e 1093     		str	r3, [sp, #64]
 3073 0a80 2DAB     		add	r3, sp, #180
 3074 0a82 9946     		mov	r9, r3
 3075 0a84 0BAB     		add	r3, sp, #44
 3076 0a86 9846     		mov	r8, r3
 3077 0a88 4A46     		mov	r2, r9
 3078 0a8a 13CA     		ldmia	r2!, {r0, r1, r4}
 3079 0a8c 13C3     		stmia	r3!, {r0, r1, r4}
 3080 0a8e 03CA     		ldmia	r2!, {r0, r1}
 3081 0a90 03C3     		stmia	r3!, {r0, r1}
 3082 0a92 28AF     		add	r7, sp, #160
 3083 0a94 06AE     		add	r6, sp, #24
 3084 0a96 3300     		movs	r3, r6
 3085 0a98 3A00     		movs	r2, r7
 3086 0a9a 13CA     		ldmia	r2!, {r0, r1, r4}
 3087 0a9c 13C3     		stmia	r3!, {r0, r1, r4}
 3088 0a9e 03CA     		ldmia	r2!, {r0, r1}
 3089 0aa0 03C3     		stmia	r3!, {r0, r1}
 3090 0aa2 23AD     		add	r5, sp, #140
 3091 0aa4 01AB     		add	r3, sp, #4
 3092 0aa6 1393     		str	r3, [sp, #76]
 3093 0aa8 2A00     		movs	r2, r5
 3094 0aaa 13CA     		ldmia	r2!, {r0, r1, r4}
 3095 0aac 13C3     		stmia	r3!, {r0, r1, r4}
 3096 0aae 03CA     		ldmia	r2!, {r0, r1}
 3097 0ab0 03C3     		stmia	r3!, {r0, r1}
 3098 0ab2 229B     		ldr	r3, [sp, #136]
 3099 0ab4 0093     		str	r3, [sp]
 3100 0ab6 1E98     		ldr	r0, [sp, #120]
 3101 0ab8 1F99     		ldr	r1, [sp, #124]
 3102 0aba 209A     		ldr	r2, [sp, #128]
 3103 0abc 219B     		ldr	r3, [sp, #132]
 3104 0abe FFF7FEFF 		bl	charlie
 3105              	.LVL207:
ARM GAS  /tmp/cckp0GEV.s 			page 79


 281:Src/charlie.c ****                if(stopFlag == 1)
 3106              		.loc 2 281 16 view .LVU490
 3107 0ac2 0123     		movs	r3, #1
 3108 0ac4 1093     		str	r3, [sp, #64]
 3109 0ac6 4346     		mov	r3, r8
 3110 0ac8 4A46     		mov	r2, r9
 3111 0aca 13CA     		ldmia	r2!, {r0, r1, r4}
 3112 0acc 13C3     		stmia	r3!, {r0, r1, r4}
 3113 0ace 03CA     		ldmia	r2!, {r0, r1}
 3114 0ad0 03C3     		stmia	r3!, {r0, r1}
 3115 0ad2 3300     		movs	r3, r6
 3116 0ad4 3A00     		movs	r2, r7
 3117 0ad6 13CA     		ldmia	r2!, {r0, r1, r4}
 3118 0ad8 13C3     		stmia	r3!, {r0, r1, r4}
 3119 0ada 03CA     		ldmia	r2!, {r0, r1}
 3120 0adc 03C3     		stmia	r3!, {r0, r1}
 3121 0ade 1399     		ldr	r1, [sp, #76]
 3122 0ae0 0B00     		movs	r3, r1
 3123 0ae2 2A00     		movs	r2, r5
 3124 0ae4 13CA     		ldmia	r2!, {r0, r1, r4}
 3125 0ae6 13C3     		stmia	r3!, {r0, r1, r4}
 3126 0ae8 03CA     		ldmia	r2!, {r0, r1}
 3127 0aea 03C3     		stmia	r3!, {r0, r1}
 3128 0aec 229B     		ldr	r3, [sp, #136]
 3129 0aee 0093     		str	r3, [sp]
 3130 0af0 1E98     		ldr	r0, [sp, #120]
 3131 0af2 1F99     		ldr	r1, [sp, #124]
 3132 0af4 209A     		ldr	r2, [sp, #128]
 3133 0af6 219B     		ldr	r3, [sp, #132]
 3134 0af8 FFF7FEFF 		bl	charlie
 3135              	.LVL208:
 282:Src/charlie.c ****                   return;
 3136              		.loc 2 282 16 view .LVU491
 282:Src/charlie.c ****                   return;
 3137              		.loc 2 282 28 is_stmt 0 view .LVU492
 3138 0afc 7E4B     		ldr	r3, .L123
 3139 0afe 1B68     		ldr	r3, [r3]
 282:Src/charlie.c ****                   return;
 3140              		.loc 2 282 18 view .LVU493
 3141 0b00 012B     		cmp	r3, #1
 3142 0b02 01D1     		bne	.LCB2789
 3143 0b04 FFF798FA 		bl	.L66	@far jump
 3144              	.LCB2789:
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 3145              		.loc 2 279 36 is_stmt 1 discriminator 2 view .LVU494
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 3146              		.loc 2 279 37 is_stmt 0 discriminator 2 view .LVU495
 3147 0b08 0123     		movs	r3, #1
 3148 0b0a 9C46     		mov	ip, r3
 3149 0b0c E344     		add	fp, fp, ip
 3150              	.LVL209:
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 3151              		.loc 2 279 37 discriminator 2 view .LVU496
 3152 0b0e B2E7     		b	.L77
 3153              	.L107:
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 3154              		.loc 2 279 37 discriminator 2 view .LVU497
ARM GAS  /tmp/cckp0GEV.s 			page 80


 3155              	.LBE11:
 285:Src/charlie.c ****          }
 3156              		.loc 2 285 13 is_stmt 1 view .LVU498
 3157 0b10 0A20     		movs	r0, #10
 3158 0b12 FFF7FEFF 		bl	HAL_Delay
 3159              	.LVL210:
 3160 0b16 52E1     		b	.L78
 3161              	.LVL211:
 3162              	.L111:
 3163              	.LBB12:
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 3164              		.loc 2 288 21 is_stmt 0 view .LVU499
 3165 0b18 0023     		movs	r3, #0
 3166              	.LVL212:
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 3167              		.loc 2 288 21 view .LVU500
 3168 0b1a 9B46     		mov	fp, r3
 3169              	.L80:
 3170              	.LVL213:
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 3171              		.loc 2 288 27 is_stmt 1 discriminator 1 view .LVU501
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 3172              		.loc 2 288 13 is_stmt 0 discriminator 1 view .LVU502
 3173 0b1c 774B     		ldr	r3, .L123+4
 3174 0b1e 9B45     		cmp	fp, r3
 3175 0b20 00DD     		ble	.LCB2821
 3176 0b22 50E1     		b	.L81	@long jump
 3177              	.LCB2821:
 289:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 3178              		.loc 2 289 16 is_stmt 1 view .LVU503
 3179 0b24 0223     		movs	r3, #2
 3180 0b26 1093     		str	r3, [sp, #64]
 3181 0b28 2DAB     		add	r3, sp, #180
 3182 0b2a 9946     		mov	r9, r3
 3183 0b2c 0BAB     		add	r3, sp, #44
 3184 0b2e 9846     		mov	r8, r3
 3185 0b30 4A46     		mov	r2, r9
 3186 0b32 13CA     		ldmia	r2!, {r0, r1, r4}
 3187 0b34 13C3     		stmia	r3!, {r0, r1, r4}
 3188 0b36 03CA     		ldmia	r2!, {r0, r1}
 3189 0b38 03C3     		stmia	r3!, {r0, r1}
 3190 0b3a 28AF     		add	r7, sp, #160
 3191 0b3c 06AE     		add	r6, sp, #24
 3192 0b3e 3300     		movs	r3, r6
 3193 0b40 3A00     		movs	r2, r7
 3194 0b42 13CA     		ldmia	r2!, {r0, r1, r4}
 3195 0b44 13C3     		stmia	r3!, {r0, r1, r4}
 3196 0b46 03CA     		ldmia	r2!, {r0, r1}
 3197 0b48 03C3     		stmia	r3!, {r0, r1}
 3198 0b4a 23AD     		add	r5, sp, #140
 3199 0b4c 01AB     		add	r3, sp, #4
 3200 0b4e 1393     		str	r3, [sp, #76]
 3201 0b50 2A00     		movs	r2, r5
 3202 0b52 13CA     		ldmia	r2!, {r0, r1, r4}
 3203 0b54 13C3     		stmia	r3!, {r0, r1, r4}
 3204 0b56 03CA     		ldmia	r2!, {r0, r1}
 3205 0b58 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 81


 3206 0b5a 229B     		ldr	r3, [sp, #136]
 3207 0b5c 0093     		str	r3, [sp]
 3208 0b5e 1E98     		ldr	r0, [sp, #120]
 3209 0b60 1F99     		ldr	r1, [sp, #124]
 3210 0b62 209A     		ldr	r2, [sp, #128]
 3211 0b64 219B     		ldr	r3, [sp, #132]
 3212 0b66 FFF7FEFF 		bl	charlie
 3213              	.LVL214:
 290:Src/charlie.c ****                if(stopFlag == 1)
 3214              		.loc 2 290 16 view .LVU504
 3215 0b6a 0A23     		movs	r3, #10
 3216 0b6c 1093     		str	r3, [sp, #64]
 3217 0b6e 4346     		mov	r3, r8
 3218 0b70 4A46     		mov	r2, r9
 3219 0b72 13CA     		ldmia	r2!, {r0, r1, r4}
 3220 0b74 13C3     		stmia	r3!, {r0, r1, r4}
 3221 0b76 03CA     		ldmia	r2!, {r0, r1}
 3222 0b78 03C3     		stmia	r3!, {r0, r1}
 3223 0b7a 3300     		movs	r3, r6
 3224 0b7c 3A00     		movs	r2, r7
 3225 0b7e 13CA     		ldmia	r2!, {r0, r1, r4}
 3226 0b80 13C3     		stmia	r3!, {r0, r1, r4}
 3227 0b82 03CA     		ldmia	r2!, {r0, r1}
 3228 0b84 03C3     		stmia	r3!, {r0, r1}
 3229 0b86 1399     		ldr	r1, [sp, #76]
 3230 0b88 0B00     		movs	r3, r1
 3231 0b8a 2A00     		movs	r2, r5
 3232 0b8c 13CA     		ldmia	r2!, {r0, r1, r4}
 3233 0b8e 13C3     		stmia	r3!, {r0, r1, r4}
 3234 0b90 03CA     		ldmia	r2!, {r0, r1}
 3235 0b92 03C3     		stmia	r3!, {r0, r1}
 3236 0b94 229B     		ldr	r3, [sp, #136]
 3237 0b96 0093     		str	r3, [sp]
 3238 0b98 1E98     		ldr	r0, [sp, #120]
 3239 0b9a 1F99     		ldr	r1, [sp, #124]
 3240 0b9c 209A     		ldr	r2, [sp, #128]
 3241 0b9e 219B     		ldr	r3, [sp, #132]
 3242 0ba0 FFF7FEFF 		bl	charlie
 3243              	.LVL215:
 291:Src/charlie.c ****                   return;
 3244              		.loc 2 291 16 view .LVU505
 291:Src/charlie.c ****                   return;
 3245              		.loc 2 291 28 is_stmt 0 view .LVU506
 3246 0ba4 544B     		ldr	r3, .L123
 3247 0ba6 1B68     		ldr	r3, [r3]
 291:Src/charlie.c ****                   return;
 3248              		.loc 2 291 18 view .LVU507
 3249 0ba8 012B     		cmp	r3, #1
 3250 0baa 01D1     		bne	.LCB2893
 3251 0bac FFF744FA 		bl	.L66	@far jump
 3252              	.LCB2893:
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 3253              		.loc 2 288 36 is_stmt 1 discriminator 2 view .LVU508
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 3254              		.loc 2 288 37 is_stmt 0 discriminator 2 view .LVU509
 3255 0bb0 0123     		movs	r3, #1
 3256 0bb2 9C46     		mov	ip, r3
ARM GAS  /tmp/cckp0GEV.s 			page 82


 3257 0bb4 E344     		add	fp, fp, ip
 3258              	.LVL216:
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 3259              		.loc 2 288 37 discriminator 2 view .LVU510
 3260 0bb6 B1E7     		b	.L80
 3261              	.LVL217:
 3262              	.L108:
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 3263              		.loc 2 288 37 discriminator 2 view .LVU511
 3264              	.LBE12:
 3265              	.LBB13:
 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3266              		.loc 2 296 36 is_stmt 1 discriminator 2 view .LVU512
 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3267              		.loc 2 296 37 is_stmt 0 discriminator 2 view .LVU513
 3268 0bb8 0123     		movs	r3, #1
 3269 0bba 9C46     		mov	ip, r3
 3270 0bbc E344     		add	fp, fp, ip
 3271              	.LVL218:
 3272              	.L83:
 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3273              		.loc 2 296 27 is_stmt 1 discriminator 1 view .LVU514
 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3274              		.loc 2 296 13 is_stmt 0 discriminator 1 view .LVU515
 3275 0bbe 4F4B     		ldr	r3, .L123+4
 3276 0bc0 9B45     		cmp	fp, r3
 3277 0bc2 00DD     		ble	.LCB2922
 3278 0bc4 03E1     		b	.L84	@long jump
 3279              	.LCB2922:
 297:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 9);
 3280              		.loc 2 297 16 is_stmt 1 view .LVU516
 3281 0bc6 0323     		movs	r3, #3
 3282 0bc8 1093     		str	r3, [sp, #64]
 3283 0bca 2DAB     		add	r3, sp, #180
 3284 0bcc 9946     		mov	r9, r3
 3285 0bce 0BAB     		add	r3, sp, #44
 3286 0bd0 9846     		mov	r8, r3
 3287 0bd2 4A46     		mov	r2, r9
 3288 0bd4 13CA     		ldmia	r2!, {r0, r1, r4}
 3289 0bd6 13C3     		stmia	r3!, {r0, r1, r4}
 3290 0bd8 03CA     		ldmia	r2!, {r0, r1}
 3291 0bda 03C3     		stmia	r3!, {r0, r1}
 3292 0bdc 28AF     		add	r7, sp, #160
 3293 0bde 06AE     		add	r6, sp, #24
 3294 0be0 3300     		movs	r3, r6
 3295 0be2 3A00     		movs	r2, r7
 3296 0be4 13CA     		ldmia	r2!, {r0, r1, r4}
 3297 0be6 13C3     		stmia	r3!, {r0, r1, r4}
 3298 0be8 03CA     		ldmia	r2!, {r0, r1}
 3299 0bea 03C3     		stmia	r3!, {r0, r1}
 3300 0bec 23AD     		add	r5, sp, #140
 3301 0bee 01AB     		add	r3, sp, #4
 3302 0bf0 1393     		str	r3, [sp, #76]
 3303 0bf2 2A00     		movs	r2, r5
 3304 0bf4 13CA     		ldmia	r2!, {r0, r1, r4}
 3305 0bf6 13C3     		stmia	r3!, {r0, r1, r4}
 3306 0bf8 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 83


 3307 0bfa 03C3     		stmia	r3!, {r0, r1}
 3308 0bfc 229B     		ldr	r3, [sp, #136]
 3309 0bfe 0093     		str	r3, [sp]
 3310 0c00 1E98     		ldr	r0, [sp, #120]
 3311 0c02 1F99     		ldr	r1, [sp, #124]
 3312 0c04 209A     		ldr	r2, [sp, #128]
 3313 0c06 219B     		ldr	r3, [sp, #132]
 3314 0c08 FFF7FEFF 		bl	charlie
 3315              	.LVL219:
 298:Src/charlie.c ****                if(stopFlag == 1)
 3316              		.loc 2 298 16 view .LVU517
 3317 0c0c 0923     		movs	r3, #9
 3318 0c0e 1093     		str	r3, [sp, #64]
 3319 0c10 4346     		mov	r3, r8
 3320 0c12 4A46     		mov	r2, r9
 3321 0c14 13CA     		ldmia	r2!, {r0, r1, r4}
 3322 0c16 13C3     		stmia	r3!, {r0, r1, r4}
 3323 0c18 03CA     		ldmia	r2!, {r0, r1}
 3324 0c1a 03C3     		stmia	r3!, {r0, r1}
 3325 0c1c 3300     		movs	r3, r6
 3326 0c1e 3A00     		movs	r2, r7
 3327 0c20 13CA     		ldmia	r2!, {r0, r1, r4}
 3328 0c22 13C3     		stmia	r3!, {r0, r1, r4}
 3329 0c24 03CA     		ldmia	r2!, {r0, r1}
 3330 0c26 03C3     		stmia	r3!, {r0, r1}
 3331 0c28 1399     		ldr	r1, [sp, #76]
 3332 0c2a 0B00     		movs	r3, r1
 3333 0c2c 2A00     		movs	r2, r5
 3334 0c2e 13CA     		ldmia	r2!, {r0, r1, r4}
 3335 0c30 13C3     		stmia	r3!, {r0, r1, r4}
 3336 0c32 03CA     		ldmia	r2!, {r0, r1}
 3337 0c34 03C3     		stmia	r3!, {r0, r1}
 3338 0c36 229B     		ldr	r3, [sp, #136]
 3339 0c38 0093     		str	r3, [sp]
 3340 0c3a 1E98     		ldr	r0, [sp, #120]
 3341 0c3c 1F99     		ldr	r1, [sp, #124]
 3342 0c3e 209A     		ldr	r2, [sp, #128]
 3343 0c40 219B     		ldr	r3, [sp, #132]
 3344 0c42 FFF7FEFF 		bl	charlie
 3345              	.LVL220:
 299:Src/charlie.c ****                   return;
 3346              		.loc 2 299 16 view .LVU518
 299:Src/charlie.c ****                   return;
 3347              		.loc 2 299 28 is_stmt 0 view .LVU519
 3348 0c46 2C4B     		ldr	r3, .L123
 3349 0c48 1B68     		ldr	r3, [r3]
 299:Src/charlie.c ****                   return;
 3350              		.loc 2 299 18 view .LVU520
 3351 0c4a 012B     		cmp	r3, #1
 3352 0c4c B4D1     		bne	.L108
 3353 0c4e FFF7F3F9 		bl	.L66	@ far jump
 3354              	.LVL221:
 3355              	.L112:
 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3356              		.loc 2 296 21 view .LVU521
 3357 0c52 0023     		movs	r3, #0
 3358              	.LVL222:
ARM GAS  /tmp/cckp0GEV.s 			page 84


 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3359              		.loc 2 296 21 view .LVU522
 3360 0c54 9B46     		mov	fp, r3
 3361 0c56 B2E7     		b	.L83
 3362              	.LVL223:
 3363              	.L113:
 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3364              		.loc 2 296 21 view .LVU523
 3365              	.LBE13:
 3366              	.LBB14:
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3367              		.loc 2 304 21 view .LVU524
 3368 0c58 0023     		movs	r3, #0
 3369              	.LVL224:
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3370              		.loc 2 304 21 view .LVU525
 3371 0c5a 9B46     		mov	fp, r3
 3372              	.L86:
 3373              	.LVL225:
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3374              		.loc 2 304 27 is_stmt 1 discriminator 1 view .LVU526
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3375              		.loc 2 304 13 is_stmt 0 discriminator 1 view .LVU527
 3376 0c5c 274B     		ldr	r3, .L123+4
 3377 0c5e 9B45     		cmp	fp, r3
 3378 0c60 00DD     		ble	.LCB3020
 3379 0c62 B8E0     		b	.L87	@long jump
 3380              	.LCB3020:
 305:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 8);
 3381              		.loc 2 305 16 is_stmt 1 view .LVU528
 3382 0c64 0423     		movs	r3, #4
 3383 0c66 1093     		str	r3, [sp, #64]
 3384 0c68 2DAB     		add	r3, sp, #180
 3385 0c6a 9946     		mov	r9, r3
 3386 0c6c 0BAB     		add	r3, sp, #44
 3387 0c6e 9846     		mov	r8, r3
 3388 0c70 4A46     		mov	r2, r9
 3389 0c72 13CA     		ldmia	r2!, {r0, r1, r4}
 3390 0c74 13C3     		stmia	r3!, {r0, r1, r4}
 3391 0c76 03CA     		ldmia	r2!, {r0, r1}
 3392 0c78 03C3     		stmia	r3!, {r0, r1}
 3393 0c7a 28AF     		add	r7, sp, #160
 3394 0c7c 06AE     		add	r6, sp, #24
 3395 0c7e 3300     		movs	r3, r6
 3396 0c80 3A00     		movs	r2, r7
 3397 0c82 13CA     		ldmia	r2!, {r0, r1, r4}
 3398 0c84 13C3     		stmia	r3!, {r0, r1, r4}
 3399 0c86 03CA     		ldmia	r2!, {r0, r1}
 3400 0c88 03C3     		stmia	r3!, {r0, r1}
 3401 0c8a 23AD     		add	r5, sp, #140
 3402 0c8c 01AB     		add	r3, sp, #4
 3403 0c8e 1393     		str	r3, [sp, #76]
 3404 0c90 2A00     		movs	r2, r5
 3405 0c92 13CA     		ldmia	r2!, {r0, r1, r4}
 3406 0c94 13C3     		stmia	r3!, {r0, r1, r4}
 3407 0c96 03CA     		ldmia	r2!, {r0, r1}
 3408 0c98 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 85


 3409 0c9a 229B     		ldr	r3, [sp, #136]
 3410 0c9c 0093     		str	r3, [sp]
 3411 0c9e 1E98     		ldr	r0, [sp, #120]
 3412 0ca0 1F99     		ldr	r1, [sp, #124]
 3413 0ca2 209A     		ldr	r2, [sp, #128]
 3414 0ca4 219B     		ldr	r3, [sp, #132]
 3415 0ca6 FFF7FEFF 		bl	charlie
 3416              	.LVL226:
 306:Src/charlie.c ****                if(stopFlag == 1)
 3417              		.loc 2 306 16 view .LVU529
 3418 0caa 0823     		movs	r3, #8
 3419 0cac 1093     		str	r3, [sp, #64]
 3420 0cae 4346     		mov	r3, r8
 3421 0cb0 4A46     		mov	r2, r9
 3422 0cb2 13CA     		ldmia	r2!, {r0, r1, r4}
 3423 0cb4 13C3     		stmia	r3!, {r0, r1, r4}
 3424 0cb6 03CA     		ldmia	r2!, {r0, r1}
 3425 0cb8 03C3     		stmia	r3!, {r0, r1}
 3426 0cba 3300     		movs	r3, r6
 3427 0cbc 3A00     		movs	r2, r7
 3428 0cbe 13CA     		ldmia	r2!, {r0, r1, r4}
 3429 0cc0 13C3     		stmia	r3!, {r0, r1, r4}
 3430 0cc2 03CA     		ldmia	r2!, {r0, r1}
 3431 0cc4 03C3     		stmia	r3!, {r0, r1}
 3432 0cc6 1399     		ldr	r1, [sp, #76]
 3433 0cc8 0B00     		movs	r3, r1
 3434 0cca 2A00     		movs	r2, r5
 3435 0ccc 13CA     		ldmia	r2!, {r0, r1, r4}
 3436 0cce 13C3     		stmia	r3!, {r0, r1, r4}
 3437 0cd0 03CA     		ldmia	r2!, {r0, r1}
 3438 0cd2 03C3     		stmia	r3!, {r0, r1}
 3439 0cd4 229B     		ldr	r3, [sp, #136]
 3440 0cd6 0093     		str	r3, [sp]
 3441 0cd8 1E98     		ldr	r0, [sp, #120]
 3442 0cda 1F99     		ldr	r1, [sp, #124]
 3443 0cdc 209A     		ldr	r2, [sp, #128]
 3444 0cde 219B     		ldr	r3, [sp, #132]
 3445 0ce0 FFF7FEFF 		bl	charlie
 3446              	.LVL227:
 307:Src/charlie.c ****                   return;
 3447              		.loc 2 307 16 view .LVU530
 307:Src/charlie.c ****                   return;
 3448              		.loc 2 307 28 is_stmt 0 view .LVU531
 3449 0ce4 044B     		ldr	r3, .L123
 3450 0ce6 1B68     		ldr	r3, [r3]
 307:Src/charlie.c ****                   return;
 3451              		.loc 2 307 18 view .LVU532
 3452 0ce8 012B     		cmp	r3, #1
 3453 0cea 01D1     		bne	.LCB3092
 3454 0cec FFF7A4F9 		bl	.L66	@far jump
 3455              	.LCB3092:
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3456              		.loc 2 304 36 is_stmt 1 discriminator 2 view .LVU533
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3457              		.loc 2 304 37 is_stmt 0 discriminator 2 view .LVU534
 3458 0cf0 0123     		movs	r3, #1
 3459 0cf2 9C46     		mov	ip, r3
ARM GAS  /tmp/cckp0GEV.s 			page 86


 3460 0cf4 E344     		add	fp, fp, ip
 3461              	.LVL228:
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3462              		.loc 2 304 37 discriminator 2 view .LVU535
 3463 0cf6 B1E7     		b	.L86
 3464              	.L124:
 3465              		.align	2
 3466              	.L123:
 3467 0cf8 00000000 		.word	.LANCHOR0
 3468 0cfc 0F270000 		.word	9999
 3469              	.LVL229:
 3470              	.L114:
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3471              		.loc 2 304 37 discriminator 2 view .LVU536
 3472              	.LBE14:
 3473              	.LBB15:
 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3474              		.loc 2 312 21 view .LVU537
 3475 0d00 0023     		movs	r3, #0
 3476              	.LVL230:
 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3477              		.loc 2 312 21 view .LVU538
 3478 0d02 9B46     		mov	fp, r3
 3479              	.L89:
 3480              	.LVL231:
 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3481              		.loc 2 312 27 is_stmt 1 discriminator 1 view .LVU539
 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3482              		.loc 2 312 13 is_stmt 0 discriminator 1 view .LVU540
 3483 0d04 4E4B     		ldr	r3, .L125
 3484 0d06 9B45     		cmp	fp, r3
 3485 0d08 68DC     		bgt	.L90
 313:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 7);
 3486              		.loc 2 313 16 is_stmt 1 view .LVU541
 3487 0d0a 0523     		movs	r3, #5
 3488 0d0c 1093     		str	r3, [sp, #64]
 3489 0d0e 2DAB     		add	r3, sp, #180
 3490 0d10 9946     		mov	r9, r3
 3491 0d12 0BAB     		add	r3, sp, #44
 3492 0d14 9846     		mov	r8, r3
 3493 0d16 4A46     		mov	r2, r9
 3494 0d18 13CA     		ldmia	r2!, {r0, r1, r4}
 3495 0d1a 13C3     		stmia	r3!, {r0, r1, r4}
 3496 0d1c 03CA     		ldmia	r2!, {r0, r1}
 3497 0d1e 03C3     		stmia	r3!, {r0, r1}
 3498 0d20 28AF     		add	r7, sp, #160
 3499 0d22 06AE     		add	r6, sp, #24
 3500 0d24 3300     		movs	r3, r6
 3501 0d26 3A00     		movs	r2, r7
 3502 0d28 13CA     		ldmia	r2!, {r0, r1, r4}
 3503 0d2a 13C3     		stmia	r3!, {r0, r1, r4}
 3504 0d2c 03CA     		ldmia	r2!, {r0, r1}
 3505 0d2e 03C3     		stmia	r3!, {r0, r1}
 3506 0d30 23AD     		add	r5, sp, #140
 3507 0d32 01AB     		add	r3, sp, #4
 3508 0d34 1393     		str	r3, [sp, #76]
 3509 0d36 2A00     		movs	r2, r5
ARM GAS  /tmp/cckp0GEV.s 			page 87


 3510 0d38 13CA     		ldmia	r2!, {r0, r1, r4}
 3511 0d3a 13C3     		stmia	r3!, {r0, r1, r4}
 3512 0d3c 03CA     		ldmia	r2!, {r0, r1}
 3513 0d3e 03C3     		stmia	r3!, {r0, r1}
 3514 0d40 229B     		ldr	r3, [sp, #136]
 3515 0d42 0093     		str	r3, [sp]
 3516 0d44 1E98     		ldr	r0, [sp, #120]
 3517 0d46 1F99     		ldr	r1, [sp, #124]
 3518 0d48 209A     		ldr	r2, [sp, #128]
 3519 0d4a 219B     		ldr	r3, [sp, #132]
 3520 0d4c FFF7FEFF 		bl	charlie
 3521              	.LVL232:
 314:Src/charlie.c ****                if(stopFlag == 1)
 3522              		.loc 2 314 16 view .LVU542
 3523 0d50 0723     		movs	r3, #7
 3524 0d52 1093     		str	r3, [sp, #64]
 3525 0d54 4346     		mov	r3, r8
 3526 0d56 4A46     		mov	r2, r9
 3527 0d58 13CA     		ldmia	r2!, {r0, r1, r4}
 3528 0d5a 13C3     		stmia	r3!, {r0, r1, r4}
 3529 0d5c 03CA     		ldmia	r2!, {r0, r1}
 3530 0d5e 03C3     		stmia	r3!, {r0, r1}
 3531 0d60 3300     		movs	r3, r6
 3532 0d62 3A00     		movs	r2, r7
 3533 0d64 13CA     		ldmia	r2!, {r0, r1, r4}
 3534 0d66 13C3     		stmia	r3!, {r0, r1, r4}
 3535 0d68 03CA     		ldmia	r2!, {r0, r1}
 3536 0d6a 03C3     		stmia	r3!, {r0, r1}
 3537 0d6c 1399     		ldr	r1, [sp, #76]
 3538 0d6e 0B00     		movs	r3, r1
 3539 0d70 2A00     		movs	r2, r5
 3540 0d72 13CA     		ldmia	r2!, {r0, r1, r4}
 3541 0d74 13C3     		stmia	r3!, {r0, r1, r4}
 3542 0d76 03CA     		ldmia	r2!, {r0, r1}
 3543 0d78 03C3     		stmia	r3!, {r0, r1}
 3544 0d7a 229B     		ldr	r3, [sp, #136]
 3545 0d7c 0093     		str	r3, [sp]
 3546 0d7e 1E98     		ldr	r0, [sp, #120]
 3547 0d80 1F99     		ldr	r1, [sp, #124]
 3548 0d82 209A     		ldr	r2, [sp, #128]
 3549 0d84 219B     		ldr	r3, [sp, #132]
 3550 0d86 FFF7FEFF 		bl	charlie
 3551              	.LVL233:
 315:Src/charlie.c ****                   return;
 3552              		.loc 2 315 16 view .LVU543
 315:Src/charlie.c ****                   return;
 3553              		.loc 2 315 28 is_stmt 0 view .LVU544
 3554 0d8a 2E4B     		ldr	r3, .L125+4
 3555 0d8c 1B68     		ldr	r3, [r3]
 315:Src/charlie.c ****                   return;
 3556              		.loc 2 315 18 view .LVU545
 3557 0d8e 012B     		cmp	r3, #1
 3558 0d90 01D1     		bne	.LCB3195
 3559 0d92 FFF751F9 		bl	.L66	@far jump
 3560              	.LCB3195:
 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3561              		.loc 2 312 36 is_stmt 1 discriminator 2 view .LVU546
ARM GAS  /tmp/cckp0GEV.s 			page 88


 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3562              		.loc 2 312 37 is_stmt 0 discriminator 2 view .LVU547
 3563 0d96 0123     		movs	r3, #1
 3564 0d98 9C46     		mov	ip, r3
 3565 0d9a E344     		add	fp, fp, ip
 3566              	.LVL234:
 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3567              		.loc 2 312 37 discriminator 2 view .LVU548
 3568 0d9c B2E7     		b	.L89
 3569              	.LVL235:
 3570              	.L92:
 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3571              		.loc 2 312 37 discriminator 2 view .LVU549
 3572              	.LBE15:
 271:Src/charlie.c ****          if(i == 1){
 3573              		.loc 2 271 27 is_stmt 1 discriminator 2 view .LVU550
 271:Src/charlie.c ****          if(i == 1){
 3574              		.loc 2 271 28 is_stmt 0 discriminator 2 view .LVU551
 3575 0d9e 0123     		movs	r3, #1
 3576 0da0 9C46     		mov	ip, r3
 3577 0da2 E244     		add	r10, r10, ip
 3578              	.LVL236:
 3579              	.L75:
 271:Src/charlie.c ****          if(i == 1){
 3580              		.loc 2 271 21 is_stmt 1 discriminator 1 view .LVU552
 271:Src/charlie.c ****          if(i == 1){
 3581              		.loc 2 271 7 is_stmt 0 discriminator 1 view .LVU553
 3582 0da4 5346     		mov	r3, r10
 3583 0da6 072B     		cmp	r3, #7
 3584 0da8 01DD     		ble	.LCB3222
 3585 0daa FFF745F9 		bl	.L66	@far jump
 3586              	.LCB3222:
 272:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 3587              		.loc 2 272 10 is_stmt 1 view .LVU554
 272:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 3588              		.loc 2 272 12 is_stmt 0 view .LVU555
 3589 0dae 5346     		mov	r3, r10
 3590 0db0 012B     		cmp	r3, #1
 3591 0db2 00D1     		bne	.LCB3226
 3592 0db4 30E6     		b	.L109	@long jump
 3593              	.LCB3226:
 3594              	.L76:
 278:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3595              		.loc 2 278 10 is_stmt 1 view .LVU556
 278:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3596              		.loc 2 278 12 is_stmt 0 view .LVU557
 3597 0db6 5346     		mov	r3, r10
 3598 0db8 022B     		cmp	r3, #2
 3599 0dba 00D1     		bne	.LCB3232
 3600 0dbc 59E6     		b	.L110	@long jump
 3601              	.LCB3232:
 3602              	.L78:
 287:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3603              		.loc 2 287 10 is_stmt 1 view .LVU558
 287:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3604              		.loc 2 287 12 is_stmt 0 view .LVU559
 3605 0dbe 5346     		mov	r3, r10
ARM GAS  /tmp/cckp0GEV.s 			page 89


 3606 0dc0 032B     		cmp	r3, #3
 3607 0dc2 00D1     		bne	.LCB3237
 3608 0dc4 A8E6     		b	.L111	@long jump
 3609              	.LCB3237:
 3610              	.L81:
 295:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3611              		.loc 2 295 10 is_stmt 1 view .LVU560
 295:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3612              		.loc 2 295 12 is_stmt 0 view .LVU561
 3613 0dc6 5346     		mov	r3, r10
 3614 0dc8 042B     		cmp	r3, #4
 3615 0dca 00D1     		bne	.LCB3242
 3616 0dcc 41E7     		b	.L112	@long jump
 3617              	.LCB3242:
 3618              	.L84:
 303:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3619              		.loc 2 303 10 is_stmt 1 view .LVU562
 303:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3620              		.loc 2 303 12 is_stmt 0 view .LVU563
 3621 0dce 5346     		mov	r3, r10
 3622 0dd0 052B     		cmp	r3, #5
 3623 0dd2 00D1     		bne	.LCB3247
 3624 0dd4 40E7     		b	.L113	@long jump
 3625              	.LCB3247:
 3626              	.L87:
 311:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3627              		.loc 2 311 10 is_stmt 1 view .LVU564
 311:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3628              		.loc 2 311 12 is_stmt 0 view .LVU565
 3629 0dd6 5346     		mov	r3, r10
 3630 0dd8 062B     		cmp	r3, #6
 3631 0dda 91D0     		beq	.L114
 3632              	.L90:
 319:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 3633              		.loc 2 319 10 is_stmt 1 view .LVU566
 319:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 3634              		.loc 2 319 12 is_stmt 0 view .LVU567
 3635 0ddc 5346     		mov	r3, r10
 3636 0dde 072B     		cmp	r3, #7
 3637 0de0 DDD1     		bne	.L92
 3638              	.LVL237:
 320:Src/charlie.c ****             HAL_Delay(500);
 3639              		.loc 2 320 13 is_stmt 1 view .LVU568
 3640 0de2 013B     		subs	r3, r3, #1
 3641              	.LVL238:
 320:Src/charlie.c ****             HAL_Delay(500);
 3642              		.loc 2 320 13 is_stmt 0 view .LVU569
 3643 0de4 1093     		str	r3, [sp, #64]
 3644 0de6 2DA8     		add	r0, sp, #180
 3645 0de8 0BA9     		add	r1, sp, #44
 3646 0dea 0B00     		movs	r3, r1
 3647 0dec 0200     		movs	r2, r0
 3648 0dee 13CA     		ldmia	r2!, {r0, r1, r4}
 3649 0df0 13C3     		stmia	r3!, {r0, r1, r4}
 3650 0df2 03CA     		ldmia	r2!, {r0, r1}
 3651 0df4 03C3     		stmia	r3!, {r0, r1}
 3652 0df6 28A8     		add	r0, sp, #160
ARM GAS  /tmp/cckp0GEV.s 			page 90


 3653 0df8 06A9     		add	r1, sp, #24
 3654 0dfa 0B00     		movs	r3, r1
 3655 0dfc 0200     		movs	r2, r0
 3656 0dfe 13CA     		ldmia	r2!, {r0, r1, r4}
 3657 0e00 13C3     		stmia	r3!, {r0, r1, r4}
 3658 0e02 03CA     		ldmia	r2!, {r0, r1}
 3659 0e04 03C3     		stmia	r3!, {r0, r1}
 3660 0e06 23A8     		add	r0, sp, #140
 3661 0e08 01A9     		add	r1, sp, #4
 3662 0e0a 0B00     		movs	r3, r1
 3663 0e0c 0200     		movs	r2, r0
 3664 0e0e 13CA     		ldmia	r2!, {r0, r1, r4}
 3665 0e10 13C3     		stmia	r3!, {r0, r1, r4}
 3666 0e12 03CA     		ldmia	r2!, {r0, r1}
 3667 0e14 03C3     		stmia	r3!, {r0, r1}
 3668 0e16 229B     		ldr	r3, [sp, #136]
 3669 0e18 0093     		str	r3, [sp]
 3670 0e1a 1E98     		ldr	r0, [sp, #120]
 3671 0e1c 1F99     		ldr	r1, [sp, #124]
 3672 0e1e 209A     		ldr	r2, [sp, #128]
 3673 0e20 219B     		ldr	r3, [sp, #132]
 3674 0e22 FFF7FEFF 		bl	charlie
 3675              	.LVL239:
 321:Src/charlie.c ****             if(stopFlag == 1)
 3676              		.loc 2 321 13 is_stmt 1 view .LVU570
 3677 0e26 FA20     		movs	r0, #250
 3678 0e28 4000     		lsls	r0, r0, #1
 3679 0e2a FFF7FEFF 		bl	HAL_Delay
 3680              	.LVL240:
 322:Src/charlie.c ****                return;
 3681              		.loc 2 322 13 view .LVU571
 322:Src/charlie.c ****                return;
 3682              		.loc 2 322 25 is_stmt 0 view .LVU572
 3683 0e2e 054B     		ldr	r3, .L125+4
 3684 0e30 1B68     		ldr	r3, [r3]
 322:Src/charlie.c ****                return;
 3685              		.loc 2 322 15 view .LVU573
 3686 0e32 012B     		cmp	r3, #1
 3687 0e34 B3D1     		bne	.L92
 3688 0e36 FFF7FFF8 		bl	.L66	@ far jump
 3689              	.LVL241:
 3690              	.L105:
 271:Src/charlie.c ****          if(i == 1){
 3691              		.loc 2 271 15 view .LVU574
 3692 0e3a 0123     		movs	r3, #1
 3693 0e3c 9A46     		mov	r10, r3
 3694 0e3e B1E7     		b	.L75
 3695              	.L126:
 3696              		.align	2
 3697              	.L125:
 3698 0e40 0F270000 		.word	9999
 3699 0e44 00000000 		.word	.LANCHOR0
 3700              	.LBE10:
 3701              		.cfi_endproc
 3702              	.LFE45:
 3704              		.section	.text.initA,"ax",%progbits
 3705              		.align	1
ARM GAS  /tmp/cckp0GEV.s 			page 91


 3706              		.global	initA
 3707              		.syntax unified
 3708              		.code	16
 3709              		.thumb_func
 3710              		.fpu softvfp
 3712              	initA:
 3713              	.LVL242:
 3714              	.LFB47:
 518:Src/charlie.c **** 
 519:Src/charlie.c **** GPIO_InitTypeDef initA(){
 3715              		.loc 2 519 25 is_stmt 1 view -0
 3716              		.cfi_startproc
 3717              		@ args = 0, pretend = 0, frame = 24
 3718              		@ frame_needed = 0, uses_anonymous_args = 0
 3719              		.loc 2 519 25 is_stmt 0 view .LVU576
 3720 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3721              	.LCFI18:
 3722              		.cfi_def_cfa_offset 20
 3723              		.cfi_offset 4, -20
 3724              		.cfi_offset 5, -16
 3725              		.cfi_offset 6, -12
 3726              		.cfi_offset 7, -8
 3727              		.cfi_offset 14, -4
 3728 0002 87B0     		sub	sp, sp, #28
 3729              	.LCFI19:
 3730              		.cfi_def_cfa_offset 48
 3731 0004 0500     		movs	r5, r0
 520:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3732              		.loc 2 520 3 is_stmt 1 view .LVU577
 3733              		.loc 2 520 20 is_stmt 0 view .LVU578
 3734 0006 01AC     		add	r4, sp, #4
 3735 0008 1422     		movs	r2, #20
 3736 000a 0021     		movs	r1, #0
 3737 000c 2000     		movs	r0, r4
 3738              	.LVL243:
 3739              		.loc 2 520 20 view .LVU579
 3740 000e FFF7FEFF 		bl	memset
 3741              	.LVL244:
 521:Src/charlie.c **** 
 522:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 523:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, A_Pin, GPIO_PIN_RESET);
 3742              		.loc 2 523 3 is_stmt 1 view .LVU580
 3743 0012 9020     		movs	r0, #144
 3744 0014 0022     		movs	r2, #0
 3745 0016 0121     		movs	r1, #1
 3746 0018 C005     		lsls	r0, r0, #23
 3747 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3748              	.LVL245:
 524:Src/charlie.c **** 
 525:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 526:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3749              		.loc 2 526 3 view .LVU581
 3750              		.loc 2 526 23 is_stmt 0 view .LVU582
 3751 001e 8023     		movs	r3, #128
 3752 0020 5B00     		lsls	r3, r3, #1
 3753 0022 0193     		str	r3, [sp, #4]
 527:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
ARM GAS  /tmp/cckp0GEV.s 			page 92


 3754              		.loc 2 527 3 is_stmt 1 view .LVU583
 3755              		.loc 2 527 24 is_stmt 0 view .LVU584
 3756 0024 0026     		movs	r6, #0
 3757 0026 6660     		str	r6, [r4, #4]
 528:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3758              		.loc 2 528 3 is_stmt 1 view .LVU585
 3759              		.loc 2 528 24 is_stmt 0 view .LVU586
 3760 0028 0127     		movs	r7, #1
 3761 002a A760     		str	r7, [r4, #8]
 529:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3762              		.loc 2 529 3 is_stmt 1 view .LVU587
 3763 002c 2100     		movs	r1, r4
 3764 002e 0748     		ldr	r0, .L128
 3765 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3766              	.LVL246:
 530:Src/charlie.c **** 
 531:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 532:Src/charlie.c ****   GPIO_InitStruct.Pin = A_Pin;
 3767              		.loc 2 532 3 view .LVU588
 3768              		.loc 2 532 23 is_stmt 0 view .LVU589
 3769 0034 0197     		str	r7, [sp, #4]
 533:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3770              		.loc 2 533 3 is_stmt 1 view .LVU590
 3771              		.loc 2 533 24 is_stmt 0 view .LVU591
 3772 0036 6760     		str	r7, [r4, #4]
 534:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3773              		.loc 2 534 3 is_stmt 1 view .LVU592
 3774              		.loc 2 534 24 is_stmt 0 view .LVU593
 3775 0038 A660     		str	r6, [r4, #8]
 535:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3776              		.loc 2 535 3 is_stmt 1 view .LVU594
 3777              		.loc 2 535 25 is_stmt 0 view .LVU595
 3778 003a E660     		str	r6, [r4, #12]
 536:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 537:Src/charlie.c **** 
 538:Src/charlie.c ****   return GPIO_InitStruct;
 3779              		.loc 2 538 3 is_stmt 1 view .LVU596
 3780              		.loc 2 538 10 is_stmt 0 view .LVU597
 3781 003c 2B00     		movs	r3, r5
 3782 003e 07CC     		ldmia	r4!, {r0, r1, r2}
 3783 0040 07C3     		stmia	r3!, {r0, r1, r2}
 3784 0042 06CC     		ldmia	r4!, {r1, r2}
 3785 0044 06C3     		stmia	r3!, {r1, r2}
 539:Src/charlie.c **** }
 3786              		.loc 2 539 1 view .LVU598
 3787 0046 2800     		movs	r0, r5
 3788 0048 07B0     		add	sp, sp, #28
 3789              		@ sp needed
 3790              	.LVL247:
 3791              		.loc 2 539 1 view .LVU599
 3792 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 3793              	.L129:
 3794              		.align	2
 3795              	.L128:
 3796 004c 00040048 		.word	1207960576
 3797              		.cfi_endproc
 3798              	.LFE47:
ARM GAS  /tmp/cckp0GEV.s 			page 93


 3800              		.section	.text.initB,"ax",%progbits
 3801              		.align	1
 3802              		.global	initB
 3803              		.syntax unified
 3804              		.code	16
 3805              		.thumb_func
 3806              		.fpu softvfp
 3808              	initB:
 3809              	.LVL248:
 3810              	.LFB48:
 540:Src/charlie.c **** 
 541:Src/charlie.c **** GPIO_InitTypeDef initB(){
 3811              		.loc 2 541 25 is_stmt 1 view -0
 3812              		.cfi_startproc
 3813              		@ args = 0, pretend = 0, frame = 24
 3814              		@ frame_needed = 0, uses_anonymous_args = 0
 3815              		.loc 2 541 25 is_stmt 0 view .LVU601
 3816 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3817              	.LCFI20:
 3818              		.cfi_def_cfa_offset 20
 3819              		.cfi_offset 4, -20
 3820              		.cfi_offset 5, -16
 3821              		.cfi_offset 6, -12
 3822              		.cfi_offset 7, -8
 3823              		.cfi_offset 14, -4
 3824 0002 87B0     		sub	sp, sp, #28
 3825              	.LCFI21:
 3826              		.cfi_def_cfa_offset 48
 3827 0004 0500     		movs	r5, r0
 542:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3828              		.loc 2 542 3 is_stmt 1 view .LVU602
 3829              		.loc 2 542 20 is_stmt 0 view .LVU603
 3830 0006 01AC     		add	r4, sp, #4
 3831 0008 1422     		movs	r2, #20
 3832 000a 0021     		movs	r1, #0
 3833 000c 2000     		movs	r0, r4
 3834              	.LVL249:
 3835              		.loc 2 542 20 view .LVU604
 3836 000e FFF7FEFF 		bl	memset
 3837              	.LVL250:
 543:Src/charlie.c **** 
 544:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 545:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, B_Pin, GPIO_PIN_RESET);
 3838              		.loc 2 545 3 is_stmt 1 view .LVU605
 3839 0012 9020     		movs	r0, #144
 3840 0014 0022     		movs	r2, #0
 3841 0016 0221     		movs	r1, #2
 3842 0018 C005     		lsls	r0, r0, #23
 3843 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3844              	.LVL251:
 546:Src/charlie.c **** 
 547:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 548:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3845              		.loc 2 548 3 view .LVU606
 3846              		.loc 2 548 23 is_stmt 0 view .LVU607
 3847 001e 8023     		movs	r3, #128
 3848 0020 5B00     		lsls	r3, r3, #1
ARM GAS  /tmp/cckp0GEV.s 			page 94


 3849 0022 0193     		str	r3, [sp, #4]
 549:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3850              		.loc 2 549 3 is_stmt 1 view .LVU608
 3851              		.loc 2 549 24 is_stmt 0 view .LVU609
 3852 0024 0026     		movs	r6, #0
 3853 0026 6660     		str	r6, [r4, #4]
 550:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3854              		.loc 2 550 3 is_stmt 1 view .LVU610
 3855              		.loc 2 550 24 is_stmt 0 view .LVU611
 3856 0028 0127     		movs	r7, #1
 3857 002a A760     		str	r7, [r4, #8]
 551:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3858              		.loc 2 551 3 is_stmt 1 view .LVU612
 3859 002c 2100     		movs	r1, r4
 3860 002e 0848     		ldr	r0, .L131
 3861 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3862              	.LVL252:
 552:Src/charlie.c **** 
 553:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 554:Src/charlie.c ****   GPIO_InitStruct.Pin = B_Pin;
 3863              		.loc 2 554 3 view .LVU613
 3864              		.loc 2 554 23 is_stmt 0 view .LVU614
 3865 0034 0223     		movs	r3, #2
 3866 0036 0193     		str	r3, [sp, #4]
 555:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3867              		.loc 2 555 3 is_stmt 1 view .LVU615
 3868              		.loc 2 555 24 is_stmt 0 view .LVU616
 3869 0038 6760     		str	r7, [r4, #4]
 556:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3870              		.loc 2 556 3 is_stmt 1 view .LVU617
 3871              		.loc 2 556 24 is_stmt 0 view .LVU618
 3872 003a A660     		str	r6, [r4, #8]
 557:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3873              		.loc 2 557 3 is_stmt 1 view .LVU619
 3874              		.loc 2 557 25 is_stmt 0 view .LVU620
 3875 003c E660     		str	r6, [r4, #12]
 558:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 559:Src/charlie.c **** 
 560:Src/charlie.c ****   return GPIO_InitStruct;
 3876              		.loc 2 560 3 is_stmt 1 view .LVU621
 3877              		.loc 2 560 10 is_stmt 0 view .LVU622
 3878 003e 2B00     		movs	r3, r5
 3879 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 3880 0042 07C3     		stmia	r3!, {r0, r1, r2}
 3881 0044 06CC     		ldmia	r4!, {r1, r2}
 3882 0046 06C3     		stmia	r3!, {r1, r2}
 561:Src/charlie.c **** }
 3883              		.loc 2 561 1 view .LVU623
 3884 0048 2800     		movs	r0, r5
 3885 004a 07B0     		add	sp, sp, #28
 3886              		@ sp needed
 3887              	.LVL253:
 3888              		.loc 2 561 1 view .LVU624
 3889 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 3890              	.L132:
 3891 004e C046     		.align	2
 3892              	.L131:
ARM GAS  /tmp/cckp0GEV.s 			page 95


 3893 0050 00040048 		.word	1207960576
 3894              		.cfi_endproc
 3895              	.LFE48:
 3897              		.section	.text.initC,"ax",%progbits
 3898              		.align	1
 3899              		.global	initC
 3900              		.syntax unified
 3901              		.code	16
 3902              		.thumb_func
 3903              		.fpu softvfp
 3905              	initC:
 3906              	.LVL254:
 3907              	.LFB49:
 562:Src/charlie.c **** 
 563:Src/charlie.c **** GPIO_InitTypeDef initC(){
 3908              		.loc 2 563 25 is_stmt 1 view -0
 3909              		.cfi_startproc
 3910              		@ args = 0, pretend = 0, frame = 24
 3911              		@ frame_needed = 0, uses_anonymous_args = 0
 3912              		.loc 2 563 25 is_stmt 0 view .LVU626
 3913 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3914              	.LCFI22:
 3915              		.cfi_def_cfa_offset 20
 3916              		.cfi_offset 4, -20
 3917              		.cfi_offset 5, -16
 3918              		.cfi_offset 6, -12
 3919              		.cfi_offset 7, -8
 3920              		.cfi_offset 14, -4
 3921 0002 87B0     		sub	sp, sp, #28
 3922              	.LCFI23:
 3923              		.cfi_def_cfa_offset 48
 3924 0004 0500     		movs	r5, r0
 564:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3925              		.loc 2 564 3 is_stmt 1 view .LVU627
 3926              		.loc 2 564 20 is_stmt 0 view .LVU628
 3927 0006 01AC     		add	r4, sp, #4
 3928 0008 1422     		movs	r2, #20
 3929 000a 0021     		movs	r1, #0
 3930 000c 2000     		movs	r0, r4
 3931              	.LVL255:
 3932              		.loc 2 564 20 view .LVU629
 3933 000e FFF7FEFF 		bl	memset
 3934              	.LVL256:
 565:Src/charlie.c **** 
 566:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 567:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, C_Pin, GPIO_PIN_RESET);
 3935              		.loc 2 567 3 is_stmt 1 view .LVU630
 3936 0012 9020     		movs	r0, #144
 3937 0014 0022     		movs	r2, #0
 3938 0016 0421     		movs	r1, #4
 3939 0018 C005     		lsls	r0, r0, #23
 3940 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3941              	.LVL257:
 568:Src/charlie.c **** 
 569:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 570:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3942              		.loc 2 570 3 view .LVU631
ARM GAS  /tmp/cckp0GEV.s 			page 96


 3943              		.loc 2 570 23 is_stmt 0 view .LVU632
 3944 001e 8023     		movs	r3, #128
 3945 0020 5B00     		lsls	r3, r3, #1
 3946 0022 0193     		str	r3, [sp, #4]
 571:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3947              		.loc 2 571 3 is_stmt 1 view .LVU633
 3948              		.loc 2 571 24 is_stmt 0 view .LVU634
 3949 0024 0026     		movs	r6, #0
 3950 0026 6660     		str	r6, [r4, #4]
 572:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3951              		.loc 2 572 3 is_stmt 1 view .LVU635
 3952              		.loc 2 572 24 is_stmt 0 view .LVU636
 3953 0028 0127     		movs	r7, #1
 3954 002a A760     		str	r7, [r4, #8]
 573:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3955              		.loc 2 573 3 is_stmt 1 view .LVU637
 3956 002c 2100     		movs	r1, r4
 3957 002e 0848     		ldr	r0, .L134
 3958 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3959              	.LVL258:
 574:Src/charlie.c **** 
 575:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 576:Src/charlie.c ****   GPIO_InitStruct.Pin = C_Pin;
 3960              		.loc 2 576 3 view .LVU638
 3961              		.loc 2 576 23 is_stmt 0 view .LVU639
 3962 0034 0423     		movs	r3, #4
 3963 0036 0193     		str	r3, [sp, #4]
 577:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3964              		.loc 2 577 3 is_stmt 1 view .LVU640
 3965              		.loc 2 577 24 is_stmt 0 view .LVU641
 3966 0038 6760     		str	r7, [r4, #4]
 578:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3967              		.loc 2 578 3 is_stmt 1 view .LVU642
 3968              		.loc 2 578 24 is_stmt 0 view .LVU643
 3969 003a A660     		str	r6, [r4, #8]
 579:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3970              		.loc 2 579 3 is_stmt 1 view .LVU644
 3971              		.loc 2 579 25 is_stmt 0 view .LVU645
 3972 003c E660     		str	r6, [r4, #12]
 580:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 581:Src/charlie.c **** 
 582:Src/charlie.c ****   return GPIO_InitStruct;
 3973              		.loc 2 582 3 is_stmt 1 view .LVU646
 3974              		.loc 2 582 10 is_stmt 0 view .LVU647
 3975 003e 2B00     		movs	r3, r5
 3976 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 3977 0042 07C3     		stmia	r3!, {r0, r1, r2}
 3978 0044 06CC     		ldmia	r4!, {r1, r2}
 3979 0046 06C3     		stmia	r3!, {r1, r2}
 583:Src/charlie.c **** }
 3980              		.loc 2 583 1 view .LVU648
 3981 0048 2800     		movs	r0, r5
 3982 004a 07B0     		add	sp, sp, #28
 3983              		@ sp needed
 3984              	.LVL259:
 3985              		.loc 2 583 1 view .LVU649
 3986 004c F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /tmp/cckp0GEV.s 			page 97


 3987              	.L135:
 3988 004e C046     		.align	2
 3989              	.L134:
 3990 0050 00040048 		.word	1207960576
 3991              		.cfi_endproc
 3992              	.LFE49:
 3994              		.section	.text.initD,"ax",%progbits
 3995              		.align	1
 3996              		.global	initD
 3997              		.syntax unified
 3998              		.code	16
 3999              		.thumb_func
 4000              		.fpu softvfp
 4002              	initD:
 4003              	.LVL260:
 4004              	.LFB50:
 584:Src/charlie.c **** 
 585:Src/charlie.c **** GPIO_InitTypeDef initD(){
 4005              		.loc 2 585 25 is_stmt 1 view -0
 4006              		.cfi_startproc
 4007              		@ args = 0, pretend = 0, frame = 24
 4008              		@ frame_needed = 0, uses_anonymous_args = 0
 4009              		.loc 2 585 25 is_stmt 0 view .LVU651
 4010 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4011              	.LCFI24:
 4012              		.cfi_def_cfa_offset 20
 4013              		.cfi_offset 4, -20
 4014              		.cfi_offset 5, -16
 4015              		.cfi_offset 6, -12
 4016              		.cfi_offset 7, -8
 4017              		.cfi_offset 14, -4
 4018 0002 87B0     		sub	sp, sp, #28
 4019              	.LCFI25:
 4020              		.cfi_def_cfa_offset 48
 4021 0004 0500     		movs	r5, r0
 586:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 4022              		.loc 2 586 3 is_stmt 1 view .LVU652
 4023              		.loc 2 586 20 is_stmt 0 view .LVU653
 4024 0006 01AC     		add	r4, sp, #4
 4025 0008 1422     		movs	r2, #20
 4026 000a 0021     		movs	r1, #0
 4027 000c 2000     		movs	r0, r4
 4028              	.LVL261:
 4029              		.loc 2 586 20 view .LVU654
 4030 000e FFF7FEFF 		bl	memset
 4031              	.LVL262:
 587:Src/charlie.c **** 
 588:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 589:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, D_Pin, GPIO_PIN_RESET);
 4032              		.loc 2 589 3 is_stmt 1 view .LVU655
 4033 0012 9020     		movs	r0, #144
 4034 0014 0022     		movs	r2, #0
 4035 0016 0821     		movs	r1, #8
 4036 0018 C005     		lsls	r0, r0, #23
 4037 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 4038              	.LVL263:
 590:Src/charlie.c **** 
ARM GAS  /tmp/cckp0GEV.s 			page 98


 591:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 592:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 4039              		.loc 2 592 3 view .LVU656
 4040              		.loc 2 592 23 is_stmt 0 view .LVU657
 4041 001e 8023     		movs	r3, #128
 4042 0020 5B00     		lsls	r3, r3, #1
 4043 0022 0193     		str	r3, [sp, #4]
 593:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 4044              		.loc 2 593 3 is_stmt 1 view .LVU658
 4045              		.loc 2 593 24 is_stmt 0 view .LVU659
 4046 0024 0026     		movs	r6, #0
 4047 0026 6660     		str	r6, [r4, #4]
 594:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 4048              		.loc 2 594 3 is_stmt 1 view .LVU660
 4049              		.loc 2 594 24 is_stmt 0 view .LVU661
 4050 0028 0127     		movs	r7, #1
 4051 002a A760     		str	r7, [r4, #8]
 595:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 4052              		.loc 2 595 3 is_stmt 1 view .LVU662
 4053 002c 2100     		movs	r1, r4
 4054 002e 0848     		ldr	r0, .L137
 4055 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 4056              	.LVL264:
 596:Src/charlie.c **** 
 597:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 598:Src/charlie.c ****   GPIO_InitStruct.Pin = D_Pin;
 4057              		.loc 2 598 3 view .LVU663
 4058              		.loc 2 598 23 is_stmt 0 view .LVU664
 4059 0034 0823     		movs	r3, #8
 4060 0036 0193     		str	r3, [sp, #4]
 599:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 4061              		.loc 2 599 3 is_stmt 1 view .LVU665
 4062              		.loc 2 599 24 is_stmt 0 view .LVU666
 4063 0038 6760     		str	r7, [r4, #4]
 600:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 4064              		.loc 2 600 3 is_stmt 1 view .LVU667
 4065              		.loc 2 600 24 is_stmt 0 view .LVU668
 4066 003a A660     		str	r6, [r4, #8]
 601:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 4067              		.loc 2 601 3 is_stmt 1 view .LVU669
 4068              		.loc 2 601 25 is_stmt 0 view .LVU670
 4069 003c E660     		str	r6, [r4, #12]
 602:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 603:Src/charlie.c **** 
 604:Src/charlie.c ****   return GPIO_InitStruct;
 4070              		.loc 2 604 3 is_stmt 1 view .LVU671
 4071              		.loc 2 604 10 is_stmt 0 view .LVU672
 4072 003e 2B00     		movs	r3, r5
 4073 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 4074 0042 07C3     		stmia	r3!, {r0, r1, r2}
 4075 0044 06CC     		ldmia	r4!, {r1, r2}
 4076 0046 06C3     		stmia	r3!, {r1, r2}
 605:Src/charlie.c **** }
 4077              		.loc 2 605 1 view .LVU673
 4078 0048 2800     		movs	r0, r5
 4079 004a 07B0     		add	sp, sp, #28
 4080              		@ sp needed
ARM GAS  /tmp/cckp0GEV.s 			page 99


 4081              	.LVL265:
 4082              		.loc 2 605 1 view .LVU674
 4083 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 4084              	.L138:
 4085 004e C046     		.align	2
 4086              	.L137:
 4087 0050 00040048 		.word	1207960576
 4088              		.cfi_endproc
 4089              	.LFE50:
 4091              		.section	.text.SystemClock_Config,"ax",%progbits
 4092              		.align	1
 4093              		.global	SystemClock_Config
 4094              		.syntax unified
 4095              		.code	16
 4096              		.thumb_func
 4097              		.fpu softvfp
 4099              	SystemClock_Config:
 4100              	.LFB52:
 263:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 4101              		.loc 1 263 1 is_stmt 1 view -0
 4102              		.cfi_startproc
 4103              		@ args = 0, pretend = 0, frame = 96
 4104              		@ frame_needed = 0, uses_anonymous_args = 0
 4105 0000 10B5     		push	{r4, lr}
 4106              	.LCFI26:
 4107              		.cfi_def_cfa_offset 8
 4108              		.cfi_offset 4, -8
 4109              		.cfi_offset 14, -4
 4110 0002 98B0     		sub	sp, sp, #96
 4111              	.LCFI27:
 4112              		.cfi_def_cfa_offset 104
 264:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 4113              		.loc 1 264 3 view .LVU676
 264:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 4114              		.loc 1 264 22 is_stmt 0 view .LVU677
 4115 0004 3022     		movs	r2, #48
 4116 0006 0021     		movs	r1, #0
 4117 0008 0CA8     		add	r0, sp, #48
 4118 000a FFF7FEFF 		bl	memset
 4119              	.LVL266:
 265:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 4120              		.loc 1 265 3 is_stmt 1 view .LVU678
 265:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 4121              		.loc 1 265 22 is_stmt 0 view .LVU679
 4122 000e 1022     		movs	r2, #16
 4123 0010 0021     		movs	r1, #0
 4124 0012 07A8     		add	r0, sp, #28
 4125 0014 FFF7FEFF 		bl	memset
 4126              	.LVL267:
 266:Src/main.c    **** 
 4127              		.loc 1 266 3 is_stmt 1 view .LVU680
 266:Src/main.c    **** 
 4128              		.loc 1 266 28 is_stmt 0 view .LVU681
 4129 0018 1822     		movs	r2, #24
 4130 001a 0021     		movs	r1, #0
 4131 001c 01A8     		add	r0, sp, #4
 4132 001e FFF7FEFF 		bl	memset
ARM GAS  /tmp/cckp0GEV.s 			page 100


 4133              	.LVL268:
 270:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 4134              		.loc 1 270 3 is_stmt 1 view .LVU682
 270:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 4135              		.loc 1 270 36 is_stmt 0 view .LVU683
 4136 0022 2823     		movs	r3, #40
 4137 0024 0B93     		str	r3, [sp, #44]
 271:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 4138              		.loc 1 271 3 is_stmt 1 view .LVU684
 271:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 4139              		.loc 1 271 32 is_stmt 0 view .LVU685
 4140 0026 273B     		subs	r3, r3, #39
 4141 0028 1393     		str	r3, [sp, #76]
 272:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 4142              		.loc 1 272 3 is_stmt 1 view .LVU686
 272:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 4143              		.loc 1 272 30 is_stmt 0 view .LVU687
 4144 002a 1293     		str	r3, [sp, #72]
 273:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 4145              		.loc 1 273 3 is_stmt 1 view .LVU688
 274:Src/main.c    ****   {
 4146              		.loc 1 274 3 view .LVU689
 274:Src/main.c    ****   {
 4147              		.loc 1 274 7 is_stmt 0 view .LVU690
 4148 002c 0BA8     		add	r0, sp, #44
 4149 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 4150              	.LVL269:
 280:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 4151              		.loc 1 280 3 is_stmt 1 view .LVU691
 280:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 4152              		.loc 1 280 31 is_stmt 0 view .LVU692
 4153 0032 0723     		movs	r3, #7
 4154 0034 0793     		str	r3, [sp, #28]
 282:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 4155              		.loc 1 282 3 is_stmt 1 view .LVU693
 282:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 4156              		.loc 1 282 34 is_stmt 0 view .LVU694
 4157 0036 043B     		subs	r3, r3, #4
 4158 0038 0893     		str	r3, [sp, #32]
 283:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 4159              		.loc 1 283 3 is_stmt 1 view .LVU695
 283:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 4160              		.loc 1 283 35 is_stmt 0 view .LVU696
 4161 003a 0024     		movs	r4, #0
 4162 003c 0994     		str	r4, [sp, #36]
 284:Src/main.c    **** 
 4163              		.loc 1 284 3 is_stmt 1 view .LVU697
 284:Src/main.c    **** 
 4164              		.loc 1 284 36 is_stmt 0 view .LVU698
 4165 003e 0A94     		str	r4, [sp, #40]
 286:Src/main.c    ****   {
 4166              		.loc 1 286 3 is_stmt 1 view .LVU699
 286:Src/main.c    ****   {
 4167              		.loc 1 286 7 is_stmt 0 view .LVU700
 4168 0040 0121     		movs	r1, #1
 4169 0042 07A8     		add	r0, sp, #28
 4170 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/cckp0GEV.s 			page 101


 4171              	.LVL270:
 290:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 4172              		.loc 1 290 3 is_stmt 1 view .LVU701
 290:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 4173              		.loc 1 290 38 is_stmt 0 view .LVU702
 4174 0048 C023     		movs	r3, #192
 4175 004a 9B02     		lsls	r3, r3, #10
 4176 004c 0193     		str	r3, [sp, #4]
 291:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 4177              		.loc 1 291 3 is_stmt 1 view .LVU703
 291:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 4178              		.loc 1 291 35 is_stmt 0 view .LVU704
 4179 004e 8023     		movs	r3, #128
 4180 0050 9B00     		lsls	r3, r3, #2
 4181 0052 0293     		str	r3, [sp, #8]
 292:Src/main.c    **** 
 4182              		.loc 1 292 3 is_stmt 1 view .LVU705
 292:Src/main.c    **** 
 4183              		.loc 1 292 35 is_stmt 0 view .LVU706
 4184 0054 0694     		str	r4, [sp, #24]
 294:Src/main.c    ****   {
 4185              		.loc 1 294 3 is_stmt 1 view .LVU707
 294:Src/main.c    ****   {
 4186              		.loc 1 294 7 is_stmt 0 view .LVU708
 4187 0056 01A8     		add	r0, sp, #4
 4188 0058 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 4189              	.LVL271:
 298:Src/main.c    **** 
 4190              		.loc 1 298 1 view .LVU709
 4191 005c 18B0     		add	sp, sp, #96
 4192              		@ sp needed
 4193 005e 10BD     		pop	{r4, pc}
 4194              		.cfi_endproc
 4195              	.LFE52:
 4197              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 4198              		.align	2
 4199              	.LC8:
 4200 0000 686F7572 		.ascii	"hour is %d \012\000"
 4200      20697320 
 4200      2564200A 
 4200      00
 4201 000d 000000   		.align	2
 4202              	.LC10:
 4203 0010 53657420 		.ascii	"Set hour time error is %d \012\000"
 4203      686F7572 
 4203      2074696D 
 4203      65206572 
 4203      726F7220 
 4204              		.align	2
 4205              	.LC13:
 4206 002c 6D696E75 		.ascii	"minute is %d \012\000"
 4206      74652069 
 4206      73202564 
 4206      200A00
 4207 003b 00       		.align	2
 4208              	.LC15:
 4209 003c 6D696E75 		.ascii	"minute time error %d \012\000"
ARM GAS  /tmp/cckp0GEV.s 			page 102


 4209      74652074 
 4209      696D6520 
 4209      6572726F 
 4209      72202564 
 4210              		.section	.text.main,"ax",%progbits
 4211              		.align	1
 4212              		.global	main
 4213              		.syntax unified
 4214              		.code	16
 4215              		.thumb_func
 4216              		.fpu softvfp
 4218              	main:
 4219              	.LFB51:
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 4220              		.loc 1 88 1 is_stmt 1 view -0
 4221              		.cfi_startproc
 4222              		@ args = 0, pretend = 0, frame = 168
 4223              		@ frame_needed = 0, uses_anonymous_args = 0
 4224 0000 70B5     		push	{r4, r5, r6, lr}
 4225              	.LCFI28:
 4226              		.cfi_def_cfa_offset 16
 4227              		.cfi_offset 4, -16
 4228              		.cfi_offset 5, -12
 4229              		.cfi_offset 6, -8
 4230              		.cfi_offset 14, -4
 4231 0002 C2B0     		sub	sp, sp, #264
 4232              	.LCFI29:
 4233              		.cfi_def_cfa_offset 280
  96:Src/main.c    **** 
 4234              		.loc 1 96 3 view .LVU711
 4235 0004 FFF7FEFF 		bl	HAL_Init
 4236              	.LVL272:
 103:Src/main.c    **** 
 4237              		.loc 1 103 3 view .LVU712
 4238 0008 FFF7FEFF 		bl	SystemClock_Config
 4239              	.LVL273:
 110:Src/main.c    ****   MX_USB_DEVICE_Init();
 4240              		.loc 1 110 3 view .LVU713
 4241 000c FFF7FEFF 		bl	MX_GPIO_Init
 4242              	.LVL274:
 111:Src/main.c    ****   MX_RTC_Init();
 4243              		.loc 1 111 3 view .LVU714
 4244 0010 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 4245              	.LVL275:
 112:Src/main.c    ****   MX_TIM1_Init();
 4246              		.loc 1 112 3 view .LVU715
 4247 0014 FFF7FEFF 		bl	MX_RTC_Init
 4248              	.LVL276:
 113:Src/main.c    ****   /* USER CODE BEGIN 2 */
 4249              		.loc 1 113 3 view .LVU716
 4250 0018 FFF7FEFF 		bl	MX_TIM1_Init
 4251              	.LVL277:
 115:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 4252              		.loc 1 115 3 view .LVU717
 115:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 4253              		.loc 1 115 27 is_stmt 0 view .LVU718
 4254 001c 3DA8     		add	r0, sp, #244
ARM GAS  /tmp/cckp0GEV.s 			page 103


 4255 001e FFF7FEFF 		bl	initA
 4256              	.LVL278:
 116:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 4257              		.loc 1 116 3 is_stmt 1 view .LVU719
 116:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 4258              		.loc 1 116 27 is_stmt 0 view .LVU720
 4259 0022 38A8     		add	r0, sp, #224
 4260 0024 FFF7FEFF 		bl	initB
 4261              	.LVL279:
 117:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 4262              		.loc 1 117 3 is_stmt 1 view .LVU721
 117:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 4263              		.loc 1 117 27 is_stmt 0 view .LVU722
 4264 0028 33A8     		add	r0, sp, #204
 4265 002a FFF7FEFF 		bl	initC
 4266              	.LVL280:
 118:Src/main.c    **** 
 4267              		.loc 1 118 3 is_stmt 1 view .LVU723
 118:Src/main.c    **** 
 4268              		.loc 1 118 27 is_stmt 0 view .LVU724
 4269 002e 2EA8     		add	r0, sp, #184
 4270 0030 FFF7FEFF 		bl	initD
 4271              	.LVL281:
 120:Src/main.c    ****   int newMinutes = 0;
 4272              		.loc 1 120 3 is_stmt 1 view .LVU725
 120:Src/main.c    ****   int newMinutes = 0;
 4273              		.loc 1 120 12 is_stmt 0 view .LVU726
 4274 0034 7A4B     		ldr	r3, .L158
 4275 0036 0022     		movs	r2, #0
 4276 0038 1A60     		str	r2, [r3]
 121:Src/main.c    ****   int newHours = 0;
 4277              		.loc 1 121 3 is_stmt 1 view .LVU727
 4278              	.LVL282:
 122:Src/main.c    **** 
 4279              		.loc 1 122 3 view .LVU728
 122:Src/main.c    **** 
 4280              		.loc 1 122 3 is_stmt 0 view .LVU729
 4281 003a 87E0     		b	.L151
 4282              	.LVL283:
 4283              	.L156:
 137:Src/main.c    **** 
 4284              		.loc 1 137 7 is_stmt 1 view .LVU730
 4285 003c 794B     		ldr	r3, .L158+4
 4286 003e 10A9     		add	r1, sp, #64
 4287 0040 0A00     		movs	r2, r1
 4288 0042 13CB     		ldmia	r3!, {r0, r1, r4}
 4289 0044 13C2     		stmia	r2!, {r0, r1, r4}
 4290 0046 13CB     		ldmia	r3!, {r0, r1, r4}
 4291 0048 13C2     		stmia	r2!, {r0, r1, r4}
 4292 004a 03CB     		ldmia	r3!, {r0, r1}
 4293 004c 03C2     		stmia	r2!, {r0, r1}
 4294 004e 2EAB     		add	r3, sp, #184
 4295 0050 0BA9     		add	r1, sp, #44
 4296 0052 0A00     		movs	r2, r1
 4297 0054 13CB     		ldmia	r3!, {r0, r1, r4}
 4298 0056 13C2     		stmia	r2!, {r0, r1, r4}
 4299 0058 03CB     		ldmia	r3!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 104


 4300 005a 03C2     		stmia	r2!, {r0, r1}
 4301 005c 33AB     		add	r3, sp, #204
 4302 005e 06A9     		add	r1, sp, #24
 4303 0060 0A00     		movs	r2, r1
 4304 0062 13CB     		ldmia	r3!, {r0, r1, r4}
 4305 0064 13C2     		stmia	r2!, {r0, r1, r4}
 4306 0066 03CB     		ldmia	r3!, {r0, r1}
 4307 0068 03C2     		stmia	r2!, {r0, r1}
 4308 006a 38AB     		add	r3, sp, #224
 4309 006c 01A9     		add	r1, sp, #4
 4310 006e 0A00     		movs	r2, r1
 4311 0070 13CB     		ldmia	r3!, {r0, r1, r4}
 4312 0072 13C2     		stmia	r2!, {r0, r1, r4}
 4313 0074 03CB     		ldmia	r3!, {r0, r1}
 4314 0076 03C2     		stmia	r2!, {r0, r1}
 4315 0078 419B     		ldr	r3, [sp, #260]
 4316 007a 1993     		str	r3, [sp, #100]
 4317 007c 0093     		str	r3, [sp]
 4318 007e 3D98     		ldr	r0, [sp, #244]
 4319 0080 3E99     		ldr	r1, [sp, #248]
 4320 0082 3F9A     		ldr	r2, [sp, #252]
 4321 0084 409B     		ldr	r3, [sp, #256]
 4322 0086 FFF7FEFF 		bl	clock
 4323              	.LVL284:
 4324 008a 83E0     		b	.L142
 4325              	.L157:
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 4326              		.loc 1 148 34 is_stmt 0 discriminator 1 view .LVU731
 4327 008c 664B     		ldr	r3, .L158+8
 4328 008e 1B68     		ldr	r3, [r3]
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 4329              		.loc 1 148 22 discriminator 1 view .LVU732
 4330 0090 012B     		cmp	r3, #1
 4331 0092 00D0     		beq	.LCB3798
 4332 0094 83E0     		b	.L143	@long jump
 4333              	.LCB3798:
 4334              	.LBB16:
 149:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 4335              		.loc 1 149 7 is_stmt 1 view .LVU733
 151:Src/main.c    ****       RTC_DateTypeDef currentDate;
 4336              		.loc 1 151 7 view .LVU734
 152:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 4337              		.loc 1 152 7 view .LVU735
 153:Src/main.c    ****       memset(&newTime, 0, sizeof(newTime));
 4338              		.loc 1 153 7 view .LVU736
 154:Src/main.c    ****       memset(&currentTime, 0, sizeof(currentTime));
 4339              		.loc 1 154 7 view .LVU737
 4340 0096 1422     		movs	r2, #20
 4341 0098 0021     		movs	r1, #0
 4342 009a 1CA8     		add	r0, sp, #112
 4343 009c FFF7FEFF 		bl	memset
 4344              	.LVL285:
 155:Src/main.c    **** 
 4345              		.loc 1 155 7 view .LVU738
 4346 00a0 21AC     		add	r4, sp, #132
 4347 00a2 1422     		movs	r2, #20
 4348 00a4 0021     		movs	r1, #0
ARM GAS  /tmp/cckp0GEV.s 			page 105


 4349 00a6 2000     		movs	r0, r4
 4350 00a8 FFF7FEFF 		bl	memset
 4351              	.LVL286:
 158:Src/main.c    **** 
 4352              		.loc 1 158 7 view .LVU739
 4353 00ac 6420     		movs	r0, #100
 4354 00ae FFF7FEFF 		bl	HAL_Delay
 4355              	.LVL287:
 161:Src/main.c    ****       
 4356              		.loc 1 161 7 view .LVU740
 164:Src/main.c    ****       hourFlag =0;
 4357              		.loc 1 164 7 view .LVU741
 164:Src/main.c    ****       hourFlag =0;
 4358              		.loc 1 164 16 is_stmt 0 view .LVU742
 4359 00b2 0023     		movs	r3, #0
 4360 00b4 5A4A     		ldr	r2, .L158
 4361 00b6 1360     		str	r3, [r2]
 165:Src/main.c    ****       mamboNumber = 5;
 4362              		.loc 1 165 7 is_stmt 1 view .LVU743
 165:Src/main.c    ****       mamboNumber = 5;
 4363              		.loc 1 165 16 is_stmt 0 view .LVU744
 4364 00b8 5B4A     		ldr	r2, .L158+8
 4365 00ba 1360     		str	r3, [r2]
 166:Src/main.c    **** 
 4366              		.loc 1 166 7 is_stmt 1 view .LVU745
 166:Src/main.c    **** 
 4367              		.loc 1 166 19 is_stmt 0 view .LVU746
 4368 00bc 5B4B     		ldr	r3, .L158+12
 4369 00be 0522     		movs	r2, #5
 4370 00c0 1A60     		str	r2, [r3]
 169:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 4371              		.loc 1 169 7 is_stmt 1 view .LVU747
 169:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 4372              		.loc 1 169 13 is_stmt 0 view .LVU748
 4373 00c2 584D     		ldr	r5, .L158+4
 4374 00c4 0022     		movs	r2, #0
 4375 00c6 2100     		movs	r1, r4
 4376 00c8 2800     		movs	r0, r5
 4377 00ca FFF7FEFF 		bl	HAL_RTC_GetTime
 4378              	.LVL288:
 173:Src/main.c    ****       newHours = currentTime.Hours;
 4379              		.loc 1 173 7 is_stmt 1 view .LVU749
 173:Src/main.c    ****       newHours = currentTime.Hours;
 4380              		.loc 1 173 13 is_stmt 0 view .LVU750
 4381 00ce 0022     		movs	r2, #0
 4382 00d0 1BA9     		add	r1, sp, #108
 4383 00d2 2800     		movs	r0, r5
 4384 00d4 FFF7FEFF 		bl	HAL_RTC_GetDate
 4385              	.LVL289:
 174:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 4386              		.loc 1 174 7 is_stmt 1 view .LVU751
 174:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 4387              		.loc 1 174 29 is_stmt 0 view .LVU752
 4388 00d8 2478     		ldrb	r4, [r4]
 4389              	.LVL290:
 175:Src/main.c    ****       //say(buf);
 4390              		.loc 1 175 7 is_stmt 1 view .LVU753
ARM GAS  /tmp/cckp0GEV.s 			page 106


 4391 00da 2200     		movs	r2, r4
 4392 00dc 5449     		ldr	r1, .L158+16
 4393 00de 26A8     		add	r0, sp, #152
 4394 00e0 FFF7FEFF 		bl	sprintf
 4395              	.LVL291:
 178:Src/main.c    ****          newTime.Hours = 1;
 4396              		.loc 1 178 7 view .LVU754
 178:Src/main.c    ****          newTime.Hours = 1;
 4397              		.loc 1 178 9 is_stmt 0 view .LVU755
 4398 00e4 0C2C     		cmp	r4, #12
 4399 00e6 17DD     		ble	.L144
 179:Src/main.c    ****       else
 4400              		.loc 1 179 10 is_stmt 1 view .LVU756
 179:Src/main.c    ****       else
 4401              		.loc 1 179 24 is_stmt 0 view .LVU757
 4402 00e8 1CAB     		add	r3, sp, #112
 4403 00ea 0122     		movs	r2, #1
 4404 00ec 1A70     		strb	r2, [r3]
 4405              	.LVL292:
 4406              	.L145:
 183:Src/main.c    ****       newTime.Seconds = 0; 
 4407              		.loc 1 183 7 is_stmt 1 view .LVU758
 183:Src/main.c    ****       newTime.Seconds = 0; 
 4408              		.loc 1 183 23 is_stmt 0 view .LVU759
 4409 00ee 0023     		movs	r3, #0
 4410 00f0 02AA     		add	r2, sp, #8
 4411 00f2 6921     		movs	r1, #105
 4412 00f4 5218     		adds	r2, r2, r1
 4413 00f6 1370     		strb	r3, [r2]
 184:Src/main.c    **** 
 4414              		.loc 1 184 7 is_stmt 1 view .LVU760
 184:Src/main.c    **** 
 4415              		.loc 1 184 23 is_stmt 0 view .LVU761
 4416 00f8 02AA     		add	r2, sp, #8
 4417 00fa 0131     		adds	r1, r1, #1
 4418 00fc 5218     		adds	r2, r2, r1
 4419 00fe 1370     		strb	r3, [r2]
 187:Src/main.c    ****       if(res != 0){
 4420              		.loc 1 187 7 is_stmt 1 view .LVU762
 187:Src/main.c    ****       if(res != 0){
 4421              		.loc 1 187 13 is_stmt 0 view .LVU763
 4422 0100 0022     		movs	r2, #0
 4423 0102 1CA9     		add	r1, sp, #112
 4424 0104 4748     		ldr	r0, .L158+4
 4425 0106 FFF7FEFF 		bl	HAL_RTC_SetTime
 4426              	.LVL293:
 4427 010a 021E     		subs	r2, r0, #0
 4428              	.LVL294:
 188:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 4429              		.loc 1 188 7 is_stmt 1 view .LVU764
 188:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 4430              		.loc 1 188 9 is_stmt 0 view .LVU765
 4431 010c 47D0     		beq	.L143
 189:Src/main.c    ****          //say(buf);
 4432              		.loc 1 189 10 is_stmt 1 view .LVU766
 4433 010e 4949     		ldr	r1, .L158+20
 4434 0110 26A8     		add	r0, sp, #152
ARM GAS  /tmp/cckp0GEV.s 			page 107


 4435              	.LVL295:
 189:Src/main.c    ****          //say(buf);
 4436              		.loc 1 189 10 is_stmt 0 view .LVU767
 4437 0112 FFF7FEFF 		bl	sprintf
 4438              	.LVL296:
 4439 0116 42E0     		b	.L143
 4440              	.LVL297:
 4441              	.L144:
 181:Src/main.c    **** 
 4442              		.loc 1 181 10 is_stmt 1 view .LVU768
 181:Src/main.c    **** 
 4443              		.loc 1 181 24 is_stmt 0 view .LVU769
 4444 0118 0134     		adds	r4, r4, #1
 4445              	.LVL298:
 181:Src/main.c    **** 
 4446              		.loc 1 181 24 view .LVU770
 4447 011a 1CAB     		add	r3, sp, #112
 4448 011c 1C70     		strb	r4, [r3]
 4449 011e E6E7     		b	.L145
 4450              	.LVL299:
 4451              	.L148:
 181:Src/main.c    **** 
 4452              		.loc 1 181 24 view .LVU771
 4453              	.LBE16:
 4454              	.LBB17:
 226:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 4455              		.loc 1 226 10 is_stmt 1 view .LVU772
 226:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 4456              		.loc 1 226 26 is_stmt 0 view .LVU773
 4457 0120 1CA9     		add	r1, sp, #112
 4458 0122 0023     		movs	r3, #0
 4459 0124 4B70     		strb	r3, [r1, #1]
 227:Src/main.c    ****       }
 4460              		.loc 1 227 10 is_stmt 1 view .LVU774
 227:Src/main.c    ****       }
 4461              		.loc 1 227 38 is_stmt 0 view .LVU775
 4462 0126 21AB     		add	r3, sp, #132
 4463 0128 1B78     		ldrb	r3, [r3]
 227:Src/main.c    ****       }
 4464              		.loc 1 227 45 view .LVU776
 4465 012a 0133     		adds	r3, r3, #1
 227:Src/main.c    ****       }
 4466              		.loc 1 227 24 view .LVU777
 4467 012c 0B70     		strb	r3, [r1]
 4468              	.L149:
 230:Src/main.c    ****       //say(buf);
 4469              		.loc 1 230 7 is_stmt 1 view .LVU778
 4470 012e 4249     		ldr	r1, .L158+24
 4471 0130 26A8     		add	r0, sp, #152
 4472 0132 FFF7FEFF 		bl	sprintf
 4473              	.LVL300:
 233:Src/main.c    ****       if(res != 0){
 4474              		.loc 1 233 7 view .LVU779
 233:Src/main.c    ****       if(res != 0){
 4475              		.loc 1 233 13 is_stmt 0 view .LVU780
 4476 0136 0022     		movs	r2, #0
 4477 0138 1CA9     		add	r1, sp, #112
ARM GAS  /tmp/cckp0GEV.s 			page 108


 4478 013a 3A48     		ldr	r0, .L158+4
 4479 013c FFF7FEFF 		bl	HAL_RTC_SetTime
 4480              	.LVL301:
 4481 0140 021E     		subs	r2, r0, #0
 4482              	.LVL302:
 234:Src/main.c    ****          sprintf(buf,"minute time error %d \n", res);
 4483              		.loc 1 234 7 is_stmt 1 view .LVU781
 234:Src/main.c    ****          sprintf(buf,"minute time error %d \n", res);
 4484              		.loc 1 234 9 is_stmt 0 view .LVU782
 4485 0142 57D1     		bne	.L154
 4486              	.LVL303:
 4487              	.L147:
 234:Src/main.c    ****          sprintf(buf,"minute time error %d \n", res);
 4488              		.loc 1 234 9 view .LVU783
 4489              	.LBE17:
 241:Src/main.c    ****     /*
 4490              		.loc 1 241 5 is_stmt 1 view .LVU784
 241:Src/main.c    ****     /*
 4491              		.loc 1 241 17 is_stmt 0 view .LVU785
 4492 0144 364B     		ldr	r3, .L158
 4493 0146 1B68     		ldr	r3, [r3]
 241:Src/main.c    ****     /*
 4494              		.loc 1 241 7 view .LVU786
 4495 0148 012B     		cmp	r3, #1
 4496 014a 58D0     		beq	.L155
 4497              	.L151:
 129:Src/main.c    ****   {
 4498              		.loc 1 129 3 is_stmt 1 view .LVU787
 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 4499              		.loc 1 136 5 view .LVU788
 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 4500              		.loc 1 136 20 is_stmt 0 view .LVU789
 4501 014c 374B     		ldr	r3, .L158+12
 4502 014e 1B68     		ldr	r3, [r3]
 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 4503              		.loc 1 136 7 view .LVU790
 4504 0150 052B     		cmp	r3, #5
 4505 0152 00D1     		bne	.LCB3950
 4506 0154 72E7     		b	.L156	@long jump
 4507              	.LCB3950:
 144:Src/main.c    **** 
 4508              		.loc 1 144 8 is_stmt 1 view .LVU791
 4509 0156 1093     		str	r3, [sp, #64]
 4510 0158 2EAB     		add	r3, sp, #184
 4511 015a 0BA9     		add	r1, sp, #44
 4512 015c 0A00     		movs	r2, r1
 4513 015e 13CB     		ldmia	r3!, {r0, r1, r4}
 4514 0160 13C2     		stmia	r2!, {r0, r1, r4}
 4515 0162 03CB     		ldmia	r3!, {r0, r1}
 4516 0164 03C2     		stmia	r2!, {r0, r1}
 4517 0166 33AB     		add	r3, sp, #204
 4518 0168 06A9     		add	r1, sp, #24
 4519 016a 0A00     		movs	r2, r1
 4520 016c 13CB     		ldmia	r3!, {r0, r1, r4}
 4521 016e 13C2     		stmia	r2!, {r0, r1, r4}
 4522 0170 03CB     		ldmia	r3!, {r0, r1}
 4523 0172 03C2     		stmia	r2!, {r0, r1}
ARM GAS  /tmp/cckp0GEV.s 			page 109


 4524 0174 38AB     		add	r3, sp, #224
 4525 0176 01A9     		add	r1, sp, #4
 4526 0178 0A00     		movs	r2, r1
 4527 017a 13CB     		ldmia	r3!, {r0, r1, r4}
 4528 017c 13C2     		stmia	r2!, {r0, r1, r4}
 4529 017e 03CB     		ldmia	r3!, {r0, r1}
 4530 0180 03C2     		stmia	r2!, {r0, r1}
 4531 0182 419B     		ldr	r3, [sp, #260]
 4532 0184 1993     		str	r3, [sp, #100]
 4533 0186 0093     		str	r3, [sp]
 4534 0188 3D98     		ldr	r0, [sp, #244]
 4535 018a 3E99     		ldr	r1, [sp, #248]
 4536 018c 3F9A     		ldr	r2, [sp, #252]
 4537 018e 409B     		ldr	r3, [sp, #256]
 4538 0190 FFF7FEFF 		bl	dance
 4539              	.LVL304:
 4540              	.L142:
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 4541              		.loc 1 148 5 view .LVU792
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 4542              		.loc 1 148 17 is_stmt 0 view .LVU793
 4543 0194 224B     		ldr	r3, .L158
 4544 0196 1B68     		ldr	r3, [r3]
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 4545              		.loc 1 148 7 view .LVU794
 4546 0198 012B     		cmp	r3, #1
 4547 019a 00D1     		bne	.LCB3983
 4548 019c 76E7     		b	.L157	@long jump
 4549              	.LCB3983:
 4550              	.L143:
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 4551              		.loc 1 196 5 is_stmt 1 view .LVU795
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 4552              		.loc 1 196 17 is_stmt 0 view .LVU796
 4553 019e 204B     		ldr	r3, .L158
 4554 01a0 1B68     		ldr	r3, [r3]
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 4555              		.loc 1 196 7 view .LVU797
 4556 01a2 012B     		cmp	r3, #1
 4557 01a4 CED1     		bne	.L147
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 4558              		.loc 1 196 36 discriminator 1 view .LVU798
 4559 01a6 254B     		ldr	r3, .L158+28
 4560 01a8 1B68     		ldr	r3, [r3]
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 4561              		.loc 1 196 22 discriminator 1 view .LVU799
 4562 01aa 012B     		cmp	r3, #1
 4563 01ac CAD1     		bne	.L147
 4564              	.LBB18:
 197:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 4565              		.loc 1 197 7 is_stmt 1 view .LVU800
 199:Src/main.c    ****       RTC_DateTypeDef currentDate;
 4566              		.loc 1 199 7 view .LVU801
 200:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 4567              		.loc 1 200 7 view .LVU802
 201:Src/main.c    ****       //say("In minute button\n");
 4568              		.loc 1 201 7 view .LVU803
ARM GAS  /tmp/cckp0GEV.s 			page 110


 203:Src/main.c    ****       char buf[30];
 4569              		.loc 1 203 7 view .LVU804
 4570 01ae 6420     		movs	r0, #100
 4571 01b0 FFF7FEFF 		bl	HAL_Delay
 4572              	.LVL305:
 204:Src/main.c    **** 
 4573              		.loc 1 204 7 view .LVU805
 207:Src/main.c    ****       minuteFlag =0;
 4574              		.loc 1 207 7 view .LVU806
 207:Src/main.c    ****       minuteFlag =0;
 4575              		.loc 1 207 16 is_stmt 0 view .LVU807
 4576 01b4 0024     		movs	r4, #0
 4577 01b6 1A4B     		ldr	r3, .L158
 4578 01b8 1C60     		str	r4, [r3]
 208:Src/main.c    ****       mamboNumber = 5;
 4579              		.loc 1 208 7 is_stmt 1 view .LVU808
 208:Src/main.c    ****       mamboNumber = 5;
 4580              		.loc 1 208 18 is_stmt 0 view .LVU809
 4581 01ba 204B     		ldr	r3, .L158+28
 4582 01bc 1C60     		str	r4, [r3]
 209:Src/main.c    **** 
 4583              		.loc 1 209 7 is_stmt 1 view .LVU810
 209:Src/main.c    **** 
 4584              		.loc 1 209 19 is_stmt 0 view .LVU811
 4585 01be 1B4B     		ldr	r3, .L158+12
 4586 01c0 0522     		movs	r2, #5
 4587 01c2 1A60     		str	r2, [r3]
 211:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 4588              		.loc 1 211 7 is_stmt 1 view .LVU812
 211:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 4589              		.loc 1 211 13 is_stmt 0 view .LVU813
 4590 01c4 21AD     		add	r5, sp, #132
 4591 01c6 174E     		ldr	r6, .L158+4
 4592 01c8 0022     		movs	r2, #0
 4593 01ca 2900     		movs	r1, r5
 4594 01cc 3000     		movs	r0, r6
 4595 01ce FFF7FEFF 		bl	HAL_RTC_GetTime
 4596              	.LVL306:
 215:Src/main.c    **** 
 4597              		.loc 1 215 7 is_stmt 1 view .LVU814
 215:Src/main.c    **** 
 4598              		.loc 1 215 13 is_stmt 0 view .LVU815
 4599 01d2 0022     		movs	r2, #0
 4600 01d4 1BA9     		add	r1, sp, #108
 4601 01d6 3000     		movs	r0, r6
 4602 01d8 FFF7FEFF 		bl	HAL_RTC_GetDate
 4603              	.LVL307:
 217:Src/main.c    **** 
 4604              		.loc 1 217 7 is_stmt 1 view .LVU816
 217:Src/main.c    **** 
 4605              		.loc 1 217 31 is_stmt 0 view .LVU817
 4606 01dc 6A78     		ldrb	r2, [r5, #1]
 4607              	.LVL308:
 219:Src/main.c    ****       
 4608              		.loc 1 219 7 is_stmt 1 view .LVU818
 219:Src/main.c    ****       
 4609              		.loc 1 219 23 is_stmt 0 view .LVU819
ARM GAS  /tmp/cckp0GEV.s 			page 111


 4610 01de 1CAB     		add	r3, sp, #112
 4611 01e0 9C70     		strb	r4, [r3, #2]
 221:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 4612              		.loc 1 221 7 is_stmt 1 view .LVU820
 221:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 4613              		.loc 1 221 9 is_stmt 0 view .LVU821
 4614 01e2 362A     		cmp	r2, #54
 4615 01e4 9CD8     		bhi	.L148
 222:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 4616              		.loc 1 222 10 is_stmt 1 view .LVU822
 222:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 4617              		.loc 1 222 40 is_stmt 0 view .LVU823
 4618 01e6 531D     		adds	r3, r2, #5
 222:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 4619              		.loc 1 222 26 view .LVU824
 4620 01e8 1CA9     		add	r1, sp, #112
 4621 01ea 4B70     		strb	r3, [r1, #1]
 223:Src/main.c    ****       }
 4622              		.loc 1 223 10 is_stmt 1 view .LVU825
 223:Src/main.c    ****       }
 4623              		.loc 1 223 37 is_stmt 0 view .LVU826
 4624 01ec 21AB     		add	r3, sp, #132
 4625 01ee 1B78     		ldrb	r3, [r3]
 223:Src/main.c    ****       }
 4626              		.loc 1 223 24 view .LVU827
 4627 01f0 0B70     		strb	r3, [r1]
 4628 01f2 9CE7     		b	.L149
 4629              	.LVL309:
 4630              	.L154:
 235:Src/main.c    ****          //say(buf);
 4631              		.loc 1 235 10 is_stmt 1 view .LVU828
 4632 01f4 1249     		ldr	r1, .L158+32
 4633 01f6 26A8     		add	r0, sp, #152
 4634              	.LVL310:
 235:Src/main.c    ****          //say(buf);
 4635              		.loc 1 235 10 is_stmt 0 view .LVU829
 4636 01f8 FFF7FEFF 		bl	sprintf
 4637              	.LVL311:
 4638 01fc A2E7     		b	.L147
 4639              	.L155:
 235:Src/main.c    ****          //say(buf);
 4640              		.loc 1 235 10 view .LVU830
 4641              	.LBE18:
 248:Src/main.c    ****       stopFlag =0;
 4642              		.loc 1 248 7 is_stmt 1 view .LVU831
 4643 01fe 6420     		movs	r0, #100
 4644 0200 FFF7FEFF 		bl	HAL_Delay
 4645              	.LVL312:
 249:Src/main.c    ****       mamboNumber++;
 4646              		.loc 1 249 7 view .LVU832
 249:Src/main.c    ****       mamboNumber++;
 4647              		.loc 1 249 16 is_stmt 0 view .LVU833
 4648 0204 064B     		ldr	r3, .L158
 4649 0206 0022     		movs	r2, #0
 4650 0208 1A60     		str	r2, [r3]
 250:Src/main.c    ****       if(mamboNumber > 5)
 4651              		.loc 1 250 7 is_stmt 1 view .LVU834
ARM GAS  /tmp/cckp0GEV.s 			page 112


 250:Src/main.c    ****       if(mamboNumber > 5)
 4652              		.loc 1 250 18 is_stmt 0 view .LVU835
 4653 020a 084A     		ldr	r2, .L158+12
 4654 020c 1368     		ldr	r3, [r2]
 4655 020e 0133     		adds	r3, r3, #1
 4656 0210 1360     		str	r3, [r2]
 251:Src/main.c    ****          mamboNumber = 0;
 4657              		.loc 1 251 7 is_stmt 1 view .LVU836
 251:Src/main.c    ****          mamboNumber = 0;
 4658              		.loc 1 251 9 is_stmt 0 view .LVU837
 4659 0212 052B     		cmp	r3, #5
 4660 0214 9ADD     		ble	.L151
 252:Src/main.c    ****     }
 4661              		.loc 1 252 10 is_stmt 1 view .LVU838
 252:Src/main.c    ****     }
 4662              		.loc 1 252 22 is_stmt 0 view .LVU839
 4663 0216 1300     		movs	r3, r2
 4664 0218 0022     		movs	r2, #0
 4665 021a 1A60     		str	r2, [r3]
 4666 021c 96E7     		b	.L151
 4667              	.L159:
 4668 021e C046     		.align	2
 4669              	.L158:
 4670 0220 00000000 		.word	.LANCHOR0
 4671 0224 00000000 		.word	hrtc
 4672 0228 00000000 		.word	.LANCHOR2
 4673 022c 00000000 		.word	.LANCHOR1
 4674 0230 00000000 		.word	.LC8
 4675 0234 10000000 		.word	.LC10
 4676 0238 2C000000 		.word	.LC13
 4677 023c 00000000 		.word	.LANCHOR3
 4678 0240 3C000000 		.word	.LC15
 4679              		.cfi_endproc
 4680              	.LFE51:
 4682              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 4683              		.align	1
 4684              		.global	HAL_GPIO_EXTI_Callback
 4685              		.syntax unified
 4686              		.code	16
 4687              		.thumb_func
 4688              		.fpu softvfp
 4690              	HAL_GPIO_EXTI_Callback:
 4691              	.LVL313:
 4692              	.LFB56:
 420:Src/main.c    **** 
 421:Src/main.c    **** /* USER CODE BEGIN 4 */
 422:Src/main.c    **** 
 423:Src/main.c    **** /**
 424:Src/main.c    **** * @brief Interrupt callback for GPIOs
 425:Src/main.c    **** */
 426:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 427:Src/main.c    **** {
 4693              		.loc 1 427 1 is_stmt 1 view -0
 4694              		.cfi_startproc
 4695              		@ args = 0, pretend = 0, frame = 0
 4696              		@ frame_needed = 0, uses_anonymous_args = 0
 4697              		@ link register save eliminated.
ARM GAS  /tmp/cckp0GEV.s 			page 113


 428:Src/main.c    ****     // Mode
 429:Src/main.c    ****     if ( GPIO_Pin == GPIO_PIN_8) {
 4698              		.loc 1 429 5 view .LVU841
 4699              		.loc 1 429 8 is_stmt 0 view .LVU842
 4700 0000 8023     		movs	r3, #128
 4701 0002 5B00     		lsls	r3, r3, #1
 4702 0004 9842     		cmp	r0, r3
 4703 0006 09D0     		beq	.L164
 430:Src/main.c    ****       stopFlag = 1;
 431:Src/main.c    ****     }
 432:Src/main.c    ****     // Minute  
 433:Src/main.c    ****     else if ( GPIO_Pin == GPIO_PIN_6) {
 4704              		.loc 1 433 10 is_stmt 1 view .LVU843
 4705              		.loc 1 433 13 is_stmt 0 view .LVU844
 4706 0008 4028     		cmp	r0, #64
 4707 000a 0BD0     		beq	.L165
 434:Src/main.c    ****       stopFlag = 1;
 435:Src/main.c    ****       minuteFlag = 1;
 436:Src/main.c    ****     }
 437:Src/main.c    ****     // Hour 
 438:Src/main.c    ****     else if ( GPIO_Pin == GPIO_PIN_5) {
 4708              		.loc 1 438 10 is_stmt 1 view .LVU845
 4709              		.loc 1 438 13 is_stmt 0 view .LVU846
 4710 000c 2028     		cmp	r0, #32
 4711 000e 08D1     		bne	.L160
 439:Src/main.c    ****       stopFlag = 1;
 4712              		.loc 1 439 7 is_stmt 1 view .LVU847
 4713              		.loc 1 439 16 is_stmt 0 view .LVU848
 4714 0010 0123     		movs	r3, #1
 4715 0012 074A     		ldr	r2, .L166
 4716 0014 1360     		str	r3, [r2]
 440:Src/main.c    ****       hourFlag = 1;
 4717              		.loc 1 440 7 is_stmt 1 view .LVU849
 4718              		.loc 1 440 16 is_stmt 0 view .LVU850
 4719 0016 074A     		ldr	r2, .L166+4
 4720 0018 1360     		str	r3, [r2]
 441:Src/main.c    ****     }
 442:Src/main.c    **** 
 443:Src/main.c    **** }
 4721              		.loc 1 443 1 view .LVU851
 4722 001a 02E0     		b	.L160
 4723              	.L164:
 430:Src/main.c    ****     }
 4724              		.loc 1 430 7 is_stmt 1 view .LVU852
 430:Src/main.c    ****     }
 4725              		.loc 1 430 16 is_stmt 0 view .LVU853
 4726 001c 044B     		ldr	r3, .L166
 4727 001e 0122     		movs	r2, #1
 4728 0020 1A60     		str	r2, [r3]
 4729              	.L160:
 4730              		.loc 1 443 1 view .LVU854
 4731              		@ sp needed
 4732 0022 7047     		bx	lr
 4733              	.L165:
 434:Src/main.c    ****       minuteFlag = 1;
 4734              		.loc 1 434 7 is_stmt 1 view .LVU855
 434:Src/main.c    ****       minuteFlag = 1;
ARM GAS  /tmp/cckp0GEV.s 			page 114


 4735              		.loc 1 434 16 is_stmt 0 view .LVU856
 4736 0024 0123     		movs	r3, #1
 4737 0026 024A     		ldr	r2, .L166
 4738 0028 1360     		str	r3, [r2]
 435:Src/main.c    ****     }
 4739              		.loc 1 435 7 is_stmt 1 view .LVU857
 435:Src/main.c    ****     }
 4740              		.loc 1 435 18 is_stmt 0 view .LVU858
 4741 002a 034A     		ldr	r2, .L166+8
 4742 002c 1360     		str	r3, [r2]
 4743 002e F8E7     		b	.L160
 4744              	.L167:
 4745              		.align	2
 4746              	.L166:
 4747 0030 00000000 		.word	.LANCHOR0
 4748 0034 00000000 		.word	.LANCHOR2
 4749 0038 00000000 		.word	.LANCHOR3
 4750              		.cfi_endproc
 4751              	.LFE56:
 4753              		.section	.text.Error_Handler,"ax",%progbits
 4754              		.align	1
 4755              		.global	Error_Handler
 4756              		.syntax unified
 4757              		.code	16
 4758              		.thumb_func
 4759              		.fpu softvfp
 4761              	Error_Handler:
 4762              	.LFB57:
 444:Src/main.c    **** 
 445:Src/main.c    **** /*
 446:Src/main.c    **** void trySleep( GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDe
 447:Src/main.c    ****    RTC_AlarmTypeDef AlarmSet;
 448:Src/main.c    ****    RTC_TimeTypeDef newTime;
 449:Src/main.c    ****    RTC_DateTypeDef currentDate;
 450:Src/main.c    ****    RTC_TimeTypeDef currentTime;
 451:Src/main.c    ****    memset(&newTime, 0, sizeof(newTime));
 452:Src/main.c    ****    memset(&currentTime, 0, sizeof(currentTime));
 453:Src/main.c    **** 
 454:Src/main.c    ****    HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 455:Src/main.c    ****    // Weird. We dont care about the date but unless we touch the date the registers
 456:Src/main.c    ****    // for rtc time dont unlock...
 457:Src/main.c    ****    // You dont want to know how long I fought this
 458:Src/main.c    ****    HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 459:Src/main.c    **** 
 460:Src/main.c    ****    newTime.Minutes = currentTime.Minutes; 
 461:Src/main.c    ****    newTime.Seconds = (currentTime.Seconds +30); 
 462:Src/main.c    **** 
 463:Src/main.c    ****    AlarmSet.AlarmTime = newTime;
 464:Src/main.c    **** 
 465:Src/main.c    **** //      HAL_RTC_SetTime(&hrtc, &newTime, RTC_FORMAT_BIN);
 466:Src/main.c    **** 
 467:Src/main.c    ****    
 468:Src/main.c    ****    HAL_RTC_SetAlarm_IT(&whatTime, &AlarmSet, RTC_FORMAT_BIN);
 469:Src/main.c    ****    say("Entering sleep mode");
 470:Src/main.c    ****    // Standby Sets all pins to High Z, which does weird things with the charlieplexing
 471:Src/main.c    ****    //HAL_PWR_EnterSTANDBYMode();
 472:Src/main.c    ****    
ARM GAS  /tmp/cckp0GEV.s 			page 115


 473:Src/main.c    ****    HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_SLEEPENTRY_WFI);
 474:Src/main.c    ****    say("exiting sleep mode");
 475:Src/main.c    **** }
 476:Src/main.c    **** 
 477:Src/main.c    **** void StopOneSec(){
 478:Src/main.c    ****    RTC_AlarmTypeDef AlarmSet;
 479:Src/main.c    ****    RTC_TimeTypeDef newTime;
 480:Src/main.c    ****    RTC_DateTypeDef currentDate;
 481:Src/main.c    ****    RTC_TimeTypeDef currentTime;
 482:Src/main.c    ****    memset(&newTime, 0, sizeof(newTime));
 483:Src/main.c    ****    memset(&currentTime, 0, sizeof(currentTime));
 484:Src/main.c    **** 
 485:Src/main.c    ****    HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 486:Src/main.c    ****    // Weird. We dont care about the date but unless we touch the date the registers
 487:Src/main.c    ****    // for rtc time dont unlock...
 488:Src/main.c    ****    // You dont want to know how long I fought this
 489:Src/main.c    ****    HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 490:Src/main.c    **** 
 491:Src/main.c    ****    newTime.Minutes = currentTime.Minutes; 
 492:Src/main.c    ****    newTime.Seconds = (currentTime.Seconds +1); 
 493:Src/main.c    **** 
 494:Src/main.c    ****    AlarmSet.AlarmTime = newTime;
 495:Src/main.c    ****    
 496:Src/main.c    ****    HAL_RTC_SetAlarm_IT(&hrtc, &AlarmSet, RTC_FORMAT_BIN);
 497:Src/main.c    **** 
 498:Src/main.c    ****    // Standby Sets all pins to High Z, which does weird things with the charlieplexing
 499:Src/main.c    ****    //HAL_PWR_EnterSTANDBYMode();
 500:Src/main.c    ****    
 501:Src/main.c    ****    HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_SLEEPENTRY_WFI);
 502:Src/main.c    **** }
 503:Src/main.c    **** */
 504:Src/main.c    **** /* USER CODE END 4 */
 505:Src/main.c    **** 
 506:Src/main.c    **** /**
 507:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 508:Src/main.c    ****   * @retval None
 509:Src/main.c    ****   */
 510:Src/main.c    **** void Error_Handler(void)
 511:Src/main.c    **** {
 4763              		.loc 1 511 1 is_stmt 1 view -0
 4764              		.cfi_startproc
 4765              		@ args = 0, pretend = 0, frame = 0
 4766              		@ frame_needed = 0, uses_anonymous_args = 0
 4767              		@ link register save eliminated.
 512:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 513:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 514:Src/main.c    **** 
 515:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 516:Src/main.c    **** }
 4768              		.loc 1 516 1 view .LVU860
 4769              		@ sp needed
 4770 0000 7047     		bx	lr
 4771              		.cfi_endproc
 4772              	.LFE57:
 4774              		.comm	RTCtime,20,4
 4775              		.global	minuteFlag
 4776              		.global	hourFlag
ARM GAS  /tmp/cckp0GEV.s 			page 116


 4777              		.global	stopFlag
 4778              		.global	mamboNumber
 4779              		.comm	htim1,64,4
 4780              		.comm	hrtc,32,4
 4781              		.section	.bss.hourFlag,"aw",%nobits
 4782              		.align	2
 4783              		.set	.LANCHOR2,. + 0
 4786              	hourFlag:
 4787 0000 00000000 		.space	4
 4788              		.section	.bss.minuteFlag,"aw",%nobits
 4789              		.align	2
 4790              		.set	.LANCHOR3,. + 0
 4793              	minuteFlag:
 4794 0000 00000000 		.space	4
 4795              		.section	.bss.stopFlag,"aw",%nobits
 4796              		.align	2
 4797              		.set	.LANCHOR0,. + 0
 4800              	stopFlag:
 4801 0000 00000000 		.space	4
 4802              		.section	.data.mamboNumber,"aw"
 4803              		.align	2
 4804              		.set	.LANCHOR1,. + 0
 4807              	mamboNumber:
 4808 0000 04000000 		.word	4
 4809              		.text
 4810              	.Letext0:
 4811              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4812              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4813              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 4814              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 4815              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 4816              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 4817              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 4818              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 4819              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 4820              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rtc.h"
 4821              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 4822              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 4823              		.file 15 "/usr/arm-none-eabi/include/sys/lock.h"
 4824              		.file 16 "/usr/arm-none-eabi/include/sys/_types.h"
 4825              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 4826              		.file 18 "/usr/arm-none-eabi/include/sys/reent.h"
 4827              		.file 19 "/usr/arm-none-eabi/include/stdlib.h"
 4828              		.file 20 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 4829              		.file 21 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 4830              		.file 22 "/usr/arm-none-eabi/include/stdio.h"
 4831              		.file 23 "Inc/usb_device.h"
 4832              		.file 24 "<built-in>"
ARM GAS  /tmp/cckp0GEV.s 			page 117


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cckp0GEV.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cckp0GEV.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cckp0GEV.s:159    .text.MX_GPIO_Init:0000000000000090 $d
     /tmp/cckp0GEV.s:166    .text.MX_RTC_Init:0000000000000000 $t
     /tmp/cckp0GEV.s:172    .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/cckp0GEV.s:220    .text.MX_RTC_Init:0000000000000024 $d
                            *COM*:0000000000000020 hrtc
     /tmp/cckp0GEV.s:226    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cckp0GEV.s:232    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cckp0GEV.s:320    .text.MX_TIM1_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim1
     /tmp/cckp0GEV.s:326    .text.charlie:0000000000000000 $t
     /tmp/cckp0GEV.s:333    .text.charlie:0000000000000000 charlie
     /tmp/cckp0GEV.s:907    .text.hands:0000000000000000 $t
     /tmp/cckp0GEV.s:914    .text.hands:0000000000000000 hands
     /tmp/cckp0GEV.s:1176   .text.hands:000000000000015c $d
     /tmp/cckp0GEV.s:1182   .text.clock:0000000000000000 $t
     /tmp/cckp0GEV.s:1189   .text.clock:0000000000000000 clock
     /tmp/cckp0GEV.s:1462   .text.dance:0000000000000000 $t
     /tmp/cckp0GEV.s:1469   .text.dance:0000000000000000 dance
     /tmp/cckp0GEV.s:2175   .text.dance:0000000000000494 $d
     /tmp/cckp0GEV.s:2178   .text.dance:0000000000000498 $t
     /tmp/cckp0GEV.s:2235   .text.dance:00000000000004f8 $d
     /tmp/cckp0GEV.s:2238   .text.dance:00000000000004fc $t
     /tmp/cckp0GEV.s:2824   .text.dance:0000000000000904 $d
     /tmp/cckp0GEV.s:2827   .text.dance:0000000000000908 $t
     /tmp/cckp0GEV.s:3467   .text.dance:0000000000000cf8 $d
     /tmp/cckp0GEV.s:3475   .text.dance:0000000000000d00 $t
     /tmp/cckp0GEV.s:3698   .text.dance:0000000000000e40 $d
     /tmp/cckp0GEV.s:3705   .text.initA:0000000000000000 $t
     /tmp/cckp0GEV.s:3712   .text.initA:0000000000000000 initA
     /tmp/cckp0GEV.s:3796   .text.initA:000000000000004c $d
     /tmp/cckp0GEV.s:3801   .text.initB:0000000000000000 $t
     /tmp/cckp0GEV.s:3808   .text.initB:0000000000000000 initB
     /tmp/cckp0GEV.s:3893   .text.initB:0000000000000050 $d
     /tmp/cckp0GEV.s:3898   .text.initC:0000000000000000 $t
     /tmp/cckp0GEV.s:3905   .text.initC:0000000000000000 initC
     /tmp/cckp0GEV.s:3990   .text.initC:0000000000000050 $d
     /tmp/cckp0GEV.s:3995   .text.initD:0000000000000000 $t
     /tmp/cckp0GEV.s:4002   .text.initD:0000000000000000 initD
     /tmp/cckp0GEV.s:4087   .text.initD:0000000000000050 $d
     /tmp/cckp0GEV.s:4092   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cckp0GEV.s:4099   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cckp0GEV.s:4198   .rodata.main.str1.4:0000000000000000 $d
     /tmp/cckp0GEV.s:4211   .text.main:0000000000000000 $t
     /tmp/cckp0GEV.s:4218   .text.main:0000000000000000 main
     /tmp/cckp0GEV.s:4670   .text.main:0000000000000220 $d
     /tmp/cckp0GEV.s:4683   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cckp0GEV.s:4690   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cckp0GEV.s:4747   .text.HAL_GPIO_EXTI_Callback:0000000000000030 $d
     /tmp/cckp0GEV.s:4754   .text.Error_Handler:0000000000000000 $t
     /tmp/cckp0GEV.s:4761   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000014 RTCtime
     /tmp/cckp0GEV.s:4793   .bss.minuteFlag:0000000000000000 minuteFlag
     /tmp/cckp0GEV.s:4786   .bss.hourFlag:0000000000000000 hourFlag
ARM GAS  /tmp/cckp0GEV.s 			page 118


     /tmp/cckp0GEV.s:4800   .bss.stopFlag:0000000000000000 stopFlag
     /tmp/cckp0GEV.s:4807   .data.mamboNumber:0000000000000000 mamboNumber
     /tmp/cckp0GEV.s:4782   .bss.hourFlag:0000000000000000 $d
     /tmp/cckp0GEV.s:4789   .bss.minuteFlag:0000000000000000 $d
     /tmp/cckp0GEV.s:4796   .bss.stopFlag:0000000000000000 $d
     /tmp/cckp0GEV.s:4803   .data.mamboNumber:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RTC_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_GPIO_DeInit
HAL_Delay
HAL_RTC_GetTime
HAL_RTC_GetDate
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
sprintf
HAL_RTC_SetTime
