ARM GAS  /tmp/ccaWamBb.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB58:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usb_device.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "charlie.c"
  28:Src/main.c    **** #include "semihosting.c"
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccaWamBb.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** RTC_HandleTypeDef hrtc;
  48:Src/main.c    **** 
  49:Src/main.c    **** TIM_HandleTypeDef htim1;
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** //void dance();
  54:Src/main.c    **** 
  55:Src/main.c    **** // Keep track of what dance we are on
  56:Src/main.c    **** int mamboNumber = 5;
  57:Src/main.c    **** // Stopper for the inturrupt funciton
  58:Src/main.c    **** int stopFlag = 0;
  59:Src/main.c    **** // Flag to switch to time 
  60:Src/main.c    **** int hourFlag= 0;
  61:Src/main.c    **** int minuteFlag = 0;
  62:Src/main.c    **** 
  63:Src/main.c    **** // RTC defs
  64:Src/main.c    **** RTC_TimeTypeDef RTCtime;
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PV */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  69:Src/main.c    **** void SystemClock_Config(void);
  70:Src/main.c    **** static void MX_GPIO_Init(void);
  71:Src/main.c    **** static void MX_RTC_Init(void);
  72:Src/main.c    **** static void MX_TIM1_Init(void);
  73:Src/main.c    **** /* USER CODE BEGIN PFP */
  74:Src/main.c    **** 
  75:Src/main.c    **** void dance();
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  79:Src/main.c    **** /* USER CODE BEGIN 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /**
  84:Src/main.c    ****   * @brief  The application entry point.
  85:Src/main.c    ****   * @retval int
  86:Src/main.c    ****   */
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
  90:Src/main.c    **** 
ARM GAS  /tmp/ccaWamBb.s 			page 3


  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Configure the system clock */
 103:Src/main.c    ****   SystemClock_Config();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Initialize all configured peripherals */
 110:Src/main.c    ****   MX_GPIO_Init();
 111:Src/main.c    ****   MX_USB_DEVICE_Init();
 112:Src/main.c    ****   MX_RTC_Init();
 113:Src/main.c    ****   MX_TIM1_Init();
 114:Src/main.c    ****   /* USER CODE BEGIN 2 */
 115:Src/main.c    ****   GPIO_InitTypeDef PinA = initA();
 116:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 117:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 118:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 119:Src/main.c    **** 
 120:Src/main.c    ****   stopFlag = 0;
 121:Src/main.c    ****   int newMinutes = 0;
 122:Src/main.c    ****   int newHours = 0;
 123:Src/main.c    **** 
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE END 2 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Infinite loop */
 128:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 129:Src/main.c    ****   while (1)
 130:Src/main.c    ****   {
 131:Src/main.c    ****     /* USER CODE END WHILE */
 132:Src/main.c    **** 
 133:Src/main.c    ****     /* USER CODE BEGIN 3 */
 134:Src/main.c    **** 
 135:Src/main.c    ****     // Ladies and gentlemen, this is Mambo Number Five
 136:Src/main.c    ****     if(mamboNumber == 5)
 137:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 138:Src/main.c    **** 
 139:Src/main.c    ****     // Or not...
 140:Src/main.c    ****     else
 141:Src/main.c    ****        dance(PinA, PinB, PinC, PinD, mamboNumber);
 142:Src/main.c    **** 
 143:Src/main.c    **** 
 144:Src/main.c    ****     // Increase hour by one
 145:Src/main.c    ****     if(stopFlag == 1 && hourFlag == 1){
 146:Src/main.c    ****       HAL_StatusTypeDef res;
 147:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
ARM GAS  /tmp/ccaWamBb.s 			page 4


 148:Src/main.c    ****       RTC_TimeTypeDef newTime;
 149:Src/main.c    ****       RTC_DateTypeDef currentDate;
 150:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 151:Src/main.c    ****       memset(&newTime, 0, sizeof(newTime));
 152:Src/main.c    ****       memset(&currentTime, 0, sizeof(currentTime));
 153:Src/main.c    **** 
 154:Src/main.c    ****       say("In hour button\n");
 155:Src/main.c    ****       HAL_Delay(100);
 156:Src/main.c    **** 
 157:Src/main.c    ****       
 158:Src/main.c    ****       char buf[20];
 159:Src/main.c    ****       
 160:Src/main.c    ****       // Clear out our flags
 161:Src/main.c    ****       stopFlag =0;
 162:Src/main.c    ****       hourFlag =0;
 163:Src/main.c    ****       mamboNumber = 5;
 164:Src/main.c    **** 
 165:Src/main.c    ****       
 166:Src/main.c    ****       res = HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 167:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 168:Src/main.c    ****       // for rtc time dont unlock...
 169:Src/main.c    ****       // You dont want to know how long I fought this
 170:Src/main.c    ****       res = HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 171:Src/main.c    ****       newHours = currentTime.Hours;
 172:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 173:Src/main.c    ****       say(buf);
 174:Src/main.c    **** 
 175:Src/main.c    ****       if(newHours >12)
 176:Src/main.c    ****          newTime.Hours = 1;
 177:Src/main.c    ****       else
 178:Src/main.c    ****          newTime.Hours = ++newHours;
 179:Src/main.c    **** 
 180:Src/main.c    ****       newTime.Minutes = 0; 
 181:Src/main.c    ****       newTime.Seconds = 0; 
 182:Src/main.c    **** 
 183:Src/main.c    **** 
 184:Src/main.c    ****       res = HAL_RTC_SetTime(&hrtc, &newTime, RTC_FORMAT_BIN);
 185:Src/main.c    ****       if(res != 0){
 186:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 187:Src/main.c    ****          say(buf);
 188:Src/main.c    ****       }
 189:Src/main.c    **** 
 190:Src/main.c    ****     }
 191:Src/main.c    **** 
 192:Src/main.c    ****     // Increase minute by 10
 193:Src/main.c    ****     if(stopFlag == 1 && minuteFlag == 1){
 194:Src/main.c    ****       HAL_StatusTypeDef res;
 195:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 196:Src/main.c    ****       RTC_TimeTypeDef newTime;
 197:Src/main.c    ****       RTC_DateTypeDef currentDate;
 198:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 199:Src/main.c    ****       say("In minute button\n");
 200:Src/main.c    ****       HAL_Delay(100);
 201:Src/main.c    ****       char buf[20];
 202:Src/main.c    **** 
 203:Src/main.c    ****       // Clear out flags
 204:Src/main.c    ****       stopFlag =0;
ARM GAS  /tmp/ccaWamBb.s 			page 5


 205:Src/main.c    ****       minuteFlag =0;
 206:Src/main.c    ****       mamboNumber = 5;
 207:Src/main.c    **** 
 208:Src/main.c    ****       res = HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 209:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 210:Src/main.c    ****       // for rtc time dont unlock...
 211:Src/main.c    ****       // You dont want to know how long I fought this
 212:Src/main.c    ****       res = HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 213:Src/main.c    **** 
 214:Src/main.c    ****       newMinutes = currentTime.Minutes;
 215:Src/main.c    **** 
 216:Src/main.c    ****       newTime.Seconds = 0; 
 217:Src/main.c    ****       
 218:Src/main.c    ****       if(newMinutes < 55){
 219:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 220:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 221:Src/main.c    ****       }
 222:Src/main.c    ****       else{
 223:Src/main.c    ****          newTime.Minutes = 0;
 224:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 225:Src/main.c    ****       }
 226:Src/main.c    **** 
 227:Src/main.c    ****       sprintf(buf,"minute is %d \n", currentTime.Minutes);
 228:Src/main.c    ****       say(buf);
 229:Src/main.c    **** 
 230:Src/main.c    ****       res = HAL_RTC_SetTime(&hrtc, &newTime, RTC_FORMAT_BIN);
 231:Src/main.c    ****       if(res != 0){
 232:Src/main.c    ****          sprintf(buf,"Set minute time error is %d \n", res);
 233:Src/main.c    ****          say(buf);
 234:Src/main.c    ****       }
 235:Src/main.c    ****     }
 236:Src/main.c    **** 
 237:Src/main.c    ****     // Switch mode
 238:Src/main.c    ****     if(stopFlag == 1){
 239:Src/main.c    ****       say("In mode button\n");
 240:Src/main.c    ****       HAL_Delay(100);
 241:Src/main.c    ****       stopFlag =0;
 242:Src/main.c    ****       mamboNumber++;
 243:Src/main.c    ****       if(mamboNumber > 6)
 244:Src/main.c    ****          mamboNumber = 0;
 245:Src/main.c    ****     }
 246:Src/main.c    ****   }
 247:Src/main.c    ****   /* USER CODE END 3 */
 248:Src/main.c    **** }
 249:Src/main.c    **** 
 250:Src/main.c    **** 
 251:Src/main.c    **** /**
 252:Src/main.c    ****   * @brief System Clock Configuration
 253:Src/main.c    ****   * @retval None
 254:Src/main.c    ****   */
 255:Src/main.c    **** void SystemClock_Config(void)
 256:Src/main.c    **** {
 257:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 258:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 259:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 260:Src/main.c    **** 
 261:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccaWamBb.s 			page 6


 262:Src/main.c    ****   */
 263:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_LSI;
 264:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 265:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 266:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 267:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 268:Src/main.c    ****   {
 269:Src/main.c    ****     Error_Handler();
 270:Src/main.c    ****   }
 271:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 272:Src/main.c    ****   */
 273:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 274:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 275:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 276:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 277:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 278:Src/main.c    **** 
 279:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 280:Src/main.c    ****   {
 281:Src/main.c    ****     Error_Handler();
 282:Src/main.c    ****   }
 283:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_RTC;
 284:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 285:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 286:Src/main.c    **** 
 287:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 288:Src/main.c    ****   {
 289:Src/main.c    ****     Error_Handler();
 290:Src/main.c    ****   }
 291:Src/main.c    **** }
 292:Src/main.c    **** 
 293:Src/main.c    **** /**
 294:Src/main.c    ****   * @brief RTC Initialization Function
 295:Src/main.c    ****   * @param None
 296:Src/main.c    ****   * @retval None
 297:Src/main.c    ****   */
 298:Src/main.c    **** static void MX_RTC_Init(void)
 299:Src/main.c    **** {
 300:Src/main.c    **** 
 301:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 304:Src/main.c    **** 
 305:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 306:Src/main.c    **** 
 307:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 308:Src/main.c    ****   /** Initialize RTC Only 
 309:Src/main.c    ****   */
 310:Src/main.c    ****   hrtc.Instance = RTC;
 311:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 312:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 313:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 314:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 315:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 316:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 317:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 318:Src/main.c    ****   {
ARM GAS  /tmp/ccaWamBb.s 			page 7


 319:Src/main.c    ****     Error_Handler();
 320:Src/main.c    ****   }
 321:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 2 */
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* USER CODE END RTC_Init 2 */
 324:Src/main.c    **** 
 325:Src/main.c    **** }
 326:Src/main.c    **** 
 327:Src/main.c    **** /**
 328:Src/main.c    ****   * @brief TIM1 Initialization Function
 329:Src/main.c    ****   * @param None
 330:Src/main.c    ****   * @retval None
 331:Src/main.c    ****   */
 332:Src/main.c    **** static void MX_TIM1_Init(void)
 333:Src/main.c    **** {
 334:Src/main.c    **** 
 335:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 336:Src/main.c    **** 
 337:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 338:Src/main.c    **** 
 339:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 340:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 341:Src/main.c    **** 
 342:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 343:Src/main.c    **** 
 344:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 345:Src/main.c    ****   htim1.Instance = TIM1;
 346:Src/main.c    ****   htim1.Init.Prescaler = 0;
 347:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 348:Src/main.c    ****   htim1.Init.Period = 0;
 349:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 350:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 351:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 352:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 353:Src/main.c    ****   {
 354:Src/main.c    ****     Error_Handler();
 355:Src/main.c    ****   }
 356:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 357:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 358:Src/main.c    ****   {
 359:Src/main.c    ****     Error_Handler();
 360:Src/main.c    ****   }
 361:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 362:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 363:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 364:Src/main.c    ****   {
 365:Src/main.c    ****     Error_Handler();
 366:Src/main.c    ****   }
 367:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 370:Src/main.c    **** 
 371:Src/main.c    **** }
 372:Src/main.c    **** 
 373:Src/main.c    **** /**
 374:Src/main.c    ****   * @brief GPIO Initialization Function
 375:Src/main.c    ****   * @param None
ARM GAS  /tmp/ccaWamBb.s 			page 8


 376:Src/main.c    ****   * @retval None
 377:Src/main.c    ****   */
 378:Src/main.c    **** static void MX_GPIO_Init(void)
 379:Src/main.c    **** {
  26              		.loc 1 379 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 380:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 380 3 view .LVU1
  40              		.loc 1 380 20 is_stmt 0 view .LVU2
  41 0004 0822     		movs	r2, #8
  42 0006 0021     		movs	r1, #0
  43 0008 06A8     		add	r0, sp, #24
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 381:Src/main.c    **** 
 382:Src/main.c    ****   /* GPIO Ports Clock Enable */
 383:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  46              		.loc 1 383 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 383 3 view .LVU4
  49              		.loc 1 383 3 view .LVU5
  50 000e 184B     		ldr	r3, .L2
  51 0010 5969     		ldr	r1, [r3, #20]
  52 0012 8020     		movs	r0, #128
  53 0014 C002     		lsls	r0, r0, #11
  54 0016 0143     		orrs	r1, r0
  55 0018 5961     		str	r1, [r3, #20]
  56              		.loc 1 383 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0240     		ands	r2, r0
  59 001e 0192     		str	r2, [sp, #4]
  60              		.loc 1 383 3 view .LVU7
  61 0020 019A     		ldr	r2, [sp, #4]
  62              	.LBE2:
  63              		.loc 1 383 3 view .LVU8
 384:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 384 3 view .LVU9
  65              	.LBB3:
  66              		.loc 1 384 3 view .LVU10
  67              		.loc 1 384 3 view .LVU11
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 8902     		lsls	r1, r1, #10
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 384 3 view .LVU12
ARM GAS  /tmp/ccaWamBb.s 			page 9


  74 002c 5B69     		ldr	r3, [r3, #20]
  75 002e 0B40     		ands	r3, r1
  76 0030 0293     		str	r3, [sp, #8]
  77              		.loc 1 384 3 view .LVU13
  78 0032 029B     		ldr	r3, [sp, #8]
  79              	.LBE3:
  80              		.loc 1 384 3 view .LVU14
 385:Src/main.c    **** 
 386:Src/main.c    **** /*
 387:Src/main.c    ****   //Configure GPIO pin Output Level 
 388:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, A_Pin|B_Pin|C_Pin|D_Pin, GPIO_PIN_RESET);
 389:Src/main.c    **** 
 390:Src/main.c    ****   //Configure GPIO pins : A_Pin B_Pin C_Pin D_Pin 
 391:Src/main.c    ****   GPIO_InitStruct.Pin = A_Pin|B_Pin|C_Pin|D_Pin;
 392:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 393:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 394:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 395:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 396:Src/main.c    ****   */
 397:Src/main.c    **** 
 398:Src/main.c    ****   //Configure GPIO pin : Mode_Pin 
 399:Src/main.c    ****   GPIO_InitStruct.Pin = Mode_Pin;
  81              		.loc 1 399 3 view .LVU15
  82              		.loc 1 399 23 is_stmt 0 view .LVU16
  83 0034 8023     		movs	r3, #128
  84 0036 5B00     		lsls	r3, r3, #1
  85 0038 0393     		str	r3, [sp, #12]
 400:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  86              		.loc 1 400 3 is_stmt 1 view .LVU17
  87              		.loc 1 400 24 is_stmt 0 view .LVU18
  88 003a 0E4D     		ldr	r5, .L2+4
  89 003c 0495     		str	r5, [sp, #16]
 401:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
  90              		.loc 1 401 3 is_stmt 1 view .LVU19
  91              		.loc 1 401 24 is_stmt 0 view .LVU20
  92 003e 0124     		movs	r4, #1
  93 0040 0594     		str	r4, [sp, #20]
 402:Src/main.c    ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
  94              		.loc 1 402 3 is_stmt 1 view .LVU21
  95 0042 03A9     		add	r1, sp, #12
  96 0044 0C48     		ldr	r0, .L2+8
  97 0046 FFF7FEFF 		bl	HAL_GPIO_Init
  98              	.LVL1:
 403:Src/main.c    **** 
 404:Src/main.c    ****   //Configure GPIO pins : Hour_Pin Minute_Pin 
 405:Src/main.c    ****   GPIO_InitStruct.Pin = Hour_Pin|Minute_Pin;
  99              		.loc 1 405 3 view .LVU22
 100              		.loc 1 405 23 is_stmt 0 view .LVU23
 101 004a 6023     		movs	r3, #96
 102 004c 0393     		str	r3, [sp, #12]
 406:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 103              		.loc 1 406 3 is_stmt 1 view .LVU24
 104              		.loc 1 406 24 is_stmt 0 view .LVU25
 105 004e 0495     		str	r5, [sp, #16]
 407:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 106              		.loc 1 407 3 is_stmt 1 view .LVU26
 107              		.loc 1 407 24 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccaWamBb.s 			page 10


 108 0050 0594     		str	r4, [sp, #20]
 408:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 408 3 is_stmt 1 view .LVU28
 110 0052 9020     		movs	r0, #144
 111 0054 03A9     		add	r1, sp, #12
 112 0056 C005     		lsls	r0, r0, #23
 113 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 114              	.LVL2:
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* EXTI interrupt init*/
 411:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 115              		.loc 1 411 3 view .LVU29
 116 005c 0022     		movs	r2, #0
 117 005e 0021     		movs	r1, #0
 118 0060 0720     		movs	r0, #7
 119 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 120              	.LVL3:
 412:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 121              		.loc 1 412 3 view .LVU30
 122 0066 0720     		movs	r0, #7
 123 0068 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 124              	.LVL4:
 413:Src/main.c    **** 
 414:Src/main.c    **** }
 125              		.loc 1 414 1 is_stmt 0 view .LVU31
 126 006c 09B0     		add	sp, sp, #36
 127              		@ sp needed
 128 006e 30BD     		pop	{r4, r5, pc}
 129              	.L3:
 130              		.align	2
 131              	.L2:
 132 0070 00100240 		.word	1073876992
 133 0074 00002110 		.word	270598144
 134 0078 00040048 		.word	1207960576
 135              		.cfi_endproc
 136              	.LFE58:
 138              		.section	.text.MX_RTC_Init,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.code	16
 142              		.thumb_func
 143              		.fpu softvfp
 145              	MX_RTC_Init:
 146              	.LFB56:
 299:Src/main.c    **** 
 147              		.loc 1 299 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 10B5     		push	{r4, lr}
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 310:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 156              		.loc 1 310 3 view .LVU33
 310:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
ARM GAS  /tmp/ccaWamBb.s 			page 11


 157              		.loc 1 310 17 is_stmt 0 view .LVU34
 158 0002 0848     		ldr	r0, .L5
 159 0004 084B     		ldr	r3, .L5+4
 160 0006 0360     		str	r3, [r0]
 311:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 161              		.loc 1 311 3 is_stmt 1 view .LVU35
 311:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 162              		.loc 1 311 24 is_stmt 0 view .LVU36
 163 0008 4023     		movs	r3, #64
 164 000a 4360     		str	r3, [r0, #4]
 312:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 165              		.loc 1 312 3 is_stmt 1 view .LVU37
 312:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 166              		.loc 1 312 26 is_stmt 0 view .LVU38
 167 000c 3F33     		adds	r3, r3, #63
 168 000e 8360     		str	r3, [r0, #8]
 313:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 169              		.loc 1 313 3 is_stmt 1 view .LVU39
 313:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 170              		.loc 1 313 25 is_stmt 0 view .LVU40
 171 0010 8033     		adds	r3, r3, #128
 172 0012 C360     		str	r3, [r0, #12]
 314:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 173              		.loc 1 314 3 is_stmt 1 view .LVU41
 314:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 174              		.loc 1 314 20 is_stmt 0 view .LVU42
 175 0014 0023     		movs	r3, #0
 176 0016 0361     		str	r3, [r0, #16]
 315:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 177              		.loc 1 315 3 is_stmt 1 view .LVU43
 315:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 178              		.loc 1 315 28 is_stmt 0 view .LVU44
 179 0018 4361     		str	r3, [r0, #20]
 316:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 180              		.loc 1 316 3 is_stmt 1 view .LVU45
 316:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 181              		.loc 1 316 24 is_stmt 0 view .LVU46
 182 001a 8361     		str	r3, [r0, #24]
 317:Src/main.c    ****   {
 183              		.loc 1 317 3 is_stmt 1 view .LVU47
 317:Src/main.c    ****   {
 184              		.loc 1 317 7 is_stmt 0 view .LVU48
 185 001c FFF7FEFF 		bl	HAL_RTC_Init
 186              	.LVL5:
 325:Src/main.c    **** 
 187              		.loc 1 325 1 view .LVU49
 188              		@ sp needed
 189 0020 10BD     		pop	{r4, pc}
 190              	.L6:
 191 0022 C046     		.align	2
 192              	.L5:
 193 0024 00000000 		.word	hrtc
 194 0028 00280040 		.word	1073752064
 195              		.cfi_endproc
 196              	.LFE56:
 198              		.section	.text.MX_TIM1_Init,"ax",%progbits
 199              		.align	1
ARM GAS  /tmp/ccaWamBb.s 			page 12


 200              		.syntax unified
 201              		.code	16
 202              		.thumb_func
 203              		.fpu softvfp
 205              	MX_TIM1_Init:
 206              	.LFB57:
 333:Src/main.c    **** 
 207              		.loc 1 333 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 24
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 30B5     		push	{r4, r5, lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 12
 214              		.cfi_offset 4, -12
 215              		.cfi_offset 5, -8
 216              		.cfi_offset 14, -4
 217 0002 87B0     		sub	sp, sp, #28
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 40
 339:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 220              		.loc 1 339 3 view .LVU51
 339:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 221              		.loc 1 339 26 is_stmt 0 view .LVU52
 222 0004 1022     		movs	r2, #16
 223 0006 0021     		movs	r1, #0
 224 0008 02A8     		add	r0, sp, #8
 225 000a FFF7FEFF 		bl	memset
 226              	.LVL6:
 340:Src/main.c    **** 
 227              		.loc 1 340 3 is_stmt 1 view .LVU53
 340:Src/main.c    **** 
 228              		.loc 1 340 27 is_stmt 0 view .LVU54
 229 000e 0822     		movs	r2, #8
 230 0010 0021     		movs	r1, #0
 231 0012 6846     		mov	r0, sp
 232 0014 FFF7FEFF 		bl	memset
 233              	.LVL7:
 345:Src/main.c    ****   htim1.Init.Prescaler = 0;
 234              		.loc 1 345 3 is_stmt 1 view .LVU55
 345:Src/main.c    ****   htim1.Init.Prescaler = 0;
 235              		.loc 1 345 18 is_stmt 0 view .LVU56
 236 0018 0D4C     		ldr	r4, .L8
 237 001a 0E4B     		ldr	r3, .L8+4
 238 001c 2360     		str	r3, [r4]
 346:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 239              		.loc 1 346 3 is_stmt 1 view .LVU57
 346:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 240              		.loc 1 346 24 is_stmt 0 view .LVU58
 241 001e 0025     		movs	r5, #0
 242 0020 6560     		str	r5, [r4, #4]
 347:Src/main.c    ****   htim1.Init.Period = 0;
 243              		.loc 1 347 3 is_stmt 1 view .LVU59
 347:Src/main.c    ****   htim1.Init.Period = 0;
 244              		.loc 1 347 26 is_stmt 0 view .LVU60
 245 0022 A560     		str	r5, [r4, #8]
 348:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccaWamBb.s 			page 13


 246              		.loc 1 348 3 is_stmt 1 view .LVU61
 348:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 247              		.loc 1 348 21 is_stmt 0 view .LVU62
 248 0024 E560     		str	r5, [r4, #12]
 349:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 249              		.loc 1 349 3 is_stmt 1 view .LVU63
 349:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 250              		.loc 1 349 28 is_stmt 0 view .LVU64
 251 0026 2561     		str	r5, [r4, #16]
 350:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 252              		.loc 1 350 3 is_stmt 1 view .LVU65
 350:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 253              		.loc 1 350 32 is_stmt 0 view .LVU66
 254 0028 6561     		str	r5, [r4, #20]
 351:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 255              		.loc 1 351 3 is_stmt 1 view .LVU67
 351:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 256              		.loc 1 351 32 is_stmt 0 view .LVU68
 257 002a A561     		str	r5, [r4, #24]
 352:Src/main.c    ****   {
 258              		.loc 1 352 3 is_stmt 1 view .LVU69
 352:Src/main.c    ****   {
 259              		.loc 1 352 7 is_stmt 0 view .LVU70
 260 002c 2000     		movs	r0, r4
 261 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 262              	.LVL8:
 356:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 263              		.loc 1 356 3 is_stmt 1 view .LVU71
 356:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 264              		.loc 1 356 34 is_stmt 0 view .LVU72
 265 0032 8023     		movs	r3, #128
 266 0034 5B01     		lsls	r3, r3, #5
 267 0036 0293     		str	r3, [sp, #8]
 357:Src/main.c    ****   {
 268              		.loc 1 357 3 is_stmt 1 view .LVU73
 357:Src/main.c    ****   {
 269              		.loc 1 357 7 is_stmt 0 view .LVU74
 270 0038 02A9     		add	r1, sp, #8
 271 003a 2000     		movs	r0, r4
 272 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 273              	.LVL9:
 361:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 274              		.loc 1 361 3 is_stmt 1 view .LVU75
 361:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 275              		.loc 1 361 37 is_stmt 0 view .LVU76
 276 0040 0095     		str	r5, [sp]
 362:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 277              		.loc 1 362 3 is_stmt 1 view .LVU77
 362:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 278              		.loc 1 362 33 is_stmt 0 view .LVU78
 279 0042 0195     		str	r5, [sp, #4]
 363:Src/main.c    ****   {
 280              		.loc 1 363 3 is_stmt 1 view .LVU79
 363:Src/main.c    ****   {
 281              		.loc 1 363 7 is_stmt 0 view .LVU80
 282 0044 6946     		mov	r1, sp
 283 0046 2000     		movs	r0, r4
ARM GAS  /tmp/ccaWamBb.s 			page 14


 284 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 285              	.LVL10:
 371:Src/main.c    **** 
 286              		.loc 1 371 1 view .LVU81
 287 004c 07B0     		add	sp, sp, #28
 288              		@ sp needed
 289 004e 30BD     		pop	{r4, r5, pc}
 290              	.L9:
 291              		.align	2
 292              	.L8:
 293 0050 00000000 		.word	htim1
 294 0054 002C0140 		.word	1073818624
 295              		.cfi_endproc
 296              	.LFE57:
 298              		.section	.text.charlie,"ax",%progbits
 299              		.align	1
 300              		.global	charlie
 301              		.syntax unified
 302              		.code	16
 303              		.thumb_func
 304              		.fpu softvfp
 306              	charlie:
 307              	.LVL11:
 308              	.LFB46:
 309              		.file 2 "Src/charlie.c"
   1:Src/charlie.c **** //Charlieplexing Library
   2:Src/charlie.c **** //William Rickert March2020
   3:Src/charlie.c **** 
   4:Src/charlie.c **** extern int stopFlag;
   5:Src/charlie.c **** extern int minuteFlag;
   6:Src/charlie.c **** extern int hourFlag;
   7:Src/charlie.c **** 
   8:Src/charlie.c **** void charlie(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef 
   9:Src/charlie.c **** void hands(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  10:Src/charlie.c **** 
  11:Src/charlie.c **** // Function to get current time and determine what to display
  12:Src/charlie.c **** void clock(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  13:Src/charlie.c ****    RTC_TimeTypeDef RTCtime;
  14:Src/charlie.c ****    RTC_DateTypeDef RTCdate;
  15:Src/charlie.c ****    HAL_RTC_GetTime(&whatTime, &RTCtime, RTC_FORMAT_BIN);
  16:Src/charlie.c ****    HAL_RTC_GetDate(&whatTime, &RTCdate, RTC_FORMAT_BIN);
  17:Src/charlie.c **** 
  18:Src/charlie.c ****    int minutes = RTCtime.Minutes;
  19:Src/charlie.c ****    int hours = RTCtime.Hours;
  20:Src/charlie.c ****    int displayMin = 0;
  21:Src/charlie.c **** 
  22:Src/charlie.c ****    char buf[20];
  23:Src/charlie.c ****    sprintf(buf, "Current time is %d:%d\n",hours,minutes);
  24:Src/charlie.c ****    say(buf);
  25:Src/charlie.c **** 
  26:Src/charlie.c ****    if(minutes > 0 && minutes < 3)
  27:Src/charlie.c ****       displayMin = 12;
  28:Src/charlie.c ****    else if(minutes > 3 && minutes < 7)
  29:Src/charlie.c ****       displayMin = 1;
  30:Src/charlie.c ****    else if(minutes > 7 && minutes < 12)
  31:Src/charlie.c ****       displayMin = 2;
  32:Src/charlie.c ****    else if(minutes > 12 && minutes < 17)
ARM GAS  /tmp/ccaWamBb.s 			page 15


  33:Src/charlie.c ****       displayMin = 3;
  34:Src/charlie.c ****    else if(minutes > 17 && minutes < 22)
  35:Src/charlie.c ****       displayMin = 4;
  36:Src/charlie.c ****    else if(minutes > 22 && minutes < 27)
  37:Src/charlie.c ****       displayMin = 5;
  38:Src/charlie.c ****    else if(minutes > 27 && minutes < 32)
  39:Src/charlie.c ****       displayMin = 6;
  40:Src/charlie.c ****    else if(minutes > 32 && minutes < 37)
  41:Src/charlie.c ****       displayMin = 7;
  42:Src/charlie.c ****    else if(minutes > 37 && minutes < 42)
  43:Src/charlie.c ****       displayMin = 8;
  44:Src/charlie.c ****    else if(minutes > 42 && minutes < 47)
  45:Src/charlie.c ****       displayMin = 9;
  46:Src/charlie.c ****    else if(minutes > 47 && minutes < 52)
  47:Src/charlie.c ****       displayMin = 10;
  48:Src/charlie.c ****    else if(minutes > 52 && minutes < 57)
  49:Src/charlie.c ****       displayMin = 11;
  50:Src/charlie.c ****    else if(minutes > 57 && minutes < 61)
  51:Src/charlie.c ****       displayMin = 12;
  52:Src/charlie.c **** 
  53:Src/charlie.c ****    hands(PinA, PinB, PinC, PinD, hours, displayMin);
  54:Src/charlie.c ****    
  55:Src/charlie.c **** }
  56:Src/charlie.c **** 
  57:Src/charlie.c **** // Function to display current time
  58:Src/charlie.c **** void hands(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  59:Src/charlie.c **** 
  60:Src/charlie.c **** //   say("in hands");
  61:Src/charlie.c ****    for(int i = 0; i < 100; i++){
  62:Src/charlie.c **** 
  63:Src/charlie.c ****       for(int j = 0; j < 10; j++){
  64:Src/charlie.c ****  //     say("first\n");
  65:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, hours);
  66:Src/charlie.c ****          HAL_Delay(100);
  67:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
  68:Src/charlie.c ****             return;
  69:Src/charlie.c ****       }
  70:Src/charlie.c ****       for(int k = 0; k < 500; k++){
  71:Src/charlie.c ****  //     say("second\n");
  72:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, hours);
  73:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, minutes);
  74:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
  75:Src/charlie.c ****             return;
  76:Src/charlie.c ****       }
  77:Src/charlie.c ****    }
  78:Src/charlie.c **** }
  79:Src/charlie.c **** 
  80:Src/charlie.c **** void dance(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  81:Src/charlie.c ****    // Off
  82:Src/charlie.c ****    if(mambo == 0){
  83:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
  84:Src/charlie.c ****    }
  85:Src/charlie.c **** 
  86:Src/charlie.c ****    // Slow Spin
  87:Src/charlie.c ****    if(mambo == 1){
  88:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
  89:Src/charlie.c ****        if(stopFlag == 1)
ARM GAS  /tmp/ccaWamBb.s 			page 16


  90:Src/charlie.c ****          return;
  91:Src/charlie.c ****        HAL_Delay(1000);
  92:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
  93:Src/charlie.c ****        if(stopFlag == 1)
  94:Src/charlie.c ****          return;
  95:Src/charlie.c ****        HAL_Delay(1000);
  96:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
  97:Src/charlie.c ****        if(stopFlag == 1)
  98:Src/charlie.c ****          return;
  99:Src/charlie.c ****        HAL_Delay(1000);
 100:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 101:Src/charlie.c ****        if(stopFlag == 1)
 102:Src/charlie.c ****          return;
 103:Src/charlie.c ****        HAL_Delay(1000);
 104:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 105:Src/charlie.c ****        if(stopFlag == 1)
 106:Src/charlie.c ****          return;
 107:Src/charlie.c ****        HAL_Delay(1000);
 108:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 109:Src/charlie.c ****        if(stopFlag == 1)
 110:Src/charlie.c ****          return;
 111:Src/charlie.c ****        HAL_Delay(1000);
 112:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 113:Src/charlie.c ****        if(stopFlag == 1)
 114:Src/charlie.c ****          return;
 115:Src/charlie.c ****        HAL_Delay(1000);
 116:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 117:Src/charlie.c ****        if(stopFlag == 1)
 118:Src/charlie.c ****          return;
 119:Src/charlie.c ****        HAL_Delay(1000);
 120:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 121:Src/charlie.c ****        if(stopFlag == 1)
 122:Src/charlie.c ****          return;
 123:Src/charlie.c ****        HAL_Delay(1000);
 124:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 125:Src/charlie.c ****        if(stopFlag == 1)
 126:Src/charlie.c ****          return;
 127:Src/charlie.c ****        HAL_Delay(1000);
 128:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 129:Src/charlie.c ****        if(stopFlag == 1)
 130:Src/charlie.c ****          return;
 131:Src/charlie.c ****        HAL_Delay(1000);
 132:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 133:Src/charlie.c ****        if(stopFlag == 1)
 134:Src/charlie.c ****          return;
 135:Src/charlie.c ****        HAL_Delay(1000);
 136:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 137:Src/charlie.c ****        if(stopFlag == 1)
 138:Src/charlie.c ****          return;
 139:Src/charlie.c ****        HAL_Delay(1000);
 140:Src/charlie.c ****    }
 141:Src/charlie.c **** 
 142:Src/charlie.c ****    // Fast Spin
 143:Src/charlie.c ****    if(mambo == 2){
 144:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 145:Src/charlie.c ****        if(stopFlag == 1)
 146:Src/charlie.c ****          return;
ARM GAS  /tmp/ccaWamBb.s 			page 17


 147:Src/charlie.c ****        HAL_Delay(500);
 148:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 149:Src/charlie.c ****        if(stopFlag == 1)
 150:Src/charlie.c ****          return;
 151:Src/charlie.c ****        HAL_Delay(500);
 152:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 153:Src/charlie.c ****        if(stopFlag == 1)
 154:Src/charlie.c ****          return;
 155:Src/charlie.c ****        HAL_Delay(500);
 156:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 157:Src/charlie.c ****        if(stopFlag == 1)
 158:Src/charlie.c ****          return;
 159:Src/charlie.c ****        HAL_Delay(500);
 160:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 161:Src/charlie.c ****        if(stopFlag == 1)
 162:Src/charlie.c ****          return;
 163:Src/charlie.c ****        HAL_Delay(500);
 164:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 165:Src/charlie.c ****        if(stopFlag == 1)
 166:Src/charlie.c ****          return;
 167:Src/charlie.c ****        HAL_Delay(500);
 168:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 169:Src/charlie.c ****        if(stopFlag == 1)
 170:Src/charlie.c ****          return;
 171:Src/charlie.c ****        HAL_Delay(500);
 172:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 173:Src/charlie.c ****        if(stopFlag == 1)
 174:Src/charlie.c ****          return;
 175:Src/charlie.c ****        HAL_Delay(500);
 176:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 177:Src/charlie.c ****        if(stopFlag == 1)
 178:Src/charlie.c ****          return;
 179:Src/charlie.c ****        HAL_Delay(500);
 180:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 181:Src/charlie.c ****        if(stopFlag == 1)
 182:Src/charlie.c ****          return;
 183:Src/charlie.c ****        HAL_Delay(500);
 184:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 185:Src/charlie.c ****        if(stopFlag == 1)
 186:Src/charlie.c ****          return;
 187:Src/charlie.c ****        HAL_Delay(500);
 188:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 189:Src/charlie.c ****        if(stopFlag == 1)
 190:Src/charlie.c ****          return;
 191:Src/charlie.c ****        HAL_Delay(500);
 192:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 193:Src/charlie.c ****        if(stopFlag == 1)
 194:Src/charlie.c ****          return;
 195:Src/charlie.c ****        HAL_Delay(500);
 196:Src/charlie.c ****    }
 197:Src/charlie.c **** 
 198:Src/charlie.c ****    // POV light up all lights
 199:Src/charlie.c ****    if(mambo == 3){
 200:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 201:Src/charlie.c ****       for(int i=0; i<10000; i++){
 202:Src/charlie.c ****          for(int j=1; j<=12; j++){
 203:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
ARM GAS  /tmp/ccaWamBb.s 			page 18


 204:Src/charlie.c ****        //      HAL_Delay(1);
 205:Src/charlie.c ****              if(stopFlag == 1)
 206:Src/charlie.c ****                return;
 207:Src/charlie.c ****             
 208:Src/charlie.c ****          } 
 209:Src/charlie.c ****       }
 210:Src/charlie.c ****    } 
 211:Src/charlie.c **** 
 212:Src/charlie.c ****    // Doubles
 213:Src/charlie.c ****    if(mambo == 4){
 214:Src/charlie.c ****       for(int i =1; i<=7; i++){
 215:Src/charlie.c ****          if(i == 1){
 216:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 217:Src/charlie.c ****             HAL_Delay(500);
 218:Src/charlie.c ****             if(stopFlag == 1)
 219:Src/charlie.c ****                return;
 220:Src/charlie.c ****          }
 221:Src/charlie.c ****          if(i == 2){
 222:Src/charlie.c ****             for(int j =0; j<10000; j++){
 223:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 224:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 1);
 225:Src/charlie.c ****                if(stopFlag == 1)
 226:Src/charlie.c ****                   return;
 227:Src/charlie.c ****             }
 228:Src/charlie.c ****             HAL_Delay(10);
 229:Src/charlie.c ****          }
 230:Src/charlie.c ****          if(i == 3){
 231:Src/charlie.c ****             for(int j =0; j<10000; j++){
 232:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 233:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 234:Src/charlie.c ****                if(stopFlag == 1)
 235:Src/charlie.c ****                   return;
 236:Src/charlie.c ****             }
 237:Src/charlie.c ****          }
 238:Src/charlie.c ****          if(i == 4){
 239:Src/charlie.c ****             for(int j =0; j<10000; j++){
 240:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 241:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 9);
 242:Src/charlie.c ****                if(stopFlag == 1)
 243:Src/charlie.c ****                   return;
 244:Src/charlie.c ****             }
 245:Src/charlie.c ****          }
 246:Src/charlie.c ****          if(i == 5){
 247:Src/charlie.c ****             for(int j =0; j<10000; j++){
 248:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 249:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 8);
 250:Src/charlie.c ****                if(stopFlag == 1)
 251:Src/charlie.c ****                   return;
 252:Src/charlie.c ****             }
 253:Src/charlie.c ****          }
 254:Src/charlie.c ****          if(i == 6){
 255:Src/charlie.c ****             for(int j =0; j<10000; j++){
 256:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 257:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 7);
 258:Src/charlie.c ****                if(stopFlag == 1)
 259:Src/charlie.c ****                   return;
 260:Src/charlie.c ****             }
ARM GAS  /tmp/ccaWamBb.s 			page 19


 261:Src/charlie.c ****          }
 262:Src/charlie.c ****          if(i == 7){
 263:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 264:Src/charlie.c ****             HAL_Delay(500);
 265:Src/charlie.c ****             if(stopFlag == 1)
 266:Src/charlie.c ****                return;
 267:Src/charlie.c **** 
 268:Src/charlie.c ****          }
 269:Src/charlie.c **** 
 270:Src/charlie.c ****       }
 271:Src/charlie.c ****       
 272:Src/charlie.c ****    }  
 273:Src/charlie.c **** 
 274:Src/charlie.c **** 
 275:Src/charlie.c **** }
 276:Src/charlie.c **** 
 277:Src/charlie.c **** void charlie(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef 
 310              		.loc 2 277 114 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 84, pretend = 16, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		.loc 2 277 114 is_stmt 0 view .LVU83
 315 0000 84B0     		sub	sp, sp, #16
 316              	.LCFI5:
 317              		.cfi_def_cfa_offset 16
 318 0002 70B5     		push	{r4, r5, r6, lr}
 319              	.LCFI6:
 320              		.cfi_def_cfa_offset 32
 321              		.cfi_offset 4, -32
 322              		.cfi_offset 5, -28
 323              		.cfi_offset 6, -24
 324              		.cfi_offset 14, -20
 325 0004 0490     		str	r0, [sp, #16]
 326 0006 0591     		str	r1, [sp, #20]
 327 0008 0692     		str	r2, [sp, #24]
 328 000a 0793     		str	r3, [sp, #28]
 329 000c 189C     		ldr	r4, [sp, #96]
 278:Src/charlie.c ****    if(pos == 0){
 330              		.loc 2 278 4 is_stmt 1 view .LVU84
 331              		.loc 2 278 6 is_stmt 0 view .LVU85
 332 000e 002C     		cmp	r4, #0
 333 0010 24D0     		beq	.L24
 334              	.L11:
 279:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 280:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 281:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 282:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 283:Src/charlie.c ****    }
 284:Src/charlie.c **** 
 285:Src/charlie.c **** 
 286:Src/charlie.c ****    // 12'oclock
 287:Src/charlie.c ****    // A = 1
 288:Src/charlie.c ****    // B = Z
 289:Src/charlie.c ****    // C = 0
 290:Src/charlie.c ****    // D = Z
 291:Src/charlie.c ****    if(pos == 12){
 335              		.loc 2 291 4 is_stmt 1 view .LVU86
ARM GAS  /tmp/ccaWamBb.s 			page 20


 336              		.loc 2 291 6 is_stmt 0 view .LVU87
 337 0012 0C2C     		cmp	r4, #12
 338 0014 35D0     		beq	.L25
 339              	.L12:
 292:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 293:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 294:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 295:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 296:Src/charlie.c **** 
 297:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 298:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 299:Src/charlie.c ****       }
 300:Src/charlie.c **** 
 301:Src/charlie.c ****    // 1'oclock
 302:Src/charlie.c ****    // A = 1
 303:Src/charlie.c ****    // B = Z
 304:Src/charlie.c ****    // C = 0
 305:Src/charlie.c ****    // D = Z
 306:Src/charlie.c ****    if(pos == 1){
 340              		.loc 2 306 4 is_stmt 1 view .LVU88
 341              		.loc 2 306 6 is_stmt 0 view .LVU89
 342 0016 012C     		cmp	r4, #1
 343 0018 50D0     		beq	.L26
 344              	.L13:
 307:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 308:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 309:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 310:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 311:Src/charlie.c **** 
 312:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 313:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 314:Src/charlie.c ****       }
 315:Src/charlie.c **** 
 316:Src/charlie.c **** 
 317:Src/charlie.c ****    // 2'oclock
 318:Src/charlie.c ****    // A = Z
 319:Src/charlie.c ****    // B = 1
 320:Src/charlie.c ****    // C = Z
 321:Src/charlie.c ****    // D = 0
 322:Src/charlie.c ****    if(pos == 2){
 345              		.loc 2 322 4 is_stmt 1 view .LVU90
 346              		.loc 2 322 6 is_stmt 0 view .LVU91
 347 001a 022C     		cmp	r4, #2
 348 001c 6BD0     		beq	.L27
 349              	.L14:
 323:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 324:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 325:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 326:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 327:Src/charlie.c **** 
 328:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 329:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 330:Src/charlie.c ****       }
 331:Src/charlie.c **** 
 332:Src/charlie.c ****    // 3'oclock
 333:Src/charlie.c ****    // A = Z
 334:Src/charlie.c ****    // B = 1
ARM GAS  /tmp/ccaWamBb.s 			page 21


 335:Src/charlie.c ****    // C = Z
 336:Src/charlie.c ****    // D = 0
 337:Src/charlie.c ****    if(pos == 3){
 350              		.loc 2 337 4 is_stmt 1 view .LVU92
 351              		.loc 2 337 6 is_stmt 0 view .LVU93
 352 001e 032C     		cmp	r4, #3
 353 0020 00D1     		bne	.LCB264
 354 0022 85E0     		b	.L28	@long jump
 355              	.LCB264:
 356              	.L15:
 338:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 339:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 340:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 341:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 342:Src/charlie.c **** 
 343:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 344:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 345:Src/charlie.c ****       }
 346:Src/charlie.c **** 
 347:Src/charlie.c **** 
 348:Src/charlie.c ****    // 4'oclock
 349:Src/charlie.c ****    // A = 1
 350:Src/charlie.c ****    // B = Z
 351:Src/charlie.c ****    // C = Z
 352:Src/charlie.c ****    // D = 0
 353:Src/charlie.c ****    if(pos == 4){
 357              		.loc 2 353 4 is_stmt 1 view .LVU94
 358              		.loc 2 353 6 is_stmt 0 view .LVU95
 359 0024 042C     		cmp	r4, #4
 360 0026 00D1     		bne	.LCB268
 361 0028 9FE0     		b	.L29	@long jump
 362              	.LCB268:
 363              	.L16:
 354:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 355:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 356:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 357:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 358:Src/charlie.c **** 
 359:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 360:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 361:Src/charlie.c ****       }
 362:Src/charlie.c **** 
 363:Src/charlie.c ****    // 5'oclock
 364:Src/charlie.c ****    // A = 0
 365:Src/charlie.c ****    // B = Z
 366:Src/charlie.c ****    // C = Z
 367:Src/charlie.c ****    // D = 1
 368:Src/charlie.c ****    if(pos == 5){
 364              		.loc 2 368 4 is_stmt 1 view .LVU96
 365              		.loc 2 368 6 is_stmt 0 view .LVU97
 366 002a 052C     		cmp	r4, #5
 367 002c 00D1     		bne	.LCB272
 368 002e B9E0     		b	.L30	@long jump
 369              	.LCB272:
 370              	.L17:
 369:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 370:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
ARM GAS  /tmp/ccaWamBb.s 			page 22


 371:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 372:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 373:Src/charlie.c **** 
 374:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 375:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 376:Src/charlie.c ****       }
 377:Src/charlie.c **** 
 378:Src/charlie.c ****    // 6'oclock
 379:Src/charlie.c ****    if(pos == 6){
 371              		.loc 2 379 4 is_stmt 1 view .LVU98
 372              		.loc 2 379 6 is_stmt 0 view .LVU99
 373 0030 062C     		cmp	r4, #6
 374 0032 00D1     		bne	.LCB276
 375 0034 D3E0     		b	.L31	@long jump
 376              	.LCB276:
 377              	.L18:
 380:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 381:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 382:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 383:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 384:Src/charlie.c **** 
 385:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 386:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 387:Src/charlie.c ****       }
 388:Src/charlie.c **** 
 389:Src/charlie.c ****    // 7'oclock
 390:Src/charlie.c ****    if(pos == 7){
 378              		.loc 2 390 4 is_stmt 1 view .LVU100
 379              		.loc 2 390 6 is_stmt 0 view .LVU101
 380 0036 072C     		cmp	r4, #7
 381 0038 00D1     		bne	.LCB280
 382 003a EDE0     		b	.L32	@long jump
 383              	.LCB280:
 384              	.L19:
 391:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 392:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 393:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 394:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 395:Src/charlie.c ****       
 396:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 397:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 398:Src/charlie.c ****       }
 399:Src/charlie.c **** 
 400:Src/charlie.c ****    // 8'oclock
 401:Src/charlie.c ****    // A = Z
 402:Src/charlie.c ****    // B = 1
 403:Src/charlie.c ****    // C = 0
 404:Src/charlie.c ****    // D = Z
 405:Src/charlie.c ****    if(pos == 8){
 385              		.loc 2 405 4 is_stmt 1 view .LVU102
 386              		.loc 2 405 6 is_stmt 0 view .LVU103
 387 003c 082C     		cmp	r4, #8
 388 003e 00D1     		bne	.LCB284
 389 0040 07E1     		b	.L33	@long jump
 390              	.LCB284:
 391              	.L20:
 406:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
ARM GAS  /tmp/ccaWamBb.s 			page 23


 407:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 408:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 409:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 410:Src/charlie.c **** 
 411:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 412:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 413:Src/charlie.c ****       }
 414:Src/charlie.c **** 
 415:Src/charlie.c ****    // 9'oclock
 416:Src/charlie.c ****    // A = Z
 417:Src/charlie.c ****    // B = 1
 418:Src/charlie.c ****    // C = 0
 419:Src/charlie.c ****    // D = Z
 420:Src/charlie.c ****    if(pos == 9){
 392              		.loc 2 420 4 is_stmt 1 view .LVU104
 393              		.loc 2 420 6 is_stmt 0 view .LVU105
 394 0042 092C     		cmp	r4, #9
 395 0044 00D1     		bne	.LCB288
 396 0046 21E1     		b	.L34	@long jump
 397              	.LCB288:
 398              	.L21:
 421:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 422:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 423:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 424:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 425:Src/charlie.c **** 
 426:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 427:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 428:Src/charlie.c ****       }
 429:Src/charlie.c **** 
 430:Src/charlie.c ****    // 10'oclock
 431:Src/charlie.c ****    // A = Z
 432:Src/charlie.c ****    // B = Z
 433:Src/charlie.c ****    // C = 0
 434:Src/charlie.c ****    // D = 1
 435:Src/charlie.c ****    if(pos == 10){
 399              		.loc 2 435 4 is_stmt 1 view .LVU106
 400              		.loc 2 435 6 is_stmt 0 view .LVU107
 401 0048 0A2C     		cmp	r4, #10
 402 004a 00D1     		bne	.LCB292
 403 004c 3BE1     		b	.L35	@long jump
 404              	.LCB292:
 405              	.L22:
 436:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 437:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 438:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 439:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 440:Src/charlie.c **** 
 441:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 442:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 443:Src/charlie.c ****       }
 444:Src/charlie.c ****    
 445:Src/charlie.c ****    // 11'oclock
 446:Src/charlie.c ****    // A = Z
 447:Src/charlie.c ****    // B = Z
 448:Src/charlie.c ****    // C = 1
 449:Src/charlie.c ****    // D = 0
ARM GAS  /tmp/ccaWamBb.s 			page 24


 450:Src/charlie.c ****    if(pos == 11){
 406              		.loc 2 450 4 is_stmt 1 view .LVU108
 407              		.loc 2 450 6 is_stmt 0 view .LVU109
 408 004e 0B2C     		cmp	r4, #11
 409 0050 00D1     		bne	.LCB296
 410 0052 55E1     		b	.L36	@long jump
 411              	.LCB296:
 412              	.L10:
 451:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 452:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 453:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 454:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 455:Src/charlie.c ****             
 456:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 457:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 458:Src/charlie.c ****       }
 459:Src/charlie.c **** 
 460:Src/charlie.c **** }
 413              		.loc 2 460 1 view .LVU110
 414              		@ sp needed
 415 0054 70BC     		pop	{r4, r5, r6}
 416 0056 08BC     		pop	{r3}
 417 0058 04B0     		add	sp, sp, #16
 418 005a 1847     		bx	r3
 419              	.L24:
 279:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 420              		.loc 2 279 7 is_stmt 1 view .LVU111
 421 005c 9025     		movs	r5, #144
 422 005e ED05     		lsls	r5, r5, #23
 423 0060 0121     		movs	r1, #1
 424 0062 2800     		movs	r0, r5
 425 0064 FFF7FEFF 		bl	HAL_GPIO_DeInit
 426              	.LVL12:
 280:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 427              		.loc 2 280 7 view .LVU112
 428 0068 0221     		movs	r1, #2
 429 006a 2800     		movs	r0, r5
 430 006c FFF7FEFF 		bl	HAL_GPIO_DeInit
 431              	.LVL13:
 281:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 432              		.loc 2 281 7 view .LVU113
 433 0070 0421     		movs	r1, #4
 434 0072 2800     		movs	r0, r5
 435 0074 FFF7FEFF 		bl	HAL_GPIO_DeInit
 436              	.LVL14:
 282:Src/charlie.c ****    }
 437              		.loc 2 282 7 view .LVU114
 438 0078 0821     		movs	r1, #8
 439 007a 2800     		movs	r0, r5
 440 007c FFF7FEFF 		bl	HAL_GPIO_DeInit
 441              	.LVL15:
 442 0080 C7E7     		b	.L11
 443              	.L25:
 292:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 444              		.loc 2 292 7 view .LVU115
 445 0082 9025     		movs	r5, #144
 446 0084 ED05     		lsls	r5, r5, #23
ARM GAS  /tmp/ccaWamBb.s 			page 25


 447 0086 04A9     		add	r1, sp, #16
 448 0088 2800     		movs	r0, r5
 449 008a FFF7FEFF 		bl	HAL_GPIO_Init
 450              	.LVL16:
 293:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 451              		.loc 2 293 7 view .LVU116
 452 008e 0EA9     		add	r1, sp, #56
 453 0090 2800     		movs	r0, r5
 454 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL17:
 294:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 456              		.loc 2 294 7 view .LVU117
 457 0096 0221     		movs	r1, #2
 458 0098 2800     		movs	r0, r5
 459 009a FFF7FEFF 		bl	HAL_GPIO_DeInit
 460              	.LVL18:
 295:Src/charlie.c **** 
 461              		.loc 2 295 7 view .LVU118
 462 009e 0821     		movs	r1, #8
 463 00a0 2800     		movs	r0, r5
 464 00a2 FFF7FEFF 		bl	HAL_GPIO_DeInit
 465              	.LVL19:
 297:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 466              		.loc 2 297 7 view .LVU119
 467 00a6 0122     		movs	r2, #1
 468 00a8 0121     		movs	r1, #1
 469 00aa 2800     		movs	r0, r5
 470 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 471              	.LVL20:
 298:Src/charlie.c ****       }
 472              		.loc 2 298 7 view .LVU120
 473 00b0 0022     		movs	r2, #0
 474 00b2 0421     		movs	r1, #4
 475 00b4 2800     		movs	r0, r5
 476 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 477              	.LVL21:
 478 00ba ACE7     		b	.L12
 479              	.L26:
 307:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 480              		.loc 2 307 7 view .LVU121
 481 00bc 9025     		movs	r5, #144
 482 00be ED05     		lsls	r5, r5, #23
 483 00c0 04A9     		add	r1, sp, #16
 484 00c2 2800     		movs	r0, r5
 485 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 486              	.LVL22:
 308:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 487              		.loc 2 308 7 view .LVU122
 488 00c8 0EA9     		add	r1, sp, #56
 489 00ca 2800     		movs	r0, r5
 490 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 491              	.LVL23:
 309:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 492              		.loc 2 309 7 view .LVU123
 493 00d0 0221     		movs	r1, #2
 494 00d2 2800     		movs	r0, r5
 495 00d4 FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/ccaWamBb.s 			page 26


 496              	.LVL24:
 310:Src/charlie.c **** 
 497              		.loc 2 310 7 view .LVU124
 498 00d8 0821     		movs	r1, #8
 499 00da 2800     		movs	r0, r5
 500 00dc FFF7FEFF 		bl	HAL_GPIO_DeInit
 501              	.LVL25:
 312:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 502              		.loc 2 312 7 view .LVU125
 503 00e0 0022     		movs	r2, #0
 504 00e2 0121     		movs	r1, #1
 505 00e4 2800     		movs	r0, r5
 506 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 507              	.LVL26:
 313:Src/charlie.c ****       }
 508              		.loc 2 313 7 view .LVU126
 509 00ea 0122     		movs	r2, #1
 510 00ec 0421     		movs	r1, #4
 511 00ee 2800     		movs	r0, r5
 512 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 513              	.LVL27:
 514 00f4 91E7     		b	.L13
 515              	.L27:
 323:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 516              		.loc 2 323 7 view .LVU127
 517 00f6 9025     		movs	r5, #144
 518 00f8 ED05     		lsls	r5, r5, #23
 519 00fa 09A9     		add	r1, sp, #36
 520 00fc 2800     		movs	r0, r5
 521 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 522              	.LVL28:
 324:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 523              		.loc 2 324 7 view .LVU128
 524 0102 13A9     		add	r1, sp, #76
 525 0104 2800     		movs	r0, r5
 526 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 527              	.LVL29:
 325:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 528              		.loc 2 325 7 view .LVU129
 529 010a 0121     		movs	r1, #1
 530 010c 2800     		movs	r0, r5
 531 010e FFF7FEFF 		bl	HAL_GPIO_DeInit
 532              	.LVL30:
 326:Src/charlie.c **** 
 533              		.loc 2 326 7 view .LVU130
 534 0112 0421     		movs	r1, #4
 535 0114 2800     		movs	r0, r5
 536 0116 FFF7FEFF 		bl	HAL_GPIO_DeInit
 537              	.LVL31:
 328:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 538              		.loc 2 328 7 view .LVU131
 539 011a 0122     		movs	r2, #1
 540 011c 0221     		movs	r1, #2
 541 011e 2800     		movs	r0, r5
 542 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 543              	.LVL32:
 329:Src/charlie.c ****       }
ARM GAS  /tmp/ccaWamBb.s 			page 27


 544              		.loc 2 329 7 view .LVU132
 545 0124 0022     		movs	r2, #0
 546 0126 0821     		movs	r1, #8
 547 0128 2800     		movs	r0, r5
 548 012a FFF7FEFF 		bl	HAL_GPIO_WritePin
 549              	.LVL33:
 550 012e 76E7     		b	.L14
 551              	.L28:
 338:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 552              		.loc 2 338 7 view .LVU133
 553 0130 9025     		movs	r5, #144
 554 0132 ED05     		lsls	r5, r5, #23
 555 0134 09A9     		add	r1, sp, #36
 556 0136 2800     		movs	r0, r5
 557 0138 FFF7FEFF 		bl	HAL_GPIO_Init
 558              	.LVL34:
 339:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 559              		.loc 2 339 7 view .LVU134
 560 013c 13A9     		add	r1, sp, #76
 561 013e 2800     		movs	r0, r5
 562 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 563              	.LVL35:
 340:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 564              		.loc 2 340 7 view .LVU135
 565 0144 0121     		movs	r1, #1
 566 0146 2800     		movs	r0, r5
 567 0148 FFF7FEFF 		bl	HAL_GPIO_DeInit
 568              	.LVL36:
 341:Src/charlie.c **** 
 569              		.loc 2 341 7 view .LVU136
 570 014c 0421     		movs	r1, #4
 571 014e 2800     		movs	r0, r5
 572 0150 FFF7FEFF 		bl	HAL_GPIO_DeInit
 573              	.LVL37:
 343:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 574              		.loc 2 343 7 view .LVU137
 575 0154 0022     		movs	r2, #0
 576 0156 0221     		movs	r1, #2
 577 0158 2800     		movs	r0, r5
 578 015a FFF7FEFF 		bl	HAL_GPIO_WritePin
 579              	.LVL38:
 344:Src/charlie.c ****       }
 580              		.loc 2 344 7 view .LVU138
 581 015e 0122     		movs	r2, #1
 582 0160 0821     		movs	r1, #8
 583 0162 2800     		movs	r0, r5
 584 0164 FFF7FEFF 		bl	HAL_GPIO_WritePin
 585              	.LVL39:
 586 0168 5CE7     		b	.L15
 587              	.L29:
 354:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 588              		.loc 2 354 7 view .LVU139
 589 016a 9025     		movs	r5, #144
 590 016c ED05     		lsls	r5, r5, #23
 591 016e 04A9     		add	r1, sp, #16
 592 0170 2800     		movs	r0, r5
 593 0172 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccaWamBb.s 			page 28


 594              	.LVL40:
 355:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 595              		.loc 2 355 7 view .LVU140
 596 0176 13A9     		add	r1, sp, #76
 597 0178 2800     		movs	r0, r5
 598 017a FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL41:
 356:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 600              		.loc 2 356 7 view .LVU141
 601 017e 0221     		movs	r1, #2
 602 0180 2800     		movs	r0, r5
 603 0182 FFF7FEFF 		bl	HAL_GPIO_DeInit
 604              	.LVL42:
 357:Src/charlie.c **** 
 605              		.loc 2 357 7 view .LVU142
 606 0186 0421     		movs	r1, #4
 607 0188 2800     		movs	r0, r5
 608 018a FFF7FEFF 		bl	HAL_GPIO_DeInit
 609              	.LVL43:
 359:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 610              		.loc 2 359 7 view .LVU143
 611 018e 0122     		movs	r2, #1
 612 0190 0121     		movs	r1, #1
 613 0192 2800     		movs	r0, r5
 614 0194 FFF7FEFF 		bl	HAL_GPIO_WritePin
 615              	.LVL44:
 360:Src/charlie.c ****       }
 616              		.loc 2 360 7 view .LVU144
 617 0198 0022     		movs	r2, #0
 618 019a 0821     		movs	r1, #8
 619 019c 2800     		movs	r0, r5
 620 019e FFF7FEFF 		bl	HAL_GPIO_WritePin
 621              	.LVL45:
 622 01a2 42E7     		b	.L16
 623              	.L30:
 369:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 624              		.loc 2 369 7 view .LVU145
 625 01a4 9025     		movs	r5, #144
 626 01a6 ED05     		lsls	r5, r5, #23
 627 01a8 04A9     		add	r1, sp, #16
 628 01aa 2800     		movs	r0, r5
 629 01ac FFF7FEFF 		bl	HAL_GPIO_Init
 630              	.LVL46:
 370:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 631              		.loc 2 370 7 view .LVU146
 632 01b0 13A9     		add	r1, sp, #76
 633 01b2 2800     		movs	r0, r5
 634 01b4 FFF7FEFF 		bl	HAL_GPIO_Init
 635              	.LVL47:
 371:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 636              		.loc 2 371 7 view .LVU147
 637 01b8 0221     		movs	r1, #2
 638 01ba 2800     		movs	r0, r5
 639 01bc FFF7FEFF 		bl	HAL_GPIO_DeInit
 640              	.LVL48:
 372:Src/charlie.c **** 
 641              		.loc 2 372 7 view .LVU148
ARM GAS  /tmp/ccaWamBb.s 			page 29


 642 01c0 0421     		movs	r1, #4
 643 01c2 2800     		movs	r0, r5
 644 01c4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 645              	.LVL49:
 374:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 646              		.loc 2 374 7 view .LVU149
 647 01c8 0022     		movs	r2, #0
 648 01ca 0121     		movs	r1, #1
 649 01cc 2800     		movs	r0, r5
 650 01ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 651              	.LVL50:
 375:Src/charlie.c ****       }
 652              		.loc 2 375 7 view .LVU150
 653 01d2 0122     		movs	r2, #1
 654 01d4 0821     		movs	r1, #8
 655 01d6 2800     		movs	r0, r5
 656 01d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 657              	.LVL51:
 658 01dc 28E7     		b	.L17
 659              	.L31:
 380:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 660              		.loc 2 380 7 view .LVU151
 661 01de 9025     		movs	r5, #144
 662 01e0 ED05     		lsls	r5, r5, #23
 663 01e2 04A9     		add	r1, sp, #16
 664 01e4 2800     		movs	r0, r5
 665 01e6 FFF7FEFF 		bl	HAL_GPIO_Init
 666              	.LVL52:
 381:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 667              		.loc 2 381 7 view .LVU152
 668 01ea 09A9     		add	r1, sp, #36
 669 01ec 2800     		movs	r0, r5
 670 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 671              	.LVL53:
 382:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 672              		.loc 2 382 7 view .LVU153
 673 01f2 0421     		movs	r1, #4
 674 01f4 2800     		movs	r0, r5
 675 01f6 FFF7FEFF 		bl	HAL_GPIO_DeInit
 676              	.LVL54:
 383:Src/charlie.c **** 
 677              		.loc 2 383 7 view .LVU154
 678 01fa 0821     		movs	r1, #8
 679 01fc 2800     		movs	r0, r5
 680 01fe FFF7FEFF 		bl	HAL_GPIO_DeInit
 681              	.LVL55:
 385:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 682              		.loc 2 385 7 view .LVU155
 683 0202 0122     		movs	r2, #1
 684 0204 0121     		movs	r1, #1
 685 0206 2800     		movs	r0, r5
 686 0208 FFF7FEFF 		bl	HAL_GPIO_WritePin
 687              	.LVL56:
 386:Src/charlie.c ****       }
 688              		.loc 2 386 7 view .LVU156
 689 020c 0022     		movs	r2, #0
 690 020e 0221     		movs	r1, #2
ARM GAS  /tmp/ccaWamBb.s 			page 30


 691 0210 2800     		movs	r0, r5
 692 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 693              	.LVL57:
 694 0216 0EE7     		b	.L18
 695              	.L32:
 391:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 696              		.loc 2 391 7 view .LVU157
 697 0218 9025     		movs	r5, #144
 698 021a ED05     		lsls	r5, r5, #23
 699 021c 04A9     		add	r1, sp, #16
 700 021e 2800     		movs	r0, r5
 701 0220 FFF7FEFF 		bl	HAL_GPIO_Init
 702              	.LVL58:
 392:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 703              		.loc 2 392 7 view .LVU158
 704 0224 09A9     		add	r1, sp, #36
 705 0226 2800     		movs	r0, r5
 706 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 707              	.LVL59:
 393:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 708              		.loc 2 393 7 view .LVU159
 709 022c 0421     		movs	r1, #4
 710 022e 2800     		movs	r0, r5
 711 0230 FFF7FEFF 		bl	HAL_GPIO_DeInit
 712              	.LVL60:
 394:Src/charlie.c ****       
 713              		.loc 2 394 7 view .LVU160
 714 0234 0821     		movs	r1, #8
 715 0236 2800     		movs	r0, r5
 716 0238 FFF7FEFF 		bl	HAL_GPIO_DeInit
 717              	.LVL61:
 396:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 718              		.loc 2 396 7 view .LVU161
 719 023c 0022     		movs	r2, #0
 720 023e 0121     		movs	r1, #1
 721 0240 2800     		movs	r0, r5
 722 0242 FFF7FEFF 		bl	HAL_GPIO_WritePin
 723              	.LVL62:
 397:Src/charlie.c ****       }
 724              		.loc 2 397 7 view .LVU162
 725 0246 0122     		movs	r2, #1
 726 0248 0221     		movs	r1, #2
 727 024a 2800     		movs	r0, r5
 728 024c FFF7FEFF 		bl	HAL_GPIO_WritePin
 729              	.LVL63:
 730 0250 F4E6     		b	.L19
 731              	.L33:
 406:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 732              		.loc 2 406 7 view .LVU163
 733 0252 9025     		movs	r5, #144
 734 0254 ED05     		lsls	r5, r5, #23
 735 0256 09A9     		add	r1, sp, #36
 736 0258 2800     		movs	r0, r5
 737 025a FFF7FEFF 		bl	HAL_GPIO_Init
 738              	.LVL64:
 407:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 739              		.loc 2 407 7 view .LVU164
ARM GAS  /tmp/ccaWamBb.s 			page 31


 740 025e 0EA9     		add	r1, sp, #56
 741 0260 2800     		movs	r0, r5
 742 0262 FFF7FEFF 		bl	HAL_GPIO_Init
 743              	.LVL65:
 408:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 744              		.loc 2 408 7 view .LVU165
 745 0266 0121     		movs	r1, #1
 746 0268 2800     		movs	r0, r5
 747 026a FFF7FEFF 		bl	HAL_GPIO_DeInit
 748              	.LVL66:
 409:Src/charlie.c **** 
 749              		.loc 2 409 7 view .LVU166
 750 026e 0821     		movs	r1, #8
 751 0270 2800     		movs	r0, r5
 752 0272 FFF7FEFF 		bl	HAL_GPIO_DeInit
 753              	.LVL67:
 411:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 754              		.loc 2 411 7 view .LVU167
 755 0276 0122     		movs	r2, #1
 756 0278 0221     		movs	r1, #2
 757 027a 2800     		movs	r0, r5
 758 027c FFF7FEFF 		bl	HAL_GPIO_WritePin
 759              	.LVL68:
 412:Src/charlie.c ****       }
 760              		.loc 2 412 7 view .LVU168
 761 0280 0022     		movs	r2, #0
 762 0282 0421     		movs	r1, #4
 763 0284 2800     		movs	r0, r5
 764 0286 FFF7FEFF 		bl	HAL_GPIO_WritePin
 765              	.LVL69:
 766 028a DAE6     		b	.L20
 767              	.L34:
 421:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 768              		.loc 2 421 7 view .LVU169
 769 028c 9025     		movs	r5, #144
 770 028e ED05     		lsls	r5, r5, #23
 771 0290 09A9     		add	r1, sp, #36
 772 0292 2800     		movs	r0, r5
 773 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 774              	.LVL70:
 422:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 775              		.loc 2 422 7 view .LVU170
 776 0298 0EA9     		add	r1, sp, #56
 777 029a 2800     		movs	r0, r5
 778 029c FFF7FEFF 		bl	HAL_GPIO_Init
 779              	.LVL71:
 423:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 780              		.loc 2 423 7 view .LVU171
 781 02a0 0121     		movs	r1, #1
 782 02a2 2800     		movs	r0, r5
 783 02a4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 784              	.LVL72:
 424:Src/charlie.c **** 
 785              		.loc 2 424 7 view .LVU172
 786 02a8 0821     		movs	r1, #8
 787 02aa 2800     		movs	r0, r5
 788 02ac FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/ccaWamBb.s 			page 32


 789              	.LVL73:
 426:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 790              		.loc 2 426 7 view .LVU173
 791 02b0 0022     		movs	r2, #0
 792 02b2 0221     		movs	r1, #2
 793 02b4 2800     		movs	r0, r5
 794 02b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 795              	.LVL74:
 427:Src/charlie.c ****       }
 796              		.loc 2 427 7 view .LVU174
 797 02ba 0122     		movs	r2, #1
 798 02bc 0421     		movs	r1, #4
 799 02be 2800     		movs	r0, r5
 800 02c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 801              	.LVL75:
 802 02c4 C0E6     		b	.L21
 803              	.L35:
 436:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 804              		.loc 2 436 7 view .LVU175
 805 02c6 9025     		movs	r5, #144
 806 02c8 ED05     		lsls	r5, r5, #23
 807 02ca 0EA9     		add	r1, sp, #56
 808 02cc 2800     		movs	r0, r5
 809 02ce FFF7FEFF 		bl	HAL_GPIO_Init
 810              	.LVL76:
 437:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 811              		.loc 2 437 7 view .LVU176
 812 02d2 13A9     		add	r1, sp, #76
 813 02d4 2800     		movs	r0, r5
 814 02d6 FFF7FEFF 		bl	HAL_GPIO_Init
 815              	.LVL77:
 438:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 816              		.loc 2 438 7 view .LVU177
 817 02da 0121     		movs	r1, #1
 818 02dc 2800     		movs	r0, r5
 819 02de FFF7FEFF 		bl	HAL_GPIO_DeInit
 820              	.LVL78:
 439:Src/charlie.c **** 
 821              		.loc 2 439 7 view .LVU178
 822 02e2 0221     		movs	r1, #2
 823 02e4 2800     		movs	r0, r5
 824 02e6 FFF7FEFF 		bl	HAL_GPIO_DeInit
 825              	.LVL79:
 441:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 826              		.loc 2 441 7 view .LVU179
 827 02ea 0122     		movs	r2, #1
 828 02ec 0421     		movs	r1, #4
 829 02ee 2800     		movs	r0, r5
 830 02f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 831              	.LVL80:
 442:Src/charlie.c ****       }
 832              		.loc 2 442 7 view .LVU180
 833 02f4 0022     		movs	r2, #0
 834 02f6 0821     		movs	r1, #8
 835 02f8 2800     		movs	r0, r5
 836 02fa FFF7FEFF 		bl	HAL_GPIO_WritePin
 837              	.LVL81:
ARM GAS  /tmp/ccaWamBb.s 			page 33


 838 02fe A6E6     		b	.L22
 839              	.L36:
 451:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 840              		.loc 2 451 7 view .LVU181
 841 0300 9024     		movs	r4, #144
 842 0302 E405     		lsls	r4, r4, #23
 843 0304 0EA9     		add	r1, sp, #56
 844 0306 2000     		movs	r0, r4
 845 0308 FFF7FEFF 		bl	HAL_GPIO_Init
 846              	.LVL82:
 452:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 847              		.loc 2 452 7 view .LVU182
 848 030c 13A9     		add	r1, sp, #76
 849 030e 2000     		movs	r0, r4
 850 0310 FFF7FEFF 		bl	HAL_GPIO_Init
 851              	.LVL83:
 453:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 852              		.loc 2 453 7 view .LVU183
 853 0314 0121     		movs	r1, #1
 854 0316 2000     		movs	r0, r4
 855 0318 FFF7FEFF 		bl	HAL_GPIO_DeInit
 856              	.LVL84:
 454:Src/charlie.c ****             
 857              		.loc 2 454 7 view .LVU184
 858 031c 0221     		movs	r1, #2
 859 031e 2000     		movs	r0, r4
 860 0320 FFF7FEFF 		bl	HAL_GPIO_DeInit
 861              	.LVL85:
 456:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 862              		.loc 2 456 7 view .LVU185
 863 0324 0022     		movs	r2, #0
 864 0326 0421     		movs	r1, #4
 865 0328 2000     		movs	r0, r4
 866 032a FFF7FEFF 		bl	HAL_GPIO_WritePin
 867              	.LVL86:
 457:Src/charlie.c ****       }
 868              		.loc 2 457 7 view .LVU186
 869 032e 0122     		movs	r2, #1
 870 0330 0821     		movs	r1, #8
 871 0332 2000     		movs	r0, r4
 872 0334 FFF7FEFF 		bl	HAL_GPIO_WritePin
 873              	.LVL87:
 874              		.loc 2 460 1 is_stmt 0 view .LVU187
 875 0338 8CE6     		b	.L10
 876              		.cfi_endproc
 877              	.LFE46:
 879              		.section	.text.hands,"ax",%progbits
 880              		.align	1
 881              		.global	hands
 882              		.syntax unified
 883              		.code	16
 884              		.thumb_func
 885              		.fpu softvfp
 887              	hands:
 888              	.LVL88:
 889              	.LFB44:
  58:Src/charlie.c **** 
ARM GAS  /tmp/ccaWamBb.s 			page 34


 890              		.loc 2 58 127 is_stmt 1 view -0
 891              		.cfi_startproc
 892              		@ args = 88, pretend = 16, frame = 16
 893              		@ frame_needed = 0, uses_anonymous_args = 0
  58:Src/charlie.c **** 
 894              		.loc 2 58 127 is_stmt 0 view .LVU189
 895 0000 84B0     		sub	sp, sp, #16
 896              	.LCFI7:
 897              		.cfi_def_cfa_offset 16
 898 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 899              	.LCFI8:
 900              		.cfi_def_cfa_offset 36
 901              		.cfi_offset 4, -36
 902              		.cfi_offset 5, -32
 903              		.cfi_offset 6, -28
 904              		.cfi_offset 7, -24
 905              		.cfi_offset 14, -20
 906 0004 DE46     		mov	lr, fp
 907 0006 5746     		mov	r7, r10
 908 0008 4E46     		mov	r6, r9
 909 000a 4546     		mov	r5, r8
 910 000c E0B5     		push	{r5, r6, r7, lr}
 911              	.LCFI9:
 912              		.cfi_def_cfa_offset 52
 913              		.cfi_offset 8, -52
 914              		.cfi_offset 9, -48
 915              		.cfi_offset 10, -44
 916              		.cfi_offset 11, -40
 917 000e 97B0     		sub	sp, sp, #92
 918              	.LCFI10:
 919              		.cfi_def_cfa_offset 144
 920 0010 2090     		str	r0, [sp, #128]
 921 0012 2191     		str	r1, [sp, #132]
 922 0014 2292     		str	r2, [sp, #136]
 923 0016 2393     		str	r3, [sp, #140]
 924 0018 349B     		ldr	r3, [sp, #208]
 925 001a 9A46     		mov	r10, r3
 926 001c 359B     		ldr	r3, [sp, #212]
 927 001e 9846     		mov	r8, r3
  61:Src/charlie.c **** 
 928              		.loc 2 61 4 is_stmt 1 view .LVU190
 929              	.LBB4:
  61:Src/charlie.c **** 
 930              		.loc 2 61 8 view .LVU191
 931              	.LVL89:
  61:Src/charlie.c **** 
 932              		.loc 2 61 12 is_stmt 0 view .LVU192
 933 0020 0023     		movs	r3, #0
 934 0022 1593     		str	r3, [sp, #84]
 935              	.LVL90:
 936              	.L38:
  61:Src/charlie.c **** 
 937              		.loc 2 61 19 is_stmt 1 discriminator 1 view .LVU193
  61:Src/charlie.c **** 
 938              		.loc 2 61 4 is_stmt 0 discriminator 1 view .LVU194
 939 0024 159B     		ldr	r3, [sp, #84]
 940 0026 632B     		cmp	r3, #99
ARM GAS  /tmp/ccaWamBb.s 			page 35


 941 0028 00DD     		ble	.LCB766
 942 002a 89E0     		b	.L37	@long jump
 943              	.LCB766:
 944              	.LBB5:
  63:Src/charlie.c ****  //     say("first\n");
 945              		.loc 2 63 15 view .LVU195
 946 002c 0024     		movs	r4, #0
 947 002e 5546     		mov	r5, r10
 948 0030 4646     		mov	r6, r8
 949 0032 00E0     		b	.L43
 950              	.LVL91:
 951              	.L46:
  63:Src/charlie.c ****  //     say("first\n");
 952              		.loc 2 63 30 is_stmt 1 discriminator 2 view .LVU196
  63:Src/charlie.c ****  //     say("first\n");
 953              		.loc 2 63 31 is_stmt 0 discriminator 2 view .LVU197
 954 0034 0134     		adds	r4, r4, #1
 955              	.LVL92:
 956              	.L43:
  63:Src/charlie.c ****  //     say("first\n");
 957              		.loc 2 63 22 is_stmt 1 discriminator 1 view .LVU198
  63:Src/charlie.c ****  //     say("first\n");
 958              		.loc 2 63 7 is_stmt 0 discriminator 1 view .LVU199
 959 0036 092C     		cmp	r4, #9
 960 0038 2CDC     		bgt	.L45
  65:Src/charlie.c ****          HAL_Delay(100);
 961              		.loc 2 65 10 is_stmt 1 view .LVU200
 962 003a 1095     		str	r5, [sp, #64]
 963 003c 2FA8     		add	r0, sp, #188
 964 003e 0BA9     		add	r1, sp, #44
 965 0040 0B00     		movs	r3, r1
 966 0042 0200     		movs	r2, r0
 967 0044 83CA     		ldmia	r2!, {r0, r1, r7}
 968 0046 83C3     		stmia	r3!, {r0, r1, r7}
 969 0048 03CA     		ldmia	r2!, {r0, r1}
 970 004a 03C3     		stmia	r3!, {r0, r1}
 971 004c 2AA8     		add	r0, sp, #168
 972 004e 06A9     		add	r1, sp, #24
 973 0050 0B00     		movs	r3, r1
 974 0052 0200     		movs	r2, r0
 975 0054 83CA     		ldmia	r2!, {r0, r1, r7}
 976 0056 83C3     		stmia	r3!, {r0, r1, r7}
 977 0058 03CA     		ldmia	r2!, {r0, r1}
 978 005a 03C3     		stmia	r3!, {r0, r1}
 979 005c 25A8     		add	r0, sp, #148
 980 005e 01A9     		add	r1, sp, #4
 981 0060 0B00     		movs	r3, r1
 982 0062 0200     		movs	r2, r0
 983 0064 83CA     		ldmia	r2!, {r0, r1, r7}
 984 0066 83C3     		stmia	r3!, {r0, r1, r7}
 985 0068 03CA     		ldmia	r2!, {r0, r1}
 986 006a 03C3     		stmia	r3!, {r0, r1}
 987 006c 249B     		ldr	r3, [sp, #144]
 988 006e 0093     		str	r3, [sp]
 989 0070 2098     		ldr	r0, [sp, #128]
 990 0072 2199     		ldr	r1, [sp, #132]
 991 0074 229A     		ldr	r2, [sp, #136]
ARM GAS  /tmp/ccaWamBb.s 			page 36


 992 0076 239B     		ldr	r3, [sp, #140]
 993 0078 FFF7FEFF 		bl	charlie
 994              	.LVL93:
  66:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
 995              		.loc 2 66 10 view .LVU201
 996 007c 6420     		movs	r0, #100
 997 007e FFF7FEFF 		bl	HAL_Delay
 998              	.LVL94:
  67:Src/charlie.c ****             return;
 999              		.loc 2 67 10 view .LVU202
  67:Src/charlie.c ****             return;
 1000              		.loc 2 67 22 is_stmt 0 view .LVU203
 1001 0082 364B     		ldr	r3, .L49
 1002 0084 1B68     		ldr	r3, [r3]
  67:Src/charlie.c ****             return;
 1003              		.loc 2 67 12 view .LVU204
 1004 0086 012B     		cmp	r3, #1
 1005 0088 5AD0     		beq	.L37
  67:Src/charlie.c ****             return;
 1006              		.loc 2 67 27 discriminator 1 view .LVU205
 1007 008a 012E     		cmp	r6, #1
 1008 008c 58D0     		beq	.L37
  67:Src/charlie.c ****             return;
 1009              		.loc 2 67 43 discriminator 2 view .LVU206
 1010 008e 012D     		cmp	r5, #1
 1011 0090 D0D1     		bne	.L46
 1012 0092 55E0     		b	.L37
 1013              	.L45:
 1014 0094 AA46     		mov	r10, r5
 1015 0096 B046     		mov	r8, r6
 1016              	.LBE5:
 1017              	.LBB6:
  70:Src/charlie.c ****  //     say("second\n");
 1018              		.loc 2 70 15 view .LVU207
 1019 0098 0023     		movs	r3, #0
 1020 009a 9946     		mov	r9, r3
 1021 009c 02E0     		b	.L41
 1022              	.LVL95:
 1023              	.L48:
  70:Src/charlie.c ****  //     say("second\n");
 1024              		.loc 2 70 31 is_stmt 1 discriminator 2 view .LVU208
  70:Src/charlie.c ****  //     say("second\n");
 1025              		.loc 2 70 32 is_stmt 0 discriminator 2 view .LVU209
 1026 009e 0123     		movs	r3, #1
 1027 00a0 9C46     		mov	ip, r3
 1028 00a2 E144     		add	r9, r9, ip
 1029              	.LVL96:
 1030              	.L41:
  70:Src/charlie.c ****  //     say("second\n");
 1031              		.loc 2 70 22 is_stmt 1 discriminator 1 view .LVU210
  70:Src/charlie.c ****  //     say("second\n");
 1032              		.loc 2 70 7 is_stmt 0 discriminator 1 view .LVU211
 1033 00a4 FA23     		movs	r3, #250
 1034 00a6 5B00     		lsls	r3, r3, #1
 1035 00a8 9945     		cmp	r9, r3
 1036 00aa 53DA     		bge	.L47
  72:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, minutes);
ARM GAS  /tmp/ccaWamBb.s 			page 37


 1037              		.loc 2 72 10 is_stmt 1 view .LVU212
 1038 00ac 5346     		mov	r3, r10
 1039 00ae 1093     		str	r3, [sp, #64]
 1040 00b0 2FAB     		add	r3, sp, #188
 1041 00b2 9B46     		mov	fp, r3
 1042 00b4 0BAB     		add	r3, sp, #44
 1043 00b6 1393     		str	r3, [sp, #76]
 1044 00b8 5A46     		mov	r2, fp
 1045 00ba 13CA     		ldmia	r2!, {r0, r1, r4}
 1046 00bc 13C3     		stmia	r3!, {r0, r1, r4}
 1047 00be 03CA     		ldmia	r2!, {r0, r1}
 1048 00c0 03C3     		stmia	r3!, {r0, r1}
 1049 00c2 2AAF     		add	r7, sp, #168
 1050 00c4 06AE     		add	r6, sp, #24
 1051 00c6 3300     		movs	r3, r6
 1052 00c8 3A00     		movs	r2, r7
 1053 00ca 13CA     		ldmia	r2!, {r0, r1, r4}
 1054 00cc 13C3     		stmia	r3!, {r0, r1, r4}
 1055 00ce 03CA     		ldmia	r2!, {r0, r1}
 1056 00d0 03C3     		stmia	r3!, {r0, r1}
 1057 00d2 25AD     		add	r5, sp, #148
 1058 00d4 01AB     		add	r3, sp, #4
 1059 00d6 1493     		str	r3, [sp, #80]
 1060 00d8 2A00     		movs	r2, r5
 1061 00da 13CA     		ldmia	r2!, {r0, r1, r4}
 1062 00dc 13C3     		stmia	r3!, {r0, r1, r4}
 1063 00de 03CA     		ldmia	r2!, {r0, r1}
 1064 00e0 03C3     		stmia	r3!, {r0, r1}
 1065 00e2 249A     		ldr	r2, [sp, #144]
 1066 00e4 0092     		str	r2, [sp]
 1067 00e6 2098     		ldr	r0, [sp, #128]
 1068 00e8 2199     		ldr	r1, [sp, #132]
 1069 00ea 229A     		ldr	r2, [sp, #136]
 1070 00ec 239B     		ldr	r3, [sp, #140]
 1071 00ee FFF7FEFF 		bl	charlie
 1072              	.LVL97:
  73:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
 1073              		.loc 2 73 10 view .LVU213
 1074 00f2 4246     		mov	r2, r8
 1075 00f4 1092     		str	r2, [sp, #64]
 1076 00f6 1399     		ldr	r1, [sp, #76]
 1077 00f8 0B00     		movs	r3, r1
 1078 00fa 5A46     		mov	r2, fp
 1079 00fc 13CA     		ldmia	r2!, {r0, r1, r4}
 1080 00fe 13C3     		stmia	r3!, {r0, r1, r4}
 1081 0100 03CA     		ldmia	r2!, {r0, r1}
 1082 0102 03C3     		stmia	r3!, {r0, r1}
 1083 0104 3300     		movs	r3, r6
 1084 0106 3A00     		movs	r2, r7
 1085 0108 13CA     		ldmia	r2!, {r0, r1, r4}
 1086 010a 13C3     		stmia	r3!, {r0, r1, r4}
 1087 010c 03CA     		ldmia	r2!, {r0, r1}
 1088 010e 03C3     		stmia	r3!, {r0, r1}
 1089 0110 149B     		ldr	r3, [sp, #80]
 1090 0112 2A00     		movs	r2, r5
 1091 0114 13CA     		ldmia	r2!, {r0, r1, r4}
 1092 0116 13C3     		stmia	r3!, {r0, r1, r4}
ARM GAS  /tmp/ccaWamBb.s 			page 38


 1093 0118 03CA     		ldmia	r2!, {r0, r1}
 1094 011a 03C3     		stmia	r3!, {r0, r1}
 1095 011c 249B     		ldr	r3, [sp, #144]
 1096 011e 0093     		str	r3, [sp]
 1097 0120 2098     		ldr	r0, [sp, #128]
 1098 0122 2199     		ldr	r1, [sp, #132]
 1099 0124 229A     		ldr	r2, [sp, #136]
 1100 0126 239B     		ldr	r3, [sp, #140]
 1101 0128 FFF7FEFF 		bl	charlie
 1102              	.LVL98:
  74:Src/charlie.c ****             return;
 1103              		.loc 2 74 10 view .LVU214
  74:Src/charlie.c ****             return;
 1104              		.loc 2 74 22 is_stmt 0 view .LVU215
 1105 012c 0B4B     		ldr	r3, .L49
 1106 012e 1B68     		ldr	r3, [r3]
  74:Src/charlie.c ****             return;
 1107              		.loc 2 74 12 view .LVU216
 1108 0130 012B     		cmp	r3, #1
 1109 0132 05D0     		beq	.L37
  74:Src/charlie.c ****             return;
 1110              		.loc 2 74 27 discriminator 1 view .LVU217
 1111 0134 4346     		mov	r3, r8
 1112 0136 012B     		cmp	r3, #1
 1113 0138 02D0     		beq	.L37
  74:Src/charlie.c ****             return;
 1114              		.loc 2 74 43 discriminator 2 view .LVU218
 1115 013a 5346     		mov	r3, r10
 1116 013c 012B     		cmp	r3, #1
 1117 013e AED1     		bne	.L48
 1118              	.LVL99:
 1119              	.L37:
  74:Src/charlie.c ****             return;
 1120              		.loc 2 74 43 discriminator 2 view .LVU219
 1121              	.LBE6:
 1122              	.LBE4:
  78:Src/charlie.c **** 
 1123              		.loc 2 78 1 view .LVU220
 1124 0140 17B0     		add	sp, sp, #92
 1125              		@ sp needed
 1126 0142 3CBC     		pop	{r2, r3, r4, r5}
 1127 0144 9046     		mov	r8, r2
 1128 0146 9946     		mov	r9, r3
 1129 0148 A246     		mov	r10, r4
 1130 014a AB46     		mov	fp, r5
 1131 014c F0BC     		pop	{r4, r5, r6, r7}
 1132 014e 08BC     		pop	{r3}
 1133 0150 04B0     		add	sp, sp, #16
 1134 0152 1847     		bx	r3
 1135              	.LVL100:
 1136              	.L47:
 1137              	.LBB7:
  61:Src/charlie.c **** 
 1138              		.loc 2 61 28 is_stmt 1 discriminator 2 view .LVU221
  61:Src/charlie.c **** 
 1139              		.loc 2 61 29 is_stmt 0 discriminator 2 view .LVU222
 1140 0154 159B     		ldr	r3, [sp, #84]
ARM GAS  /tmp/ccaWamBb.s 			page 39


 1141 0156 0133     		adds	r3, r3, #1
 1142 0158 1593     		str	r3, [sp, #84]
 1143              	.LVL101:
  61:Src/charlie.c **** 
 1144              		.loc 2 61 29 discriminator 2 view .LVU223
 1145 015a 63E7     		b	.L38
 1146              	.L50:
 1147              		.align	2
 1148              	.L49:
 1149 015c 00000000 		.word	.LANCHOR0
 1150              	.LBE7:
 1151              		.cfi_endproc
 1152              	.LFE44:
 1154              		.section	.text.dance,"ax",%progbits
 1155              		.align	1
 1156              		.global	dance
 1157              		.syntax unified
 1158              		.code	16
 1159              		.thumb_func
 1160              		.fpu softvfp
 1162              	dance:
 1163              	.LVL102:
 1164              	.LFB45:
  80:Src/charlie.c ****    // Off
 1165              		.loc 2 80 114 is_stmt 1 view -0
 1166              		.cfi_startproc
 1167              		@ args = 84, pretend = 16, frame = 8
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Src/charlie.c ****    // Off
 1169              		.loc 2 80 114 is_stmt 0 view .LVU225
 1170 0000 84B0     		sub	sp, sp, #16
 1171              	.LCFI11:
 1172              		.cfi_def_cfa_offset 16
 1173 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1174              	.LCFI12:
 1175              		.cfi_def_cfa_offset 36
 1176              		.cfi_offset 4, -36
 1177              		.cfi_offset 5, -32
 1178              		.cfi_offset 6, -28
 1179              		.cfi_offset 7, -24
 1180              		.cfi_offset 14, -20
 1181 0004 DE46     		mov	lr, fp
 1182 0006 5746     		mov	r7, r10
 1183 0008 4E46     		mov	r6, r9
 1184 000a 4546     		mov	r5, r8
 1185 000c E0B5     		push	{r5, r6, r7, lr}
 1186              	.LCFI13:
 1187              		.cfi_def_cfa_offset 52
 1188              		.cfi_offset 8, -52
 1189              		.cfi_offset 9, -48
 1190              		.cfi_offset 10, -44
 1191              		.cfi_offset 11, -40
 1192 000e 95B0     		sub	sp, sp, #84
 1193              	.LCFI14:
 1194              		.cfi_def_cfa_offset 136
 1195 0010 1E90     		str	r0, [sp, #120]
 1196 0012 1F91     		str	r1, [sp, #124]
ARM GAS  /tmp/ccaWamBb.s 			page 40


 1197 0014 2092     		str	r2, [sp, #128]
 1198 0016 2193     		str	r3, [sp, #132]
 1199 0018 329C     		ldr	r4, [sp, #200]
  82:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1200              		.loc 2 82 4 is_stmt 1 view .LVU226
  82:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1201              		.loc 2 82 6 is_stmt 0 view .LVU227
 1202 001a 002C     		cmp	r4, #0
 1203 001c 16D0     		beq	.L86
 1204              	.L52:
  87:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1205              		.loc 2 87 4 is_stmt 1 view .LVU228
  87:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1206              		.loc 2 87 6 is_stmt 0 view .LVU229
 1207 001e 012C     		cmp	r4, #1
 1208 0020 37D0     		beq	.L87
 1209              	.L53:
 143:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1210              		.loc 2 143 4 is_stmt 1 view .LVU230
 143:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 1211              		.loc 2 143 6 is_stmt 0 view .LVU231
 1212 0022 022C     		cmp	r4, #2
 1213 0024 00D1     		bne	.LCB1031
 1214 0026 69E2     		b	.L88	@long jump
 1215              	.LCB1031:
 1216              	.L55:
 199:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 1217              		.loc 2 199 4 is_stmt 1 view .LVU232
 199:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 1218              		.loc 2 199 6 is_stmt 0 view .LVU233
 1219 0028 032C     		cmp	r4, #3
 1220 002a 01D1     		bne	.LCB1035
 1221 002c 00F09EFC 		bl	.L89	@far jump
 1222              	.LCB1035:
 1223              	.L56:
 213:Src/charlie.c ****       for(int i =1; i<=7; i++){
 1224              		.loc 2 213 4 is_stmt 1 view .LVU234
 213:Src/charlie.c ****       for(int i =1; i<=7; i++){
 1225              		.loc 2 213 6 is_stmt 0 view .LVU235
 1226 0030 042C     		cmp	r4, #4
 1227 0032 01D1     		bne	.LCB1039
 1228 0034 00F001FF 		bl	.L90	@far jump
 1229              	.LCB1039:
 1230              	.LVL103:
 1231              	.L51:
 275:Src/charlie.c **** 
 1232              		.loc 2 275 1 view .LVU236
 1233 0038 15B0     		add	sp, sp, #84
 1234              		@ sp needed
 1235 003a 3CBC     		pop	{r2, r3, r4, r5}
 1236 003c 9046     		mov	r8, r2
 1237 003e 9946     		mov	r9, r3
 1238 0040 A246     		mov	r10, r4
 1239 0042 AB46     		mov	fp, r5
 1240 0044 F0BC     		pop	{r4, r5, r6, r7}
 1241 0046 08BC     		pop	{r3}
 1242 0048 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccaWamBb.s 			page 41


 1243 004a 1847     		bx	r3
 1244              	.LVL104:
 1245              	.L86:
  83:Src/charlie.c ****    }
 1246              		.loc 2 83 8 is_stmt 1 view .LVU237
 1247 004c 0023     		movs	r3, #0
 1248 004e 1093     		str	r3, [sp, #64]
 1249 0050 2DA8     		add	r0, sp, #180
 1250 0052 0BA9     		add	r1, sp, #44
 1251 0054 0B00     		movs	r3, r1
 1252 0056 0200     		movs	r2, r0
 1253 0058 23CA     		ldmia	r2!, {r0, r1, r5}
 1254 005a 23C3     		stmia	r3!, {r0, r1, r5}
 1255 005c 03CA     		ldmia	r2!, {r0, r1}
 1256 005e 03C3     		stmia	r3!, {r0, r1}
 1257 0060 28A8     		add	r0, sp, #160
 1258 0062 06A9     		add	r1, sp, #24
 1259 0064 0B00     		movs	r3, r1
 1260 0066 0200     		movs	r2, r0
 1261 0068 23CA     		ldmia	r2!, {r0, r1, r5}
 1262 006a 23C3     		stmia	r3!, {r0, r1, r5}
 1263 006c 03CA     		ldmia	r2!, {r0, r1}
 1264 006e 03C3     		stmia	r3!, {r0, r1}
 1265 0070 23A8     		add	r0, sp, #140
 1266 0072 01A9     		add	r1, sp, #4
 1267 0074 0B00     		movs	r3, r1
 1268 0076 0200     		movs	r2, r0
 1269 0078 23CA     		ldmia	r2!, {r0, r1, r5}
 1270 007a 23C3     		stmia	r3!, {r0, r1, r5}
 1271 007c 03CA     		ldmia	r2!, {r0, r1}
 1272 007e 03C3     		stmia	r3!, {r0, r1}
 1273 0080 229B     		ldr	r3, [sp, #136]
 1274 0082 0093     		str	r3, [sp]
 1275 0084 1E98     		ldr	r0, [sp, #120]
 1276 0086 1F99     		ldr	r1, [sp, #124]
 1277 0088 209A     		ldr	r2, [sp, #128]
 1278 008a 219B     		ldr	r3, [sp, #132]
 1279 008c FFF7FEFF 		bl	charlie
 1280              	.LVL105:
 1281 0090 C5E7     		b	.L52
 1282              	.L87:
  88:Src/charlie.c ****        if(stopFlag == 1)
 1283              		.loc 2 88 8 view .LVU238
 1284 0092 0023     		movs	r3, #0
 1285 0094 1093     		str	r3, [sp, #64]
 1286 0096 2DA8     		add	r0, sp, #180
 1287 0098 0BA9     		add	r1, sp, #44
 1288 009a 0B00     		movs	r3, r1
 1289 009c 0200     		movs	r2, r0
 1290 009e 23CA     		ldmia	r2!, {r0, r1, r5}
 1291 00a0 23C3     		stmia	r3!, {r0, r1, r5}
 1292 00a2 03CA     		ldmia	r2!, {r0, r1}
 1293 00a4 03C3     		stmia	r3!, {r0, r1}
 1294 00a6 28A8     		add	r0, sp, #160
 1295 00a8 06A9     		add	r1, sp, #24
 1296 00aa 0B00     		movs	r3, r1
 1297 00ac 0200     		movs	r2, r0
ARM GAS  /tmp/ccaWamBb.s 			page 42


 1298 00ae 23CA     		ldmia	r2!, {r0, r1, r5}
 1299 00b0 23C3     		stmia	r3!, {r0, r1, r5}
 1300 00b2 03CA     		ldmia	r2!, {r0, r1}
 1301 00b4 03C3     		stmia	r3!, {r0, r1}
 1302 00b6 23A8     		add	r0, sp, #140
 1303 00b8 01A9     		add	r1, sp, #4
 1304 00ba 0B00     		movs	r3, r1
 1305 00bc 0200     		movs	r2, r0
 1306 00be 23CA     		ldmia	r2!, {r0, r1, r5}
 1307 00c0 23C3     		stmia	r3!, {r0, r1, r5}
 1308 00c2 03CA     		ldmia	r2!, {r0, r1}
 1309 00c4 03C3     		stmia	r3!, {r0, r1}
 1310 00c6 229B     		ldr	r3, [sp, #136]
 1311 00c8 0093     		str	r3, [sp]
 1312 00ca 1E98     		ldr	r0, [sp, #120]
 1313 00cc 1F99     		ldr	r1, [sp, #124]
 1314 00ce 209A     		ldr	r2, [sp, #128]
 1315 00d0 219B     		ldr	r3, [sp, #132]
 1316 00d2 FFF7FEFF 		bl	charlie
 1317              	.LVL106:
  89:Src/charlie.c ****          return;
 1318              		.loc 2 89 8 view .LVU239
  89:Src/charlie.c ****          return;
 1319              		.loc 2 89 20 is_stmt 0 view .LVU240
 1320 00d6 EF4B     		ldr	r3, .L100
 1321 00d8 1B68     		ldr	r3, [r3]
  89:Src/charlie.c ****          return;
 1322              		.loc 2 89 10 view .LVU241
 1323 00da 012B     		cmp	r3, #1
 1324 00dc ACD0     		beq	.L51
  91:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 1325              		.loc 2 91 8 is_stmt 1 view .LVU242
 1326 00de FA20     		movs	r0, #250
 1327 00e0 8000     		lsls	r0, r0, #2
 1328 00e2 FFF7FEFF 		bl	HAL_Delay
 1329              	.LVL107:
  92:Src/charlie.c ****        if(stopFlag == 1)
 1330              		.loc 2 92 8 view .LVU243
 1331 00e6 0123     		movs	r3, #1
 1332 00e8 1093     		str	r3, [sp, #64]
 1333 00ea 2DA8     		add	r0, sp, #180
 1334 00ec 0BA9     		add	r1, sp, #44
 1335 00ee 0B00     		movs	r3, r1
 1336 00f0 0200     		movs	r2, r0
 1337 00f2 23CA     		ldmia	r2!, {r0, r1, r5}
 1338 00f4 23C3     		stmia	r3!, {r0, r1, r5}
 1339 00f6 03CA     		ldmia	r2!, {r0, r1}
 1340 00f8 03C3     		stmia	r3!, {r0, r1}
 1341 00fa 28A8     		add	r0, sp, #160
 1342 00fc 06A9     		add	r1, sp, #24
 1343 00fe 0B00     		movs	r3, r1
 1344 0100 0200     		movs	r2, r0
 1345 0102 23CA     		ldmia	r2!, {r0, r1, r5}
 1346 0104 23C3     		stmia	r3!, {r0, r1, r5}
 1347 0106 03CA     		ldmia	r2!, {r0, r1}
 1348 0108 03C3     		stmia	r3!, {r0, r1}
 1349 010a 23A8     		add	r0, sp, #140
ARM GAS  /tmp/ccaWamBb.s 			page 43


 1350 010c 01A9     		add	r1, sp, #4
 1351 010e 0B00     		movs	r3, r1
 1352 0110 0200     		movs	r2, r0
 1353 0112 23CA     		ldmia	r2!, {r0, r1, r5}
 1354 0114 23C3     		stmia	r3!, {r0, r1, r5}
 1355 0116 03CA     		ldmia	r2!, {r0, r1}
 1356 0118 03C3     		stmia	r3!, {r0, r1}
 1357 011a 229B     		ldr	r3, [sp, #136]
 1358 011c 0093     		str	r3, [sp]
 1359 011e 1E98     		ldr	r0, [sp, #120]
 1360 0120 1F99     		ldr	r1, [sp, #124]
 1361 0122 209A     		ldr	r2, [sp, #128]
 1362 0124 219B     		ldr	r3, [sp, #132]
 1363 0126 FFF7FEFF 		bl	charlie
 1364              	.LVL108:
  93:Src/charlie.c ****          return;
 1365              		.loc 2 93 8 view .LVU244
  93:Src/charlie.c ****          return;
 1366              		.loc 2 93 20 is_stmt 0 view .LVU245
 1367 012a DA4B     		ldr	r3, .L100
 1368 012c 1B68     		ldr	r3, [r3]
  93:Src/charlie.c ****          return;
 1369              		.loc 2 93 10 view .LVU246
 1370 012e 012B     		cmp	r3, #1
 1371 0130 00D1     		bne	.LCB1181
 1372 0132 81E7     		b	.L51	@long jump
 1373              	.LCB1181:
  95:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 1374              		.loc 2 95 8 is_stmt 1 view .LVU247
 1375 0134 FA20     		movs	r0, #250
 1376 0136 8000     		lsls	r0, r0, #2
 1377 0138 FFF7FEFF 		bl	HAL_Delay
 1378              	.LVL109:
  96:Src/charlie.c ****        if(stopFlag == 1)
 1379              		.loc 2 96 8 view .LVU248
 1380 013c 0223     		movs	r3, #2
 1381 013e 1093     		str	r3, [sp, #64]
 1382 0140 2DA8     		add	r0, sp, #180
 1383 0142 0BA9     		add	r1, sp, #44
 1384 0144 0B00     		movs	r3, r1
 1385 0146 0200     		movs	r2, r0
 1386 0148 23CA     		ldmia	r2!, {r0, r1, r5}
 1387 014a 23C3     		stmia	r3!, {r0, r1, r5}
 1388 014c 03CA     		ldmia	r2!, {r0, r1}
 1389 014e 03C3     		stmia	r3!, {r0, r1}
 1390 0150 28A8     		add	r0, sp, #160
 1391 0152 06A9     		add	r1, sp, #24
 1392 0154 0B00     		movs	r3, r1
 1393 0156 0200     		movs	r2, r0
 1394 0158 23CA     		ldmia	r2!, {r0, r1, r5}
 1395 015a 23C3     		stmia	r3!, {r0, r1, r5}
 1396 015c 03CA     		ldmia	r2!, {r0, r1}
 1397 015e 03C3     		stmia	r3!, {r0, r1}
 1398 0160 23A8     		add	r0, sp, #140
 1399 0162 01A9     		add	r1, sp, #4
 1400 0164 0B00     		movs	r3, r1
 1401 0166 0200     		movs	r2, r0
ARM GAS  /tmp/ccaWamBb.s 			page 44


 1402 0168 23CA     		ldmia	r2!, {r0, r1, r5}
 1403 016a 23C3     		stmia	r3!, {r0, r1, r5}
 1404 016c 03CA     		ldmia	r2!, {r0, r1}
 1405 016e 03C3     		stmia	r3!, {r0, r1}
 1406 0170 229B     		ldr	r3, [sp, #136]
 1407 0172 0093     		str	r3, [sp]
 1408 0174 1E98     		ldr	r0, [sp, #120]
 1409 0176 1F99     		ldr	r1, [sp, #124]
 1410 0178 209A     		ldr	r2, [sp, #128]
 1411 017a 219B     		ldr	r3, [sp, #132]
 1412 017c FFF7FEFF 		bl	charlie
 1413              	.LVL110:
  97:Src/charlie.c ****          return;
 1414              		.loc 2 97 8 view .LVU249
  97:Src/charlie.c ****          return;
 1415              		.loc 2 97 20 is_stmt 0 view .LVU250
 1416 0180 C44B     		ldr	r3, .L100
 1417 0182 1B68     		ldr	r3, [r3]
  97:Src/charlie.c ****          return;
 1418              		.loc 2 97 10 view .LVU251
 1419 0184 012B     		cmp	r3, #1
 1420 0186 00D1     		bne	.LCB1225
 1421 0188 56E7     		b	.L51	@long jump
 1422              	.LCB1225:
  99:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 1423              		.loc 2 99 8 is_stmt 1 view .LVU252
 1424 018a FA20     		movs	r0, #250
 1425 018c 8000     		lsls	r0, r0, #2
 1426 018e FFF7FEFF 		bl	HAL_Delay
 1427              	.LVL111:
 100:Src/charlie.c ****        if(stopFlag == 1)
 1428              		.loc 2 100 8 view .LVU253
 1429 0192 0323     		movs	r3, #3
 1430 0194 1093     		str	r3, [sp, #64]
 1431 0196 2DA8     		add	r0, sp, #180
 1432 0198 0BA9     		add	r1, sp, #44
 1433 019a 0B00     		movs	r3, r1
 1434 019c 0200     		movs	r2, r0
 1435 019e 23CA     		ldmia	r2!, {r0, r1, r5}
 1436 01a0 23C3     		stmia	r3!, {r0, r1, r5}
 1437 01a2 03CA     		ldmia	r2!, {r0, r1}
 1438 01a4 03C3     		stmia	r3!, {r0, r1}
 1439 01a6 28A8     		add	r0, sp, #160
 1440 01a8 06A9     		add	r1, sp, #24
 1441 01aa 0B00     		movs	r3, r1
 1442 01ac 0200     		movs	r2, r0
 1443 01ae 23CA     		ldmia	r2!, {r0, r1, r5}
 1444 01b0 23C3     		stmia	r3!, {r0, r1, r5}
 1445 01b2 03CA     		ldmia	r2!, {r0, r1}
 1446 01b4 03C3     		stmia	r3!, {r0, r1}
 1447 01b6 23A8     		add	r0, sp, #140
 1448 01b8 01A9     		add	r1, sp, #4
 1449 01ba 0B00     		movs	r3, r1
 1450 01bc 0200     		movs	r2, r0
 1451 01be 23CA     		ldmia	r2!, {r0, r1, r5}
 1452 01c0 23C3     		stmia	r3!, {r0, r1, r5}
 1453 01c2 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/ccaWamBb.s 			page 45


 1454 01c4 03C3     		stmia	r3!, {r0, r1}
 1455 01c6 229B     		ldr	r3, [sp, #136]
 1456 01c8 0093     		str	r3, [sp]
 1457 01ca 1E98     		ldr	r0, [sp, #120]
 1458 01cc 1F99     		ldr	r1, [sp, #124]
 1459 01ce 209A     		ldr	r2, [sp, #128]
 1460 01d0 219B     		ldr	r3, [sp, #132]
 1461 01d2 FFF7FEFF 		bl	charlie
 1462              	.LVL112:
 101:Src/charlie.c ****          return;
 1463              		.loc 2 101 8 view .LVU254
 101:Src/charlie.c ****          return;
 1464              		.loc 2 101 20 is_stmt 0 view .LVU255
 1465 01d6 AF4B     		ldr	r3, .L100
 1466 01d8 1B68     		ldr	r3, [r3]
 101:Src/charlie.c ****          return;
 1467              		.loc 2 101 10 view .LVU256
 1468 01da 012B     		cmp	r3, #1
 1469 01dc 00D1     		bne	.LCB1269
 1470 01de 2BE7     		b	.L51	@long jump
 1471              	.LCB1269:
 103:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 1472              		.loc 2 103 8 is_stmt 1 view .LVU257
 1473 01e0 FA20     		movs	r0, #250
 1474 01e2 8000     		lsls	r0, r0, #2
 1475 01e4 FFF7FEFF 		bl	HAL_Delay
 1476              	.LVL113:
 104:Src/charlie.c ****        if(stopFlag == 1)
 1477              		.loc 2 104 8 view .LVU258
 1478 01e8 0423     		movs	r3, #4
 1479 01ea 1093     		str	r3, [sp, #64]
 1480 01ec 2DA8     		add	r0, sp, #180
 1481 01ee 0BA9     		add	r1, sp, #44
 1482 01f0 0B00     		movs	r3, r1
 1483 01f2 0200     		movs	r2, r0
 1484 01f4 23CA     		ldmia	r2!, {r0, r1, r5}
 1485 01f6 23C3     		stmia	r3!, {r0, r1, r5}
 1486 01f8 03CA     		ldmia	r2!, {r0, r1}
 1487 01fa 03C3     		stmia	r3!, {r0, r1}
 1488 01fc 28A8     		add	r0, sp, #160
 1489 01fe 06A9     		add	r1, sp, #24
 1490 0200 0B00     		movs	r3, r1
 1491 0202 0200     		movs	r2, r0
 1492 0204 23CA     		ldmia	r2!, {r0, r1, r5}
 1493 0206 23C3     		stmia	r3!, {r0, r1, r5}
 1494 0208 03CA     		ldmia	r2!, {r0, r1}
 1495 020a 03C3     		stmia	r3!, {r0, r1}
 1496 020c 23A8     		add	r0, sp, #140
 1497 020e 01A9     		add	r1, sp, #4
 1498 0210 0B00     		movs	r3, r1
 1499 0212 0200     		movs	r2, r0
 1500 0214 23CA     		ldmia	r2!, {r0, r1, r5}
 1501 0216 23C3     		stmia	r3!, {r0, r1, r5}
 1502 0218 03CA     		ldmia	r2!, {r0, r1}
 1503 021a 03C3     		stmia	r3!, {r0, r1}
 1504 021c 229B     		ldr	r3, [sp, #136]
 1505 021e 0093     		str	r3, [sp]
ARM GAS  /tmp/ccaWamBb.s 			page 46


 1506 0220 1E98     		ldr	r0, [sp, #120]
 1507 0222 1F99     		ldr	r1, [sp, #124]
 1508 0224 209A     		ldr	r2, [sp, #128]
 1509 0226 219B     		ldr	r3, [sp, #132]
 1510 0228 FFF7FEFF 		bl	charlie
 1511              	.LVL114:
 105:Src/charlie.c ****          return;
 1512              		.loc 2 105 8 view .LVU259
 105:Src/charlie.c ****          return;
 1513              		.loc 2 105 20 is_stmt 0 view .LVU260
 1514 022c 994B     		ldr	r3, .L100
 1515 022e 1B68     		ldr	r3, [r3]
 105:Src/charlie.c ****          return;
 1516              		.loc 2 105 10 view .LVU261
 1517 0230 012B     		cmp	r3, #1
 1518 0232 00D1     		bne	.LCB1313
 1519 0234 00E7     		b	.L51	@long jump
 1520              	.LCB1313:
 107:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 1521              		.loc 2 107 8 is_stmt 1 view .LVU262
 1522 0236 FA20     		movs	r0, #250
 1523 0238 8000     		lsls	r0, r0, #2
 1524 023a FFF7FEFF 		bl	HAL_Delay
 1525              	.LVL115:
 108:Src/charlie.c ****        if(stopFlag == 1)
 1526              		.loc 2 108 8 view .LVU263
 1527 023e 0523     		movs	r3, #5
 1528 0240 1093     		str	r3, [sp, #64]
 1529 0242 2DA8     		add	r0, sp, #180
 1530 0244 0BA9     		add	r1, sp, #44
 1531 0246 0B00     		movs	r3, r1
 1532 0248 0200     		movs	r2, r0
 1533 024a 23CA     		ldmia	r2!, {r0, r1, r5}
 1534 024c 23C3     		stmia	r3!, {r0, r1, r5}
 1535 024e 03CA     		ldmia	r2!, {r0, r1}
 1536 0250 03C3     		stmia	r3!, {r0, r1}
 1537 0252 28A8     		add	r0, sp, #160
 1538 0254 06A9     		add	r1, sp, #24
 1539 0256 0B00     		movs	r3, r1
 1540 0258 0200     		movs	r2, r0
 1541 025a 23CA     		ldmia	r2!, {r0, r1, r5}
 1542 025c 23C3     		stmia	r3!, {r0, r1, r5}
 1543 025e 03CA     		ldmia	r2!, {r0, r1}
 1544 0260 03C3     		stmia	r3!, {r0, r1}
 1545 0262 23A8     		add	r0, sp, #140
 1546 0264 01A9     		add	r1, sp, #4
 1547 0266 0B00     		movs	r3, r1
 1548 0268 0200     		movs	r2, r0
 1549 026a 23CA     		ldmia	r2!, {r0, r1, r5}
 1550 026c 23C3     		stmia	r3!, {r0, r1, r5}
 1551 026e 03CA     		ldmia	r2!, {r0, r1}
 1552 0270 03C3     		stmia	r3!, {r0, r1}
 1553 0272 229B     		ldr	r3, [sp, #136]
 1554 0274 0093     		str	r3, [sp]
 1555 0276 1E98     		ldr	r0, [sp, #120]
 1556 0278 1F99     		ldr	r1, [sp, #124]
 1557 027a 209A     		ldr	r2, [sp, #128]
ARM GAS  /tmp/ccaWamBb.s 			page 47


 1558 027c 219B     		ldr	r3, [sp, #132]
 1559 027e FFF7FEFF 		bl	charlie
 1560              	.LVL116:
 109:Src/charlie.c ****          return;
 1561              		.loc 2 109 8 view .LVU264
 109:Src/charlie.c ****          return;
 1562              		.loc 2 109 20 is_stmt 0 view .LVU265
 1563 0282 844B     		ldr	r3, .L100
 1564 0284 1B68     		ldr	r3, [r3]
 109:Src/charlie.c ****          return;
 1565              		.loc 2 109 10 view .LVU266
 1566 0286 012B     		cmp	r3, #1
 1567 0288 00D1     		bne	.LCB1357
 1568 028a D5E6     		b	.L51	@long jump
 1569              	.LCB1357:
 111:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 1570              		.loc 2 111 8 is_stmt 1 view .LVU267
 1571 028c FA20     		movs	r0, #250
 1572 028e 8000     		lsls	r0, r0, #2
 1573 0290 FFF7FEFF 		bl	HAL_Delay
 1574              	.LVL117:
 112:Src/charlie.c ****        if(stopFlag == 1)
 1575              		.loc 2 112 8 view .LVU268
 1576 0294 0623     		movs	r3, #6
 1577 0296 1093     		str	r3, [sp, #64]
 1578 0298 2DA8     		add	r0, sp, #180
 1579 029a 0BA9     		add	r1, sp, #44
 1580 029c 0B00     		movs	r3, r1
 1581 029e 0200     		movs	r2, r0
 1582 02a0 23CA     		ldmia	r2!, {r0, r1, r5}
 1583 02a2 23C3     		stmia	r3!, {r0, r1, r5}
 1584 02a4 03CA     		ldmia	r2!, {r0, r1}
 1585 02a6 03C3     		stmia	r3!, {r0, r1}
 1586 02a8 28A8     		add	r0, sp, #160
 1587 02aa 06A9     		add	r1, sp, #24
 1588 02ac 0B00     		movs	r3, r1
 1589 02ae 0200     		movs	r2, r0
 1590 02b0 23CA     		ldmia	r2!, {r0, r1, r5}
 1591 02b2 23C3     		stmia	r3!, {r0, r1, r5}
 1592 02b4 03CA     		ldmia	r2!, {r0, r1}
 1593 02b6 03C3     		stmia	r3!, {r0, r1}
 1594 02b8 23A8     		add	r0, sp, #140
 1595 02ba 01A9     		add	r1, sp, #4
 1596 02bc 0B00     		movs	r3, r1
 1597 02be 0200     		movs	r2, r0
 1598 02c0 23CA     		ldmia	r2!, {r0, r1, r5}
 1599 02c2 23C3     		stmia	r3!, {r0, r1, r5}
 1600 02c4 03CA     		ldmia	r2!, {r0, r1}
 1601 02c6 03C3     		stmia	r3!, {r0, r1}
 1602 02c8 229B     		ldr	r3, [sp, #136]
 1603 02ca 0093     		str	r3, [sp]
 1604 02cc 1E98     		ldr	r0, [sp, #120]
 1605 02ce 1F99     		ldr	r1, [sp, #124]
 1606 02d0 209A     		ldr	r2, [sp, #128]
 1607 02d2 219B     		ldr	r3, [sp, #132]
 1608 02d4 FFF7FEFF 		bl	charlie
 1609              	.LVL118:
ARM GAS  /tmp/ccaWamBb.s 			page 48


 113:Src/charlie.c ****          return;
 1610              		.loc 2 113 8 view .LVU269
 113:Src/charlie.c ****          return;
 1611              		.loc 2 113 20 is_stmt 0 view .LVU270
 1612 02d8 6E4B     		ldr	r3, .L100
 1613 02da 1B68     		ldr	r3, [r3]
 113:Src/charlie.c ****          return;
 1614              		.loc 2 113 10 view .LVU271
 1615 02dc 012B     		cmp	r3, #1
 1616 02de 00D1     		bne	.LCB1401
 1617 02e0 AAE6     		b	.L51	@long jump
 1618              	.LCB1401:
 115:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 1619              		.loc 2 115 8 is_stmt 1 view .LVU272
 1620 02e2 FA20     		movs	r0, #250
 1621 02e4 8000     		lsls	r0, r0, #2
 1622 02e6 FFF7FEFF 		bl	HAL_Delay
 1623              	.LVL119:
 116:Src/charlie.c ****        if(stopFlag == 1)
 1624              		.loc 2 116 8 view .LVU273
 1625 02ea 0723     		movs	r3, #7
 1626 02ec 1093     		str	r3, [sp, #64]
 1627 02ee 2DA8     		add	r0, sp, #180
 1628 02f0 0BA9     		add	r1, sp, #44
 1629 02f2 0B00     		movs	r3, r1
 1630 02f4 0200     		movs	r2, r0
 1631 02f6 23CA     		ldmia	r2!, {r0, r1, r5}
 1632 02f8 23C3     		stmia	r3!, {r0, r1, r5}
 1633 02fa 03CA     		ldmia	r2!, {r0, r1}
 1634 02fc 03C3     		stmia	r3!, {r0, r1}
 1635 02fe 28A8     		add	r0, sp, #160
 1636 0300 06A9     		add	r1, sp, #24
 1637 0302 0B00     		movs	r3, r1
 1638 0304 0200     		movs	r2, r0
 1639 0306 23CA     		ldmia	r2!, {r0, r1, r5}
 1640 0308 23C3     		stmia	r3!, {r0, r1, r5}
 1641 030a 03CA     		ldmia	r2!, {r0, r1}
 1642 030c 03C3     		stmia	r3!, {r0, r1}
 1643 030e 23A8     		add	r0, sp, #140
 1644 0310 01A9     		add	r1, sp, #4
 1645 0312 0B00     		movs	r3, r1
 1646 0314 0200     		movs	r2, r0
 1647 0316 23CA     		ldmia	r2!, {r0, r1, r5}
 1648 0318 23C3     		stmia	r3!, {r0, r1, r5}
 1649 031a 03CA     		ldmia	r2!, {r0, r1}
 1650 031c 03C3     		stmia	r3!, {r0, r1}
 1651 031e 229B     		ldr	r3, [sp, #136]
 1652 0320 0093     		str	r3, [sp]
 1653 0322 1E98     		ldr	r0, [sp, #120]
 1654 0324 1F99     		ldr	r1, [sp, #124]
 1655 0326 209A     		ldr	r2, [sp, #128]
 1656 0328 219B     		ldr	r3, [sp, #132]
 1657 032a FFF7FEFF 		bl	charlie
 1658              	.LVL120:
 117:Src/charlie.c ****          return;
 1659              		.loc 2 117 8 view .LVU274
 117:Src/charlie.c ****          return;
ARM GAS  /tmp/ccaWamBb.s 			page 49


 1660              		.loc 2 117 20 is_stmt 0 view .LVU275
 1661 032e 594B     		ldr	r3, .L100
 1662 0330 1B68     		ldr	r3, [r3]
 117:Src/charlie.c ****          return;
 1663              		.loc 2 117 10 view .LVU276
 1664 0332 012B     		cmp	r3, #1
 1665 0334 00D1     		bne	.LCB1445
 1666 0336 7FE6     		b	.L51	@long jump
 1667              	.LCB1445:
 119:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 1668              		.loc 2 119 8 is_stmt 1 view .LVU277
 1669 0338 FA20     		movs	r0, #250
 1670 033a 8000     		lsls	r0, r0, #2
 1671 033c FFF7FEFF 		bl	HAL_Delay
 1672              	.LVL121:
 120:Src/charlie.c ****        if(stopFlag == 1)
 1673              		.loc 2 120 8 view .LVU278
 1674 0340 0823     		movs	r3, #8
 1675 0342 1093     		str	r3, [sp, #64]
 1676 0344 2DA8     		add	r0, sp, #180
 1677 0346 0BA9     		add	r1, sp, #44
 1678 0348 0B00     		movs	r3, r1
 1679 034a 0200     		movs	r2, r0
 1680 034c 23CA     		ldmia	r2!, {r0, r1, r5}
 1681 034e 23C3     		stmia	r3!, {r0, r1, r5}
 1682 0350 03CA     		ldmia	r2!, {r0, r1}
 1683 0352 03C3     		stmia	r3!, {r0, r1}
 1684 0354 28A8     		add	r0, sp, #160
 1685 0356 06A9     		add	r1, sp, #24
 1686 0358 0B00     		movs	r3, r1
 1687 035a 0200     		movs	r2, r0
 1688 035c 23CA     		ldmia	r2!, {r0, r1, r5}
 1689 035e 23C3     		stmia	r3!, {r0, r1, r5}
 1690 0360 03CA     		ldmia	r2!, {r0, r1}
 1691 0362 03C3     		stmia	r3!, {r0, r1}
 1692 0364 23A8     		add	r0, sp, #140
 1693 0366 01A9     		add	r1, sp, #4
 1694 0368 0B00     		movs	r3, r1
 1695 036a 0200     		movs	r2, r0
 1696 036c 23CA     		ldmia	r2!, {r0, r1, r5}
 1697 036e 23C3     		stmia	r3!, {r0, r1, r5}
 1698 0370 03CA     		ldmia	r2!, {r0, r1}
 1699 0372 03C3     		stmia	r3!, {r0, r1}
 1700 0374 229B     		ldr	r3, [sp, #136]
 1701 0376 0093     		str	r3, [sp]
 1702 0378 1E98     		ldr	r0, [sp, #120]
 1703 037a 1F99     		ldr	r1, [sp, #124]
 1704 037c 209A     		ldr	r2, [sp, #128]
 1705 037e 219B     		ldr	r3, [sp, #132]
 1706 0380 FFF7FEFF 		bl	charlie
 1707              	.LVL122:
 121:Src/charlie.c ****          return;
 1708              		.loc 2 121 8 view .LVU279
 121:Src/charlie.c ****          return;
 1709              		.loc 2 121 20 is_stmt 0 view .LVU280
 1710 0384 434B     		ldr	r3, .L100
 1711 0386 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccaWamBb.s 			page 50


 121:Src/charlie.c ****          return;
 1712              		.loc 2 121 10 view .LVU281
 1713 0388 012B     		cmp	r3, #1
 1714 038a 00D1     		bne	.LCB1489
 1715 038c 54E6     		b	.L51	@long jump
 1716              	.LCB1489:
 123:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 1717              		.loc 2 123 8 is_stmt 1 view .LVU282
 1718 038e FA20     		movs	r0, #250
 1719 0390 8000     		lsls	r0, r0, #2
 1720 0392 FFF7FEFF 		bl	HAL_Delay
 1721              	.LVL123:
 124:Src/charlie.c ****        if(stopFlag == 1)
 1722              		.loc 2 124 8 view .LVU283
 1723 0396 0923     		movs	r3, #9
 1724 0398 1093     		str	r3, [sp, #64]
 1725 039a 2DA8     		add	r0, sp, #180
 1726 039c 0BA9     		add	r1, sp, #44
 1727 039e 0B00     		movs	r3, r1
 1728 03a0 0200     		movs	r2, r0
 1729 03a2 23CA     		ldmia	r2!, {r0, r1, r5}
 1730 03a4 23C3     		stmia	r3!, {r0, r1, r5}
 1731 03a6 03CA     		ldmia	r2!, {r0, r1}
 1732 03a8 03C3     		stmia	r3!, {r0, r1}
 1733 03aa 28A8     		add	r0, sp, #160
 1734 03ac 06A9     		add	r1, sp, #24
 1735 03ae 0B00     		movs	r3, r1
 1736 03b0 0200     		movs	r2, r0
 1737 03b2 23CA     		ldmia	r2!, {r0, r1, r5}
 1738 03b4 23C3     		stmia	r3!, {r0, r1, r5}
 1739 03b6 03CA     		ldmia	r2!, {r0, r1}
 1740 03b8 03C3     		stmia	r3!, {r0, r1}
 1741 03ba 23A8     		add	r0, sp, #140
 1742 03bc 01A9     		add	r1, sp, #4
 1743 03be 0B00     		movs	r3, r1
 1744 03c0 0200     		movs	r2, r0
 1745 03c2 23CA     		ldmia	r2!, {r0, r1, r5}
 1746 03c4 23C3     		stmia	r3!, {r0, r1, r5}
 1747 03c6 03CA     		ldmia	r2!, {r0, r1}
 1748 03c8 03C3     		stmia	r3!, {r0, r1}
 1749 03ca 229B     		ldr	r3, [sp, #136]
 1750 03cc 0093     		str	r3, [sp]
 1751 03ce 1E98     		ldr	r0, [sp, #120]
 1752 03d0 1F99     		ldr	r1, [sp, #124]
 1753 03d2 209A     		ldr	r2, [sp, #128]
 1754 03d4 219B     		ldr	r3, [sp, #132]
 1755 03d6 FFF7FEFF 		bl	charlie
 1756              	.LVL124:
 125:Src/charlie.c ****          return;
 1757              		.loc 2 125 8 view .LVU284
 125:Src/charlie.c ****          return;
 1758              		.loc 2 125 20 is_stmt 0 view .LVU285
 1759 03da 2E4B     		ldr	r3, .L100
 1760 03dc 1B68     		ldr	r3, [r3]
 125:Src/charlie.c ****          return;
 1761              		.loc 2 125 10 view .LVU286
 1762 03de 012B     		cmp	r3, #1
ARM GAS  /tmp/ccaWamBb.s 			page 51


 1763 03e0 00D1     		bne	.LCB1533
 1764 03e2 29E6     		b	.L51	@long jump
 1765              	.LCB1533:
 127:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 1766              		.loc 2 127 8 is_stmt 1 view .LVU287
 1767 03e4 FA20     		movs	r0, #250
 1768 03e6 8000     		lsls	r0, r0, #2
 1769 03e8 FFF7FEFF 		bl	HAL_Delay
 1770              	.LVL125:
 128:Src/charlie.c ****        if(stopFlag == 1)
 1771              		.loc 2 128 8 view .LVU288
 1772 03ec 0A23     		movs	r3, #10
 1773 03ee 1093     		str	r3, [sp, #64]
 1774 03f0 2DA8     		add	r0, sp, #180
 1775 03f2 0BA9     		add	r1, sp, #44
 1776 03f4 0B00     		movs	r3, r1
 1777 03f6 0200     		movs	r2, r0
 1778 03f8 23CA     		ldmia	r2!, {r0, r1, r5}
 1779 03fa 23C3     		stmia	r3!, {r0, r1, r5}
 1780 03fc 03CA     		ldmia	r2!, {r0, r1}
 1781 03fe 03C3     		stmia	r3!, {r0, r1}
 1782 0400 28A8     		add	r0, sp, #160
 1783 0402 06A9     		add	r1, sp, #24
 1784 0404 0B00     		movs	r3, r1
 1785 0406 0200     		movs	r2, r0
 1786 0408 23CA     		ldmia	r2!, {r0, r1, r5}
 1787 040a 23C3     		stmia	r3!, {r0, r1, r5}
 1788 040c 03CA     		ldmia	r2!, {r0, r1}
 1789 040e 03C3     		stmia	r3!, {r0, r1}
 1790 0410 23A8     		add	r0, sp, #140
 1791 0412 01A9     		add	r1, sp, #4
 1792 0414 0B00     		movs	r3, r1
 1793 0416 0200     		movs	r2, r0
 1794 0418 23CA     		ldmia	r2!, {r0, r1, r5}
 1795 041a 23C3     		stmia	r3!, {r0, r1, r5}
 1796 041c 03CA     		ldmia	r2!, {r0, r1}
 1797 041e 03C3     		stmia	r3!, {r0, r1}
 1798 0420 229B     		ldr	r3, [sp, #136]
 1799 0422 0093     		str	r3, [sp]
 1800 0424 1E98     		ldr	r0, [sp, #120]
 1801 0426 1F99     		ldr	r1, [sp, #124]
 1802 0428 209A     		ldr	r2, [sp, #128]
 1803 042a 219B     		ldr	r3, [sp, #132]
 1804 042c FFF7FEFF 		bl	charlie
 1805              	.LVL126:
 129:Src/charlie.c ****          return;
 1806              		.loc 2 129 8 view .LVU289
 129:Src/charlie.c ****          return;
 1807              		.loc 2 129 20 is_stmt 0 view .LVU290
 1808 0430 184B     		ldr	r3, .L100
 1809 0432 1B68     		ldr	r3, [r3]
 129:Src/charlie.c ****          return;
 1810              		.loc 2 129 10 view .LVU291
 1811 0434 012B     		cmp	r3, #1
 1812 0436 00D1     		bne	.LCB1577
 1813 0438 FEE5     		b	.L51	@long jump
 1814              	.LCB1577:
ARM GAS  /tmp/ccaWamBb.s 			page 52


 131:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 1815              		.loc 2 131 8 is_stmt 1 view .LVU292
 1816 043a FA20     		movs	r0, #250
 1817 043c 8000     		lsls	r0, r0, #2
 1818 043e FFF7FEFF 		bl	HAL_Delay
 1819              	.LVL127:
 132:Src/charlie.c ****        if(stopFlag == 1)
 1820              		.loc 2 132 8 view .LVU293
 1821 0442 0B23     		movs	r3, #11
 1822 0444 1093     		str	r3, [sp, #64]
 1823 0446 2DA8     		add	r0, sp, #180
 1824 0448 0BA9     		add	r1, sp, #44
 1825 044a 0B00     		movs	r3, r1
 1826 044c 0200     		movs	r2, r0
 1827 044e 23CA     		ldmia	r2!, {r0, r1, r5}
 1828 0450 23C3     		stmia	r3!, {r0, r1, r5}
 1829 0452 03CA     		ldmia	r2!, {r0, r1}
 1830 0454 03C3     		stmia	r3!, {r0, r1}
 1831 0456 28A8     		add	r0, sp, #160
 1832 0458 06A9     		add	r1, sp, #24
 1833 045a 0B00     		movs	r3, r1
 1834 045c 0200     		movs	r2, r0
 1835 045e 23CA     		ldmia	r2!, {r0, r1, r5}
 1836 0460 23C3     		stmia	r3!, {r0, r1, r5}
 1837 0462 03CA     		ldmia	r2!, {r0, r1}
 1838 0464 03C3     		stmia	r3!, {r0, r1}
 1839 0466 23A8     		add	r0, sp, #140
 1840 0468 01A9     		add	r1, sp, #4
 1841 046a 0B00     		movs	r3, r1
 1842 046c 0200     		movs	r2, r0
 1843 046e 23CA     		ldmia	r2!, {r0, r1, r5}
 1844 0470 23C3     		stmia	r3!, {r0, r1, r5}
 1845 0472 03CA     		ldmia	r2!, {r0, r1}
 1846 0474 03C3     		stmia	r3!, {r0, r1}
 1847 0476 229B     		ldr	r3, [sp, #136]
 1848 0478 0093     		str	r3, [sp]
 1849 047a 1E98     		ldr	r0, [sp, #120]
 1850 047c 1F99     		ldr	r1, [sp, #124]
 1851 047e 209A     		ldr	r2, [sp, #128]
 1852 0480 219B     		ldr	r3, [sp, #132]
 1853 0482 FFF7FEFF 		bl	charlie
 1854              	.LVL128:
 133:Src/charlie.c ****          return;
 1855              		.loc 2 133 8 view .LVU294
 133:Src/charlie.c ****          return;
 1856              		.loc 2 133 20 is_stmt 0 view .LVU295
 1857 0486 034B     		ldr	r3, .L100
 1858 0488 1B68     		ldr	r3, [r3]
 133:Src/charlie.c ****          return;
 1859              		.loc 2 133 10 view .LVU296
 1860 048a 012B     		cmp	r3, #1
 1861 048c 00D1     		bne	.LCB1621
 1862 048e D3E5     		b	.L51	@long jump
 1863              	.LCB1621:
 1864 0490 02E0     		b	.L101
 1865              	.L102:
 1866 0492 C046     		.align	2
ARM GAS  /tmp/ccaWamBb.s 			page 53


 1867              	.L100:
 1868 0494 00000000 		.word	.LANCHOR0
 1869              	.L101:
 135:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 1870              		.loc 2 135 8 is_stmt 1 view .LVU297
 1871 0498 FA20     		movs	r0, #250
 1872 049a 8000     		lsls	r0, r0, #2
 1873 049c FFF7FEFF 		bl	HAL_Delay
 1874              	.LVL129:
 136:Src/charlie.c ****        if(stopFlag == 1)
 1875              		.loc 2 136 8 view .LVU298
 1876 04a0 0C23     		movs	r3, #12
 1877 04a2 1093     		str	r3, [sp, #64]
 1878 04a4 2DA8     		add	r0, sp, #180
 1879 04a6 0BA9     		add	r1, sp, #44
 1880 04a8 0B00     		movs	r3, r1
 1881 04aa 0200     		movs	r2, r0
 1882 04ac 23CA     		ldmia	r2!, {r0, r1, r5}
 1883 04ae 23C3     		stmia	r3!, {r0, r1, r5}
 1884 04b0 03CA     		ldmia	r2!, {r0, r1}
 1885 04b2 03C3     		stmia	r3!, {r0, r1}
 1886 04b4 28A8     		add	r0, sp, #160
 1887 04b6 06A9     		add	r1, sp, #24
 1888 04b8 0B00     		movs	r3, r1
 1889 04ba 0200     		movs	r2, r0
 1890 04bc 23CA     		ldmia	r2!, {r0, r1, r5}
 1891 04be 23C3     		stmia	r3!, {r0, r1, r5}
 1892 04c0 03CA     		ldmia	r2!, {r0, r1}
 1893 04c2 03C3     		stmia	r3!, {r0, r1}
 1894 04c4 23A8     		add	r0, sp, #140
 1895 04c6 01A9     		add	r1, sp, #4
 1896 04c8 0B00     		movs	r3, r1
 1897 04ca 0200     		movs	r2, r0
 1898 04cc 23CA     		ldmia	r2!, {r0, r1, r5}
 1899 04ce 23C3     		stmia	r3!, {r0, r1, r5}
 1900 04d0 03CA     		ldmia	r2!, {r0, r1}
 1901 04d2 03C3     		stmia	r3!, {r0, r1}
 1902 04d4 229B     		ldr	r3, [sp, #136]
 1903 04d6 0093     		str	r3, [sp]
 1904 04d8 1E98     		ldr	r0, [sp, #120]
 1905 04da 1F99     		ldr	r1, [sp, #124]
 1906 04dc 209A     		ldr	r2, [sp, #128]
 1907 04de 219B     		ldr	r3, [sp, #132]
 1908 04e0 FFF7FEFF 		bl	charlie
 1909              	.LVL130:
 137:Src/charlie.c ****          return;
 1910              		.loc 2 137 8 view .LVU299
 137:Src/charlie.c ****          return;
 1911              		.loc 2 137 20 is_stmt 0 view .LVU300
 1912 04e4 044B     		ldr	r3, .L103
 1913 04e6 1B68     		ldr	r3, [r3]
 137:Src/charlie.c ****          return;
 1914              		.loc 2 137 10 view .LVU301
 1915 04e8 012B     		cmp	r3, #1
 1916 04ea 00D1     		bne	.LCB1674
 1917 04ec A4E5     		b	.L51	@long jump
 1918              	.LCB1674:
ARM GAS  /tmp/ccaWamBb.s 			page 54


 139:Src/charlie.c ****    }
 1919              		.loc 2 139 8 is_stmt 1 view .LVU302
 1920 04ee FA20     		movs	r0, #250
 1921 04f0 8000     		lsls	r0, r0, #2
 1922 04f2 FFF7FEFF 		bl	HAL_Delay
 1923              	.LVL131:
 1924 04f6 94E5     		b	.L53
 1925              	.L104:
 1926              		.align	2
 1927              	.L103:
 1928 04f8 00000000 		.word	.LANCHOR0
 1929              	.L88:
 144:Src/charlie.c ****        if(stopFlag == 1)
 1930              		.loc 2 144 8 view .LVU303
 1931 04fc 0023     		movs	r3, #0
 1932 04fe 1093     		str	r3, [sp, #64]
 1933 0500 2DA8     		add	r0, sp, #180
 1934 0502 0BA9     		add	r1, sp, #44
 1935 0504 0B00     		movs	r3, r1
 1936 0506 0200     		movs	r2, r0
 1937 0508 23CA     		ldmia	r2!, {r0, r1, r5}
 1938 050a 23C3     		stmia	r3!, {r0, r1, r5}
 1939 050c 03CA     		ldmia	r2!, {r0, r1}
 1940 050e 03C3     		stmia	r3!, {r0, r1}
 1941 0510 28A8     		add	r0, sp, #160
 1942 0512 06A9     		add	r1, sp, #24
 1943 0514 0B00     		movs	r3, r1
 1944 0516 0200     		movs	r2, r0
 1945 0518 23CA     		ldmia	r2!, {r0, r1, r5}
 1946 051a 23C3     		stmia	r3!, {r0, r1, r5}
 1947 051c 03CA     		ldmia	r2!, {r0, r1}
 1948 051e 03C3     		stmia	r3!, {r0, r1}
 1949 0520 23A8     		add	r0, sp, #140
 1950 0522 01A9     		add	r1, sp, #4
 1951 0524 0B00     		movs	r3, r1
 1952 0526 0200     		movs	r2, r0
 1953 0528 23CA     		ldmia	r2!, {r0, r1, r5}
 1954 052a 23C3     		stmia	r3!, {r0, r1, r5}
 1955 052c 03CA     		ldmia	r2!, {r0, r1}
 1956 052e 03C3     		stmia	r3!, {r0, r1}
 1957 0530 229B     		ldr	r3, [sp, #136]
 1958 0532 0093     		str	r3, [sp]
 1959 0534 1E98     		ldr	r0, [sp, #120]
 1960 0536 1F99     		ldr	r1, [sp, #124]
 1961 0538 209A     		ldr	r2, [sp, #128]
 1962 053a 219B     		ldr	r3, [sp, #132]
 1963 053c FFF7FEFF 		bl	charlie
 1964              	.LVL132:
 145:Src/charlie.c ****          return;
 1965              		.loc 2 145 8 view .LVU304
 145:Src/charlie.c ****          return;
 1966              		.loc 2 145 20 is_stmt 0 view .LVU305
 1967 0540 F04B     		ldr	r3, .L105
 1968 0542 1B68     		ldr	r3, [r3]
 145:Src/charlie.c ****          return;
 1969              		.loc 2 145 10 view .LVU306
 1970 0544 012B     		cmp	r3, #1
ARM GAS  /tmp/ccaWamBb.s 			page 55


 1971 0546 00D1     		bne	.LCB1728
 1972 0548 76E5     		b	.L51	@long jump
 1973              	.LCB1728:
 147:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 1974              		.loc 2 147 8 is_stmt 1 view .LVU307
 1975 054a FA20     		movs	r0, #250
 1976 054c 4000     		lsls	r0, r0, #1
 1977 054e FFF7FEFF 		bl	HAL_Delay
 1978              	.LVL133:
 148:Src/charlie.c ****        if(stopFlag == 1)
 1979              		.loc 2 148 8 view .LVU308
 1980 0552 0123     		movs	r3, #1
 1981 0554 1093     		str	r3, [sp, #64]
 1982 0556 2DA8     		add	r0, sp, #180
 1983 0558 0BA9     		add	r1, sp, #44
 1984 055a 0B00     		movs	r3, r1
 1985 055c 0200     		movs	r2, r0
 1986 055e 23CA     		ldmia	r2!, {r0, r1, r5}
 1987 0560 23C3     		stmia	r3!, {r0, r1, r5}
 1988 0562 03CA     		ldmia	r2!, {r0, r1}
 1989 0564 03C3     		stmia	r3!, {r0, r1}
 1990 0566 28A8     		add	r0, sp, #160
 1991 0568 06A9     		add	r1, sp, #24
 1992 056a 0B00     		movs	r3, r1
 1993 056c 0200     		movs	r2, r0
 1994 056e 23CA     		ldmia	r2!, {r0, r1, r5}
 1995 0570 23C3     		stmia	r3!, {r0, r1, r5}
 1996 0572 03CA     		ldmia	r2!, {r0, r1}
 1997 0574 03C3     		stmia	r3!, {r0, r1}
 1998 0576 23A8     		add	r0, sp, #140
 1999 0578 01A9     		add	r1, sp, #4
 2000 057a 0B00     		movs	r3, r1
 2001 057c 0200     		movs	r2, r0
 2002 057e 23CA     		ldmia	r2!, {r0, r1, r5}
 2003 0580 23C3     		stmia	r3!, {r0, r1, r5}
 2004 0582 03CA     		ldmia	r2!, {r0, r1}
 2005 0584 03C3     		stmia	r3!, {r0, r1}
 2006 0586 229B     		ldr	r3, [sp, #136]
 2007 0588 0093     		str	r3, [sp]
 2008 058a 1E98     		ldr	r0, [sp, #120]
 2009 058c 1F99     		ldr	r1, [sp, #124]
 2010 058e 209A     		ldr	r2, [sp, #128]
 2011 0590 219B     		ldr	r3, [sp, #132]
 2012 0592 FFF7FEFF 		bl	charlie
 2013              	.LVL134:
 149:Src/charlie.c ****          return;
 2014              		.loc 2 149 8 view .LVU309
 149:Src/charlie.c ****          return;
 2015              		.loc 2 149 20 is_stmt 0 view .LVU310
 2016 0596 DB4B     		ldr	r3, .L105
 2017 0598 1B68     		ldr	r3, [r3]
 149:Src/charlie.c ****          return;
 2018              		.loc 2 149 10 view .LVU311
 2019 059a 012B     		cmp	r3, #1
 2020 059c 00D1     		bne	.LCB1772
 2021 059e 4BE5     		b	.L51	@long jump
 2022              	.LCB1772:
ARM GAS  /tmp/ccaWamBb.s 			page 56


 151:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 2023              		.loc 2 151 8 is_stmt 1 view .LVU312
 2024 05a0 FA20     		movs	r0, #250
 2025 05a2 4000     		lsls	r0, r0, #1
 2026 05a4 FFF7FEFF 		bl	HAL_Delay
 2027              	.LVL135:
 152:Src/charlie.c ****        if(stopFlag == 1)
 2028              		.loc 2 152 8 view .LVU313
 2029 05a8 0223     		movs	r3, #2
 2030 05aa 1093     		str	r3, [sp, #64]
 2031 05ac 2DA8     		add	r0, sp, #180
 2032 05ae 0BA9     		add	r1, sp, #44
 2033 05b0 0B00     		movs	r3, r1
 2034 05b2 0200     		movs	r2, r0
 2035 05b4 23CA     		ldmia	r2!, {r0, r1, r5}
 2036 05b6 23C3     		stmia	r3!, {r0, r1, r5}
 2037 05b8 03CA     		ldmia	r2!, {r0, r1}
 2038 05ba 03C3     		stmia	r3!, {r0, r1}
 2039 05bc 28A8     		add	r0, sp, #160
 2040 05be 06A9     		add	r1, sp, #24
 2041 05c0 0B00     		movs	r3, r1
 2042 05c2 0200     		movs	r2, r0
 2043 05c4 23CA     		ldmia	r2!, {r0, r1, r5}
 2044 05c6 23C3     		stmia	r3!, {r0, r1, r5}
 2045 05c8 03CA     		ldmia	r2!, {r0, r1}
 2046 05ca 03C3     		stmia	r3!, {r0, r1}
 2047 05cc 23A8     		add	r0, sp, #140
 2048 05ce 01A9     		add	r1, sp, #4
 2049 05d0 0B00     		movs	r3, r1
 2050 05d2 0200     		movs	r2, r0
 2051 05d4 23CA     		ldmia	r2!, {r0, r1, r5}
 2052 05d6 23C3     		stmia	r3!, {r0, r1, r5}
 2053 05d8 03CA     		ldmia	r2!, {r0, r1}
 2054 05da 03C3     		stmia	r3!, {r0, r1}
 2055 05dc 229B     		ldr	r3, [sp, #136]
 2056 05de 0093     		str	r3, [sp]
 2057 05e0 1E98     		ldr	r0, [sp, #120]
 2058 05e2 1F99     		ldr	r1, [sp, #124]
 2059 05e4 209A     		ldr	r2, [sp, #128]
 2060 05e6 219B     		ldr	r3, [sp, #132]
 2061 05e8 FFF7FEFF 		bl	charlie
 2062              	.LVL136:
 153:Src/charlie.c ****          return;
 2063              		.loc 2 153 8 view .LVU314
 153:Src/charlie.c ****          return;
 2064              		.loc 2 153 20 is_stmt 0 view .LVU315
 2065 05ec C54B     		ldr	r3, .L105
 2066 05ee 1B68     		ldr	r3, [r3]
 153:Src/charlie.c ****          return;
 2067              		.loc 2 153 10 view .LVU316
 2068 05f0 012B     		cmp	r3, #1
 2069 05f2 00D1     		bne	.LCB1816
 2070 05f4 20E5     		b	.L51	@long jump
 2071              	.LCB1816:
 155:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 2072              		.loc 2 155 8 is_stmt 1 view .LVU317
 2073 05f6 FA20     		movs	r0, #250
ARM GAS  /tmp/ccaWamBb.s 			page 57


 2074 05f8 4000     		lsls	r0, r0, #1
 2075 05fa FFF7FEFF 		bl	HAL_Delay
 2076              	.LVL137:
 156:Src/charlie.c ****        if(stopFlag == 1)
 2077              		.loc 2 156 8 view .LVU318
 2078 05fe 0323     		movs	r3, #3
 2079 0600 1093     		str	r3, [sp, #64]
 2080 0602 2DA8     		add	r0, sp, #180
 2081 0604 0BA9     		add	r1, sp, #44
 2082 0606 0B00     		movs	r3, r1
 2083 0608 0200     		movs	r2, r0
 2084 060a 23CA     		ldmia	r2!, {r0, r1, r5}
 2085 060c 23C3     		stmia	r3!, {r0, r1, r5}
 2086 060e 03CA     		ldmia	r2!, {r0, r1}
 2087 0610 03C3     		stmia	r3!, {r0, r1}
 2088 0612 28A8     		add	r0, sp, #160
 2089 0614 06A9     		add	r1, sp, #24
 2090 0616 0B00     		movs	r3, r1
 2091 0618 0200     		movs	r2, r0
 2092 061a 23CA     		ldmia	r2!, {r0, r1, r5}
 2093 061c 23C3     		stmia	r3!, {r0, r1, r5}
 2094 061e 03CA     		ldmia	r2!, {r0, r1}
 2095 0620 03C3     		stmia	r3!, {r0, r1}
 2096 0622 23A8     		add	r0, sp, #140
 2097 0624 01A9     		add	r1, sp, #4
 2098 0626 0B00     		movs	r3, r1
 2099 0628 0200     		movs	r2, r0
 2100 062a 23CA     		ldmia	r2!, {r0, r1, r5}
 2101 062c 23C3     		stmia	r3!, {r0, r1, r5}
 2102 062e 03CA     		ldmia	r2!, {r0, r1}
 2103 0630 03C3     		stmia	r3!, {r0, r1}
 2104 0632 229B     		ldr	r3, [sp, #136]
 2105 0634 0093     		str	r3, [sp]
 2106 0636 1E98     		ldr	r0, [sp, #120]
 2107 0638 1F99     		ldr	r1, [sp, #124]
 2108 063a 209A     		ldr	r2, [sp, #128]
 2109 063c 219B     		ldr	r3, [sp, #132]
 2110 063e FFF7FEFF 		bl	charlie
 2111              	.LVL138:
 157:Src/charlie.c ****          return;
 2112              		.loc 2 157 8 view .LVU319
 157:Src/charlie.c ****          return;
 2113              		.loc 2 157 20 is_stmt 0 view .LVU320
 2114 0642 B04B     		ldr	r3, .L105
 2115 0644 1B68     		ldr	r3, [r3]
 157:Src/charlie.c ****          return;
 2116              		.loc 2 157 10 view .LVU321
 2117 0646 012B     		cmp	r3, #1
 2118 0648 00D1     		bne	.LCB1860
 2119 064a F5E4     		b	.L51	@long jump
 2120              	.LCB1860:
 159:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 2121              		.loc 2 159 8 is_stmt 1 view .LVU322
 2122 064c FA20     		movs	r0, #250
 2123 064e 4000     		lsls	r0, r0, #1
 2124 0650 FFF7FEFF 		bl	HAL_Delay
 2125              	.LVL139:
ARM GAS  /tmp/ccaWamBb.s 			page 58


 160:Src/charlie.c ****        if(stopFlag == 1)
 2126              		.loc 2 160 8 view .LVU323
 2127 0654 0423     		movs	r3, #4
 2128 0656 1093     		str	r3, [sp, #64]
 2129 0658 2DA8     		add	r0, sp, #180
 2130 065a 0BA9     		add	r1, sp, #44
 2131 065c 0B00     		movs	r3, r1
 2132 065e 0200     		movs	r2, r0
 2133 0660 23CA     		ldmia	r2!, {r0, r1, r5}
 2134 0662 23C3     		stmia	r3!, {r0, r1, r5}
 2135 0664 03CA     		ldmia	r2!, {r0, r1}
 2136 0666 03C3     		stmia	r3!, {r0, r1}
 2137 0668 28A8     		add	r0, sp, #160
 2138 066a 06A9     		add	r1, sp, #24
 2139 066c 0B00     		movs	r3, r1
 2140 066e 0200     		movs	r2, r0
 2141 0670 23CA     		ldmia	r2!, {r0, r1, r5}
 2142 0672 23C3     		stmia	r3!, {r0, r1, r5}
 2143 0674 03CA     		ldmia	r2!, {r0, r1}
 2144 0676 03C3     		stmia	r3!, {r0, r1}
 2145 0678 23A8     		add	r0, sp, #140
 2146 067a 01A9     		add	r1, sp, #4
 2147 067c 0B00     		movs	r3, r1
 2148 067e 0200     		movs	r2, r0
 2149 0680 23CA     		ldmia	r2!, {r0, r1, r5}
 2150 0682 23C3     		stmia	r3!, {r0, r1, r5}
 2151 0684 03CA     		ldmia	r2!, {r0, r1}
 2152 0686 03C3     		stmia	r3!, {r0, r1}
 2153 0688 229B     		ldr	r3, [sp, #136]
 2154 068a 0093     		str	r3, [sp]
 2155 068c 1E98     		ldr	r0, [sp, #120]
 2156 068e 1F99     		ldr	r1, [sp, #124]
 2157 0690 209A     		ldr	r2, [sp, #128]
 2158 0692 219B     		ldr	r3, [sp, #132]
 2159 0694 FFF7FEFF 		bl	charlie
 2160              	.LVL140:
 161:Src/charlie.c ****          return;
 2161              		.loc 2 161 8 view .LVU324
 161:Src/charlie.c ****          return;
 2162              		.loc 2 161 20 is_stmt 0 view .LVU325
 2163 0698 9A4B     		ldr	r3, .L105
 2164 069a 1B68     		ldr	r3, [r3]
 161:Src/charlie.c ****          return;
 2165              		.loc 2 161 10 view .LVU326
 2166 069c 012B     		cmp	r3, #1
 2167 069e 00D1     		bne	.LCB1904
 2168 06a0 CAE4     		b	.L51	@long jump
 2169              	.LCB1904:
 163:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 2170              		.loc 2 163 8 is_stmt 1 view .LVU327
 2171 06a2 FA20     		movs	r0, #250
 2172 06a4 4000     		lsls	r0, r0, #1
 2173 06a6 FFF7FEFF 		bl	HAL_Delay
 2174              	.LVL141:
 164:Src/charlie.c ****        if(stopFlag == 1)
 2175              		.loc 2 164 8 view .LVU328
 2176 06aa 0523     		movs	r3, #5
ARM GAS  /tmp/ccaWamBb.s 			page 59


 2177 06ac 1093     		str	r3, [sp, #64]
 2178 06ae 2DA8     		add	r0, sp, #180
 2179 06b0 0BA9     		add	r1, sp, #44
 2180 06b2 0B00     		movs	r3, r1
 2181 06b4 0200     		movs	r2, r0
 2182 06b6 23CA     		ldmia	r2!, {r0, r1, r5}
 2183 06b8 23C3     		stmia	r3!, {r0, r1, r5}
 2184 06ba 03CA     		ldmia	r2!, {r0, r1}
 2185 06bc 03C3     		stmia	r3!, {r0, r1}
 2186 06be 28A8     		add	r0, sp, #160
 2187 06c0 06A9     		add	r1, sp, #24
 2188 06c2 0B00     		movs	r3, r1
 2189 06c4 0200     		movs	r2, r0
 2190 06c6 23CA     		ldmia	r2!, {r0, r1, r5}
 2191 06c8 23C3     		stmia	r3!, {r0, r1, r5}
 2192 06ca 03CA     		ldmia	r2!, {r0, r1}
 2193 06cc 03C3     		stmia	r3!, {r0, r1}
 2194 06ce 23A8     		add	r0, sp, #140
 2195 06d0 01A9     		add	r1, sp, #4
 2196 06d2 0B00     		movs	r3, r1
 2197 06d4 0200     		movs	r2, r0
 2198 06d6 23CA     		ldmia	r2!, {r0, r1, r5}
 2199 06d8 23C3     		stmia	r3!, {r0, r1, r5}
 2200 06da 03CA     		ldmia	r2!, {r0, r1}
 2201 06dc 03C3     		stmia	r3!, {r0, r1}
 2202 06de 229B     		ldr	r3, [sp, #136]
 2203 06e0 0093     		str	r3, [sp]
 2204 06e2 1E98     		ldr	r0, [sp, #120]
 2205 06e4 1F99     		ldr	r1, [sp, #124]
 2206 06e6 209A     		ldr	r2, [sp, #128]
 2207 06e8 219B     		ldr	r3, [sp, #132]
 2208 06ea FFF7FEFF 		bl	charlie
 2209              	.LVL142:
 165:Src/charlie.c ****          return;
 2210              		.loc 2 165 8 view .LVU329
 165:Src/charlie.c ****          return;
 2211              		.loc 2 165 20 is_stmt 0 view .LVU330
 2212 06ee 854B     		ldr	r3, .L105
 2213 06f0 1B68     		ldr	r3, [r3]
 165:Src/charlie.c ****          return;
 2214              		.loc 2 165 10 view .LVU331
 2215 06f2 012B     		cmp	r3, #1
 2216 06f4 00D1     		bne	.LCB1948
 2217 06f6 9FE4     		b	.L51	@long jump
 2218              	.LCB1948:
 167:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 2219              		.loc 2 167 8 is_stmt 1 view .LVU332
 2220 06f8 FA20     		movs	r0, #250
 2221 06fa 4000     		lsls	r0, r0, #1
 2222 06fc FFF7FEFF 		bl	HAL_Delay
 2223              	.LVL143:
 168:Src/charlie.c ****        if(stopFlag == 1)
 2224              		.loc 2 168 8 view .LVU333
 2225 0700 0623     		movs	r3, #6
 2226 0702 1093     		str	r3, [sp, #64]
 2227 0704 2DA8     		add	r0, sp, #180
 2228 0706 0BA9     		add	r1, sp, #44
ARM GAS  /tmp/ccaWamBb.s 			page 60


 2229 0708 0B00     		movs	r3, r1
 2230 070a 0200     		movs	r2, r0
 2231 070c 23CA     		ldmia	r2!, {r0, r1, r5}
 2232 070e 23C3     		stmia	r3!, {r0, r1, r5}
 2233 0710 03CA     		ldmia	r2!, {r0, r1}
 2234 0712 03C3     		stmia	r3!, {r0, r1}
 2235 0714 28A8     		add	r0, sp, #160
 2236 0716 06A9     		add	r1, sp, #24
 2237 0718 0B00     		movs	r3, r1
 2238 071a 0200     		movs	r2, r0
 2239 071c 23CA     		ldmia	r2!, {r0, r1, r5}
 2240 071e 23C3     		stmia	r3!, {r0, r1, r5}
 2241 0720 03CA     		ldmia	r2!, {r0, r1}
 2242 0722 03C3     		stmia	r3!, {r0, r1}
 2243 0724 23A8     		add	r0, sp, #140
 2244 0726 01A9     		add	r1, sp, #4
 2245 0728 0B00     		movs	r3, r1
 2246 072a 0200     		movs	r2, r0
 2247 072c 23CA     		ldmia	r2!, {r0, r1, r5}
 2248 072e 23C3     		stmia	r3!, {r0, r1, r5}
 2249 0730 03CA     		ldmia	r2!, {r0, r1}
 2250 0732 03C3     		stmia	r3!, {r0, r1}
 2251 0734 229B     		ldr	r3, [sp, #136]
 2252 0736 0093     		str	r3, [sp]
 2253 0738 1E98     		ldr	r0, [sp, #120]
 2254 073a 1F99     		ldr	r1, [sp, #124]
 2255 073c 209A     		ldr	r2, [sp, #128]
 2256 073e 219B     		ldr	r3, [sp, #132]
 2257 0740 FFF7FEFF 		bl	charlie
 2258              	.LVL144:
 169:Src/charlie.c ****          return;
 2259              		.loc 2 169 8 view .LVU334
 169:Src/charlie.c ****          return;
 2260              		.loc 2 169 20 is_stmt 0 view .LVU335
 2261 0744 6F4B     		ldr	r3, .L105
 2262 0746 1B68     		ldr	r3, [r3]
 169:Src/charlie.c ****          return;
 2263              		.loc 2 169 10 view .LVU336
 2264 0748 012B     		cmp	r3, #1
 2265 074a 00D1     		bne	.LCB1992
 2266 074c 74E4     		b	.L51	@long jump
 2267              	.LCB1992:
 171:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 2268              		.loc 2 171 8 is_stmt 1 view .LVU337
 2269 074e FA20     		movs	r0, #250
 2270 0750 4000     		lsls	r0, r0, #1
 2271 0752 FFF7FEFF 		bl	HAL_Delay
 2272              	.LVL145:
 172:Src/charlie.c ****        if(stopFlag == 1)
 2273              		.loc 2 172 8 view .LVU338
 2274 0756 0723     		movs	r3, #7
 2275 0758 1093     		str	r3, [sp, #64]
 2276 075a 2DA8     		add	r0, sp, #180
 2277 075c 0BA9     		add	r1, sp, #44
 2278 075e 0B00     		movs	r3, r1
 2279 0760 0200     		movs	r2, r0
 2280 0762 23CA     		ldmia	r2!, {r0, r1, r5}
ARM GAS  /tmp/ccaWamBb.s 			page 61


 2281 0764 23C3     		stmia	r3!, {r0, r1, r5}
 2282 0766 03CA     		ldmia	r2!, {r0, r1}
 2283 0768 03C3     		stmia	r3!, {r0, r1}
 2284 076a 28A8     		add	r0, sp, #160
 2285 076c 06A9     		add	r1, sp, #24
 2286 076e 0B00     		movs	r3, r1
 2287 0770 0200     		movs	r2, r0
 2288 0772 23CA     		ldmia	r2!, {r0, r1, r5}
 2289 0774 23C3     		stmia	r3!, {r0, r1, r5}
 2290 0776 03CA     		ldmia	r2!, {r0, r1}
 2291 0778 03C3     		stmia	r3!, {r0, r1}
 2292 077a 23A8     		add	r0, sp, #140
 2293 077c 01A9     		add	r1, sp, #4
 2294 077e 0B00     		movs	r3, r1
 2295 0780 0200     		movs	r2, r0
 2296 0782 23CA     		ldmia	r2!, {r0, r1, r5}
 2297 0784 23C3     		stmia	r3!, {r0, r1, r5}
 2298 0786 03CA     		ldmia	r2!, {r0, r1}
 2299 0788 03C3     		stmia	r3!, {r0, r1}
 2300 078a 229B     		ldr	r3, [sp, #136]
 2301 078c 0093     		str	r3, [sp]
 2302 078e 1E98     		ldr	r0, [sp, #120]
 2303 0790 1F99     		ldr	r1, [sp, #124]
 2304 0792 209A     		ldr	r2, [sp, #128]
 2305 0794 219B     		ldr	r3, [sp, #132]
 2306 0796 FFF7FEFF 		bl	charlie
 2307              	.LVL146:
 173:Src/charlie.c ****          return;
 2308              		.loc 2 173 8 view .LVU339
 173:Src/charlie.c ****          return;
 2309              		.loc 2 173 20 is_stmt 0 view .LVU340
 2310 079a 5A4B     		ldr	r3, .L105
 2311 079c 1B68     		ldr	r3, [r3]
 173:Src/charlie.c ****          return;
 2312              		.loc 2 173 10 view .LVU341
 2313 079e 012B     		cmp	r3, #1
 2314 07a0 00D1     		bne	.LCB2036
 2315 07a2 49E4     		b	.L51	@long jump
 2316              	.LCB2036:
 175:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 2317              		.loc 2 175 8 is_stmt 1 view .LVU342
 2318 07a4 FA20     		movs	r0, #250
 2319 07a6 4000     		lsls	r0, r0, #1
 2320 07a8 FFF7FEFF 		bl	HAL_Delay
 2321              	.LVL147:
 176:Src/charlie.c ****        if(stopFlag == 1)
 2322              		.loc 2 176 8 view .LVU343
 2323 07ac 0823     		movs	r3, #8
 2324 07ae 1093     		str	r3, [sp, #64]
 2325 07b0 2DA8     		add	r0, sp, #180
 2326 07b2 0BA9     		add	r1, sp, #44
 2327 07b4 0B00     		movs	r3, r1
 2328 07b6 0200     		movs	r2, r0
 2329 07b8 23CA     		ldmia	r2!, {r0, r1, r5}
 2330 07ba 23C3     		stmia	r3!, {r0, r1, r5}
 2331 07bc 03CA     		ldmia	r2!, {r0, r1}
 2332 07be 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/ccaWamBb.s 			page 62


 2333 07c0 28A8     		add	r0, sp, #160
 2334 07c2 06A9     		add	r1, sp, #24
 2335 07c4 0B00     		movs	r3, r1
 2336 07c6 0200     		movs	r2, r0
 2337 07c8 23CA     		ldmia	r2!, {r0, r1, r5}
 2338 07ca 23C3     		stmia	r3!, {r0, r1, r5}
 2339 07cc 03CA     		ldmia	r2!, {r0, r1}
 2340 07ce 03C3     		stmia	r3!, {r0, r1}
 2341 07d0 23A8     		add	r0, sp, #140
 2342 07d2 01A9     		add	r1, sp, #4
 2343 07d4 0B00     		movs	r3, r1
 2344 07d6 0200     		movs	r2, r0
 2345 07d8 23CA     		ldmia	r2!, {r0, r1, r5}
 2346 07da 23C3     		stmia	r3!, {r0, r1, r5}
 2347 07dc 03CA     		ldmia	r2!, {r0, r1}
 2348 07de 03C3     		stmia	r3!, {r0, r1}
 2349 07e0 229B     		ldr	r3, [sp, #136]
 2350 07e2 0093     		str	r3, [sp]
 2351 07e4 1E98     		ldr	r0, [sp, #120]
 2352 07e6 1F99     		ldr	r1, [sp, #124]
 2353 07e8 209A     		ldr	r2, [sp, #128]
 2354 07ea 219B     		ldr	r3, [sp, #132]
 2355 07ec FFF7FEFF 		bl	charlie
 2356              	.LVL148:
 177:Src/charlie.c ****          return;
 2357              		.loc 2 177 8 view .LVU344
 177:Src/charlie.c ****          return;
 2358              		.loc 2 177 20 is_stmt 0 view .LVU345
 2359 07f0 444B     		ldr	r3, .L105
 2360 07f2 1B68     		ldr	r3, [r3]
 177:Src/charlie.c ****          return;
 2361              		.loc 2 177 10 view .LVU346
 2362 07f4 012B     		cmp	r3, #1
 2363 07f6 00D1     		bne	.LCB2080
 2364 07f8 1EE4     		b	.L51	@long jump
 2365              	.LCB2080:
 179:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 2366              		.loc 2 179 8 is_stmt 1 view .LVU347
 2367 07fa FA20     		movs	r0, #250
 2368 07fc 4000     		lsls	r0, r0, #1
 2369 07fe FFF7FEFF 		bl	HAL_Delay
 2370              	.LVL149:
 180:Src/charlie.c ****        if(stopFlag == 1)
 2371              		.loc 2 180 8 view .LVU348
 2372 0802 0923     		movs	r3, #9
 2373 0804 1093     		str	r3, [sp, #64]
 2374 0806 2DA8     		add	r0, sp, #180
 2375 0808 0BA9     		add	r1, sp, #44
 2376 080a 0B00     		movs	r3, r1
 2377 080c 0200     		movs	r2, r0
 2378 080e 23CA     		ldmia	r2!, {r0, r1, r5}
 2379 0810 23C3     		stmia	r3!, {r0, r1, r5}
 2380 0812 03CA     		ldmia	r2!, {r0, r1}
 2381 0814 03C3     		stmia	r3!, {r0, r1}
 2382 0816 28A8     		add	r0, sp, #160
 2383 0818 06A9     		add	r1, sp, #24
 2384 081a 0B00     		movs	r3, r1
ARM GAS  /tmp/ccaWamBb.s 			page 63


 2385 081c 0200     		movs	r2, r0
 2386 081e 23CA     		ldmia	r2!, {r0, r1, r5}
 2387 0820 23C3     		stmia	r3!, {r0, r1, r5}
 2388 0822 03CA     		ldmia	r2!, {r0, r1}
 2389 0824 03C3     		stmia	r3!, {r0, r1}
 2390 0826 23A8     		add	r0, sp, #140
 2391 0828 01A9     		add	r1, sp, #4
 2392 082a 0B00     		movs	r3, r1
 2393 082c 0200     		movs	r2, r0
 2394 082e 23CA     		ldmia	r2!, {r0, r1, r5}
 2395 0830 23C3     		stmia	r3!, {r0, r1, r5}
 2396 0832 03CA     		ldmia	r2!, {r0, r1}
 2397 0834 03C3     		stmia	r3!, {r0, r1}
 2398 0836 229B     		ldr	r3, [sp, #136]
 2399 0838 0093     		str	r3, [sp]
 2400 083a 1E98     		ldr	r0, [sp, #120]
 2401 083c 1F99     		ldr	r1, [sp, #124]
 2402 083e 209A     		ldr	r2, [sp, #128]
 2403 0840 219B     		ldr	r3, [sp, #132]
 2404 0842 FFF7FEFF 		bl	charlie
 2405              	.LVL150:
 181:Src/charlie.c ****          return;
 2406              		.loc 2 181 8 view .LVU349
 181:Src/charlie.c ****          return;
 2407              		.loc 2 181 20 is_stmt 0 view .LVU350
 2408 0846 2F4B     		ldr	r3, .L105
 2409 0848 1B68     		ldr	r3, [r3]
 181:Src/charlie.c ****          return;
 2410              		.loc 2 181 10 view .LVU351
 2411 084a 012B     		cmp	r3, #1
 2412 084c 01D1     		bne	.LCB2124
 2413 084e FFF7F3FB 		bl	.L51	@far jump
 2414              	.LCB2124:
 183:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 2415              		.loc 2 183 8 is_stmt 1 view .LVU352
 2416 0852 FA20     		movs	r0, #250
 2417 0854 4000     		lsls	r0, r0, #1
 2418 0856 FFF7FEFF 		bl	HAL_Delay
 2419              	.LVL151:
 184:Src/charlie.c ****        if(stopFlag == 1)
 2420              		.loc 2 184 8 view .LVU353
 2421 085a 0A23     		movs	r3, #10
 2422 085c 1093     		str	r3, [sp, #64]
 2423 085e 2DA8     		add	r0, sp, #180
 2424 0860 0BA9     		add	r1, sp, #44
 2425 0862 0B00     		movs	r3, r1
 2426 0864 0200     		movs	r2, r0
 2427 0866 23CA     		ldmia	r2!, {r0, r1, r5}
 2428 0868 23C3     		stmia	r3!, {r0, r1, r5}
 2429 086a 03CA     		ldmia	r2!, {r0, r1}
 2430 086c 03C3     		stmia	r3!, {r0, r1}
 2431 086e 28A8     		add	r0, sp, #160
 2432 0870 06A9     		add	r1, sp, #24
 2433 0872 0B00     		movs	r3, r1
 2434 0874 0200     		movs	r2, r0
 2435 0876 23CA     		ldmia	r2!, {r0, r1, r5}
 2436 0878 23C3     		stmia	r3!, {r0, r1, r5}
ARM GAS  /tmp/ccaWamBb.s 			page 64


 2437 087a 03CA     		ldmia	r2!, {r0, r1}
 2438 087c 03C3     		stmia	r3!, {r0, r1}
 2439 087e 23A8     		add	r0, sp, #140
 2440 0880 01A9     		add	r1, sp, #4
 2441 0882 0B00     		movs	r3, r1
 2442 0884 0200     		movs	r2, r0
 2443 0886 23CA     		ldmia	r2!, {r0, r1, r5}
 2444 0888 23C3     		stmia	r3!, {r0, r1, r5}
 2445 088a 03CA     		ldmia	r2!, {r0, r1}
 2446 088c 03C3     		stmia	r3!, {r0, r1}
 2447 088e 229B     		ldr	r3, [sp, #136]
 2448 0890 0093     		str	r3, [sp]
 2449 0892 1E98     		ldr	r0, [sp, #120]
 2450 0894 1F99     		ldr	r1, [sp, #124]
 2451 0896 209A     		ldr	r2, [sp, #128]
 2452 0898 219B     		ldr	r3, [sp, #132]
 2453 089a FFF7FEFF 		bl	charlie
 2454              	.LVL152:
 185:Src/charlie.c ****          return;
 2455              		.loc 2 185 8 view .LVU354
 185:Src/charlie.c ****          return;
 2456              		.loc 2 185 20 is_stmt 0 view .LVU355
 2457 089e 194B     		ldr	r3, .L105
 2458 08a0 1B68     		ldr	r3, [r3]
 185:Src/charlie.c ****          return;
 2459              		.loc 2 185 10 view .LVU356
 2460 08a2 012B     		cmp	r3, #1
 2461 08a4 01D1     		bne	.LCB2168
 2462 08a6 FFF7C7FB 		bl	.L51	@far jump
 2463              	.LCB2168:
 187:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 2464              		.loc 2 187 8 is_stmt 1 view .LVU357
 2465 08aa FA20     		movs	r0, #250
 2466 08ac 4000     		lsls	r0, r0, #1
 2467 08ae FFF7FEFF 		bl	HAL_Delay
 2468              	.LVL153:
 188:Src/charlie.c ****        if(stopFlag == 1)
 2469              		.loc 2 188 8 view .LVU358
 2470 08b2 0B23     		movs	r3, #11
 2471 08b4 1093     		str	r3, [sp, #64]
 2472 08b6 2DA8     		add	r0, sp, #180
 2473 08b8 0BA9     		add	r1, sp, #44
 2474 08ba 0B00     		movs	r3, r1
 2475 08bc 0200     		movs	r2, r0
 2476 08be 23CA     		ldmia	r2!, {r0, r1, r5}
 2477 08c0 23C3     		stmia	r3!, {r0, r1, r5}
 2478 08c2 03CA     		ldmia	r2!, {r0, r1}
 2479 08c4 03C3     		stmia	r3!, {r0, r1}
 2480 08c6 28A8     		add	r0, sp, #160
 2481 08c8 06A9     		add	r1, sp, #24
 2482 08ca 0B00     		movs	r3, r1
 2483 08cc 0200     		movs	r2, r0
 2484 08ce 23CA     		ldmia	r2!, {r0, r1, r5}
 2485 08d0 23C3     		stmia	r3!, {r0, r1, r5}
 2486 08d2 03CA     		ldmia	r2!, {r0, r1}
 2487 08d4 03C3     		stmia	r3!, {r0, r1}
 2488 08d6 23A8     		add	r0, sp, #140
ARM GAS  /tmp/ccaWamBb.s 			page 65


 2489 08d8 01A9     		add	r1, sp, #4
 2490 08da 0B00     		movs	r3, r1
 2491 08dc 0200     		movs	r2, r0
 2492 08de 23CA     		ldmia	r2!, {r0, r1, r5}
 2493 08e0 23C3     		stmia	r3!, {r0, r1, r5}
 2494 08e2 03CA     		ldmia	r2!, {r0, r1}
 2495 08e4 03C3     		stmia	r3!, {r0, r1}
 2496 08e6 229B     		ldr	r3, [sp, #136]
 2497 08e8 0093     		str	r3, [sp]
 2498 08ea 1E98     		ldr	r0, [sp, #120]
 2499 08ec 1F99     		ldr	r1, [sp, #124]
 2500 08ee 209A     		ldr	r2, [sp, #128]
 2501 08f0 219B     		ldr	r3, [sp, #132]
 2502 08f2 FFF7FEFF 		bl	charlie
 2503              	.LVL154:
 189:Src/charlie.c ****          return;
 2504              		.loc 2 189 8 view .LVU359
 189:Src/charlie.c ****          return;
 2505              		.loc 2 189 20 is_stmt 0 view .LVU360
 2506 08f6 034B     		ldr	r3, .L105
 2507 08f8 1B68     		ldr	r3, [r3]
 189:Src/charlie.c ****          return;
 2508              		.loc 2 189 10 view .LVU361
 2509 08fa 012B     		cmp	r3, #1
 2510 08fc 01D1     		bne	.LCB2212
 2511 08fe FFF79BFB 		bl	.L51	@far jump
 2512              	.LCB2212:
 2513 0902 01E0     		b	.L106
 2514              	.L107:
 2515              		.align	2
 2516              	.L105:
 2517 0904 00000000 		.word	.LANCHOR0
 2518              	.L106:
 191:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 2519              		.loc 2 191 8 is_stmt 1 view .LVU362
 2520 0908 FA20     		movs	r0, #250
 2521 090a 4000     		lsls	r0, r0, #1
 2522 090c FFF7FEFF 		bl	HAL_Delay
 2523              	.LVL155:
 192:Src/charlie.c ****        if(stopFlag == 1)
 2524              		.loc 2 192 8 view .LVU363
 2525 0910 0C23     		movs	r3, #12
 2526 0912 1093     		str	r3, [sp, #64]
 2527 0914 2DA8     		add	r0, sp, #180
 2528 0916 0BA9     		add	r1, sp, #44
 2529 0918 0B00     		movs	r3, r1
 2530 091a 0200     		movs	r2, r0
 2531 091c 23CA     		ldmia	r2!, {r0, r1, r5}
 2532 091e 23C3     		stmia	r3!, {r0, r1, r5}
 2533 0920 03CA     		ldmia	r2!, {r0, r1}
 2534 0922 03C3     		stmia	r3!, {r0, r1}
 2535 0924 28A8     		add	r0, sp, #160
 2536 0926 06A9     		add	r1, sp, #24
 2537 0928 0B00     		movs	r3, r1
 2538 092a 0200     		movs	r2, r0
 2539 092c 23CA     		ldmia	r2!, {r0, r1, r5}
 2540 092e 23C3     		stmia	r3!, {r0, r1, r5}
ARM GAS  /tmp/ccaWamBb.s 			page 66


 2541 0930 03CA     		ldmia	r2!, {r0, r1}
 2542 0932 03C3     		stmia	r3!, {r0, r1}
 2543 0934 23A8     		add	r0, sp, #140
 2544 0936 01A9     		add	r1, sp, #4
 2545 0938 0B00     		movs	r3, r1
 2546 093a 0200     		movs	r2, r0
 2547 093c 23CA     		ldmia	r2!, {r0, r1, r5}
 2548 093e 23C3     		stmia	r3!, {r0, r1, r5}
 2549 0940 03CA     		ldmia	r2!, {r0, r1}
 2550 0942 03C3     		stmia	r3!, {r0, r1}
 2551 0944 229B     		ldr	r3, [sp, #136]
 2552 0946 0093     		str	r3, [sp]
 2553 0948 1E98     		ldr	r0, [sp, #120]
 2554 094a 1F99     		ldr	r1, [sp, #124]
 2555 094c 209A     		ldr	r2, [sp, #128]
 2556 094e 219B     		ldr	r3, [sp, #132]
 2557 0950 FFF7FEFF 		bl	charlie
 2558              	.LVL156:
 193:Src/charlie.c ****          return;
 2559              		.loc 2 193 8 view .LVU364
 193:Src/charlie.c ****          return;
 2560              		.loc 2 193 20 is_stmt 0 view .LVU365
 2561 0954 E84B     		ldr	r3, .L108
 2562 0956 1B68     		ldr	r3, [r3]
 193:Src/charlie.c ****          return;
 2563              		.loc 2 193 10 view .LVU366
 2564 0958 012B     		cmp	r3, #1
 2565 095a 01D1     		bne	.LCB2265
 2566 095c FFF76CFB 		bl	.L51	@far jump
 2567              	.LCB2265:
 195:Src/charlie.c ****    }
 2568              		.loc 2 195 8 is_stmt 1 view .LVU367
 2569 0960 FA20     		movs	r0, #250
 2570 0962 4000     		lsls	r0, r0, #1
 2571 0964 FFF7FEFF 		bl	HAL_Delay
 2572              	.LVL157:
 2573 0968 FFF75EFB 		bl	.L55	@ far jump
 2574              	.L89:
 200:Src/charlie.c ****       for(int i=0; i<10000; i++){
 2575              		.loc 2 200 7 view .LVU368
 2576 096c 0023     		movs	r3, #0
 2577 096e 1093     		str	r3, [sp, #64]
 2578 0970 2DA8     		add	r0, sp, #180
 2579 0972 0BA9     		add	r1, sp, #44
 2580 0974 0B00     		movs	r3, r1
 2581 0976 0200     		movs	r2, r0
 2582 0978 23CA     		ldmia	r2!, {r0, r1, r5}
 2583 097a 23C3     		stmia	r3!, {r0, r1, r5}
 2584 097c 03CA     		ldmia	r2!, {r0, r1}
 2585 097e 03C3     		stmia	r3!, {r0, r1}
 2586 0980 28A8     		add	r0, sp, #160
 2587 0982 06A9     		add	r1, sp, #24
 2588 0984 0B00     		movs	r3, r1
 2589 0986 0200     		movs	r2, r0
 2590 0988 23CA     		ldmia	r2!, {r0, r1, r5}
 2591 098a 23C3     		stmia	r3!, {r0, r1, r5}
 2592 098c 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/ccaWamBb.s 			page 67


 2593 098e 03C3     		stmia	r3!, {r0, r1}
 2594 0990 23A8     		add	r0, sp, #140
 2595 0992 01A9     		add	r1, sp, #4
 2596 0994 0B00     		movs	r3, r1
 2597 0996 0200     		movs	r2, r0
 2598 0998 23CA     		ldmia	r2!, {r0, r1, r5}
 2599 099a 23C3     		stmia	r3!, {r0, r1, r5}
 2600 099c 03CA     		ldmia	r2!, {r0, r1}
 2601 099e 03C3     		stmia	r3!, {r0, r1}
 2602 09a0 229B     		ldr	r3, [sp, #136]
 2603 09a2 0093     		str	r3, [sp]
 2604 09a4 1E98     		ldr	r0, [sp, #120]
 2605 09a6 1F99     		ldr	r1, [sp, #124]
 2606 09a8 209A     		ldr	r2, [sp, #128]
 2607 09aa 219B     		ldr	r3, [sp, #132]
 2608 09ac FFF7FEFF 		bl	charlie
 2609              	.LVL158:
 201:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2610              		.loc 2 201 7 view .LVU369
 2611              	.LBB8:
 201:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2612              		.loc 2 201 11 view .LVU370
 201:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2613              		.loc 2 201 15 is_stmt 0 view .LVU371
 2614 09b0 0026     		movs	r6, #0
 201:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2615              		.loc 2 201 7 view .LVU372
 2616 09b2 00E0     		b	.L57
 2617              	.LVL159:
 2618              	.L91:
 201:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2619              		.loc 2 201 29 is_stmt 1 discriminator 2 view .LVU373
 201:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2620              		.loc 2 201 30 is_stmt 0 discriminator 2 view .LVU374
 2621 09b4 0136     		adds	r6, r6, #1
 2622              	.LVL160:
 2623              	.L57:
 201:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2624              		.loc 2 201 20 is_stmt 1 discriminator 1 view .LVU375
 201:Src/charlie.c ****          for(int j=1; j<=12; j++){
 2625              		.loc 2 201 7 is_stmt 0 discriminator 1 view .LVU376
 2626 09b6 D14B     		ldr	r3, .L108+4
 2627 09b8 9E42     		cmp	r6, r3
 2628 09ba 01DD     		ble	.LCB2332
 2629 09bc FFF738FB 		bl	.L56	@far jump
 2630              	.LCB2332:
 2631              	.LBB9:
 202:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2632              		.loc 2 202 18 view .LVU377
 2633 09c0 0125     		movs	r5, #1
 2634              	.L59:
 2635              	.LVL161:
 202:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2636              		.loc 2 202 23 is_stmt 1 discriminator 1 view .LVU378
 202:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2637              		.loc 2 202 10 is_stmt 0 discriminator 1 view .LVU379
 2638 09c2 0C2D     		cmp	r5, #12
ARM GAS  /tmp/ccaWamBb.s 			page 68


 2639 09c4 F6DC     		bgt	.L91
 203:Src/charlie.c ****        //      HAL_Delay(1);
 2640              		.loc 2 203 14 is_stmt 1 view .LVU380
 2641 09c6 1095     		str	r5, [sp, #64]
 2642 09c8 2DA8     		add	r0, sp, #180
 2643 09ca 0BA9     		add	r1, sp, #44
 2644 09cc 0B00     		movs	r3, r1
 2645 09ce 0200     		movs	r2, r0
 2646 09d0 83CA     		ldmia	r2!, {r0, r1, r7}
 2647 09d2 83C3     		stmia	r3!, {r0, r1, r7}
 2648 09d4 03CA     		ldmia	r2!, {r0, r1}
 2649 09d6 03C3     		stmia	r3!, {r0, r1}
 2650 09d8 28A8     		add	r0, sp, #160
 2651 09da 06A9     		add	r1, sp, #24
 2652 09dc 0B00     		movs	r3, r1
 2653 09de 0200     		movs	r2, r0
 2654 09e0 83CA     		ldmia	r2!, {r0, r1, r7}
 2655 09e2 83C3     		stmia	r3!, {r0, r1, r7}
 2656 09e4 03CA     		ldmia	r2!, {r0, r1}
 2657 09e6 03C3     		stmia	r3!, {r0, r1}
 2658 09e8 23A8     		add	r0, sp, #140
 2659 09ea 01A9     		add	r1, sp, #4
 2660 09ec 0B00     		movs	r3, r1
 2661 09ee 0200     		movs	r2, r0
 2662 09f0 83CA     		ldmia	r2!, {r0, r1, r7}
 2663 09f2 83C3     		stmia	r3!, {r0, r1, r7}
 2664 09f4 03CA     		ldmia	r2!, {r0, r1}
 2665 09f6 03C3     		stmia	r3!, {r0, r1}
 2666 09f8 229B     		ldr	r3, [sp, #136]
 2667 09fa 0093     		str	r3, [sp]
 2668 09fc 1E98     		ldr	r0, [sp, #120]
 2669 09fe 1F99     		ldr	r1, [sp, #124]
 2670 0a00 209A     		ldr	r2, [sp, #128]
 2671 0a02 219B     		ldr	r3, [sp, #132]
 2672 0a04 FFF7FEFF 		bl	charlie
 2673              	.LVL162:
 205:Src/charlie.c ****                return;
 2674              		.loc 2 205 14 view .LVU381
 205:Src/charlie.c ****                return;
 2675              		.loc 2 205 26 is_stmt 0 view .LVU382
 2676 0a08 BB4B     		ldr	r3, .L108
 2677 0a0a 1B68     		ldr	r3, [r3]
 205:Src/charlie.c ****                return;
 2678              		.loc 2 205 16 view .LVU383
 2679 0a0c 012B     		cmp	r3, #1
 2680 0a0e 01D1     		bne	.LCB2379
 2681 0a10 FFF712FB 		bl	.L51	@far jump
 2682              	.LCB2379:
 202:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2683              		.loc 2 202 30 is_stmt 1 discriminator 2 view .LVU384
 202:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2684              		.loc 2 202 31 is_stmt 0 discriminator 2 view .LVU385
 2685 0a14 0135     		adds	r5, r5, #1
 2686              	.LVL163:
 202:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2687              		.loc 2 202 31 discriminator 2 view .LVU386
 2688 0a16 D4E7     		b	.L59
ARM GAS  /tmp/ccaWamBb.s 			page 69


 2689              	.LVL164:
 2690              	.L94:
 202:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 2691              		.loc 2 202 31 discriminator 2 view .LVU387
 2692              	.LBE9:
 2693              	.LBE8:
 2694              	.LBB10:
 216:Src/charlie.c ****             HAL_Delay(500);
 2695              		.loc 2 216 13 is_stmt 1 view .LVU388
 2696 0a18 0B33     		adds	r3, r3, #11
 2697              	.LVL165:
 216:Src/charlie.c ****             HAL_Delay(500);
 2698              		.loc 2 216 13 is_stmt 0 view .LVU389
 2699 0a1a 1093     		str	r3, [sp, #64]
 2700 0a1c 2DA8     		add	r0, sp, #180
 2701 0a1e 0BA9     		add	r1, sp, #44
 2702 0a20 0B00     		movs	r3, r1
 2703 0a22 0200     		movs	r2, r0
 2704 0a24 13CA     		ldmia	r2!, {r0, r1, r4}
 2705 0a26 13C3     		stmia	r3!, {r0, r1, r4}
 2706 0a28 03CA     		ldmia	r2!, {r0, r1}
 2707 0a2a 03C3     		stmia	r3!, {r0, r1}
 2708 0a2c 28A8     		add	r0, sp, #160
 2709 0a2e 06A9     		add	r1, sp, #24
 2710 0a30 0B00     		movs	r3, r1
 2711 0a32 0200     		movs	r2, r0
 2712 0a34 13CA     		ldmia	r2!, {r0, r1, r4}
 2713 0a36 13C3     		stmia	r3!, {r0, r1, r4}
 2714 0a38 03CA     		ldmia	r2!, {r0, r1}
 2715 0a3a 03C3     		stmia	r3!, {r0, r1}
 2716 0a3c 23A8     		add	r0, sp, #140
 2717 0a3e 01A9     		add	r1, sp, #4
 2718 0a40 0B00     		movs	r3, r1
 2719 0a42 0200     		movs	r2, r0
 2720 0a44 13CA     		ldmia	r2!, {r0, r1, r4}
 2721 0a46 13C3     		stmia	r3!, {r0, r1, r4}
 2722 0a48 03CA     		ldmia	r2!, {r0, r1}
 2723 0a4a 03C3     		stmia	r3!, {r0, r1}
 2724 0a4c 229B     		ldr	r3, [sp, #136]
 2725 0a4e 0093     		str	r3, [sp]
 2726 0a50 1E98     		ldr	r0, [sp, #120]
 2727 0a52 1F99     		ldr	r1, [sp, #124]
 2728 0a54 209A     		ldr	r2, [sp, #128]
 2729 0a56 219B     		ldr	r3, [sp, #132]
 2730 0a58 FFF7FEFF 		bl	charlie
 2731              	.LVL166:
 217:Src/charlie.c ****             if(stopFlag == 1)
 2732              		.loc 2 217 13 is_stmt 1 view .LVU390
 2733 0a5c FA20     		movs	r0, #250
 2734 0a5e 4000     		lsls	r0, r0, #1
 2735 0a60 FFF7FEFF 		bl	HAL_Delay
 2736              	.LVL167:
 218:Src/charlie.c ****                return;
 2737              		.loc 2 218 13 view .LVU391
 218:Src/charlie.c ****                return;
 2738              		.loc 2 218 25 is_stmt 0 view .LVU392
 2739 0a64 A44B     		ldr	r3, .L108
ARM GAS  /tmp/ccaWamBb.s 			page 70


 2740 0a66 1B68     		ldr	r3, [r3]
 218:Src/charlie.c ****                return;
 2741              		.loc 2 218 15 view .LVU393
 2742 0a68 012B     		cmp	r3, #1
 2743 0a6a 00D0     		beq	.LCB2439
 2744 0a6c A3E1     		b	.L61	@long jump
 2745              	.LCB2439:
 218:Src/charlie.c ****                return;
 2746              		.loc 2 218 15 view .LVU394
 2747 0a6e FFF7E3FA 		bl	.L51	@ far jump
 2748              	.LVL168:
 2749              	.L95:
 2750              	.LBB11:
 222:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 2751              		.loc 2 222 21 view .LVU395
 2752 0a72 0023     		movs	r3, #0
 2753              	.LVL169:
 222:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 2754              		.loc 2 222 21 view .LVU396
 2755 0a74 9B46     		mov	fp, r3
 2756              	.L62:
 2757              	.LVL170:
 222:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 2758              		.loc 2 222 27 is_stmt 1 discriminator 1 view .LVU397
 222:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 2759              		.loc 2 222 13 is_stmt 0 discriminator 1 view .LVU398
 2760 0a76 A14B     		ldr	r3, .L108+4
 2761 0a78 9B45     		cmp	fp, r3
 2762 0a7a 49DC     		bgt	.L92
 223:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 1);
 2763              		.loc 2 223 16 is_stmt 1 view .LVU399
 2764 0a7c 0B23     		movs	r3, #11
 2765 0a7e 1093     		str	r3, [sp, #64]
 2766 0a80 2DAB     		add	r3, sp, #180
 2767 0a82 9946     		mov	r9, r3
 2768 0a84 0BAB     		add	r3, sp, #44
 2769 0a86 9846     		mov	r8, r3
 2770 0a88 4A46     		mov	r2, r9
 2771 0a8a 13CA     		ldmia	r2!, {r0, r1, r4}
 2772 0a8c 13C3     		stmia	r3!, {r0, r1, r4}
 2773 0a8e 03CA     		ldmia	r2!, {r0, r1}
 2774 0a90 03C3     		stmia	r3!, {r0, r1}
 2775 0a92 28AF     		add	r7, sp, #160
 2776 0a94 06AE     		add	r6, sp, #24
 2777 0a96 3300     		movs	r3, r6
 2778 0a98 3A00     		movs	r2, r7
 2779 0a9a 13CA     		ldmia	r2!, {r0, r1, r4}
 2780 0a9c 13C3     		stmia	r3!, {r0, r1, r4}
 2781 0a9e 03CA     		ldmia	r2!, {r0, r1}
 2782 0aa0 03C3     		stmia	r3!, {r0, r1}
 2783 0aa2 23AD     		add	r5, sp, #140
 2784 0aa4 01AB     		add	r3, sp, #4
 2785 0aa6 1393     		str	r3, [sp, #76]
 2786 0aa8 2A00     		movs	r2, r5
 2787 0aaa 13CA     		ldmia	r2!, {r0, r1, r4}
 2788 0aac 13C3     		stmia	r3!, {r0, r1, r4}
 2789 0aae 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/ccaWamBb.s 			page 71


 2790 0ab0 03C3     		stmia	r3!, {r0, r1}
 2791 0ab2 229B     		ldr	r3, [sp, #136]
 2792 0ab4 0093     		str	r3, [sp]
 2793 0ab6 1E98     		ldr	r0, [sp, #120]
 2794 0ab8 1F99     		ldr	r1, [sp, #124]
 2795 0aba 209A     		ldr	r2, [sp, #128]
 2796 0abc 219B     		ldr	r3, [sp, #132]
 2797 0abe FFF7FEFF 		bl	charlie
 2798              	.LVL171:
 224:Src/charlie.c ****                if(stopFlag == 1)
 2799              		.loc 2 224 16 view .LVU400
 2800 0ac2 0123     		movs	r3, #1
 2801 0ac4 1093     		str	r3, [sp, #64]
 2802 0ac6 4346     		mov	r3, r8
 2803 0ac8 4A46     		mov	r2, r9
 2804 0aca 13CA     		ldmia	r2!, {r0, r1, r4}
 2805 0acc 13C3     		stmia	r3!, {r0, r1, r4}
 2806 0ace 03CA     		ldmia	r2!, {r0, r1}
 2807 0ad0 03C3     		stmia	r3!, {r0, r1}
 2808 0ad2 3300     		movs	r3, r6
 2809 0ad4 3A00     		movs	r2, r7
 2810 0ad6 13CA     		ldmia	r2!, {r0, r1, r4}
 2811 0ad8 13C3     		stmia	r3!, {r0, r1, r4}
 2812 0ada 03CA     		ldmia	r2!, {r0, r1}
 2813 0adc 03C3     		stmia	r3!, {r0, r1}
 2814 0ade 1399     		ldr	r1, [sp, #76]
 2815 0ae0 0B00     		movs	r3, r1
 2816 0ae2 2A00     		movs	r2, r5
 2817 0ae4 13CA     		ldmia	r2!, {r0, r1, r4}
 2818 0ae6 13C3     		stmia	r3!, {r0, r1, r4}
 2819 0ae8 03CA     		ldmia	r2!, {r0, r1}
 2820 0aea 03C3     		stmia	r3!, {r0, r1}
 2821 0aec 229B     		ldr	r3, [sp, #136]
 2822 0aee 0093     		str	r3, [sp]
 2823 0af0 1E98     		ldr	r0, [sp, #120]
 2824 0af2 1F99     		ldr	r1, [sp, #124]
 2825 0af4 209A     		ldr	r2, [sp, #128]
 2826 0af6 219B     		ldr	r3, [sp, #132]
 2827 0af8 FFF7FEFF 		bl	charlie
 2828              	.LVL172:
 225:Src/charlie.c ****                   return;
 2829              		.loc 2 225 16 view .LVU401
 225:Src/charlie.c ****                   return;
 2830              		.loc 2 225 28 is_stmt 0 view .LVU402
 2831 0afc 7E4B     		ldr	r3, .L108
 2832 0afe 1B68     		ldr	r3, [r3]
 225:Src/charlie.c ****                   return;
 2833              		.loc 2 225 18 view .LVU403
 2834 0b00 012B     		cmp	r3, #1
 2835 0b02 01D1     		bne	.LCB2528
 2836 0b04 FFF798FA 		bl	.L51	@far jump
 2837              	.LCB2528:
 222:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 2838              		.loc 2 222 36 is_stmt 1 discriminator 2 view .LVU404
 222:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 2839              		.loc 2 222 37 is_stmt 0 discriminator 2 view .LVU405
 2840 0b08 0123     		movs	r3, #1
ARM GAS  /tmp/ccaWamBb.s 			page 72


 2841 0b0a 9C46     		mov	ip, r3
 2842 0b0c E344     		add	fp, fp, ip
 2843              	.LVL173:
 222:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 2844              		.loc 2 222 37 discriminator 2 view .LVU406
 2845 0b0e B2E7     		b	.L62
 2846              	.L92:
 222:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 2847              		.loc 2 222 37 discriminator 2 view .LVU407
 2848              	.LBE11:
 228:Src/charlie.c ****          }
 2849              		.loc 2 228 13 is_stmt 1 view .LVU408
 2850 0b10 0A20     		movs	r0, #10
 2851 0b12 FFF7FEFF 		bl	HAL_Delay
 2852              	.LVL174:
 2853 0b16 52E1     		b	.L63
 2854              	.LVL175:
 2855              	.L96:
 2856              	.LBB12:
 231:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2857              		.loc 2 231 21 is_stmt 0 view .LVU409
 2858 0b18 0023     		movs	r3, #0
 2859              	.LVL176:
 231:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2860              		.loc 2 231 21 view .LVU410
 2861 0b1a 9B46     		mov	fp, r3
 2862              	.L65:
 2863              	.LVL177:
 231:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2864              		.loc 2 231 27 is_stmt 1 discriminator 1 view .LVU411
 231:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2865              		.loc 2 231 13 is_stmt 0 discriminator 1 view .LVU412
 2866 0b1c 774B     		ldr	r3, .L108+4
 2867 0b1e 9B45     		cmp	fp, r3
 2868 0b20 00DD     		ble	.LCB2560
 2869 0b22 50E1     		b	.L66	@long jump
 2870              	.LCB2560:
 232:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 2871              		.loc 2 232 16 is_stmt 1 view .LVU413
 2872 0b24 0223     		movs	r3, #2
 2873 0b26 1093     		str	r3, [sp, #64]
 2874 0b28 2DAB     		add	r3, sp, #180
 2875 0b2a 9946     		mov	r9, r3
 2876 0b2c 0BAB     		add	r3, sp, #44
 2877 0b2e 9846     		mov	r8, r3
 2878 0b30 4A46     		mov	r2, r9
 2879 0b32 13CA     		ldmia	r2!, {r0, r1, r4}
 2880 0b34 13C3     		stmia	r3!, {r0, r1, r4}
 2881 0b36 03CA     		ldmia	r2!, {r0, r1}
 2882 0b38 03C3     		stmia	r3!, {r0, r1}
 2883 0b3a 28AF     		add	r7, sp, #160
 2884 0b3c 06AE     		add	r6, sp, #24
 2885 0b3e 3300     		movs	r3, r6
 2886 0b40 3A00     		movs	r2, r7
 2887 0b42 13CA     		ldmia	r2!, {r0, r1, r4}
 2888 0b44 13C3     		stmia	r3!, {r0, r1, r4}
 2889 0b46 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/ccaWamBb.s 			page 73


 2890 0b48 03C3     		stmia	r3!, {r0, r1}
 2891 0b4a 23AD     		add	r5, sp, #140
 2892 0b4c 01AB     		add	r3, sp, #4
 2893 0b4e 1393     		str	r3, [sp, #76]
 2894 0b50 2A00     		movs	r2, r5
 2895 0b52 13CA     		ldmia	r2!, {r0, r1, r4}
 2896 0b54 13C3     		stmia	r3!, {r0, r1, r4}
 2897 0b56 03CA     		ldmia	r2!, {r0, r1}
 2898 0b58 03C3     		stmia	r3!, {r0, r1}
 2899 0b5a 229B     		ldr	r3, [sp, #136]
 2900 0b5c 0093     		str	r3, [sp]
 2901 0b5e 1E98     		ldr	r0, [sp, #120]
 2902 0b60 1F99     		ldr	r1, [sp, #124]
 2903 0b62 209A     		ldr	r2, [sp, #128]
 2904 0b64 219B     		ldr	r3, [sp, #132]
 2905 0b66 FFF7FEFF 		bl	charlie
 2906              	.LVL178:
 233:Src/charlie.c ****                if(stopFlag == 1)
 2907              		.loc 2 233 16 view .LVU414
 2908 0b6a 0A23     		movs	r3, #10
 2909 0b6c 1093     		str	r3, [sp, #64]
 2910 0b6e 4346     		mov	r3, r8
 2911 0b70 4A46     		mov	r2, r9
 2912 0b72 13CA     		ldmia	r2!, {r0, r1, r4}
 2913 0b74 13C3     		stmia	r3!, {r0, r1, r4}
 2914 0b76 03CA     		ldmia	r2!, {r0, r1}
 2915 0b78 03C3     		stmia	r3!, {r0, r1}
 2916 0b7a 3300     		movs	r3, r6
 2917 0b7c 3A00     		movs	r2, r7
 2918 0b7e 13CA     		ldmia	r2!, {r0, r1, r4}
 2919 0b80 13C3     		stmia	r3!, {r0, r1, r4}
 2920 0b82 03CA     		ldmia	r2!, {r0, r1}
 2921 0b84 03C3     		stmia	r3!, {r0, r1}
 2922 0b86 1399     		ldr	r1, [sp, #76]
 2923 0b88 0B00     		movs	r3, r1
 2924 0b8a 2A00     		movs	r2, r5
 2925 0b8c 13CA     		ldmia	r2!, {r0, r1, r4}
 2926 0b8e 13C3     		stmia	r3!, {r0, r1, r4}
 2927 0b90 03CA     		ldmia	r2!, {r0, r1}
 2928 0b92 03C3     		stmia	r3!, {r0, r1}
 2929 0b94 229B     		ldr	r3, [sp, #136]
 2930 0b96 0093     		str	r3, [sp]
 2931 0b98 1E98     		ldr	r0, [sp, #120]
 2932 0b9a 1F99     		ldr	r1, [sp, #124]
 2933 0b9c 209A     		ldr	r2, [sp, #128]
 2934 0b9e 219B     		ldr	r3, [sp, #132]
 2935 0ba0 FFF7FEFF 		bl	charlie
 2936              	.LVL179:
 234:Src/charlie.c ****                   return;
 2937              		.loc 2 234 16 view .LVU415
 234:Src/charlie.c ****                   return;
 2938              		.loc 2 234 28 is_stmt 0 view .LVU416
 2939 0ba4 544B     		ldr	r3, .L108
 2940 0ba6 1B68     		ldr	r3, [r3]
 234:Src/charlie.c ****                   return;
 2941              		.loc 2 234 18 view .LVU417
 2942 0ba8 012B     		cmp	r3, #1
ARM GAS  /tmp/ccaWamBb.s 			page 74


 2943 0baa 01D1     		bne	.LCB2632
 2944 0bac FFF744FA 		bl	.L51	@far jump
 2945              	.LCB2632:
 231:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2946              		.loc 2 231 36 is_stmt 1 discriminator 2 view .LVU418
 231:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2947              		.loc 2 231 37 is_stmt 0 discriminator 2 view .LVU419
 2948 0bb0 0123     		movs	r3, #1
 2949 0bb2 9C46     		mov	ip, r3
 2950 0bb4 E344     		add	fp, fp, ip
 2951              	.LVL180:
 231:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2952              		.loc 2 231 37 discriminator 2 view .LVU420
 2953 0bb6 B1E7     		b	.L65
 2954              	.LVL181:
 2955              	.L93:
 231:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 2956              		.loc 2 231 37 discriminator 2 view .LVU421
 2957              	.LBE12:
 2958              	.LBB13:
 239:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2959              		.loc 2 239 36 is_stmt 1 discriminator 2 view .LVU422
 239:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2960              		.loc 2 239 37 is_stmt 0 discriminator 2 view .LVU423
 2961 0bb8 0123     		movs	r3, #1
 2962 0bba 9C46     		mov	ip, r3
 2963 0bbc E344     		add	fp, fp, ip
 2964              	.LVL182:
 2965              	.L68:
 239:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2966              		.loc 2 239 27 is_stmt 1 discriminator 1 view .LVU424
 239:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 2967              		.loc 2 239 13 is_stmt 0 discriminator 1 view .LVU425
 2968 0bbe 4F4B     		ldr	r3, .L108+4
 2969 0bc0 9B45     		cmp	fp, r3
 2970 0bc2 00DD     		ble	.LCB2661
 2971 0bc4 03E1     		b	.L69	@long jump
 2972              	.LCB2661:
 240:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 9);
 2973              		.loc 2 240 16 is_stmt 1 view .LVU426
 2974 0bc6 0323     		movs	r3, #3
 2975 0bc8 1093     		str	r3, [sp, #64]
 2976 0bca 2DAB     		add	r3, sp, #180
 2977 0bcc 9946     		mov	r9, r3
 2978 0bce 0BAB     		add	r3, sp, #44
 2979 0bd0 9846     		mov	r8, r3
 2980 0bd2 4A46     		mov	r2, r9
 2981 0bd4 13CA     		ldmia	r2!, {r0, r1, r4}
 2982 0bd6 13C3     		stmia	r3!, {r0, r1, r4}
 2983 0bd8 03CA     		ldmia	r2!, {r0, r1}
 2984 0bda 03C3     		stmia	r3!, {r0, r1}
 2985 0bdc 28AF     		add	r7, sp, #160
 2986 0bde 06AE     		add	r6, sp, #24
 2987 0be0 3300     		movs	r3, r6
 2988 0be2 3A00     		movs	r2, r7
 2989 0be4 13CA     		ldmia	r2!, {r0, r1, r4}
 2990 0be6 13C3     		stmia	r3!, {r0, r1, r4}
ARM GAS  /tmp/ccaWamBb.s 			page 75


 2991 0be8 03CA     		ldmia	r2!, {r0, r1}
 2992 0bea 03C3     		stmia	r3!, {r0, r1}
 2993 0bec 23AD     		add	r5, sp, #140
 2994 0bee 01AB     		add	r3, sp, #4
 2995 0bf0 1393     		str	r3, [sp, #76]
 2996 0bf2 2A00     		movs	r2, r5
 2997 0bf4 13CA     		ldmia	r2!, {r0, r1, r4}
 2998 0bf6 13C3     		stmia	r3!, {r0, r1, r4}
 2999 0bf8 03CA     		ldmia	r2!, {r0, r1}
 3000 0bfa 03C3     		stmia	r3!, {r0, r1}
 3001 0bfc 229B     		ldr	r3, [sp, #136]
 3002 0bfe 0093     		str	r3, [sp]
 3003 0c00 1E98     		ldr	r0, [sp, #120]
 3004 0c02 1F99     		ldr	r1, [sp, #124]
 3005 0c04 209A     		ldr	r2, [sp, #128]
 3006 0c06 219B     		ldr	r3, [sp, #132]
 3007 0c08 FFF7FEFF 		bl	charlie
 3008              	.LVL183:
 241:Src/charlie.c ****                if(stopFlag == 1)
 3009              		.loc 2 241 16 view .LVU427
 3010 0c0c 0923     		movs	r3, #9
 3011 0c0e 1093     		str	r3, [sp, #64]
 3012 0c10 4346     		mov	r3, r8
 3013 0c12 4A46     		mov	r2, r9
 3014 0c14 13CA     		ldmia	r2!, {r0, r1, r4}
 3015 0c16 13C3     		stmia	r3!, {r0, r1, r4}
 3016 0c18 03CA     		ldmia	r2!, {r0, r1}
 3017 0c1a 03C3     		stmia	r3!, {r0, r1}
 3018 0c1c 3300     		movs	r3, r6
 3019 0c1e 3A00     		movs	r2, r7
 3020 0c20 13CA     		ldmia	r2!, {r0, r1, r4}
 3021 0c22 13C3     		stmia	r3!, {r0, r1, r4}
 3022 0c24 03CA     		ldmia	r2!, {r0, r1}
 3023 0c26 03C3     		stmia	r3!, {r0, r1}
 3024 0c28 1399     		ldr	r1, [sp, #76]
 3025 0c2a 0B00     		movs	r3, r1
 3026 0c2c 2A00     		movs	r2, r5
 3027 0c2e 13CA     		ldmia	r2!, {r0, r1, r4}
 3028 0c30 13C3     		stmia	r3!, {r0, r1, r4}
 3029 0c32 03CA     		ldmia	r2!, {r0, r1}
 3030 0c34 03C3     		stmia	r3!, {r0, r1}
 3031 0c36 229B     		ldr	r3, [sp, #136]
 3032 0c38 0093     		str	r3, [sp]
 3033 0c3a 1E98     		ldr	r0, [sp, #120]
 3034 0c3c 1F99     		ldr	r1, [sp, #124]
 3035 0c3e 209A     		ldr	r2, [sp, #128]
 3036 0c40 219B     		ldr	r3, [sp, #132]
 3037 0c42 FFF7FEFF 		bl	charlie
 3038              	.LVL184:
 242:Src/charlie.c ****                   return;
 3039              		.loc 2 242 16 view .LVU428
 242:Src/charlie.c ****                   return;
 3040              		.loc 2 242 28 is_stmt 0 view .LVU429
 3041 0c46 2C4B     		ldr	r3, .L108
 3042 0c48 1B68     		ldr	r3, [r3]
 242:Src/charlie.c ****                   return;
 3043              		.loc 2 242 18 view .LVU430
ARM GAS  /tmp/ccaWamBb.s 			page 76


 3044 0c4a 012B     		cmp	r3, #1
 3045 0c4c B4D1     		bne	.L93
 3046 0c4e FFF7F3F9 		bl	.L51	@ far jump
 3047              	.LVL185:
 3048              	.L97:
 239:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3049              		.loc 2 239 21 view .LVU431
 3050 0c52 0023     		movs	r3, #0
 3051              	.LVL186:
 239:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3052              		.loc 2 239 21 view .LVU432
 3053 0c54 9B46     		mov	fp, r3
 3054 0c56 B2E7     		b	.L68
 3055              	.LVL187:
 3056              	.L98:
 239:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 3057              		.loc 2 239 21 view .LVU433
 3058              	.LBE13:
 3059              	.LBB14:
 247:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3060              		.loc 2 247 21 view .LVU434
 3061 0c58 0023     		movs	r3, #0
 3062              	.LVL188:
 247:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3063              		.loc 2 247 21 view .LVU435
 3064 0c5a 9B46     		mov	fp, r3
 3065              	.L71:
 3066              	.LVL189:
 247:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3067              		.loc 2 247 27 is_stmt 1 discriminator 1 view .LVU436
 247:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3068              		.loc 2 247 13 is_stmt 0 discriminator 1 view .LVU437
 3069 0c5c 274B     		ldr	r3, .L108+4
 3070 0c5e 9B45     		cmp	fp, r3
 3071 0c60 00DD     		ble	.LCB2759
 3072 0c62 B8E0     		b	.L72	@long jump
 3073              	.LCB2759:
 248:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 8);
 3074              		.loc 2 248 16 is_stmt 1 view .LVU438
 3075 0c64 0423     		movs	r3, #4
 3076 0c66 1093     		str	r3, [sp, #64]
 3077 0c68 2DAB     		add	r3, sp, #180
 3078 0c6a 9946     		mov	r9, r3
 3079 0c6c 0BAB     		add	r3, sp, #44
 3080 0c6e 9846     		mov	r8, r3
 3081 0c70 4A46     		mov	r2, r9
 3082 0c72 13CA     		ldmia	r2!, {r0, r1, r4}
 3083 0c74 13C3     		stmia	r3!, {r0, r1, r4}
 3084 0c76 03CA     		ldmia	r2!, {r0, r1}
 3085 0c78 03C3     		stmia	r3!, {r0, r1}
 3086 0c7a 28AF     		add	r7, sp, #160
 3087 0c7c 06AE     		add	r6, sp, #24
 3088 0c7e 3300     		movs	r3, r6
 3089 0c80 3A00     		movs	r2, r7
 3090 0c82 13CA     		ldmia	r2!, {r0, r1, r4}
 3091 0c84 13C3     		stmia	r3!, {r0, r1, r4}
 3092 0c86 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/ccaWamBb.s 			page 77


 3093 0c88 03C3     		stmia	r3!, {r0, r1}
 3094 0c8a 23AD     		add	r5, sp, #140
 3095 0c8c 01AB     		add	r3, sp, #4
 3096 0c8e 1393     		str	r3, [sp, #76]
 3097 0c90 2A00     		movs	r2, r5
 3098 0c92 13CA     		ldmia	r2!, {r0, r1, r4}
 3099 0c94 13C3     		stmia	r3!, {r0, r1, r4}
 3100 0c96 03CA     		ldmia	r2!, {r0, r1}
 3101 0c98 03C3     		stmia	r3!, {r0, r1}
 3102 0c9a 229B     		ldr	r3, [sp, #136]
 3103 0c9c 0093     		str	r3, [sp]
 3104 0c9e 1E98     		ldr	r0, [sp, #120]
 3105 0ca0 1F99     		ldr	r1, [sp, #124]
 3106 0ca2 209A     		ldr	r2, [sp, #128]
 3107 0ca4 219B     		ldr	r3, [sp, #132]
 3108 0ca6 FFF7FEFF 		bl	charlie
 3109              	.LVL190:
 249:Src/charlie.c ****                if(stopFlag == 1)
 3110              		.loc 2 249 16 view .LVU439
 3111 0caa 0823     		movs	r3, #8
 3112 0cac 1093     		str	r3, [sp, #64]
 3113 0cae 4346     		mov	r3, r8
 3114 0cb0 4A46     		mov	r2, r9
 3115 0cb2 13CA     		ldmia	r2!, {r0, r1, r4}
 3116 0cb4 13C3     		stmia	r3!, {r0, r1, r4}
 3117 0cb6 03CA     		ldmia	r2!, {r0, r1}
 3118 0cb8 03C3     		stmia	r3!, {r0, r1}
 3119 0cba 3300     		movs	r3, r6
 3120 0cbc 3A00     		movs	r2, r7
 3121 0cbe 13CA     		ldmia	r2!, {r0, r1, r4}
 3122 0cc0 13C3     		stmia	r3!, {r0, r1, r4}
 3123 0cc2 03CA     		ldmia	r2!, {r0, r1}
 3124 0cc4 03C3     		stmia	r3!, {r0, r1}
 3125 0cc6 1399     		ldr	r1, [sp, #76]
 3126 0cc8 0B00     		movs	r3, r1
 3127 0cca 2A00     		movs	r2, r5
 3128 0ccc 13CA     		ldmia	r2!, {r0, r1, r4}
 3129 0cce 13C3     		stmia	r3!, {r0, r1, r4}
 3130 0cd0 03CA     		ldmia	r2!, {r0, r1}
 3131 0cd2 03C3     		stmia	r3!, {r0, r1}
 3132 0cd4 229B     		ldr	r3, [sp, #136]
 3133 0cd6 0093     		str	r3, [sp]
 3134 0cd8 1E98     		ldr	r0, [sp, #120]
 3135 0cda 1F99     		ldr	r1, [sp, #124]
 3136 0cdc 209A     		ldr	r2, [sp, #128]
 3137 0cde 219B     		ldr	r3, [sp, #132]
 3138 0ce0 FFF7FEFF 		bl	charlie
 3139              	.LVL191:
 250:Src/charlie.c ****                   return;
 3140              		.loc 2 250 16 view .LVU440
 250:Src/charlie.c ****                   return;
 3141              		.loc 2 250 28 is_stmt 0 view .LVU441
 3142 0ce4 044B     		ldr	r3, .L108
 3143 0ce6 1B68     		ldr	r3, [r3]
 250:Src/charlie.c ****                   return;
 3144              		.loc 2 250 18 view .LVU442
 3145 0ce8 012B     		cmp	r3, #1
ARM GAS  /tmp/ccaWamBb.s 			page 78


 3146 0cea 01D1     		bne	.LCB2831
 3147 0cec FFF7A4F9 		bl	.L51	@far jump
 3148              	.LCB2831:
 247:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3149              		.loc 2 247 36 is_stmt 1 discriminator 2 view .LVU443
 247:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3150              		.loc 2 247 37 is_stmt 0 discriminator 2 view .LVU444
 3151 0cf0 0123     		movs	r3, #1
 3152 0cf2 9C46     		mov	ip, r3
 3153 0cf4 E344     		add	fp, fp, ip
 3154              	.LVL192:
 247:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3155              		.loc 2 247 37 discriminator 2 view .LVU445
 3156 0cf6 B1E7     		b	.L71
 3157              	.L109:
 3158              		.align	2
 3159              	.L108:
 3160 0cf8 00000000 		.word	.LANCHOR0
 3161 0cfc 0F270000 		.word	9999
 3162              	.LVL193:
 3163              	.L99:
 247:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 3164              		.loc 2 247 37 discriminator 2 view .LVU446
 3165              	.LBE14:
 3166              	.LBB15:
 255:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3167              		.loc 2 255 21 view .LVU447
 3168 0d00 0023     		movs	r3, #0
 3169              	.LVL194:
 255:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3170              		.loc 2 255 21 view .LVU448
 3171 0d02 9B46     		mov	fp, r3
 3172              	.L74:
 3173              	.LVL195:
 255:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3174              		.loc 2 255 27 is_stmt 1 discriminator 1 view .LVU449
 255:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3175              		.loc 2 255 13 is_stmt 0 discriminator 1 view .LVU450
 3176 0d04 4E4B     		ldr	r3, .L110
 3177 0d06 9B45     		cmp	fp, r3
 3178 0d08 68DC     		bgt	.L75
 256:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 7);
 3179              		.loc 2 256 16 is_stmt 1 view .LVU451
 3180 0d0a 0523     		movs	r3, #5
 3181 0d0c 1093     		str	r3, [sp, #64]
 3182 0d0e 2DAB     		add	r3, sp, #180
 3183 0d10 9946     		mov	r9, r3
 3184 0d12 0BAB     		add	r3, sp, #44
 3185 0d14 9846     		mov	r8, r3
 3186 0d16 4A46     		mov	r2, r9
 3187 0d18 13CA     		ldmia	r2!, {r0, r1, r4}
 3188 0d1a 13C3     		stmia	r3!, {r0, r1, r4}
 3189 0d1c 03CA     		ldmia	r2!, {r0, r1}
 3190 0d1e 03C3     		stmia	r3!, {r0, r1}
 3191 0d20 28AF     		add	r7, sp, #160
 3192 0d22 06AE     		add	r6, sp, #24
 3193 0d24 3300     		movs	r3, r6
ARM GAS  /tmp/ccaWamBb.s 			page 79


 3194 0d26 3A00     		movs	r2, r7
 3195 0d28 13CA     		ldmia	r2!, {r0, r1, r4}
 3196 0d2a 13C3     		stmia	r3!, {r0, r1, r4}
 3197 0d2c 03CA     		ldmia	r2!, {r0, r1}
 3198 0d2e 03C3     		stmia	r3!, {r0, r1}
 3199 0d30 23AD     		add	r5, sp, #140
 3200 0d32 01AB     		add	r3, sp, #4
 3201 0d34 1393     		str	r3, [sp, #76]
 3202 0d36 2A00     		movs	r2, r5
 3203 0d38 13CA     		ldmia	r2!, {r0, r1, r4}
 3204 0d3a 13C3     		stmia	r3!, {r0, r1, r4}
 3205 0d3c 03CA     		ldmia	r2!, {r0, r1}
 3206 0d3e 03C3     		stmia	r3!, {r0, r1}
 3207 0d40 229B     		ldr	r3, [sp, #136]
 3208 0d42 0093     		str	r3, [sp]
 3209 0d44 1E98     		ldr	r0, [sp, #120]
 3210 0d46 1F99     		ldr	r1, [sp, #124]
 3211 0d48 209A     		ldr	r2, [sp, #128]
 3212 0d4a 219B     		ldr	r3, [sp, #132]
 3213 0d4c FFF7FEFF 		bl	charlie
 3214              	.LVL196:
 257:Src/charlie.c ****                if(stopFlag == 1)
 3215              		.loc 2 257 16 view .LVU452
 3216 0d50 0723     		movs	r3, #7
 3217 0d52 1093     		str	r3, [sp, #64]
 3218 0d54 4346     		mov	r3, r8
 3219 0d56 4A46     		mov	r2, r9
 3220 0d58 13CA     		ldmia	r2!, {r0, r1, r4}
 3221 0d5a 13C3     		stmia	r3!, {r0, r1, r4}
 3222 0d5c 03CA     		ldmia	r2!, {r0, r1}
 3223 0d5e 03C3     		stmia	r3!, {r0, r1}
 3224 0d60 3300     		movs	r3, r6
 3225 0d62 3A00     		movs	r2, r7
 3226 0d64 13CA     		ldmia	r2!, {r0, r1, r4}
 3227 0d66 13C3     		stmia	r3!, {r0, r1, r4}
 3228 0d68 03CA     		ldmia	r2!, {r0, r1}
 3229 0d6a 03C3     		stmia	r3!, {r0, r1}
 3230 0d6c 1399     		ldr	r1, [sp, #76]
 3231 0d6e 0B00     		movs	r3, r1
 3232 0d70 2A00     		movs	r2, r5
 3233 0d72 13CA     		ldmia	r2!, {r0, r1, r4}
 3234 0d74 13C3     		stmia	r3!, {r0, r1, r4}
 3235 0d76 03CA     		ldmia	r2!, {r0, r1}
 3236 0d78 03C3     		stmia	r3!, {r0, r1}
 3237 0d7a 229B     		ldr	r3, [sp, #136]
 3238 0d7c 0093     		str	r3, [sp]
 3239 0d7e 1E98     		ldr	r0, [sp, #120]
 3240 0d80 1F99     		ldr	r1, [sp, #124]
 3241 0d82 209A     		ldr	r2, [sp, #128]
 3242 0d84 219B     		ldr	r3, [sp, #132]
 3243 0d86 FFF7FEFF 		bl	charlie
 3244              	.LVL197:
 258:Src/charlie.c ****                   return;
 3245              		.loc 2 258 16 view .LVU453
 258:Src/charlie.c ****                   return;
 3246              		.loc 2 258 28 is_stmt 0 view .LVU454
 3247 0d8a 2E4B     		ldr	r3, .L110+4
ARM GAS  /tmp/ccaWamBb.s 			page 80


 3248 0d8c 1B68     		ldr	r3, [r3]
 258:Src/charlie.c ****                   return;
 3249              		.loc 2 258 18 view .LVU455
 3250 0d8e 012B     		cmp	r3, #1
 3251 0d90 01D1     		bne	.LCB2934
 3252 0d92 FFF751F9 		bl	.L51	@far jump
 3253              	.LCB2934:
 255:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3254              		.loc 2 255 36 is_stmt 1 discriminator 2 view .LVU456
 255:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3255              		.loc 2 255 37 is_stmt 0 discriminator 2 view .LVU457
 3256 0d96 0123     		movs	r3, #1
 3257 0d98 9C46     		mov	ip, r3
 3258 0d9a E344     		add	fp, fp, ip
 3259              	.LVL198:
 255:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3260              		.loc 2 255 37 discriminator 2 view .LVU458
 3261 0d9c B2E7     		b	.L74
 3262              	.LVL199:
 3263              	.L77:
 255:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 3264              		.loc 2 255 37 discriminator 2 view .LVU459
 3265              	.LBE15:
 214:Src/charlie.c ****          if(i == 1){
 3266              		.loc 2 214 27 is_stmt 1 discriminator 2 view .LVU460
 214:Src/charlie.c ****          if(i == 1){
 3267              		.loc 2 214 28 is_stmt 0 discriminator 2 view .LVU461
 3268 0d9e 0123     		movs	r3, #1
 3269 0da0 9C46     		mov	ip, r3
 3270 0da2 E244     		add	r10, r10, ip
 3271              	.LVL200:
 3272              	.L60:
 214:Src/charlie.c ****          if(i == 1){
 3273              		.loc 2 214 21 is_stmt 1 discriminator 1 view .LVU462
 214:Src/charlie.c ****          if(i == 1){
 3274              		.loc 2 214 7 is_stmt 0 discriminator 1 view .LVU463
 3275 0da4 5346     		mov	r3, r10
 3276 0da6 072B     		cmp	r3, #7
 3277 0da8 01DD     		ble	.LCB2961
 3278 0daa FFF745F9 		bl	.L51	@far jump
 3279              	.LCB2961:
 215:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 3280              		.loc 2 215 10 is_stmt 1 view .LVU464
 215:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 3281              		.loc 2 215 12 is_stmt 0 view .LVU465
 3282 0dae 5346     		mov	r3, r10
 3283 0db0 012B     		cmp	r3, #1
 3284 0db2 00D1     		bne	.LCB2965
 3285 0db4 30E6     		b	.L94	@long jump
 3286              	.LCB2965:
 3287              	.L61:
 221:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3288              		.loc 2 221 10 is_stmt 1 view .LVU466
 221:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3289              		.loc 2 221 12 is_stmt 0 view .LVU467
 3290 0db6 5346     		mov	r3, r10
 3291 0db8 022B     		cmp	r3, #2
ARM GAS  /tmp/ccaWamBb.s 			page 81


 3292 0dba 00D1     		bne	.LCB2971
 3293 0dbc 59E6     		b	.L95	@long jump
 3294              	.LCB2971:
 3295              	.L63:
 230:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3296              		.loc 2 230 10 is_stmt 1 view .LVU468
 230:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3297              		.loc 2 230 12 is_stmt 0 view .LVU469
 3298 0dbe 5346     		mov	r3, r10
 3299 0dc0 032B     		cmp	r3, #3
 3300 0dc2 00D1     		bne	.LCB2976
 3301 0dc4 A8E6     		b	.L96	@long jump
 3302              	.LCB2976:
 3303              	.L66:
 238:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3304              		.loc 2 238 10 is_stmt 1 view .LVU470
 238:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3305              		.loc 2 238 12 is_stmt 0 view .LVU471
 3306 0dc6 5346     		mov	r3, r10
 3307 0dc8 042B     		cmp	r3, #4
 3308 0dca 00D1     		bne	.LCB2981
 3309 0dcc 41E7     		b	.L97	@long jump
 3310              	.LCB2981:
 3311              	.L69:
 246:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3312              		.loc 2 246 10 is_stmt 1 view .LVU472
 246:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3313              		.loc 2 246 12 is_stmt 0 view .LVU473
 3314 0dce 5346     		mov	r3, r10
 3315 0dd0 052B     		cmp	r3, #5
 3316 0dd2 00D1     		bne	.LCB2986
 3317 0dd4 40E7     		b	.L98	@long jump
 3318              	.LCB2986:
 3319              	.L72:
 254:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3320              		.loc 2 254 10 is_stmt 1 view .LVU474
 254:Src/charlie.c ****             for(int j =0; j<10000; j++){
 3321              		.loc 2 254 12 is_stmt 0 view .LVU475
 3322 0dd6 5346     		mov	r3, r10
 3323 0dd8 062B     		cmp	r3, #6
 3324 0dda 91D0     		beq	.L99
 3325              	.L75:
 262:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 3326              		.loc 2 262 10 is_stmt 1 view .LVU476
 262:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 3327              		.loc 2 262 12 is_stmt 0 view .LVU477
 3328 0ddc 5346     		mov	r3, r10
 3329 0dde 072B     		cmp	r3, #7
 3330 0de0 DDD1     		bne	.L77
 3331              	.LVL201:
 263:Src/charlie.c ****             HAL_Delay(500);
 3332              		.loc 2 263 13 is_stmt 1 view .LVU478
 3333 0de2 013B     		subs	r3, r3, #1
 3334              	.LVL202:
 263:Src/charlie.c ****             HAL_Delay(500);
 3335              		.loc 2 263 13 is_stmt 0 view .LVU479
 3336 0de4 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/ccaWamBb.s 			page 82


 3337 0de6 2DA8     		add	r0, sp, #180
 3338 0de8 0BA9     		add	r1, sp, #44
 3339 0dea 0B00     		movs	r3, r1
 3340 0dec 0200     		movs	r2, r0
 3341 0dee 13CA     		ldmia	r2!, {r0, r1, r4}
 3342 0df0 13C3     		stmia	r3!, {r0, r1, r4}
 3343 0df2 03CA     		ldmia	r2!, {r0, r1}
 3344 0df4 03C3     		stmia	r3!, {r0, r1}
 3345 0df6 28A8     		add	r0, sp, #160
 3346 0df8 06A9     		add	r1, sp, #24
 3347 0dfa 0B00     		movs	r3, r1
 3348 0dfc 0200     		movs	r2, r0
 3349 0dfe 13CA     		ldmia	r2!, {r0, r1, r4}
 3350 0e00 13C3     		stmia	r3!, {r0, r1, r4}
 3351 0e02 03CA     		ldmia	r2!, {r0, r1}
 3352 0e04 03C3     		stmia	r3!, {r0, r1}
 3353 0e06 23A8     		add	r0, sp, #140
 3354 0e08 01A9     		add	r1, sp, #4
 3355 0e0a 0B00     		movs	r3, r1
 3356 0e0c 0200     		movs	r2, r0
 3357 0e0e 13CA     		ldmia	r2!, {r0, r1, r4}
 3358 0e10 13C3     		stmia	r3!, {r0, r1, r4}
 3359 0e12 03CA     		ldmia	r2!, {r0, r1}
 3360 0e14 03C3     		stmia	r3!, {r0, r1}
 3361 0e16 229B     		ldr	r3, [sp, #136]
 3362 0e18 0093     		str	r3, [sp]
 3363 0e1a 1E98     		ldr	r0, [sp, #120]
 3364 0e1c 1F99     		ldr	r1, [sp, #124]
 3365 0e1e 209A     		ldr	r2, [sp, #128]
 3366 0e20 219B     		ldr	r3, [sp, #132]
 3367 0e22 FFF7FEFF 		bl	charlie
 3368              	.LVL203:
 264:Src/charlie.c ****             if(stopFlag == 1)
 3369              		.loc 2 264 13 is_stmt 1 view .LVU480
 3370 0e26 FA20     		movs	r0, #250
 3371 0e28 4000     		lsls	r0, r0, #1
 3372 0e2a FFF7FEFF 		bl	HAL_Delay
 3373              	.LVL204:
 265:Src/charlie.c ****                return;
 3374              		.loc 2 265 13 view .LVU481
 265:Src/charlie.c ****                return;
 3375              		.loc 2 265 25 is_stmt 0 view .LVU482
 3376 0e2e 054B     		ldr	r3, .L110+4
 3377 0e30 1B68     		ldr	r3, [r3]
 265:Src/charlie.c ****                return;
 3378              		.loc 2 265 15 view .LVU483
 3379 0e32 012B     		cmp	r3, #1
 3380 0e34 B3D1     		bne	.L77
 3381 0e36 FFF7FFF8 		bl	.L51	@ far jump
 3382              	.LVL205:
 3383              	.L90:
 214:Src/charlie.c ****          if(i == 1){
 3384              		.loc 2 214 15 view .LVU484
 3385 0e3a 0123     		movs	r3, #1
 3386 0e3c 9A46     		mov	r10, r3
 3387 0e3e B1E7     		b	.L60
 3388              	.L111:
ARM GAS  /tmp/ccaWamBb.s 			page 83


 3389              		.align	2
 3390              	.L110:
 3391 0e40 0F270000 		.word	9999
 3392 0e44 00000000 		.word	.LANCHOR0
 3393              	.LBE10:
 3394              		.cfi_endproc
 3395              	.LFE45:
 3397              		.section	.text.initA,"ax",%progbits
 3398              		.align	1
 3399              		.global	initA
 3400              		.syntax unified
 3401              		.code	16
 3402              		.thumb_func
 3403              		.fpu softvfp
 3405              	initA:
 3406              	.LVL206:
 3407              	.LFB47:
 461:Src/charlie.c **** 
 462:Src/charlie.c **** GPIO_InitTypeDef initA(){
 3408              		.loc 2 462 25 is_stmt 1 view -0
 3409              		.cfi_startproc
 3410              		@ args = 0, pretend = 0, frame = 24
 3411              		@ frame_needed = 0, uses_anonymous_args = 0
 3412              		.loc 2 462 25 is_stmt 0 view .LVU486
 3413 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3414              	.LCFI15:
 3415              		.cfi_def_cfa_offset 20
 3416              		.cfi_offset 4, -20
 3417              		.cfi_offset 5, -16
 3418              		.cfi_offset 6, -12
 3419              		.cfi_offset 7, -8
 3420              		.cfi_offset 14, -4
 3421 0002 87B0     		sub	sp, sp, #28
 3422              	.LCFI16:
 3423              		.cfi_def_cfa_offset 48
 3424 0004 0500     		movs	r5, r0
 463:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3425              		.loc 2 463 3 is_stmt 1 view .LVU487
 3426              		.loc 2 463 20 is_stmt 0 view .LVU488
 3427 0006 01AC     		add	r4, sp, #4
 3428 0008 1422     		movs	r2, #20
 3429 000a 0021     		movs	r1, #0
 3430 000c 2000     		movs	r0, r4
 3431              	.LVL207:
 3432              		.loc 2 463 20 view .LVU489
 3433 000e FFF7FEFF 		bl	memset
 3434              	.LVL208:
 464:Src/charlie.c **** 
 465:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 466:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, A_Pin, GPIO_PIN_RESET);
 3435              		.loc 2 466 3 is_stmt 1 view .LVU490
 3436 0012 9020     		movs	r0, #144
 3437 0014 0022     		movs	r2, #0
 3438 0016 0121     		movs	r1, #1
 3439 0018 C005     		lsls	r0, r0, #23
 3440 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3441              	.LVL209:
ARM GAS  /tmp/ccaWamBb.s 			page 84


 467:Src/charlie.c **** 
 468:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 469:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3442              		.loc 2 469 3 view .LVU491
 3443              		.loc 2 469 23 is_stmt 0 view .LVU492
 3444 001e 8023     		movs	r3, #128
 3445 0020 5B00     		lsls	r3, r3, #1
 3446 0022 0193     		str	r3, [sp, #4]
 470:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3447              		.loc 2 470 3 is_stmt 1 view .LVU493
 3448              		.loc 2 470 24 is_stmt 0 view .LVU494
 3449 0024 0026     		movs	r6, #0
 3450 0026 6660     		str	r6, [r4, #4]
 471:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3451              		.loc 2 471 3 is_stmt 1 view .LVU495
 3452              		.loc 2 471 24 is_stmt 0 view .LVU496
 3453 0028 0127     		movs	r7, #1
 3454 002a A760     		str	r7, [r4, #8]
 472:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3455              		.loc 2 472 3 is_stmt 1 view .LVU497
 3456 002c 2100     		movs	r1, r4
 3457 002e 0748     		ldr	r0, .L113
 3458 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3459              	.LVL210:
 473:Src/charlie.c **** 
 474:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 475:Src/charlie.c ****   GPIO_InitStruct.Pin = A_Pin;
 3460              		.loc 2 475 3 view .LVU498
 3461              		.loc 2 475 23 is_stmt 0 view .LVU499
 3462 0034 0197     		str	r7, [sp, #4]
 476:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3463              		.loc 2 476 3 is_stmt 1 view .LVU500
 3464              		.loc 2 476 24 is_stmt 0 view .LVU501
 3465 0036 6760     		str	r7, [r4, #4]
 477:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3466              		.loc 2 477 3 is_stmt 1 view .LVU502
 3467              		.loc 2 477 24 is_stmt 0 view .LVU503
 3468 0038 A660     		str	r6, [r4, #8]
 478:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3469              		.loc 2 478 3 is_stmt 1 view .LVU504
 3470              		.loc 2 478 25 is_stmt 0 view .LVU505
 3471 003a E660     		str	r6, [r4, #12]
 479:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 480:Src/charlie.c **** 
 481:Src/charlie.c ****   return GPIO_InitStruct;
 3472              		.loc 2 481 3 is_stmt 1 view .LVU506
 3473              		.loc 2 481 10 is_stmt 0 view .LVU507
 3474 003c 2B00     		movs	r3, r5
 3475 003e 07CC     		ldmia	r4!, {r0, r1, r2}
 3476 0040 07C3     		stmia	r3!, {r0, r1, r2}
 3477 0042 06CC     		ldmia	r4!, {r1, r2}
 3478 0044 06C3     		stmia	r3!, {r1, r2}
 482:Src/charlie.c **** }
 3479              		.loc 2 482 1 view .LVU508
 3480 0046 2800     		movs	r0, r5
 3481 0048 07B0     		add	sp, sp, #28
 3482              		@ sp needed
ARM GAS  /tmp/ccaWamBb.s 			page 85


 3483              	.LVL211:
 3484              		.loc 2 482 1 view .LVU509
 3485 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 3486              	.L114:
 3487              		.align	2
 3488              	.L113:
 3489 004c 00040048 		.word	1207960576
 3490              		.cfi_endproc
 3491              	.LFE47:
 3493              		.section	.text.initB,"ax",%progbits
 3494              		.align	1
 3495              		.global	initB
 3496              		.syntax unified
 3497              		.code	16
 3498              		.thumb_func
 3499              		.fpu softvfp
 3501              	initB:
 3502              	.LVL212:
 3503              	.LFB48:
 483:Src/charlie.c **** 
 484:Src/charlie.c **** GPIO_InitTypeDef initB(){
 3504              		.loc 2 484 25 is_stmt 1 view -0
 3505              		.cfi_startproc
 3506              		@ args = 0, pretend = 0, frame = 24
 3507              		@ frame_needed = 0, uses_anonymous_args = 0
 3508              		.loc 2 484 25 is_stmt 0 view .LVU511
 3509 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3510              	.LCFI17:
 3511              		.cfi_def_cfa_offset 20
 3512              		.cfi_offset 4, -20
 3513              		.cfi_offset 5, -16
 3514              		.cfi_offset 6, -12
 3515              		.cfi_offset 7, -8
 3516              		.cfi_offset 14, -4
 3517 0002 87B0     		sub	sp, sp, #28
 3518              	.LCFI18:
 3519              		.cfi_def_cfa_offset 48
 3520 0004 0500     		movs	r5, r0
 485:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3521              		.loc 2 485 3 is_stmt 1 view .LVU512
 3522              		.loc 2 485 20 is_stmt 0 view .LVU513
 3523 0006 01AC     		add	r4, sp, #4
 3524 0008 1422     		movs	r2, #20
 3525 000a 0021     		movs	r1, #0
 3526 000c 2000     		movs	r0, r4
 3527              	.LVL213:
 3528              		.loc 2 485 20 view .LVU514
 3529 000e FFF7FEFF 		bl	memset
 3530              	.LVL214:
 486:Src/charlie.c **** 
 487:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 488:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, B_Pin, GPIO_PIN_RESET);
 3531              		.loc 2 488 3 is_stmt 1 view .LVU515
 3532 0012 9020     		movs	r0, #144
 3533 0014 0022     		movs	r2, #0
 3534 0016 0221     		movs	r1, #2
 3535 0018 C005     		lsls	r0, r0, #23
ARM GAS  /tmp/ccaWamBb.s 			page 86


 3536 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3537              	.LVL215:
 489:Src/charlie.c **** 
 490:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 491:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3538              		.loc 2 491 3 view .LVU516
 3539              		.loc 2 491 23 is_stmt 0 view .LVU517
 3540 001e 8023     		movs	r3, #128
 3541 0020 5B00     		lsls	r3, r3, #1
 3542 0022 0193     		str	r3, [sp, #4]
 492:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3543              		.loc 2 492 3 is_stmt 1 view .LVU518
 3544              		.loc 2 492 24 is_stmt 0 view .LVU519
 3545 0024 0026     		movs	r6, #0
 3546 0026 6660     		str	r6, [r4, #4]
 493:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3547              		.loc 2 493 3 is_stmt 1 view .LVU520
 3548              		.loc 2 493 24 is_stmt 0 view .LVU521
 3549 0028 0127     		movs	r7, #1
 3550 002a A760     		str	r7, [r4, #8]
 494:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3551              		.loc 2 494 3 is_stmt 1 view .LVU522
 3552 002c 2100     		movs	r1, r4
 3553 002e 0848     		ldr	r0, .L116
 3554 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3555              	.LVL216:
 495:Src/charlie.c **** 
 496:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 497:Src/charlie.c ****   GPIO_InitStruct.Pin = B_Pin;
 3556              		.loc 2 497 3 view .LVU523
 3557              		.loc 2 497 23 is_stmt 0 view .LVU524
 3558 0034 0223     		movs	r3, #2
 3559 0036 0193     		str	r3, [sp, #4]
 498:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3560              		.loc 2 498 3 is_stmt 1 view .LVU525
 3561              		.loc 2 498 24 is_stmt 0 view .LVU526
 3562 0038 6760     		str	r7, [r4, #4]
 499:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3563              		.loc 2 499 3 is_stmt 1 view .LVU527
 3564              		.loc 2 499 24 is_stmt 0 view .LVU528
 3565 003a A660     		str	r6, [r4, #8]
 500:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3566              		.loc 2 500 3 is_stmt 1 view .LVU529
 3567              		.loc 2 500 25 is_stmt 0 view .LVU530
 3568 003c E660     		str	r6, [r4, #12]
 501:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 502:Src/charlie.c **** 
 503:Src/charlie.c ****   return GPIO_InitStruct;
 3569              		.loc 2 503 3 is_stmt 1 view .LVU531
 3570              		.loc 2 503 10 is_stmt 0 view .LVU532
 3571 003e 2B00     		movs	r3, r5
 3572 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 3573 0042 07C3     		stmia	r3!, {r0, r1, r2}
 3574 0044 06CC     		ldmia	r4!, {r1, r2}
 3575 0046 06C3     		stmia	r3!, {r1, r2}
 504:Src/charlie.c **** }
 3576              		.loc 2 504 1 view .LVU533
ARM GAS  /tmp/ccaWamBb.s 			page 87


 3577 0048 2800     		movs	r0, r5
 3578 004a 07B0     		add	sp, sp, #28
 3579              		@ sp needed
 3580              	.LVL217:
 3581              		.loc 2 504 1 view .LVU534
 3582 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 3583              	.L117:
 3584 004e C046     		.align	2
 3585              	.L116:
 3586 0050 00040048 		.word	1207960576
 3587              		.cfi_endproc
 3588              	.LFE48:
 3590              		.section	.text.initC,"ax",%progbits
 3591              		.align	1
 3592              		.global	initC
 3593              		.syntax unified
 3594              		.code	16
 3595              		.thumb_func
 3596              		.fpu softvfp
 3598              	initC:
 3599              	.LVL218:
 3600              	.LFB49:
 505:Src/charlie.c **** 
 506:Src/charlie.c **** GPIO_InitTypeDef initC(){
 3601              		.loc 2 506 25 is_stmt 1 view -0
 3602              		.cfi_startproc
 3603              		@ args = 0, pretend = 0, frame = 24
 3604              		@ frame_needed = 0, uses_anonymous_args = 0
 3605              		.loc 2 506 25 is_stmt 0 view .LVU536
 3606 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3607              	.LCFI19:
 3608              		.cfi_def_cfa_offset 20
 3609              		.cfi_offset 4, -20
 3610              		.cfi_offset 5, -16
 3611              		.cfi_offset 6, -12
 3612              		.cfi_offset 7, -8
 3613              		.cfi_offset 14, -4
 3614 0002 87B0     		sub	sp, sp, #28
 3615              	.LCFI20:
 3616              		.cfi_def_cfa_offset 48
 3617 0004 0500     		movs	r5, r0
 507:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3618              		.loc 2 507 3 is_stmt 1 view .LVU537
 3619              		.loc 2 507 20 is_stmt 0 view .LVU538
 3620 0006 01AC     		add	r4, sp, #4
 3621 0008 1422     		movs	r2, #20
 3622 000a 0021     		movs	r1, #0
 3623 000c 2000     		movs	r0, r4
 3624              	.LVL219:
 3625              		.loc 2 507 20 view .LVU539
 3626 000e FFF7FEFF 		bl	memset
 3627              	.LVL220:
 508:Src/charlie.c **** 
 509:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 510:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, C_Pin, GPIO_PIN_RESET);
 3628              		.loc 2 510 3 is_stmt 1 view .LVU540
 3629 0012 9020     		movs	r0, #144
ARM GAS  /tmp/ccaWamBb.s 			page 88


 3630 0014 0022     		movs	r2, #0
 3631 0016 0421     		movs	r1, #4
 3632 0018 C005     		lsls	r0, r0, #23
 3633 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3634              	.LVL221:
 511:Src/charlie.c **** 
 512:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 513:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3635              		.loc 2 513 3 view .LVU541
 3636              		.loc 2 513 23 is_stmt 0 view .LVU542
 3637 001e 8023     		movs	r3, #128
 3638 0020 5B00     		lsls	r3, r3, #1
 3639 0022 0193     		str	r3, [sp, #4]
 514:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3640              		.loc 2 514 3 is_stmt 1 view .LVU543
 3641              		.loc 2 514 24 is_stmt 0 view .LVU544
 3642 0024 0026     		movs	r6, #0
 3643 0026 6660     		str	r6, [r4, #4]
 515:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3644              		.loc 2 515 3 is_stmt 1 view .LVU545
 3645              		.loc 2 515 24 is_stmt 0 view .LVU546
 3646 0028 0127     		movs	r7, #1
 3647 002a A760     		str	r7, [r4, #8]
 516:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3648              		.loc 2 516 3 is_stmt 1 view .LVU547
 3649 002c 2100     		movs	r1, r4
 3650 002e 0848     		ldr	r0, .L119
 3651 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3652              	.LVL222:
 517:Src/charlie.c **** 
 518:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 519:Src/charlie.c ****   GPIO_InitStruct.Pin = C_Pin;
 3653              		.loc 2 519 3 view .LVU548
 3654              		.loc 2 519 23 is_stmt 0 view .LVU549
 3655 0034 0423     		movs	r3, #4
 3656 0036 0193     		str	r3, [sp, #4]
 520:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3657              		.loc 2 520 3 is_stmt 1 view .LVU550
 3658              		.loc 2 520 24 is_stmt 0 view .LVU551
 3659 0038 6760     		str	r7, [r4, #4]
 521:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3660              		.loc 2 521 3 is_stmt 1 view .LVU552
 3661              		.loc 2 521 24 is_stmt 0 view .LVU553
 3662 003a A660     		str	r6, [r4, #8]
 522:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3663              		.loc 2 522 3 is_stmt 1 view .LVU554
 3664              		.loc 2 522 25 is_stmt 0 view .LVU555
 3665 003c E660     		str	r6, [r4, #12]
 523:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 524:Src/charlie.c **** 
 525:Src/charlie.c ****   return GPIO_InitStruct;
 3666              		.loc 2 525 3 is_stmt 1 view .LVU556
 3667              		.loc 2 525 10 is_stmt 0 view .LVU557
 3668 003e 2B00     		movs	r3, r5
 3669 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 3670 0042 07C3     		stmia	r3!, {r0, r1, r2}
 3671 0044 06CC     		ldmia	r4!, {r1, r2}
ARM GAS  /tmp/ccaWamBb.s 			page 89


 3672 0046 06C3     		stmia	r3!, {r1, r2}
 526:Src/charlie.c **** }
 3673              		.loc 2 526 1 view .LVU558
 3674 0048 2800     		movs	r0, r5
 3675 004a 07B0     		add	sp, sp, #28
 3676              		@ sp needed
 3677              	.LVL223:
 3678              		.loc 2 526 1 view .LVU559
 3679 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 3680              	.L120:
 3681 004e C046     		.align	2
 3682              	.L119:
 3683 0050 00040048 		.word	1207960576
 3684              		.cfi_endproc
 3685              	.LFE49:
 3687              		.section	.text.initD,"ax",%progbits
 3688              		.align	1
 3689              		.global	initD
 3690              		.syntax unified
 3691              		.code	16
 3692              		.thumb_func
 3693              		.fpu softvfp
 3695              	initD:
 3696              	.LVL224:
 3697              	.LFB50:
 527:Src/charlie.c **** 
 528:Src/charlie.c **** GPIO_InitTypeDef initD(){
 3698              		.loc 2 528 25 is_stmt 1 view -0
 3699              		.cfi_startproc
 3700              		@ args = 0, pretend = 0, frame = 24
 3701              		@ frame_needed = 0, uses_anonymous_args = 0
 3702              		.loc 2 528 25 is_stmt 0 view .LVU561
 3703 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3704              	.LCFI21:
 3705              		.cfi_def_cfa_offset 20
 3706              		.cfi_offset 4, -20
 3707              		.cfi_offset 5, -16
 3708              		.cfi_offset 6, -12
 3709              		.cfi_offset 7, -8
 3710              		.cfi_offset 14, -4
 3711 0002 87B0     		sub	sp, sp, #28
 3712              	.LCFI22:
 3713              		.cfi_def_cfa_offset 48
 3714 0004 0500     		movs	r5, r0
 529:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 3715              		.loc 2 529 3 is_stmt 1 view .LVU562
 3716              		.loc 2 529 20 is_stmt 0 view .LVU563
 3717 0006 01AC     		add	r4, sp, #4
 3718 0008 1422     		movs	r2, #20
 3719 000a 0021     		movs	r1, #0
 3720 000c 2000     		movs	r0, r4
 3721              	.LVL225:
 3722              		.loc 2 529 20 view .LVU564
 3723 000e FFF7FEFF 		bl	memset
 3724              	.LVL226:
 530:Src/charlie.c **** 
 531:Src/charlie.c ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/ccaWamBb.s 			page 90


 532:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, D_Pin, GPIO_PIN_RESET);
 3725              		.loc 2 532 3 is_stmt 1 view .LVU565
 3726 0012 9020     		movs	r0, #144
 3727 0014 0022     		movs	r2, #0
 3728 0016 0821     		movs	r1, #8
 3729 0018 C005     		lsls	r0, r0, #23
 3730 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 3731              	.LVL227:
 533:Src/charlie.c **** 
 534:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 535:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 3732              		.loc 2 535 3 view .LVU566
 3733              		.loc 2 535 23 is_stmt 0 view .LVU567
 3734 001e 8023     		movs	r3, #128
 3735 0020 5B00     		lsls	r3, r3, #1
 3736 0022 0193     		str	r3, [sp, #4]
 536:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 3737              		.loc 2 536 3 is_stmt 1 view .LVU568
 3738              		.loc 2 536 24 is_stmt 0 view .LVU569
 3739 0024 0026     		movs	r6, #0
 3740 0026 6660     		str	r6, [r4, #4]
 537:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 3741              		.loc 2 537 3 is_stmt 1 view .LVU570
 3742              		.loc 2 537 24 is_stmt 0 view .LVU571
 3743 0028 0127     		movs	r7, #1
 3744 002a A760     		str	r7, [r4, #8]
 538:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 3745              		.loc 2 538 3 is_stmt 1 view .LVU572
 3746 002c 2100     		movs	r1, r4
 3747 002e 0848     		ldr	r0, .L122
 3748 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 3749              	.LVL228:
 539:Src/charlie.c **** 
 540:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 541:Src/charlie.c ****   GPIO_InitStruct.Pin = D_Pin;
 3750              		.loc 2 541 3 view .LVU573
 3751              		.loc 2 541 23 is_stmt 0 view .LVU574
 3752 0034 0823     		movs	r3, #8
 3753 0036 0193     		str	r3, [sp, #4]
 542:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 3754              		.loc 2 542 3 is_stmt 1 view .LVU575
 3755              		.loc 2 542 24 is_stmt 0 view .LVU576
 3756 0038 6760     		str	r7, [r4, #4]
 543:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3757              		.loc 2 543 3 is_stmt 1 view .LVU577
 3758              		.loc 2 543 24 is_stmt 0 view .LVU578
 3759 003a A660     		str	r6, [r4, #8]
 544:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3760              		.loc 2 544 3 is_stmt 1 view .LVU579
 3761              		.loc 2 544 25 is_stmt 0 view .LVU580
 3762 003c E660     		str	r6, [r4, #12]
 545:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 546:Src/charlie.c **** 
 547:Src/charlie.c ****   return GPIO_InitStruct;
 3763              		.loc 2 547 3 is_stmt 1 view .LVU581
 3764              		.loc 2 547 10 is_stmt 0 view .LVU582
 3765 003e 2B00     		movs	r3, r5
ARM GAS  /tmp/ccaWamBb.s 			page 91


 3766 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 3767 0042 07C3     		stmia	r3!, {r0, r1, r2}
 3768 0044 06CC     		ldmia	r4!, {r1, r2}
 3769 0046 06C3     		stmia	r3!, {r1, r2}
 548:Src/charlie.c **** }
 3770              		.loc 2 548 1 view .LVU583
 3771 0048 2800     		movs	r0, r5
 3772 004a 07B0     		add	sp, sp, #28
 3773              		@ sp needed
 3774              	.LVL229:
 3775              		.loc 2 548 1 view .LVU584
 3776 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 3777              	.L123:
 3778 004e C046     		.align	2
 3779              	.L122:
 3780 0050 00040048 		.word	1207960576
 3781              		.cfi_endproc
 3782              	.LFE50:
 3784              		.section	.text.send_command,"ax",%progbits
 3785              		.align	1
 3786              		.global	send_command
 3787              		.syntax unified
 3788              		.code	16
 3789              		.thumb_func
 3790              		.fpu softvfp
 3792              	send_command:
 3793              	.LVL230:
 3794              	.LFB52:
 3795              		.file 3 "Src/semihosting.c"
   1:Src/semihosting.c **** // Some Semihosting stuff to make debugging eaiser
   2:Src/semihosting.c **** // Use with openocd, need to add the command "monitor arm semihosting enable"
   3:Src/semihosting.c **** // William Rickert March2020
   4:Src/semihosting.c **** 
   5:Src/semihosting.c **** void send_command(int command, void *message);
   6:Src/semihosting.c **** void put_char(char c);
   7:Src/semihosting.c **** 
   8:Src/semihosting.c **** void say(char s[]){
   9:Src/semihosting.c ****    
  10:Src/semihosting.c ****    uint32_t m[] = { 2/*stderr*/, (uint32_t)s, strlen(s) };
  11:Src/semihosting.c ****    send_command(0x05, m);
  12:Src/semihosting.c **** }  
  13:Src/semihosting.c **** 
  14:Src/semihosting.c **** void send_command(int command, void *message)
  15:Src/semihosting.c **** {
 3796              		.loc 3 15 1 is_stmt 1 view -0
 3797              		.cfi_startproc
 3798              		@ args = 0, pretend = 0, frame = 0
 3799              		@ frame_needed = 0, uses_anonymous_args = 0
 3800              		@ link register save eliminated.
 3801              		.loc 3 15 1 is_stmt 0 view .LVU586
 3802 0000 0300     		movs	r3, r0
 3803 0002 0A00     		movs	r2, r1
  16:Src/semihosting.c ****    asm("mov r0, %[cmd];"
 3804              		.loc 3 16 4 is_stmt 1 view .LVU587
 3805              		.syntax divided
 3806              	@ 16 "Src/semihosting.c" 1
 3807 0004 181C111C 		mov r0, r3;mov r1, r2;bkpt #0xAB
ARM GAS  /tmp/ccaWamBb.s 			page 92


 3807      ABBE
 3808              	@ 0 "" 2
 3809              	.LVL231:
  17:Src/semihosting.c ****      "mov r1, %[msg];"
  18:Src/semihosting.c ****      "bkpt #0xAB"
  19:Src/semihosting.c ****         :
  20:Src/semihosting.c ****         : [cmd] "r" (command), [msg] "r" (message)
  21:Src/semihosting.c ****         : "r0", "r1", "memory");
  22:Src/semihosting.c **** }
 3810              		.loc 3 22 1 is_stmt 0 view .LVU588
 3811              		.thumb
 3812              		.syntax unified
 3813              		@ sp needed
 3814 000a 7047     		bx	lr
 3815              		.cfi_endproc
 3816              	.LFE52:
 3818              		.section	.text.say,"ax",%progbits
 3819              		.align	1
 3820              		.global	say
 3821              		.syntax unified
 3822              		.code	16
 3823              		.thumb_func
 3824              		.fpu softvfp
 3826              	say:
 3827              	.LVL232:
 3828              	.LFB51:
   8:Src/semihosting.c ****    
 3829              		.loc 3 8 19 is_stmt 1 view -0
 3830              		.cfi_startproc
 3831              		@ args = 0, pretend = 0, frame = 16
 3832              		@ frame_needed = 0, uses_anonymous_args = 0
   8:Src/semihosting.c ****    
 3833              		.loc 3 8 19 is_stmt 0 view .LVU590
 3834 0000 00B5     		push	{lr}
 3835              	.LCFI23:
 3836              		.cfi_def_cfa_offset 4
 3837              		.cfi_offset 14, -4
 3838 0002 85B0     		sub	sp, sp, #20
 3839              	.LCFI24:
 3840              		.cfi_def_cfa_offset 24
  10:Src/semihosting.c ****    send_command(0x05, m);
 3841              		.loc 3 10 4 is_stmt 1 view .LVU591
  10:Src/semihosting.c ****    send_command(0x05, m);
 3842              		.loc 3 10 13 is_stmt 0 view .LVU592
 3843 0004 0223     		movs	r3, #2
 3844 0006 0193     		str	r3, [sp, #4]
 3845 0008 0290     		str	r0, [sp, #8]
  10:Src/semihosting.c ****    send_command(0x05, m);
 3846              		.loc 3 10 47 view .LVU593
 3847 000a FFF7FEFF 		bl	strlen
 3848              	.LVL233:
  10:Src/semihosting.c ****    send_command(0x05, m);
 3849              		.loc 3 10 13 view .LVU594
 3850 000e 0390     		str	r0, [sp, #12]
  11:Src/semihosting.c **** }  
 3851              		.loc 3 11 4 is_stmt 1 view .LVU595
 3852 0010 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccaWamBb.s 			page 93


 3853 0012 0520     		movs	r0, #5
 3854 0014 FFF7FEFF 		bl	send_command
 3855              	.LVL234:
  12:Src/semihosting.c **** 
 3856              		.loc 3 12 1 is_stmt 0 view .LVU596
 3857 0018 05B0     		add	sp, sp, #20
 3858              		@ sp needed
 3859 001a 00BD     		pop	{pc}
 3860              		.cfi_endproc
 3861              	.LFE51:
 3863              		.section	.rodata.clock.str1.4,"aMS",%progbits,1
 3864              		.align	2
 3865              	.LC4:
 3866 0000 43757272 		.ascii	"Current time is %d:%d\012\000"
 3866      656E7420 
 3866      74696D65 
 3866      20697320 
 3866      25643A25 
 3867              		.section	.text.clock,"ax",%progbits
 3868              		.align	1
 3869              		.global	clock
 3870              		.syntax unified
 3871              		.code	16
 3872              		.thumb_func
 3873              		.fpu softvfp
 3875              	clock:
 3876              	.LFB43:
  12:Src/charlie.c ****    RTC_TimeTypeDef RTCtime;
 3877              		.loc 2 12 131 is_stmt 1 view -0
 3878              		.cfi_startproc
 3879              		@ args = 112, pretend = 16, frame = 48
 3880              		@ frame_needed = 0, uses_anonymous_args = 0
 3881 0000 84B0     		sub	sp, sp, #16
 3882              	.LCFI25:
 3883              		.cfi_def_cfa_offset 16
 3884 0002 30B5     		push	{r4, r5, lr}
 3885              	.LCFI26:
 3886              		.cfi_def_cfa_offset 28
 3887              		.cfi_offset 4, -28
 3888              		.cfi_offset 5, -24
 3889              		.cfi_offset 14, -20
 3890 0004 9FB0     		sub	sp, sp, #124
 3891              	.LCFI27:
 3892              		.cfi_def_cfa_offset 152
 3893 0006 2290     		str	r0, [sp, #136]
 3894 0008 2391     		str	r1, [sp, #140]
 3895 000a 2492     		str	r2, [sp, #144]
 3896 000c 2593     		str	r3, [sp, #148]
  13:Src/charlie.c ****    RTC_DateTypeDef RTCdate;
 3897              		.loc 2 13 4 view .LVU598
  14:Src/charlie.c ****    HAL_RTC_GetTime(&whatTime, &RTCtime, RTC_FORMAT_BIN);
 3898              		.loc 2 14 4 view .LVU599
  15:Src/charlie.c ****    HAL_RTC_GetDate(&whatTime, &RTCdate, RTC_FORMAT_BIN);
 3899              		.loc 2 15 4 view .LVU600
 3900 000e 0022     		movs	r2, #0
 3901 0010 19A9     		add	r1, sp, #100
 3902 0012 36A8     		add	r0, sp, #216
ARM GAS  /tmp/ccaWamBb.s 			page 94


 3903 0014 FFF7FEFF 		bl	HAL_RTC_GetTime
 3904              	.LVL235:
  16:Src/charlie.c **** 
 3905              		.loc 2 16 4 view .LVU601
 3906 0018 0022     		movs	r2, #0
 3907 001a 18A9     		add	r1, sp, #96
 3908 001c 36A8     		add	r0, sp, #216
 3909 001e FFF7FEFF 		bl	HAL_RTC_GetDate
 3910              	.LVL236:
  18:Src/charlie.c ****    int hours = RTCtime.Hours;
 3911              		.loc 2 18 4 view .LVU602
  18:Src/charlie.c ****    int hours = RTCtime.Hours;
 3912              		.loc 2 18 25 is_stmt 0 view .LVU603
 3913 0022 6B46     		mov	r3, sp
 3914 0024 6522     		movs	r2, #101
 3915 0026 9B18     		adds	r3, r3, r2
 3916 0028 1C78     		ldrb	r4, [r3]
 3917              	.LVL237:
  19:Src/charlie.c ****    int displayMin = 0;
 3918              		.loc 2 19 4 is_stmt 1 view .LVU604
  19:Src/charlie.c ****    int displayMin = 0;
 3919              		.loc 2 19 23 is_stmt 0 view .LVU605
 3920 002a 6B46     		mov	r3, sp
 3921 002c 013A     		subs	r2, r2, #1
 3922 002e 9B18     		adds	r3, r3, r2
 3923 0030 1D78     		ldrb	r5, [r3]
 3924              	.LVL238:
  20:Src/charlie.c **** 
 3925              		.loc 2 20 4 is_stmt 1 view .LVU606
  22:Src/charlie.c ****    sprintf(buf, "Current time is %d:%d\n",hours,minutes);
 3926              		.loc 2 22 4 view .LVU607
  23:Src/charlie.c ****    say(buf);
 3927              		.loc 2 23 4 view .LVU608
 3928 0032 2300     		movs	r3, r4
 3929 0034 2A00     		movs	r2, r5
 3930 0036 3849     		ldr	r1, .L141
 3931 0038 13A8     		add	r0, sp, #76
 3932 003a FFF7FEFF 		bl	sprintf
 3933              	.LVL239:
  24:Src/charlie.c **** 
 3934              		.loc 2 24 4 view .LVU609
 3935 003e 13A8     		add	r0, sp, #76
 3936 0040 FFF7FEFF 		bl	say
 3937              	.LVL240:
  26:Src/charlie.c ****       displayMin = 12;
 3938              		.loc 2 26 4 view .LVU610
  26:Src/charlie.c ****       displayMin = 12;
 3939              		.loc 2 26 19 is_stmt 0 view .LVU611
 3940 0044 631E     		subs	r3, r4, #1
  26:Src/charlie.c ****       displayMin = 12;
 3941              		.loc 2 26 6 view .LVU612
 3942 0046 012B     		cmp	r3, #1
 3943 0048 25D9     		bls	.L128
  28:Src/charlie.c ****       displayMin = 1;
 3944              		.loc 2 28 9 is_stmt 1 view .LVU613
  28:Src/charlie.c ****       displayMin = 1;
 3945              		.loc 2 28 24 is_stmt 0 view .LVU614
ARM GAS  /tmp/ccaWamBb.s 			page 95


 3946 004a 231F     		subs	r3, r4, #4
  28:Src/charlie.c ****       displayMin = 1;
 3947              		.loc 2 28 11 view .LVU615
 3948 004c 022B     		cmp	r3, #2
 3949 004e 4AD9     		bls	.L129
  30:Src/charlie.c ****       displayMin = 2;
 3950              		.loc 2 30 9 is_stmt 1 view .LVU616
  30:Src/charlie.c ****       displayMin = 2;
 3951              		.loc 2 30 24 is_stmt 0 view .LVU617
 3952 0050 043B     		subs	r3, r3, #4
  30:Src/charlie.c ****       displayMin = 2;
 3953              		.loc 2 30 11 view .LVU618
 3954 0052 032B     		cmp	r3, #3
 3955 0054 49D9     		bls	.L130
  32:Src/charlie.c ****       displayMin = 3;
 3956              		.loc 2 32 9 is_stmt 1 view .LVU619
  32:Src/charlie.c ****       displayMin = 3;
 3957              		.loc 2 32 25 is_stmt 0 view .LVU620
 3958 0056 053B     		subs	r3, r3, #5
  32:Src/charlie.c ****       displayMin = 3;
 3959              		.loc 2 32 11 view .LVU621
 3960 0058 032B     		cmp	r3, #3
 3961 005a 48D9     		bls	.L131
  34:Src/charlie.c ****       displayMin = 4;
 3962              		.loc 2 34 9 is_stmt 1 view .LVU622
  34:Src/charlie.c ****       displayMin = 4;
 3963              		.loc 2 34 25 is_stmt 0 view .LVU623
 3964 005c 053B     		subs	r3, r3, #5
  34:Src/charlie.c ****       displayMin = 4;
 3965              		.loc 2 34 11 view .LVU624
 3966 005e 032B     		cmp	r3, #3
 3967 0060 47D9     		bls	.L132
  36:Src/charlie.c ****       displayMin = 5;
 3968              		.loc 2 36 9 is_stmt 1 view .LVU625
  36:Src/charlie.c ****       displayMin = 5;
 3969              		.loc 2 36 25 is_stmt 0 view .LVU626
 3970 0062 053B     		subs	r3, r3, #5
  36:Src/charlie.c ****       displayMin = 5;
 3971              		.loc 2 36 11 view .LVU627
 3972 0064 032B     		cmp	r3, #3
 3973 0066 46D9     		bls	.L133
  38:Src/charlie.c ****       displayMin = 6;
 3974              		.loc 2 38 9 is_stmt 1 view .LVU628
  38:Src/charlie.c ****       displayMin = 6;
 3975              		.loc 2 38 25 is_stmt 0 view .LVU629
 3976 0068 053B     		subs	r3, r3, #5
  38:Src/charlie.c ****       displayMin = 6;
 3977              		.loc 2 38 11 view .LVU630
 3978 006a 032B     		cmp	r3, #3
 3979 006c 45D9     		bls	.L134
  40:Src/charlie.c ****       displayMin = 7;
 3980              		.loc 2 40 9 is_stmt 1 view .LVU631
  40:Src/charlie.c ****       displayMin = 7;
 3981              		.loc 2 40 25 is_stmt 0 view .LVU632
 3982 006e 053B     		subs	r3, r3, #5
  40:Src/charlie.c ****       displayMin = 7;
 3983              		.loc 2 40 11 view .LVU633
ARM GAS  /tmp/ccaWamBb.s 			page 96


 3984 0070 032B     		cmp	r3, #3
 3985 0072 44D9     		bls	.L135
  42:Src/charlie.c ****       displayMin = 8;
 3986              		.loc 2 42 9 is_stmt 1 view .LVU634
  42:Src/charlie.c ****       displayMin = 8;
 3987              		.loc 2 42 25 is_stmt 0 view .LVU635
 3988 0074 053B     		subs	r3, r3, #5
  42:Src/charlie.c ****       displayMin = 8;
 3989              		.loc 2 42 11 view .LVU636
 3990 0076 032B     		cmp	r3, #3
 3991 0078 43D9     		bls	.L136
  44:Src/charlie.c ****       displayMin = 9;
 3992              		.loc 2 44 9 is_stmt 1 view .LVU637
  44:Src/charlie.c ****       displayMin = 9;
 3993              		.loc 2 44 25 is_stmt 0 view .LVU638
 3994 007a 053B     		subs	r3, r3, #5
  44:Src/charlie.c ****       displayMin = 9;
 3995              		.loc 2 44 11 view .LVU639
 3996 007c 032B     		cmp	r3, #3
 3997 007e 42D9     		bls	.L137
  46:Src/charlie.c ****       displayMin = 10;
 3998              		.loc 2 46 9 is_stmt 1 view .LVU640
  46:Src/charlie.c ****       displayMin = 10;
 3999              		.loc 2 46 25 is_stmt 0 view .LVU641
 4000 0080 053B     		subs	r3, r3, #5
  46:Src/charlie.c ****       displayMin = 10;
 4001              		.loc 2 46 11 view .LVU642
 4002 0082 032B     		cmp	r3, #3
 4003 0084 41D9     		bls	.L138
  48:Src/charlie.c ****       displayMin = 11;
 4004              		.loc 2 48 9 is_stmt 1 view .LVU643
  48:Src/charlie.c ****       displayMin = 11;
 4005              		.loc 2 48 25 is_stmt 0 view .LVU644
 4006 0086 053B     		subs	r3, r3, #5
  48:Src/charlie.c ****       displayMin = 11;
 4007              		.loc 2 48 11 view .LVU645
 4008 0088 032B     		cmp	r3, #3
 4009 008a 40D9     		bls	.L139
  50:Src/charlie.c ****       displayMin = 12;
 4010              		.loc 2 50 9 is_stmt 1 view .LVU646
  50:Src/charlie.c ****       displayMin = 12;
 4011              		.loc 2 50 25 is_stmt 0 view .LVU647
 4012 008c 3A3C     		subs	r4, r4, #58
 4013              	.LVL241:
  50:Src/charlie.c ****       displayMin = 12;
 4014              		.loc 2 50 11 view .LVU648
 4015 008e 022C     		cmp	r4, #2
 4016 0090 3FD9     		bls	.L140
  20:Src/charlie.c **** 
 4017              		.loc 2 20 8 view .LVU649
 4018 0092 0023     		movs	r3, #0
 4019 0094 00E0     		b	.L127
 4020              	.LVL242:
 4021              	.L128:
  27:Src/charlie.c ****    else if(minutes > 3 && minutes < 7)
 4022              		.loc 2 27 18 view .LVU650
 4023 0096 0C23     		movs	r3, #12
ARM GAS  /tmp/ccaWamBb.s 			page 97


 4024              	.LVL243:
 4025              	.L127:
  53:Src/charlie.c ****    
 4026              		.loc 2 53 4 is_stmt 1 view .LVU651
 4027 0098 1193     		str	r3, [sp, #68]
 4028 009a 1095     		str	r5, [sp, #64]
 4029 009c 31A8     		add	r0, sp, #196
 4030 009e 0BA9     		add	r1, sp, #44
 4031 00a0 0B00     		movs	r3, r1
 4032              	.LVL244:
  53:Src/charlie.c ****    
 4033              		.loc 2 53 4 is_stmt 0 view .LVU652
 4034 00a2 0200     		movs	r2, r0
 4035 00a4 13CA     		ldmia	r2!, {r0, r1, r4}
 4036 00a6 13C3     		stmia	r3!, {r0, r1, r4}
 4037 00a8 03CA     		ldmia	r2!, {r0, r1}
 4038 00aa 03C3     		stmia	r3!, {r0, r1}
 4039 00ac 2CA8     		add	r0, sp, #176
 4040 00ae 06A9     		add	r1, sp, #24
 4041 00b0 0B00     		movs	r3, r1
 4042 00b2 0200     		movs	r2, r0
 4043 00b4 13CA     		ldmia	r2!, {r0, r1, r4}
 4044 00b6 13C3     		stmia	r3!, {r0, r1, r4}
 4045 00b8 03CA     		ldmia	r2!, {r0, r1}
 4046 00ba 03C3     		stmia	r3!, {r0, r1}
 4047 00bc 27A8     		add	r0, sp, #156
 4048 00be 01A9     		add	r1, sp, #4
 4049 00c0 0B00     		movs	r3, r1
 4050 00c2 0200     		movs	r2, r0
 4051 00c4 13CA     		ldmia	r2!, {r0, r1, r4}
 4052 00c6 13C3     		stmia	r3!, {r0, r1, r4}
 4053 00c8 03CA     		ldmia	r2!, {r0, r1}
 4054 00ca 03C3     		stmia	r3!, {r0, r1}
 4055 00cc 269B     		ldr	r3, [sp, #152]
 4056 00ce 0093     		str	r3, [sp]
 4057 00d0 2298     		ldr	r0, [sp, #136]
 4058 00d2 2399     		ldr	r1, [sp, #140]
 4059 00d4 249A     		ldr	r2, [sp, #144]
 4060 00d6 259B     		ldr	r3, [sp, #148]
 4061 00d8 FFF7FEFF 		bl	hands
 4062              	.LVL245:
  55:Src/charlie.c **** 
 4063              		.loc 2 55 1 view .LVU653
 4064 00dc 1FB0     		add	sp, sp, #124
 4065              		@ sp needed
 4066              	.LVL246:
  55:Src/charlie.c **** 
 4067              		.loc 2 55 1 view .LVU654
 4068 00de 30BC     		pop	{r4, r5}
 4069 00e0 08BC     		pop	{r3}
 4070 00e2 04B0     		add	sp, sp, #16
 4071 00e4 1847     		bx	r3
 4072              	.LVL247:
 4073              	.L129:
  29:Src/charlie.c ****    else if(minutes > 7 && minutes < 12)
 4074              		.loc 2 29 18 view .LVU655
 4075 00e6 0123     		movs	r3, #1
ARM GAS  /tmp/ccaWamBb.s 			page 98


 4076 00e8 D6E7     		b	.L127
 4077              	.L130:
  31:Src/charlie.c ****    else if(minutes > 12 && minutes < 17)
 4078              		.loc 2 31 18 view .LVU656
 4079 00ea 0223     		movs	r3, #2
 4080 00ec D4E7     		b	.L127
 4081              	.L131:
  33:Src/charlie.c ****    else if(minutes > 17 && minutes < 22)
 4082              		.loc 2 33 18 view .LVU657
 4083 00ee 0323     		movs	r3, #3
 4084 00f0 D2E7     		b	.L127
 4085              	.L132:
  35:Src/charlie.c ****    else if(minutes > 22 && minutes < 27)
 4086              		.loc 2 35 18 view .LVU658
 4087 00f2 0423     		movs	r3, #4
 4088 00f4 D0E7     		b	.L127
 4089              	.L133:
  37:Src/charlie.c ****    else if(minutes > 27 && minutes < 32)
 4090              		.loc 2 37 18 view .LVU659
 4091 00f6 0523     		movs	r3, #5
 4092 00f8 CEE7     		b	.L127
 4093              	.L134:
  39:Src/charlie.c ****    else if(minutes > 32 && minutes < 37)
 4094              		.loc 2 39 18 view .LVU660
 4095 00fa 0623     		movs	r3, #6
 4096 00fc CCE7     		b	.L127
 4097              	.L135:
  41:Src/charlie.c ****    else if(minutes > 37 && minutes < 42)
 4098              		.loc 2 41 18 view .LVU661
 4099 00fe 0723     		movs	r3, #7
 4100 0100 CAE7     		b	.L127
 4101              	.L136:
  43:Src/charlie.c ****    else if(minutes > 42 && minutes < 47)
 4102              		.loc 2 43 18 view .LVU662
 4103 0102 0823     		movs	r3, #8
 4104 0104 C8E7     		b	.L127
 4105              	.L137:
  45:Src/charlie.c ****    else if(minutes > 47 && minutes < 52)
 4106              		.loc 2 45 18 view .LVU663
 4107 0106 0923     		movs	r3, #9
 4108 0108 C6E7     		b	.L127
 4109              	.L138:
  47:Src/charlie.c ****    else if(minutes > 52 && minutes < 57)
 4110              		.loc 2 47 18 view .LVU664
 4111 010a 0A23     		movs	r3, #10
 4112 010c C4E7     		b	.L127
 4113              	.L139:
  49:Src/charlie.c ****    else if(minutes > 57 && minutes < 61)
 4114              		.loc 2 49 18 view .LVU665
 4115 010e 0B23     		movs	r3, #11
 4116 0110 C2E7     		b	.L127
 4117              	.LVL248:
 4118              	.L140:
  51:Src/charlie.c **** 
 4119              		.loc 2 51 18 view .LVU666
 4120 0112 0C23     		movs	r3, #12
 4121 0114 C0E7     		b	.L127
ARM GAS  /tmp/ccaWamBb.s 			page 99


 4122              	.L142:
 4123 0116 C046     		.align	2
 4124              	.L141:
 4125 0118 00000000 		.word	.LC4
 4126              		.cfi_endproc
 4127              	.LFE43:
 4129              		.section	.text.put_char,"ax",%progbits
 4130              		.align	1
 4131              		.global	put_char
 4132              		.syntax unified
 4133              		.code	16
 4134              		.thumb_func
 4135              		.fpu softvfp
 4137              	put_char:
 4138              	.LVL249:
 4139              	.LFB53:
  23:Src/semihosting.c **** 
  24:Src/semihosting.c **** void put_char(char c)
  25:Src/semihosting.c **** {
 4140              		.loc 3 25 1 is_stmt 1 view -0
 4141              		.cfi_startproc
 4142              		@ args = 0, pretend = 0, frame = 8
 4143              		@ frame_needed = 0, uses_anonymous_args = 0
 4144              		@ link register save eliminated.
 4145              		.loc 3 25 1 is_stmt 0 view .LVU668
 4146 0000 82B0     		sub	sp, sp, #8
 4147              	.LCFI28:
 4148              		.cfi_def_cfa_offset 8
  26:Src/semihosting.c ****     asm (
 4149              		.loc 3 26 5 is_stmt 1 view .LVU669
 4150 0002 6B46     		mov	r3, sp
 4151 0004 0733     		adds	r3, r3, #7
 4152              		.syntax divided
 4153              	@ 26 "Src/semihosting.c" 1
 4154 0006 0320     		mov r0, #0x03
 4155 0008 191C     	mov r1, r3
 4156 000a ABBE     	bkpt #0xAB
 4157              	
 4158              	@ 0 "" 2
 4159              	.LVL250:
  27:Src/semihosting.c ****       "mov r0, #0x03\n"   /* SYS_WRITEC */
  28:Src/semihosting.c ****       "mov r1, %[msg]\n"
  29:Src/semihosting.c ****       "bkpt #0xAB\n"
  30:Src/semihosting.c ****       :
  31:Src/semihosting.c ****       : [msg] "r" (&c)
  32:Src/semihosting.c ****       : "r0", "r1"
  33:Src/semihosting.c ****       );
  34:Src/semihosting.c **** }
 4160              		.loc 3 34 1 is_stmt 0 view .LVU670
 4161              		.thumb
 4162              		.syntax unified
 4163 000c 02B0     		add	sp, sp, #8
 4164              		@ sp needed
 4165 000e 7047     		bx	lr
 4166              		.cfi_endproc
 4167              	.LFE53:
 4169              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /tmp/ccaWamBb.s 			page 100


 4170              		.align	1
 4171              		.global	SystemClock_Config
 4172              		.syntax unified
 4173              		.code	16
 4174              		.thumb_func
 4175              		.fpu softvfp
 4177              	SystemClock_Config:
 4178              	.LFB55:
 256:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 4179              		.loc 1 256 1 is_stmt 1 view -0
 4180              		.cfi_startproc
 4181              		@ args = 0, pretend = 0, frame = 96
 4182              		@ frame_needed = 0, uses_anonymous_args = 0
 4183 0000 10B5     		push	{r4, lr}
 4184              	.LCFI29:
 4185              		.cfi_def_cfa_offset 8
 4186              		.cfi_offset 4, -8
 4187              		.cfi_offset 14, -4
 4188 0002 98B0     		sub	sp, sp, #96
 4189              	.LCFI30:
 4190              		.cfi_def_cfa_offset 104
 257:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 4191              		.loc 1 257 3 view .LVU672
 257:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 4192              		.loc 1 257 22 is_stmt 0 view .LVU673
 4193 0004 3022     		movs	r2, #48
 4194 0006 0021     		movs	r1, #0
 4195 0008 0CA8     		add	r0, sp, #48
 4196 000a FFF7FEFF 		bl	memset
 4197              	.LVL251:
 258:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 4198              		.loc 1 258 3 is_stmt 1 view .LVU674
 258:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 4199              		.loc 1 258 22 is_stmt 0 view .LVU675
 4200 000e 1022     		movs	r2, #16
 4201 0010 0021     		movs	r1, #0
 4202 0012 07A8     		add	r0, sp, #28
 4203 0014 FFF7FEFF 		bl	memset
 4204              	.LVL252:
 259:Src/main.c    **** 
 4205              		.loc 1 259 3 is_stmt 1 view .LVU676
 259:Src/main.c    **** 
 4206              		.loc 1 259 28 is_stmt 0 view .LVU677
 4207 0018 1822     		movs	r2, #24
 4208 001a 0021     		movs	r1, #0
 4209 001c 01A8     		add	r0, sp, #4
 4210 001e FFF7FEFF 		bl	memset
 4211              	.LVL253:
 263:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 4212              		.loc 1 263 3 is_stmt 1 view .LVU678
 263:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 4213              		.loc 1 263 36 is_stmt 0 view .LVU679
 4214 0022 2823     		movs	r3, #40
 4215 0024 0B93     		str	r3, [sp, #44]
 264:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 4216              		.loc 1 264 3 is_stmt 1 view .LVU680
 264:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
ARM GAS  /tmp/ccaWamBb.s 			page 101


 4217              		.loc 1 264 32 is_stmt 0 view .LVU681
 4218 0026 273B     		subs	r3, r3, #39
 4219 0028 1393     		str	r3, [sp, #76]
 265:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 4220              		.loc 1 265 3 is_stmt 1 view .LVU682
 265:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 4221              		.loc 1 265 30 is_stmt 0 view .LVU683
 4222 002a 1293     		str	r3, [sp, #72]
 266:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 4223              		.loc 1 266 3 is_stmt 1 view .LVU684
 267:Src/main.c    ****   {
 4224              		.loc 1 267 3 view .LVU685
 267:Src/main.c    ****   {
 4225              		.loc 1 267 7 is_stmt 0 view .LVU686
 4226 002c 0BA8     		add	r0, sp, #44
 4227 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 4228              	.LVL254:
 273:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 4229              		.loc 1 273 3 is_stmt 1 view .LVU687
 273:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 4230              		.loc 1 273 31 is_stmt 0 view .LVU688
 4231 0032 0723     		movs	r3, #7
 4232 0034 0793     		str	r3, [sp, #28]
 275:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 4233              		.loc 1 275 3 is_stmt 1 view .LVU689
 275:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 4234              		.loc 1 275 34 is_stmt 0 view .LVU690
 4235 0036 043B     		subs	r3, r3, #4
 4236 0038 0893     		str	r3, [sp, #32]
 276:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 4237              		.loc 1 276 3 is_stmt 1 view .LVU691
 276:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 4238              		.loc 1 276 35 is_stmt 0 view .LVU692
 4239 003a 0024     		movs	r4, #0
 4240 003c 0994     		str	r4, [sp, #36]
 277:Src/main.c    **** 
 4241              		.loc 1 277 3 is_stmt 1 view .LVU693
 277:Src/main.c    **** 
 4242              		.loc 1 277 36 is_stmt 0 view .LVU694
 4243 003e 0A94     		str	r4, [sp, #40]
 279:Src/main.c    ****   {
 4244              		.loc 1 279 3 is_stmt 1 view .LVU695
 279:Src/main.c    ****   {
 4245              		.loc 1 279 7 is_stmt 0 view .LVU696
 4246 0040 0121     		movs	r1, #1
 4247 0042 07A8     		add	r0, sp, #28
 4248 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 4249              	.LVL255:
 283:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 4250              		.loc 1 283 3 is_stmt 1 view .LVU697
 283:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 4251              		.loc 1 283 38 is_stmt 0 view .LVU698
 4252 0048 C023     		movs	r3, #192
 4253 004a 9B02     		lsls	r3, r3, #10
 4254 004c 0193     		str	r3, [sp, #4]
 284:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 4255              		.loc 1 284 3 is_stmt 1 view .LVU699
ARM GAS  /tmp/ccaWamBb.s 			page 102


 284:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 4256              		.loc 1 284 35 is_stmt 0 view .LVU700
 4257 004e 8023     		movs	r3, #128
 4258 0050 9B00     		lsls	r3, r3, #2
 4259 0052 0293     		str	r3, [sp, #8]
 285:Src/main.c    **** 
 4260              		.loc 1 285 3 is_stmt 1 view .LVU701
 285:Src/main.c    **** 
 4261              		.loc 1 285 35 is_stmt 0 view .LVU702
 4262 0054 0694     		str	r4, [sp, #24]
 287:Src/main.c    ****   {
 4263              		.loc 1 287 3 is_stmt 1 view .LVU703
 287:Src/main.c    ****   {
 4264              		.loc 1 287 7 is_stmt 0 view .LVU704
 4265 0056 01A8     		add	r0, sp, #4
 4266 0058 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 4267              	.LVL256:
 291:Src/main.c    **** 
 4268              		.loc 1 291 1 view .LVU705
 4269 005c 18B0     		add	sp, sp, #96
 4270              		@ sp needed
 4271 005e 10BD     		pop	{r4, pc}
 4272              		.cfi_endproc
 4273              	.LFE55:
 4275              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 4276              		.align	2
 4277              	.LC10:
 4278 0000 496E2068 		.ascii	"In hour button\012\000"
 4278      6F757220 
 4278      62757474 
 4278      6F6E0A00 
 4279              		.align	2
 4280              	.LC12:
 4281 0010 686F7572 		.ascii	"hour is %d \012\000"
 4281      20697320 
 4281      2564200A 
 4281      00
 4282 001d 000000   		.align	2
 4283              	.LC14:
 4284 0020 53657420 		.ascii	"Set hour time error is %d \012\000"
 4284      686F7572 
 4284      2074696D 
 4284      65206572 
 4284      726F7220 
 4285              		.align	2
 4286              	.LC17:
 4287 003c 496E206D 		.ascii	"In minute button\012\000"
 4287      696E7574 
 4287      65206275 
 4287      74746F6E 
 4287      0A00
 4288 004e 0000     		.align	2
 4289              	.LC19:
 4290 0050 6D696E75 		.ascii	"minute is %d \012\000"
 4290      74652069 
 4290      73202564 
 4290      200A00
ARM GAS  /tmp/ccaWamBb.s 			page 103


 4291 005f 00       		.align	2
 4292              	.LC21:
 4293 0060 53657420 		.ascii	"Set minute time error is %d \012\000"
 4293      6D696E75 
 4293      74652074 
 4293      696D6520 
 4293      6572726F 
 4294 007e 0000     		.align	2
 4295              	.LC23:
 4296 0080 496E206D 		.ascii	"In mode button\012\000"
 4296      6F646520 
 4296      62757474 
 4296      6F6E0A00 
 4297              		.section	.text.main,"ax",%progbits
 4298              		.align	1
 4299              		.global	main
 4300              		.syntax unified
 4301              		.code	16
 4302              		.thumb_func
 4303              		.fpu softvfp
 4305              	main:
 4306              	.LFB54:
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 4307              		.loc 1 88 1 is_stmt 1 view -0
 4308              		.cfi_startproc
 4309              		@ args = 0, pretend = 0, frame = 152
 4310              		@ frame_needed = 0, uses_anonymous_args = 0
 4311 0000 70B5     		push	{r4, r5, r6, lr}
 4312              	.LCFI31:
 4313              		.cfi_def_cfa_offset 16
 4314              		.cfi_offset 4, -16
 4315              		.cfi_offset 5, -12
 4316              		.cfi_offset 6, -8
 4317              		.cfi_offset 14, -4
 4318 0002 BEB0     		sub	sp, sp, #248
 4319              	.LCFI32:
 4320              		.cfi_def_cfa_offset 264
  96:Src/main.c    **** 
 4321              		.loc 1 96 3 view .LVU707
 4322 0004 FFF7FEFF 		bl	HAL_Init
 4323              	.LVL257:
 103:Src/main.c    **** 
 4324              		.loc 1 103 3 view .LVU708
 4325 0008 FFF7FEFF 		bl	SystemClock_Config
 4326              	.LVL258:
 110:Src/main.c    ****   MX_USB_DEVICE_Init();
 4327              		.loc 1 110 3 view .LVU709
 4328 000c FFF7FEFF 		bl	MX_GPIO_Init
 4329              	.LVL259:
 111:Src/main.c    ****   MX_RTC_Init();
 4330              		.loc 1 111 3 view .LVU710
 4331 0010 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 4332              	.LVL260:
 112:Src/main.c    ****   MX_TIM1_Init();
 4333              		.loc 1 112 3 view .LVU711
 4334 0014 FFF7FEFF 		bl	MX_RTC_Init
 4335              	.LVL261:
ARM GAS  /tmp/ccaWamBb.s 			page 104


 113:Src/main.c    ****   /* USER CODE BEGIN 2 */
 4336              		.loc 1 113 3 view .LVU712
 4337 0018 FFF7FEFF 		bl	MX_TIM1_Init
 4338              	.LVL262:
 115:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 4339              		.loc 1 115 3 view .LVU713
 115:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 4340              		.loc 1 115 27 is_stmt 0 view .LVU714
 4341 001c 39A8     		add	r0, sp, #228
 4342 001e FFF7FEFF 		bl	initA
 4343              	.LVL263:
 116:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 4344              		.loc 1 116 3 is_stmt 1 view .LVU715
 116:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 4345              		.loc 1 116 27 is_stmt 0 view .LVU716
 4346 0022 34A8     		add	r0, sp, #208
 4347 0024 FFF7FEFF 		bl	initB
 4348              	.LVL264:
 117:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 4349              		.loc 1 117 3 is_stmt 1 view .LVU717
 117:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 4350              		.loc 1 117 27 is_stmt 0 view .LVU718
 4351 0028 2FA8     		add	r0, sp, #188
 4352 002a FFF7FEFF 		bl	initC
 4353              	.LVL265:
 118:Src/main.c    **** 
 4354              		.loc 1 118 3 is_stmt 1 view .LVU719
 118:Src/main.c    **** 
 4355              		.loc 1 118 27 is_stmt 0 view .LVU720
 4356 002e 2AA8     		add	r0, sp, #168
 4357 0030 FFF7FEFF 		bl	initD
 4358              	.LVL266:
 120:Src/main.c    ****   int newMinutes = 0;
 4359              		.loc 1 120 3 is_stmt 1 view .LVU721
 120:Src/main.c    ****   int newMinutes = 0;
 4360              		.loc 1 120 12 is_stmt 0 view .LVU722
 4361 0034 844B     		ldr	r3, .L163
 4362 0036 0022     		movs	r2, #0
 4363 0038 1A60     		str	r2, [r3]
 121:Src/main.c    ****   int newHours = 0;
 4364              		.loc 1 121 3 is_stmt 1 view .LVU723
 4365              	.LVL267:
 122:Src/main.c    **** 
 4366              		.loc 1 122 3 view .LVU724
 122:Src/main.c    **** 
 4367              		.loc 1 122 3 is_stmt 0 view .LVU725
 4368 003a 93E0     		b	.L156
 4369              	.LVL268:
 4370              	.L161:
 137:Src/main.c    **** 
 4371              		.loc 1 137 7 is_stmt 1 view .LVU726
 4372 003c 834B     		ldr	r3, .L163+4
 4373 003e 10A9     		add	r1, sp, #64
 4374 0040 0A00     		movs	r2, r1
 4375 0042 13CB     		ldmia	r3!, {r0, r1, r4}
 4376 0044 13C2     		stmia	r2!, {r0, r1, r4}
 4377 0046 13CB     		ldmia	r3!, {r0, r1, r4}
ARM GAS  /tmp/ccaWamBb.s 			page 105


 4378 0048 13C2     		stmia	r2!, {r0, r1, r4}
 4379 004a 03CB     		ldmia	r3!, {r0, r1}
 4380 004c 03C2     		stmia	r2!, {r0, r1}
 4381 004e 2AAB     		add	r3, sp, #168
 4382 0050 0BA9     		add	r1, sp, #44
 4383 0052 0A00     		movs	r2, r1
 4384 0054 13CB     		ldmia	r3!, {r0, r1, r4}
 4385 0056 13C2     		stmia	r2!, {r0, r1, r4}
 4386 0058 03CB     		ldmia	r3!, {r0, r1}
 4387 005a 03C2     		stmia	r2!, {r0, r1}
 4388 005c 2FAB     		add	r3, sp, #188
 4389 005e 06A9     		add	r1, sp, #24
 4390 0060 0A00     		movs	r2, r1
 4391 0062 13CB     		ldmia	r3!, {r0, r1, r4}
 4392 0064 13C2     		stmia	r2!, {r0, r1, r4}
 4393 0066 03CB     		ldmia	r3!, {r0, r1}
 4394 0068 03C2     		stmia	r2!, {r0, r1}
 4395 006a 34AB     		add	r3, sp, #208
 4396 006c 01A9     		add	r1, sp, #4
 4397 006e 0A00     		movs	r2, r1
 4398 0070 13CB     		ldmia	r3!, {r0, r1, r4}
 4399 0072 13C2     		stmia	r2!, {r0, r1, r4}
 4400 0074 03CB     		ldmia	r3!, {r0, r1}
 4401 0076 03C2     		stmia	r2!, {r0, r1}
 4402 0078 3D9B     		ldr	r3, [sp, #244]
 4403 007a 1993     		str	r3, [sp, #100]
 4404 007c 0093     		str	r3, [sp]
 4405 007e 3998     		ldr	r0, [sp, #228]
 4406 0080 3A99     		ldr	r1, [sp, #232]
 4407 0082 3B9A     		ldr	r2, [sp, #236]
 4408 0084 3C9B     		ldr	r3, [sp, #240]
 4409 0086 FFF7FEFF 		bl	clock
 4410              	.LVL269:
 4411 008a 8FE0     		b	.L147
 4412              	.L162:
 145:Src/main.c    ****       HAL_StatusTypeDef res;
 4413              		.loc 1 145 34 is_stmt 0 discriminator 1 view .LVU727
 4414 008c 704B     		ldr	r3, .L163+8
 4415 008e 1B68     		ldr	r3, [r3]
 145:Src/main.c    ****       HAL_StatusTypeDef res;
 4416              		.loc 1 145 22 discriminator 1 view .LVU728
 4417 0090 012B     		cmp	r3, #1
 4418 0092 00D0     		beq	.LCB3844
 4419 0094 8FE0     		b	.L148	@long jump
 4420              	.LCB3844:
 4421              	.LBB16:
 146:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 4422              		.loc 1 146 7 is_stmt 1 view .LVU729
 148:Src/main.c    ****       RTC_DateTypeDef currentDate;
 4423              		.loc 1 148 7 view .LVU730
 149:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 4424              		.loc 1 149 7 view .LVU731
 150:Src/main.c    ****       memset(&newTime, 0, sizeof(newTime));
 4425              		.loc 1 150 7 view .LVU732
 151:Src/main.c    ****       memset(&currentTime, 0, sizeof(currentTime));
 4426              		.loc 1 151 7 view .LVU733
 4427 0096 1422     		movs	r2, #20
ARM GAS  /tmp/ccaWamBb.s 			page 106


 4428 0098 0021     		movs	r1, #0
 4429 009a 1BA8     		add	r0, sp, #108
 4430 009c FFF7FEFF 		bl	memset
 4431              	.LVL270:
 152:Src/main.c    **** 
 4432              		.loc 1 152 7 view .LVU734
 4433 00a0 20AC     		add	r4, sp, #128
 4434 00a2 1422     		movs	r2, #20
 4435 00a4 0021     		movs	r1, #0
 4436 00a6 2000     		movs	r0, r4
 4437 00a8 FFF7FEFF 		bl	memset
 4438              	.LVL271:
 154:Src/main.c    ****       HAL_Delay(100);
 4439              		.loc 1 154 7 view .LVU735
 4440 00ac 6948     		ldr	r0, .L163+12
 4441 00ae FFF7FEFF 		bl	say
 4442              	.LVL272:
 155:Src/main.c    **** 
 4443              		.loc 1 155 7 view .LVU736
 4444 00b2 6420     		movs	r0, #100
 4445 00b4 FFF7FEFF 		bl	HAL_Delay
 4446              	.LVL273:
 158:Src/main.c    ****       
 4447              		.loc 1 158 7 view .LVU737
 161:Src/main.c    ****       hourFlag =0;
 4448              		.loc 1 161 7 view .LVU738
 161:Src/main.c    ****       hourFlag =0;
 4449              		.loc 1 161 16 is_stmt 0 view .LVU739
 4450 00b8 0023     		movs	r3, #0
 4451 00ba 634A     		ldr	r2, .L163
 4452 00bc 1360     		str	r3, [r2]
 162:Src/main.c    ****       mamboNumber = 5;
 4453              		.loc 1 162 7 is_stmt 1 view .LVU740
 162:Src/main.c    ****       mamboNumber = 5;
 4454              		.loc 1 162 16 is_stmt 0 view .LVU741
 4455 00be 644A     		ldr	r2, .L163+8
 4456 00c0 1360     		str	r3, [r2]
 163:Src/main.c    **** 
 4457              		.loc 1 163 7 is_stmt 1 view .LVU742
 163:Src/main.c    **** 
 4458              		.loc 1 163 19 is_stmt 0 view .LVU743
 4459 00c2 654B     		ldr	r3, .L163+16
 4460 00c4 0522     		movs	r2, #5
 4461 00c6 1A60     		str	r2, [r3]
 166:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 4462              		.loc 1 166 7 is_stmt 1 view .LVU744
 166:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 4463              		.loc 1 166 13 is_stmt 0 view .LVU745
 4464 00c8 604D     		ldr	r5, .L163+4
 4465 00ca 0022     		movs	r2, #0
 4466 00cc 2100     		movs	r1, r4
 4467 00ce 2800     		movs	r0, r5
 4468 00d0 FFF7FEFF 		bl	HAL_RTC_GetTime
 4469              	.LVL274:
 170:Src/main.c    ****       newHours = currentTime.Hours;
 4470              		.loc 1 170 7 is_stmt 1 view .LVU746
 170:Src/main.c    ****       newHours = currentTime.Hours;
ARM GAS  /tmp/ccaWamBb.s 			page 107


 4471              		.loc 1 170 13 is_stmt 0 view .LVU747
 4472 00d4 0022     		movs	r2, #0
 4473 00d6 1AA9     		add	r1, sp, #104
 4474 00d8 2800     		movs	r0, r5
 4475 00da FFF7FEFF 		bl	HAL_RTC_GetDate
 4476              	.LVL275:
 171:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 4477              		.loc 1 171 7 is_stmt 1 view .LVU748
 171:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 4478              		.loc 1 171 29 is_stmt 0 view .LVU749
 4479 00de 2478     		ldrb	r4, [r4]
 4480              	.LVL276:
 172:Src/main.c    ****       say(buf);
 4481              		.loc 1 172 7 is_stmt 1 view .LVU750
 4482 00e0 2200     		movs	r2, r4
 4483 00e2 5E49     		ldr	r1, .L163+20
 4484 00e4 25A8     		add	r0, sp, #148
 4485 00e6 FFF7FEFF 		bl	sprintf
 4486              	.LVL277:
 173:Src/main.c    **** 
 4487              		.loc 1 173 7 view .LVU751
 4488 00ea 25A8     		add	r0, sp, #148
 4489 00ec FFF7FEFF 		bl	say
 4490              	.LVL278:
 175:Src/main.c    ****          newTime.Hours = 1;
 4491              		.loc 1 175 7 view .LVU752
 175:Src/main.c    ****          newTime.Hours = 1;
 4492              		.loc 1 175 9 is_stmt 0 view .LVU753
 4493 00f0 0C2C     		cmp	r4, #12
 4494 00f2 1ADD     		ble	.L149
 176:Src/main.c    ****       else
 4495              		.loc 1 176 10 is_stmt 1 view .LVU754
 176:Src/main.c    ****       else
 4496              		.loc 1 176 24 is_stmt 0 view .LVU755
 4497 00f4 1BAB     		add	r3, sp, #108
 4498 00f6 0122     		movs	r2, #1
 4499 00f8 1A70     		strb	r2, [r3]
 4500              	.LVL279:
 4501              	.L150:
 180:Src/main.c    ****       newTime.Seconds = 0; 
 4502              		.loc 1 180 7 is_stmt 1 view .LVU756
 180:Src/main.c    ****       newTime.Seconds = 0; 
 4503              		.loc 1 180 23 is_stmt 0 view .LVU757
 4504 00fa 0023     		movs	r3, #0
 4505 00fc 02AA     		add	r2, sp, #8
 4506 00fe 6521     		movs	r1, #101
 4507 0100 5218     		adds	r2, r2, r1
 4508 0102 1370     		strb	r3, [r2]
 181:Src/main.c    **** 
 4509              		.loc 1 181 7 is_stmt 1 view .LVU758
 181:Src/main.c    **** 
 4510              		.loc 1 181 23 is_stmt 0 view .LVU759
 4511 0104 02AA     		add	r2, sp, #8
 4512 0106 0131     		adds	r1, r1, #1
 4513 0108 5218     		adds	r2, r2, r1
 4514 010a 1370     		strb	r3, [r2]
 184:Src/main.c    ****       if(res != 0){
ARM GAS  /tmp/ccaWamBb.s 			page 108


 4515              		.loc 1 184 7 is_stmt 1 view .LVU760
 184:Src/main.c    ****       if(res != 0){
 4516              		.loc 1 184 13 is_stmt 0 view .LVU761
 4517 010c 0022     		movs	r2, #0
 4518 010e 1BA9     		add	r1, sp, #108
 4519 0110 4E48     		ldr	r0, .L163+4
 4520 0112 FFF7FEFF 		bl	HAL_RTC_SetTime
 4521              	.LVL280:
 4522 0116 021E     		subs	r2, r0, #0
 4523              	.LVL281:
 185:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 4524              		.loc 1 185 7 is_stmt 1 view .LVU762
 185:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 4525              		.loc 1 185 9 is_stmt 0 view .LVU763
 4526 0118 4DD0     		beq	.L148
 186:Src/main.c    ****          say(buf);
 4527              		.loc 1 186 10 is_stmt 1 view .LVU764
 4528 011a 5149     		ldr	r1, .L163+24
 4529 011c 25A8     		add	r0, sp, #148
 4530              	.LVL282:
 186:Src/main.c    ****          say(buf);
 4531              		.loc 1 186 10 is_stmt 0 view .LVU765
 4532 011e FFF7FEFF 		bl	sprintf
 4533              	.LVL283:
 187:Src/main.c    ****       }
 4534              		.loc 1 187 10 is_stmt 1 view .LVU766
 4535 0122 25A8     		add	r0, sp, #148
 4536 0124 FFF7FEFF 		bl	say
 4537              	.LVL284:
 4538 0128 45E0     		b	.L148
 4539              	.LVL285:
 4540              	.L149:
 178:Src/main.c    **** 
 4541              		.loc 1 178 10 view .LVU767
 178:Src/main.c    **** 
 4542              		.loc 1 178 24 is_stmt 0 view .LVU768
 4543 012a 0134     		adds	r4, r4, #1
 4544              	.LVL286:
 178:Src/main.c    **** 
 4545              		.loc 1 178 24 view .LVU769
 4546 012c 1BAB     		add	r3, sp, #108
 4547 012e 1C70     		strb	r4, [r3]
 4548 0130 E3E7     		b	.L150
 4549              	.LVL287:
 4550              	.L153:
 178:Src/main.c    **** 
 4551              		.loc 1 178 24 view .LVU770
 4552              	.LBE16:
 4553              	.LBB17:
 223:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 4554              		.loc 1 223 10 is_stmt 1 view .LVU771
 223:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 4555              		.loc 1 223 26 is_stmt 0 view .LVU772
 4556 0132 1BA9     		add	r1, sp, #108
 4557 0134 0023     		movs	r3, #0
 4558 0136 4B70     		strb	r3, [r1, #1]
 224:Src/main.c    ****       }
ARM GAS  /tmp/ccaWamBb.s 			page 109


 4559              		.loc 1 224 10 is_stmt 1 view .LVU773
 224:Src/main.c    ****       }
 4560              		.loc 1 224 38 is_stmt 0 view .LVU774
 4561 0138 20AB     		add	r3, sp, #128
 4562 013a 1B78     		ldrb	r3, [r3]
 224:Src/main.c    ****       }
 4563              		.loc 1 224 45 view .LVU775
 4564 013c 0133     		adds	r3, r3, #1
 224:Src/main.c    ****       }
 4565              		.loc 1 224 24 view .LVU776
 4566 013e 0B70     		strb	r3, [r1]
 4567              	.L154:
 227:Src/main.c    ****       say(buf);
 4568              		.loc 1 227 7 is_stmt 1 view .LVU777
 4569 0140 4849     		ldr	r1, .L163+28
 4570 0142 25A8     		add	r0, sp, #148
 4571 0144 FFF7FEFF 		bl	sprintf
 4572              	.LVL288:
 228:Src/main.c    **** 
 4573              		.loc 1 228 7 view .LVU778
 4574 0148 25A8     		add	r0, sp, #148
 4575 014a FFF7FEFF 		bl	say
 4576              	.LVL289:
 230:Src/main.c    ****       if(res != 0){
 4577              		.loc 1 230 7 view .LVU779
 230:Src/main.c    ****       if(res != 0){
 4578              		.loc 1 230 13 is_stmt 0 view .LVU780
 4579 014e 0022     		movs	r2, #0
 4580 0150 1BA9     		add	r1, sp, #108
 4581 0152 3E48     		ldr	r0, .L163+4
 4582 0154 FFF7FEFF 		bl	HAL_RTC_SetTime
 4583              	.LVL290:
 4584 0158 021E     		subs	r2, r0, #0
 4585              	.LVL291:
 231:Src/main.c    ****          sprintf(buf,"Set minute time error is %d \n", res);
 4586              		.loc 1 231 7 is_stmt 1 view .LVU781
 231:Src/main.c    ****          sprintf(buf,"Set minute time error is %d \n", res);
 4587              		.loc 1 231 9 is_stmt 0 view .LVU782
 4588 015a 5AD1     		bne	.L159
 4589              	.LVL292:
 4590              	.L152:
 231:Src/main.c    ****          sprintf(buf,"Set minute time error is %d \n", res);
 4591              		.loc 1 231 9 view .LVU783
 4592              	.LBE17:
 238:Src/main.c    ****       say("In mode button\n");
 4593              		.loc 1 238 5 is_stmt 1 view .LVU784
 238:Src/main.c    ****       say("In mode button\n");
 4594              		.loc 1 238 17 is_stmt 0 view .LVU785
 4595 015c 3A4B     		ldr	r3, .L163
 4596 015e 1B68     		ldr	r3, [r3]
 238:Src/main.c    ****       say("In mode button\n");
 4597              		.loc 1 238 7 view .LVU786
 4598 0160 012B     		cmp	r3, #1
 4599 0162 5ED0     		beq	.L160
 4600              	.L156:
 129:Src/main.c    ****   {
 4601              		.loc 1 129 3 is_stmt 1 view .LVU787
ARM GAS  /tmp/ccaWamBb.s 			page 110


 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 4602              		.loc 1 136 5 view .LVU788
 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 4603              		.loc 1 136 20 is_stmt 0 view .LVU789
 4604 0164 3C4B     		ldr	r3, .L163+16
 4605 0166 1B68     		ldr	r3, [r3]
 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 4606              		.loc 1 136 7 view .LVU790
 4607 0168 052B     		cmp	r3, #5
 4608 016a 00D1     		bne	.LCB4011
 4609 016c 66E7     		b	.L161	@long jump
 4610              	.LCB4011:
 141:Src/main.c    **** 
 4611              		.loc 1 141 8 is_stmt 1 view .LVU791
 4612 016e 1093     		str	r3, [sp, #64]
 4613 0170 2AAB     		add	r3, sp, #168
 4614 0172 0BA9     		add	r1, sp, #44
 4615 0174 0A00     		movs	r2, r1
 4616 0176 13CB     		ldmia	r3!, {r0, r1, r4}
 4617 0178 13C2     		stmia	r2!, {r0, r1, r4}
 4618 017a 03CB     		ldmia	r3!, {r0, r1}
 4619 017c 03C2     		stmia	r2!, {r0, r1}
 4620 017e 2FAB     		add	r3, sp, #188
 4621 0180 06A9     		add	r1, sp, #24
 4622 0182 0A00     		movs	r2, r1
 4623 0184 13CB     		ldmia	r3!, {r0, r1, r4}
 4624 0186 13C2     		stmia	r2!, {r0, r1, r4}
 4625 0188 03CB     		ldmia	r3!, {r0, r1}
 4626 018a 03C2     		stmia	r2!, {r0, r1}
 4627 018c 34AB     		add	r3, sp, #208
 4628 018e 01A9     		add	r1, sp, #4
 4629 0190 0A00     		movs	r2, r1
 4630 0192 13CB     		ldmia	r3!, {r0, r1, r4}
 4631 0194 13C2     		stmia	r2!, {r0, r1, r4}
 4632 0196 03CB     		ldmia	r3!, {r0, r1}
 4633 0198 03C2     		stmia	r2!, {r0, r1}
 4634 019a 3D9B     		ldr	r3, [sp, #244]
 4635 019c 1993     		str	r3, [sp, #100]
 4636 019e 0093     		str	r3, [sp]
 4637 01a0 3998     		ldr	r0, [sp, #228]
 4638 01a2 3A99     		ldr	r1, [sp, #232]
 4639 01a4 3B9A     		ldr	r2, [sp, #236]
 4640 01a6 3C9B     		ldr	r3, [sp, #240]
 4641 01a8 FFF7FEFF 		bl	dance
 4642              	.LVL293:
 4643              	.L147:
 145:Src/main.c    ****       HAL_StatusTypeDef res;
 4644              		.loc 1 145 5 view .LVU792
 145:Src/main.c    ****       HAL_StatusTypeDef res;
 4645              		.loc 1 145 17 is_stmt 0 view .LVU793
 4646 01ac 264B     		ldr	r3, .L163
 4647 01ae 1B68     		ldr	r3, [r3]
 145:Src/main.c    ****       HAL_StatusTypeDef res;
 4648              		.loc 1 145 7 view .LVU794
 4649 01b0 012B     		cmp	r3, #1
 4650 01b2 00D1     		bne	.LCB4044
 4651 01b4 6AE7     		b	.L162	@long jump
ARM GAS  /tmp/ccaWamBb.s 			page 111


 4652              	.LCB4044:
 4653              	.L148:
 193:Src/main.c    ****       HAL_StatusTypeDef res;
 4654              		.loc 1 193 5 is_stmt 1 view .LVU795
 193:Src/main.c    ****       HAL_StatusTypeDef res;
 4655              		.loc 1 193 17 is_stmt 0 view .LVU796
 4656 01b6 244B     		ldr	r3, .L163
 4657 01b8 1B68     		ldr	r3, [r3]
 193:Src/main.c    ****       HAL_StatusTypeDef res;
 4658              		.loc 1 193 7 view .LVU797
 4659 01ba 012B     		cmp	r3, #1
 4660 01bc CED1     		bne	.L152
 193:Src/main.c    ****       HAL_StatusTypeDef res;
 4661              		.loc 1 193 36 discriminator 1 view .LVU798
 4662 01be 2A4B     		ldr	r3, .L163+32
 4663 01c0 1B68     		ldr	r3, [r3]
 193:Src/main.c    ****       HAL_StatusTypeDef res;
 4664              		.loc 1 193 22 discriminator 1 view .LVU799
 4665 01c2 012B     		cmp	r3, #1
 4666 01c4 CAD1     		bne	.L152
 4667              	.LBB18:
 194:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 4668              		.loc 1 194 7 is_stmt 1 view .LVU800
 196:Src/main.c    ****       RTC_DateTypeDef currentDate;
 4669              		.loc 1 196 7 view .LVU801
 197:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 4670              		.loc 1 197 7 view .LVU802
 198:Src/main.c    ****       say("In minute button\n");
 4671              		.loc 1 198 7 view .LVU803
 199:Src/main.c    ****       HAL_Delay(100);
 4672              		.loc 1 199 7 view .LVU804
 4673 01c6 2948     		ldr	r0, .L163+36
 4674 01c8 FFF7FEFF 		bl	say
 4675              	.LVL294:
 200:Src/main.c    ****       char buf[20];
 4676              		.loc 1 200 7 view .LVU805
 4677 01cc 6420     		movs	r0, #100
 4678 01ce FFF7FEFF 		bl	HAL_Delay
 4679              	.LVL295:
 201:Src/main.c    **** 
 4680              		.loc 1 201 7 view .LVU806
 204:Src/main.c    ****       minuteFlag =0;
 4681              		.loc 1 204 7 view .LVU807
 204:Src/main.c    ****       minuteFlag =0;
 4682              		.loc 1 204 16 is_stmt 0 view .LVU808
 4683 01d2 0024     		movs	r4, #0
 4684 01d4 1C4B     		ldr	r3, .L163
 4685 01d6 1C60     		str	r4, [r3]
 205:Src/main.c    ****       mamboNumber = 5;
 4686              		.loc 1 205 7 is_stmt 1 view .LVU809
 205:Src/main.c    ****       mamboNumber = 5;
 4687              		.loc 1 205 18 is_stmt 0 view .LVU810
 4688 01d8 234B     		ldr	r3, .L163+32
 4689 01da 1C60     		str	r4, [r3]
 206:Src/main.c    **** 
 4690              		.loc 1 206 7 is_stmt 1 view .LVU811
 206:Src/main.c    **** 
ARM GAS  /tmp/ccaWamBb.s 			page 112


 4691              		.loc 1 206 19 is_stmt 0 view .LVU812
 4692 01dc 1E4B     		ldr	r3, .L163+16
 4693 01de 0522     		movs	r2, #5
 4694 01e0 1A60     		str	r2, [r3]
 208:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 4695              		.loc 1 208 7 is_stmt 1 view .LVU813
 208:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 4696              		.loc 1 208 13 is_stmt 0 view .LVU814
 4697 01e2 20AD     		add	r5, sp, #128
 4698 01e4 194E     		ldr	r6, .L163+4
 4699 01e6 0022     		movs	r2, #0
 4700 01e8 2900     		movs	r1, r5
 4701 01ea 3000     		movs	r0, r6
 4702 01ec FFF7FEFF 		bl	HAL_RTC_GetTime
 4703              	.LVL296:
 212:Src/main.c    **** 
 4704              		.loc 1 212 7 is_stmt 1 view .LVU815
 212:Src/main.c    **** 
 4705              		.loc 1 212 13 is_stmt 0 view .LVU816
 4706 01f0 0022     		movs	r2, #0
 4707 01f2 1AA9     		add	r1, sp, #104
 4708 01f4 3000     		movs	r0, r6
 4709 01f6 FFF7FEFF 		bl	HAL_RTC_GetDate
 4710              	.LVL297:
 214:Src/main.c    **** 
 4711              		.loc 1 214 7 is_stmt 1 view .LVU817
 214:Src/main.c    **** 
 4712              		.loc 1 214 31 is_stmt 0 view .LVU818
 4713 01fa 6A78     		ldrb	r2, [r5, #1]
 4714              	.LVL298:
 216:Src/main.c    ****       
 4715              		.loc 1 216 7 is_stmt 1 view .LVU819
 216:Src/main.c    ****       
 4716              		.loc 1 216 23 is_stmt 0 view .LVU820
 4717 01fc 1BAB     		add	r3, sp, #108
 4718 01fe 9C70     		strb	r4, [r3, #2]
 218:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 4719              		.loc 1 218 7 is_stmt 1 view .LVU821
 218:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 4720              		.loc 1 218 9 is_stmt 0 view .LVU822
 4721 0200 362A     		cmp	r2, #54
 4722 0202 96D8     		bhi	.L153
 219:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 4723              		.loc 1 219 10 is_stmt 1 view .LVU823
 219:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 4724              		.loc 1 219 40 is_stmt 0 view .LVU824
 4725 0204 531D     		adds	r3, r2, #5
 219:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 4726              		.loc 1 219 26 view .LVU825
 4727 0206 1BA9     		add	r1, sp, #108
 4728 0208 4B70     		strb	r3, [r1, #1]
 220:Src/main.c    ****       }
 4729              		.loc 1 220 10 is_stmt 1 view .LVU826
 220:Src/main.c    ****       }
 4730              		.loc 1 220 37 is_stmt 0 view .LVU827
 4731 020a 20AB     		add	r3, sp, #128
 4732 020c 1B78     		ldrb	r3, [r3]
ARM GAS  /tmp/ccaWamBb.s 			page 113


 220:Src/main.c    ****       }
 4733              		.loc 1 220 24 view .LVU828
 4734 020e 0B70     		strb	r3, [r1]
 4735 0210 96E7     		b	.L154
 4736              	.LVL299:
 4737              	.L159:
 232:Src/main.c    ****          say(buf);
 4738              		.loc 1 232 10 is_stmt 1 view .LVU829
 4739 0212 1749     		ldr	r1, .L163+40
 4740 0214 25A8     		add	r0, sp, #148
 4741              	.LVL300:
 232:Src/main.c    ****          say(buf);
 4742              		.loc 1 232 10 is_stmt 0 view .LVU830
 4743 0216 FFF7FEFF 		bl	sprintf
 4744              	.LVL301:
 233:Src/main.c    ****       }
 4745              		.loc 1 233 10 is_stmt 1 view .LVU831
 4746 021a 25A8     		add	r0, sp, #148
 4747 021c FFF7FEFF 		bl	say
 4748              	.LVL302:
 4749 0220 9CE7     		b	.L152
 4750              	.L160:
 233:Src/main.c    ****       }
 4751              		.loc 1 233 10 is_stmt 0 view .LVU832
 4752              	.LBE18:
 239:Src/main.c    ****       HAL_Delay(100);
 4753              		.loc 1 239 7 is_stmt 1 view .LVU833
 4754 0222 1448     		ldr	r0, .L163+44
 4755 0224 FFF7FEFF 		bl	say
 4756              	.LVL303:
 240:Src/main.c    ****       stopFlag =0;
 4757              		.loc 1 240 7 view .LVU834
 4758 0228 6420     		movs	r0, #100
 4759 022a FFF7FEFF 		bl	HAL_Delay
 4760              	.LVL304:
 241:Src/main.c    ****       mamboNumber++;
 4761              		.loc 1 241 7 view .LVU835
 241:Src/main.c    ****       mamboNumber++;
 4762              		.loc 1 241 16 is_stmt 0 view .LVU836
 4763 022e 064B     		ldr	r3, .L163
 4764 0230 0022     		movs	r2, #0
 4765 0232 1A60     		str	r2, [r3]
 242:Src/main.c    ****       if(mamboNumber > 6)
 4766              		.loc 1 242 7 is_stmt 1 view .LVU837
 242:Src/main.c    ****       if(mamboNumber > 6)
 4767              		.loc 1 242 18 is_stmt 0 view .LVU838
 4768 0234 084A     		ldr	r2, .L163+16
 4769 0236 1368     		ldr	r3, [r2]
 4770 0238 0133     		adds	r3, r3, #1
 4771 023a 1360     		str	r3, [r2]
 243:Src/main.c    ****          mamboNumber = 0;
 4772              		.loc 1 243 7 is_stmt 1 view .LVU839
 243:Src/main.c    ****          mamboNumber = 0;
 4773              		.loc 1 243 9 is_stmt 0 view .LVU840
 4774 023c 062B     		cmp	r3, #6
 4775 023e 91DD     		ble	.L156
 244:Src/main.c    ****     }
ARM GAS  /tmp/ccaWamBb.s 			page 114


 4776              		.loc 1 244 10 is_stmt 1 view .LVU841
 244:Src/main.c    ****     }
 4777              		.loc 1 244 22 is_stmt 0 view .LVU842
 4778 0240 1300     		movs	r3, r2
 4779 0242 0022     		movs	r2, #0
 4780 0244 1A60     		str	r2, [r3]
 4781 0246 8DE7     		b	.L156
 4782              	.L164:
 4783              		.align	2
 4784              	.L163:
 4785 0248 00000000 		.word	.LANCHOR0
 4786 024c 00000000 		.word	hrtc
 4787 0250 00000000 		.word	.LANCHOR2
 4788 0254 00000000 		.word	.LC10
 4789 0258 00000000 		.word	.LANCHOR1
 4790 025c 10000000 		.word	.LC12
 4791 0260 20000000 		.word	.LC14
 4792 0264 50000000 		.word	.LC19
 4793 0268 00000000 		.word	.LANCHOR3
 4794 026c 3C000000 		.word	.LC17
 4795 0270 60000000 		.word	.LC21
 4796 0274 80000000 		.word	.LC23
 4797              		.cfi_endproc
 4798              	.LFE54:
 4800              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 4801              		.align	1
 4802              		.global	HAL_GPIO_EXTI_Callback
 4803              		.syntax unified
 4804              		.code	16
 4805              		.thumb_func
 4806              		.fpu softvfp
 4808              	HAL_GPIO_EXTI_Callback:
 4809              	.LVL305:
 4810              	.LFB59:
 415:Src/main.c    **** 
 416:Src/main.c    **** /* USER CODE BEGIN 4 */
 417:Src/main.c    **** 
 418:Src/main.c    **** /**
 419:Src/main.c    **** * @brief Interrupt callback for GPIOs
 420:Src/main.c    **** */
 421:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 422:Src/main.c    **** {
 4811              		.loc 1 422 1 is_stmt 1 view -0
 4812              		.cfi_startproc
 4813              		@ args = 0, pretend = 0, frame = 0
 4814              		@ frame_needed = 0, uses_anonymous_args = 0
 4815              		@ link register save eliminated.
 423:Src/main.c    ****     // Mode
 424:Src/main.c    ****     if ( GPIO_Pin == GPIO_PIN_8) {
 4816              		.loc 1 424 5 view .LVU844
 4817              		.loc 1 424 8 is_stmt 0 view .LVU845
 4818 0000 8023     		movs	r3, #128
 4819 0002 5B00     		lsls	r3, r3, #1
 4820 0004 9842     		cmp	r0, r3
 4821 0006 09D0     		beq	.L169
 425:Src/main.c    ****       stopFlag = 1;
 426:Src/main.c    ****     }
ARM GAS  /tmp/ccaWamBb.s 			page 115


 427:Src/main.c    ****     // Minute  
 428:Src/main.c    ****     else if ( GPIO_Pin == GPIO_PIN_6) {
 4822              		.loc 1 428 10 is_stmt 1 view .LVU846
 4823              		.loc 1 428 13 is_stmt 0 view .LVU847
 4824 0008 4028     		cmp	r0, #64
 4825 000a 0BD0     		beq	.L170
 429:Src/main.c    ****       stopFlag = 1;
 430:Src/main.c    ****       minuteFlag = 1;
 431:Src/main.c    ****     }
 432:Src/main.c    ****     // Hour 
 433:Src/main.c    ****     else if ( GPIO_Pin == GPIO_PIN_5) {
 4826              		.loc 1 433 10 is_stmt 1 view .LVU848
 4827              		.loc 1 433 13 is_stmt 0 view .LVU849
 4828 000c 2028     		cmp	r0, #32
 4829 000e 08D1     		bne	.L165
 434:Src/main.c    ****       stopFlag = 1;
 4830              		.loc 1 434 7 is_stmt 1 view .LVU850
 4831              		.loc 1 434 16 is_stmt 0 view .LVU851
 4832 0010 0123     		movs	r3, #1
 4833 0012 074A     		ldr	r2, .L171
 4834 0014 1360     		str	r3, [r2]
 435:Src/main.c    ****       hourFlag = 1;
 4835              		.loc 1 435 7 is_stmt 1 view .LVU852
 4836              		.loc 1 435 16 is_stmt 0 view .LVU853
 4837 0016 074A     		ldr	r2, .L171+4
 4838 0018 1360     		str	r3, [r2]
 436:Src/main.c    ****     }
 437:Src/main.c    **** 
 438:Src/main.c    **** }
 4839              		.loc 1 438 1 view .LVU854
 4840 001a 02E0     		b	.L165
 4841              	.L169:
 425:Src/main.c    ****     }
 4842              		.loc 1 425 7 is_stmt 1 view .LVU855
 425:Src/main.c    ****     }
 4843              		.loc 1 425 16 is_stmt 0 view .LVU856
 4844 001c 044B     		ldr	r3, .L171
 4845 001e 0122     		movs	r2, #1
 4846 0020 1A60     		str	r2, [r3]
 4847              	.L165:
 4848              		.loc 1 438 1 view .LVU857
 4849              		@ sp needed
 4850 0022 7047     		bx	lr
 4851              	.L170:
 429:Src/main.c    ****       minuteFlag = 1;
 4852              		.loc 1 429 7 is_stmt 1 view .LVU858
 429:Src/main.c    ****       minuteFlag = 1;
 4853              		.loc 1 429 16 is_stmt 0 view .LVU859
 4854 0024 0123     		movs	r3, #1
 4855 0026 024A     		ldr	r2, .L171
 4856 0028 1360     		str	r3, [r2]
 430:Src/main.c    ****     }
 4857              		.loc 1 430 7 is_stmt 1 view .LVU860
 430:Src/main.c    ****     }
 4858              		.loc 1 430 18 is_stmt 0 view .LVU861
 4859 002a 034A     		ldr	r2, .L171+8
 4860 002c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccaWamBb.s 			page 116


 4861 002e F8E7     		b	.L165
 4862              	.L172:
 4863              		.align	2
 4864              	.L171:
 4865 0030 00000000 		.word	.LANCHOR0
 4866 0034 00000000 		.word	.LANCHOR2
 4867 0038 00000000 		.word	.LANCHOR3
 4868              		.cfi_endproc
 4869              	.LFE59:
 4871              		.section	.text.Error_Handler,"ax",%progbits
 4872              		.align	1
 4873              		.global	Error_Handler
 4874              		.syntax unified
 4875              		.code	16
 4876              		.thumb_func
 4877              		.fpu softvfp
 4879              	Error_Handler:
 4880              	.LFB60:
 439:Src/main.c    **** /* USER CODE END 4 */
 440:Src/main.c    **** 
 441:Src/main.c    **** /**
 442:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 443:Src/main.c    ****   * @retval None
 444:Src/main.c    ****   */
 445:Src/main.c    **** void Error_Handler(void)
 446:Src/main.c    **** {
 4881              		.loc 1 446 1 is_stmt 1 view -0
 4882              		.cfi_startproc
 4883              		@ args = 0, pretend = 0, frame = 0
 4884              		@ frame_needed = 0, uses_anonymous_args = 0
 4885              		@ link register save eliminated.
 447:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 448:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 449:Src/main.c    **** 
 450:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 451:Src/main.c    **** }
 4886              		.loc 1 451 1 view .LVU863
 4887              		@ sp needed
 4888 0000 7047     		bx	lr
 4889              		.cfi_endproc
 4890              	.LFE60:
 4892              		.comm	RTCtime,20,4
 4893              		.global	minuteFlag
 4894              		.global	hourFlag
 4895              		.global	stopFlag
 4896              		.global	mamboNumber
 4897              		.comm	htim1,64,4
 4898              		.comm	hrtc,32,4
 4899              		.section	.bss.hourFlag,"aw",%nobits
 4900              		.align	2
 4901              		.set	.LANCHOR2,. + 0
 4904              	hourFlag:
 4905 0000 00000000 		.space	4
 4906              		.section	.bss.minuteFlag,"aw",%nobits
 4907              		.align	2
 4908              		.set	.LANCHOR3,. + 0
 4911              	minuteFlag:
ARM GAS  /tmp/ccaWamBb.s 			page 117


 4912 0000 00000000 		.space	4
 4913              		.section	.bss.stopFlag,"aw",%nobits
 4914              		.align	2
 4915              		.set	.LANCHOR0,. + 0
 4918              	stopFlag:
 4919 0000 00000000 		.space	4
 4920              		.section	.data.mamboNumber,"aw"
 4921              		.align	2
 4922              		.set	.LANCHOR1,. + 0
 4925              	mamboNumber:
 4926 0000 05000000 		.word	5
 4927              		.text
 4928              	.Letext0:
 4929              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4930              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4931              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 4932              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 4933              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 4934              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 4935              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 4936              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 4937              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 4938              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rtc.h"
 4939              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 4940              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 4941              		.file 16 "/usr/arm-none-eabi/include/sys/lock.h"
 4942              		.file 17 "/usr/arm-none-eabi/include/sys/_types.h"
 4943              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 4944              		.file 19 "/usr/arm-none-eabi/include/sys/reent.h"
 4945              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 4946              		.file 21 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 4947              		.file 22 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 4948              		.file 23 "/usr/arm-none-eabi/include/stdio.h"
 4949              		.file 24 "Inc/usb_device.h"
 4950              		.file 25 "/usr/arm-none-eabi/include/string.h"
 4951              		.file 26 "<built-in>"
ARM GAS  /tmp/ccaWamBb.s 			page 118


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccaWamBb.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccaWamBb.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccaWamBb.s:132    .text.MX_GPIO_Init:0000000000000070 $d
     /tmp/ccaWamBb.s:139    .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccaWamBb.s:145    .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccaWamBb.s:193    .text.MX_RTC_Init:0000000000000024 $d
                            *COM*:0000000000000020 hrtc
     /tmp/ccaWamBb.s:199    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccaWamBb.s:205    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccaWamBb.s:293    .text.MX_TIM1_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccaWamBb.s:299    .text.charlie:0000000000000000 $t
     /tmp/ccaWamBb.s:306    .text.charlie:0000000000000000 charlie
     /tmp/ccaWamBb.s:880    .text.hands:0000000000000000 $t
     /tmp/ccaWamBb.s:887    .text.hands:0000000000000000 hands
     /tmp/ccaWamBb.s:1149   .text.hands:000000000000015c $d
     /tmp/ccaWamBb.s:1155   .text.dance:0000000000000000 $t
     /tmp/ccaWamBb.s:1162   .text.dance:0000000000000000 dance
     /tmp/ccaWamBb.s:1868   .text.dance:0000000000000494 $d
     /tmp/ccaWamBb.s:1871   .text.dance:0000000000000498 $t
     /tmp/ccaWamBb.s:1928   .text.dance:00000000000004f8 $d
     /tmp/ccaWamBb.s:1931   .text.dance:00000000000004fc $t
     /tmp/ccaWamBb.s:2517   .text.dance:0000000000000904 $d
     /tmp/ccaWamBb.s:2520   .text.dance:0000000000000908 $t
     /tmp/ccaWamBb.s:3160   .text.dance:0000000000000cf8 $d
     /tmp/ccaWamBb.s:3168   .text.dance:0000000000000d00 $t
     /tmp/ccaWamBb.s:3391   .text.dance:0000000000000e40 $d
     /tmp/ccaWamBb.s:3398   .text.initA:0000000000000000 $t
     /tmp/ccaWamBb.s:3405   .text.initA:0000000000000000 initA
     /tmp/ccaWamBb.s:3489   .text.initA:000000000000004c $d
     /tmp/ccaWamBb.s:3494   .text.initB:0000000000000000 $t
     /tmp/ccaWamBb.s:3501   .text.initB:0000000000000000 initB
     /tmp/ccaWamBb.s:3586   .text.initB:0000000000000050 $d
     /tmp/ccaWamBb.s:3591   .text.initC:0000000000000000 $t
     /tmp/ccaWamBb.s:3598   .text.initC:0000000000000000 initC
     /tmp/ccaWamBb.s:3683   .text.initC:0000000000000050 $d
     /tmp/ccaWamBb.s:3688   .text.initD:0000000000000000 $t
     /tmp/ccaWamBb.s:3695   .text.initD:0000000000000000 initD
     /tmp/ccaWamBb.s:3780   .text.initD:0000000000000050 $d
     /tmp/ccaWamBb.s:3785   .text.send_command:0000000000000000 $t
     /tmp/ccaWamBb.s:3792   .text.send_command:0000000000000000 send_command
     /tmp/ccaWamBb.s:3819   .text.say:0000000000000000 $t
     /tmp/ccaWamBb.s:3826   .text.say:0000000000000000 say
     /tmp/ccaWamBb.s:3864   .rodata.clock.str1.4:0000000000000000 $d
     /tmp/ccaWamBb.s:3868   .text.clock:0000000000000000 $t
     /tmp/ccaWamBb.s:3875   .text.clock:0000000000000000 clock
     /tmp/ccaWamBb.s:4125   .text.clock:0000000000000118 $d
     /tmp/ccaWamBb.s:4130   .text.put_char:0000000000000000 $t
     /tmp/ccaWamBb.s:4137   .text.put_char:0000000000000000 put_char
     /tmp/ccaWamBb.s:4170   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccaWamBb.s:4177   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccaWamBb.s:4276   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccaWamBb.s:4298   .text.main:0000000000000000 $t
     /tmp/ccaWamBb.s:4305   .text.main:0000000000000000 main
     /tmp/ccaWamBb.s:4785   .text.main:0000000000000248 $d
ARM GAS  /tmp/ccaWamBb.s 			page 119


     /tmp/ccaWamBb.s:4801   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccaWamBb.s:4808   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccaWamBb.s:4865   .text.HAL_GPIO_EXTI_Callback:0000000000000030 $d
     /tmp/ccaWamBb.s:4872   .text.Error_Handler:0000000000000000 $t
     /tmp/ccaWamBb.s:4879   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000014 RTCtime
     /tmp/ccaWamBb.s:4911   .bss.minuteFlag:0000000000000000 minuteFlag
     /tmp/ccaWamBb.s:4904   .bss.hourFlag:0000000000000000 hourFlag
     /tmp/ccaWamBb.s:4918   .bss.stopFlag:0000000000000000 stopFlag
     /tmp/ccaWamBb.s:4925   .data.mamboNumber:0000000000000000 mamboNumber
     /tmp/ccaWamBb.s:4900   .bss.hourFlag:0000000000000000 $d
     /tmp/ccaWamBb.s:4907   .bss.minuteFlag:0000000000000000 $d
     /tmp/ccaWamBb.s:4914   .bss.stopFlag:0000000000000000 $d
     /tmp/ccaWamBb.s:4921   .data.mamboNumber:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RTC_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_GPIO_DeInit
HAL_GPIO_WritePin
HAL_Delay
strlen
HAL_RTC_GetTime
HAL_RTC_GetDate
sprintf
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_RTC_SetTime
