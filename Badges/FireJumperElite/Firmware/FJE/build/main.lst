ARM GAS  /tmp/cccixJrj.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB58:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usb_device.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include "charlie.c"
  28:Src/main.c    **** #include "semihosting.c"
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/cccixJrj.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** RTC_HandleTypeDef hrtc;
  48:Src/main.c    **** 
  49:Src/main.c    **** TIM_HandleTypeDef htim1;
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** //void dance();
  54:Src/main.c    **** 
  55:Src/main.c    **** // Keep track of what dance we are on
  56:Src/main.c    **** int mamboNumber = 1;
  57:Src/main.c    **** // Stopper for the inturrupt funciton
  58:Src/main.c    **** int stopFlag = 0;
  59:Src/main.c    **** // Flag to switch to time 
  60:Src/main.c    **** int hourFlag= 0;
  61:Src/main.c    **** int minuteFlag = 0;
  62:Src/main.c    **** 
  63:Src/main.c    **** // RTC defs
  64:Src/main.c    **** RTC_TimeTypeDef RTCtime;
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PV */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  69:Src/main.c    **** void SystemClock_Config(void);
  70:Src/main.c    **** static void MX_GPIO_Init(void);
  71:Src/main.c    **** static void MX_RTC_Init(void);
  72:Src/main.c    **** static void MX_TIM1_Init(void);
  73:Src/main.c    **** /* USER CODE BEGIN PFP */
  74:Src/main.c    **** 
  75:Src/main.c    **** void dance();
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  79:Src/main.c    **** /* USER CODE BEGIN 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /**
  84:Src/main.c    ****   * @brief  The application entry point.
  85:Src/main.c    ****   * @retval int
  86:Src/main.c    ****   */
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
  90:Src/main.c    **** 
ARM GAS  /tmp/cccixJrj.s 			page 3


  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Configure the system clock */
 103:Src/main.c    ****   SystemClock_Config();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Initialize all configured peripherals */
 110:Src/main.c    ****   MX_GPIO_Init();
 111:Src/main.c    ****   MX_USB_DEVICE_Init();
 112:Src/main.c    ****   MX_RTC_Init();
 113:Src/main.c    ****   MX_TIM1_Init();
 114:Src/main.c    ****   /* USER CODE BEGIN 2 */
 115:Src/main.c    ****   GPIO_InitTypeDef PinA = initA();
 116:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 117:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 118:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 119:Src/main.c    **** 
 120:Src/main.c    ****   stopFlag = 0;
 121:Src/main.c    ****   int newMinutes = 0;
 122:Src/main.c    ****   int newHours = 0;
 123:Src/main.c    **** 
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE END 2 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Infinite loop */
 128:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 129:Src/main.c    ****   while (1)
 130:Src/main.c    ****   {
 131:Src/main.c    ****     /* USER CODE END WHILE */
 132:Src/main.c    **** 
 133:Src/main.c    ****     /* USER CODE BEGIN 3 */
 134:Src/main.c    **** 
 135:Src/main.c    ****     // Ladies and gentlemen, this is Mambo Number Five
 136:Src/main.c    ****     if(mamboNumber == 5)
 137:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 138:Src/main.c    **** 
 139:Src/main.c    ****    // if(mamboNumber == 6)
 140:Src/main.c    ****    //   trySleep(PinA, PinB, PinC, PinD, hrtc);
 141:Src/main.c    **** 
 142:Src/main.c    ****     // Or not...
 143:Src/main.c    ****     else
 144:Src/main.c    ****        dance(PinA, PinB, PinC, PinD, mamboNumber);
 145:Src/main.c    **** 
 146:Src/main.c    **** 
 147:Src/main.c    ****     // Increase hour by one
ARM GAS  /tmp/cccixJrj.s 			page 4


 148:Src/main.c    ****     if(stopFlag == 1 && hourFlag == 1){
 149:Src/main.c    ****       HAL_StatusTypeDef res;
 150:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 151:Src/main.c    ****       RTC_TimeTypeDef newTime;
 152:Src/main.c    ****       RTC_DateTypeDef currentDate;
 153:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 154:Src/main.c    ****       memset(&newTime, 0, sizeof(newTime));
 155:Src/main.c    ****       memset(&currentTime, 0, sizeof(currentTime));
 156:Src/main.c    **** 
 157:Src/main.c    ****       say("In hour button\n");
 158:Src/main.c    ****       HAL_Delay(100);
 159:Src/main.c    **** 
 160:Src/main.c    ****       
 161:Src/main.c    ****       char buf[30];
 162:Src/main.c    ****       
 163:Src/main.c    ****       // Clear out our flags
 164:Src/main.c    ****       stopFlag =0;
 165:Src/main.c    ****       hourFlag =0;
 166:Src/main.c    ****       mamboNumber = 5;
 167:Src/main.c    **** 
 168:Src/main.c    ****       
 169:Src/main.c    ****       res = HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 170:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 171:Src/main.c    ****       // for rtc time dont unlock...
 172:Src/main.c    ****       // You dont want to know how long I fought this
 173:Src/main.c    ****       res = HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 174:Src/main.c    ****       newHours = currentTime.Hours;
 175:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 176:Src/main.c    ****       say(buf);
 177:Src/main.c    **** 
 178:Src/main.c    ****       if(newHours >12)
 179:Src/main.c    ****          newTime.Hours = 1;
 180:Src/main.c    ****       else
 181:Src/main.c    ****          newTime.Hours = ++newHours;
 182:Src/main.c    **** 
 183:Src/main.c    ****       newTime.Minutes = 0; 
 184:Src/main.c    ****       newTime.Seconds = 0; 
 185:Src/main.c    **** 
 186:Src/main.c    **** 
 187:Src/main.c    ****       res = HAL_RTC_SetTime(&hrtc, &newTime, RTC_FORMAT_BIN);
 188:Src/main.c    ****       if(res != 0){
 189:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 190:Src/main.c    ****          say(buf);
 191:Src/main.c    ****       }
 192:Src/main.c    **** 
 193:Src/main.c    ****     }
 194:Src/main.c    **** 
 195:Src/main.c    ****     // Increase minute by 10
 196:Src/main.c    ****     if(stopFlag == 1 && minuteFlag == 1){
 197:Src/main.c    ****       HAL_StatusTypeDef res;
 198:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 199:Src/main.c    ****       RTC_TimeTypeDef newTime;
 200:Src/main.c    ****       RTC_DateTypeDef currentDate;
 201:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 202:Src/main.c    ****       say("In minute button\n");
 203:Src/main.c    ****       HAL_Delay(100);
 204:Src/main.c    ****       char buf[30];
ARM GAS  /tmp/cccixJrj.s 			page 5


 205:Src/main.c    **** 
 206:Src/main.c    ****       // Clear out flags
 207:Src/main.c    ****       stopFlag =0;
 208:Src/main.c    ****       minuteFlag =0;
 209:Src/main.c    ****       mamboNumber = 5;
 210:Src/main.c    **** 
 211:Src/main.c    ****       res = HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 212:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 213:Src/main.c    ****       // for rtc time dont unlock...
 214:Src/main.c    ****       // You dont want to know how long I fought this
 215:Src/main.c    ****       res = HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 216:Src/main.c    **** 
 217:Src/main.c    ****       newMinutes = currentTime.Minutes;
 218:Src/main.c    **** 
 219:Src/main.c    ****       newTime.Seconds = 0; 
 220:Src/main.c    ****       
 221:Src/main.c    ****       if(newMinutes < 55){
 222:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 223:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 224:Src/main.c    ****       }
 225:Src/main.c    ****       else{
 226:Src/main.c    ****          newTime.Minutes = 0;
 227:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 228:Src/main.c    ****       }
 229:Src/main.c    **** 
 230:Src/main.c    ****       sprintf(buf,"minute is %d \n", currentTime.Minutes);
 231:Src/main.c    ****       say(buf);
 232:Src/main.c    **** 
 233:Src/main.c    ****       res = HAL_RTC_SetTime(&hrtc, &newTime, RTC_FORMAT_BIN);
 234:Src/main.c    ****       if(res != 0){
 235:Src/main.c    ****          sprintf(buf,"minute time error %d \n", res);
 236:Src/main.c    ****          say(buf);
 237:Src/main.c    ****       }
 238:Src/main.c    ****     }
 239:Src/main.c    **** 
 240:Src/main.c    ****     // Switch mode
 241:Src/main.c    ****     if(stopFlag == 1){
 242:Src/main.c    ****       char buf[20];
 243:Src/main.c    ****       sprintf(buf,"We are in mode %d \n", mamboNumber);
 244:Src/main.c    ****       say(buf);
 245:Src/main.c    **** 
 246:Src/main.c    ****       HAL_Delay(100);
 247:Src/main.c    ****       stopFlag =0;
 248:Src/main.c    ****       mamboNumber++;
 249:Src/main.c    ****       if(mamboNumber > 5)
 250:Src/main.c    ****          mamboNumber = 0;
 251:Src/main.c    ****     }
 252:Src/main.c    ****   }
 253:Src/main.c    ****   /* USER CODE END 3 */
 254:Src/main.c    **** }
 255:Src/main.c    **** 
 256:Src/main.c    **** 
 257:Src/main.c    **** /**
 258:Src/main.c    ****   * @brief System Clock Configuration
 259:Src/main.c    ****   * @retval None
 260:Src/main.c    ****   */
 261:Src/main.c    **** void SystemClock_Config(void)
ARM GAS  /tmp/cccixJrj.s 			page 6


 262:Src/main.c    **** {
 263:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 264:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 265:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 266:Src/main.c    **** 
 267:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 268:Src/main.c    ****   */
 269:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_LSI;
 270:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 271:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 272:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 273:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 274:Src/main.c    ****   {
 275:Src/main.c    ****     Error_Handler();
 276:Src/main.c    ****   }
 277:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 278:Src/main.c    ****   */
 279:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 280:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 281:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 282:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 283:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 284:Src/main.c    **** 
 285:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     Error_Handler();
 288:Src/main.c    ****   }
 289:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_RTC;
 290:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 291:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 292:Src/main.c    **** 
 293:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 294:Src/main.c    ****   {
 295:Src/main.c    ****     Error_Handler();
 296:Src/main.c    ****   }
 297:Src/main.c    **** }
 298:Src/main.c    **** 
 299:Src/main.c    **** /**
 300:Src/main.c    ****   * @brief RTC Initialization Function
 301:Src/main.c    ****   * @param None
 302:Src/main.c    ****   * @retval None
 303:Src/main.c    ****   */
 304:Src/main.c    **** static void MX_RTC_Init(void)
 305:Src/main.c    **** {
 306:Src/main.c    **** 
 307:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 308:Src/main.c    **** 
 309:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 312:Src/main.c    **** 
 313:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 314:Src/main.c    ****   /** Initialize RTC Only 
 315:Src/main.c    ****   */
 316:Src/main.c    ****   hrtc.Instance = RTC;
 317:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 318:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
ARM GAS  /tmp/cccixJrj.s 			page 7


 319:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 320:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 321:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 322:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 323:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 324:Src/main.c    ****   {
 325:Src/main.c    ****     Error_Handler();
 326:Src/main.c    ****   }
 327:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 2 */
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE END RTC_Init 2 */
 330:Src/main.c    **** 
 331:Src/main.c    **** }
 332:Src/main.c    **** 
 333:Src/main.c    **** /**
 334:Src/main.c    ****   * @brief TIM1 Initialization Function
 335:Src/main.c    ****   * @param None
 336:Src/main.c    ****   * @retval None
 337:Src/main.c    ****   */
 338:Src/main.c    **** static void MX_TIM1_Init(void)
 339:Src/main.c    **** {
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 342:Src/main.c    **** 
 343:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 344:Src/main.c    **** 
 345:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 346:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 349:Src/main.c    **** 
 350:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 351:Src/main.c    ****   htim1.Instance = TIM1;
 352:Src/main.c    ****   htim1.Init.Prescaler = 0;
 353:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 354:Src/main.c    ****   htim1.Init.Period = 0;
 355:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 356:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 357:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 358:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 359:Src/main.c    ****   {
 360:Src/main.c    ****     Error_Handler();
 361:Src/main.c    ****   }
 362:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 363:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 364:Src/main.c    ****   {
 365:Src/main.c    ****     Error_Handler();
 366:Src/main.c    ****   }
 367:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 368:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 369:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 370:Src/main.c    ****   {
 371:Src/main.c    ****     Error_Handler();
 372:Src/main.c    ****   }
 373:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 374:Src/main.c    **** 
 375:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
ARM GAS  /tmp/cccixJrj.s 			page 8


 376:Src/main.c    **** 
 377:Src/main.c    **** }
 378:Src/main.c    **** 
 379:Src/main.c    **** /**
 380:Src/main.c    ****   * @brief GPIO Initialization Function
 381:Src/main.c    ****   * @param None
 382:Src/main.c    ****   * @retval None
 383:Src/main.c    ****   */
 384:Src/main.c    **** static void MX_GPIO_Init(void)
 385:Src/main.c    **** {
  26              		.loc 1 385 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 386:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 386 3 view .LVU1
  40              		.loc 1 386 20 is_stmt 0 view .LVU2
  41 0004 0822     		movs	r2, #8
  42 0006 0021     		movs	r1, #0
  43 0008 06A8     		add	r0, sp, #24
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 387:Src/main.c    **** 
 388:Src/main.c    ****   /* GPIO Ports Clock Enable */
 389:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  46              		.loc 1 389 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 389 3 view .LVU4
  49              		.loc 1 389 3 view .LVU5
  50 000e 184B     		ldr	r3, .L2
  51 0010 5969     		ldr	r1, [r3, #20]
  52 0012 8020     		movs	r0, #128
  53 0014 C002     		lsls	r0, r0, #11
  54 0016 0143     		orrs	r1, r0
  55 0018 5961     		str	r1, [r3, #20]
  56              		.loc 1 389 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0240     		ands	r2, r0
  59 001e 0192     		str	r2, [sp, #4]
  60              		.loc 1 389 3 view .LVU7
  61 0020 019A     		ldr	r2, [sp, #4]
  62              	.LBE2:
  63              		.loc 1 389 3 view .LVU8
 390:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 390 3 view .LVU9
  65              	.LBB3:
  66              		.loc 1 390 3 view .LVU10
  67              		.loc 1 390 3 view .LVU11
ARM GAS  /tmp/cccixJrj.s 			page 9


  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 8902     		lsls	r1, r1, #10
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 390 3 view .LVU12
  74 002c 5B69     		ldr	r3, [r3, #20]
  75 002e 0B40     		ands	r3, r1
  76 0030 0293     		str	r3, [sp, #8]
  77              		.loc 1 390 3 view .LVU13
  78 0032 029B     		ldr	r3, [sp, #8]
  79              	.LBE3:
  80              		.loc 1 390 3 view .LVU14
 391:Src/main.c    **** 
 392:Src/main.c    **** /*
 393:Src/main.c    ****   //Configure GPIO pin Output Level 
 394:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, A_Pin|B_Pin|C_Pin|D_Pin, GPIO_PIN_RESET);
 395:Src/main.c    **** 
 396:Src/main.c    ****   //Configure GPIO pins : A_Pin B_Pin C_Pin D_Pin 
 397:Src/main.c    ****   GPIO_InitStruct.Pin = A_Pin|B_Pin|C_Pin|D_Pin;
 398:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 399:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 400:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 401:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 402:Src/main.c    ****   */
 403:Src/main.c    **** 
 404:Src/main.c    ****   //Configure GPIO pin : Mode_Pin 
 405:Src/main.c    ****   GPIO_InitStruct.Pin = Mode_Pin;
  81              		.loc 1 405 3 view .LVU15
  82              		.loc 1 405 23 is_stmt 0 view .LVU16
  83 0034 8023     		movs	r3, #128
  84 0036 5B00     		lsls	r3, r3, #1
  85 0038 0393     		str	r3, [sp, #12]
 406:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  86              		.loc 1 406 3 is_stmt 1 view .LVU17
  87              		.loc 1 406 24 is_stmt 0 view .LVU18
  88 003a 0E4D     		ldr	r5, .L2+4
  89 003c 0495     		str	r5, [sp, #16]
 407:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
  90              		.loc 1 407 3 is_stmt 1 view .LVU19
  91              		.loc 1 407 24 is_stmt 0 view .LVU20
  92 003e 0124     		movs	r4, #1
  93 0040 0594     		str	r4, [sp, #20]
 408:Src/main.c    ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
  94              		.loc 1 408 3 is_stmt 1 view .LVU21
  95 0042 03A9     		add	r1, sp, #12
  96 0044 0C48     		ldr	r0, .L2+8
  97 0046 FFF7FEFF 		bl	HAL_GPIO_Init
  98              	.LVL1:
 409:Src/main.c    **** 
 410:Src/main.c    ****   //Configure GPIO pins : Hour_Pin Minute_Pin 
 411:Src/main.c    ****   GPIO_InitStruct.Pin = Hour_Pin|Minute_Pin;
  99              		.loc 1 411 3 view .LVU22
 100              		.loc 1 411 23 is_stmt 0 view .LVU23
 101 004a 6023     		movs	r3, #96
 102 004c 0393     		str	r3, [sp, #12]
 412:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
ARM GAS  /tmp/cccixJrj.s 			page 10


 103              		.loc 1 412 3 is_stmt 1 view .LVU24
 104              		.loc 1 412 24 is_stmt 0 view .LVU25
 105 004e 0495     		str	r5, [sp, #16]
 413:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 106              		.loc 1 413 3 is_stmt 1 view .LVU26
 107              		.loc 1 413 24 is_stmt 0 view .LVU27
 108 0050 0594     		str	r4, [sp, #20]
 414:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 414 3 is_stmt 1 view .LVU28
 110 0052 9020     		movs	r0, #144
 111 0054 03A9     		add	r1, sp, #12
 112 0056 C005     		lsls	r0, r0, #23
 113 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 114              	.LVL2:
 415:Src/main.c    **** 
 416:Src/main.c    ****   /* EXTI interrupt init*/
 417:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 115              		.loc 1 417 3 view .LVU29
 116 005c 0022     		movs	r2, #0
 117 005e 0021     		movs	r1, #0
 118 0060 0720     		movs	r0, #7
 119 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 120              	.LVL3:
 418:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 121              		.loc 1 418 3 view .LVU30
 122 0066 0720     		movs	r0, #7
 123 0068 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 124              	.LVL4:
 419:Src/main.c    **** 
 420:Src/main.c    **** }
 125              		.loc 1 420 1 is_stmt 0 view .LVU31
 126 006c 09B0     		add	sp, sp, #36
 127              		@ sp needed
 128 006e 30BD     		pop	{r4, r5, pc}
 129              	.L3:
 130              		.align	2
 131              	.L2:
 132 0070 00100240 		.word	1073876992
 133 0074 00002110 		.word	270598144
 134 0078 00040048 		.word	1207960576
 135              		.cfi_endproc
 136              	.LFE58:
 138              		.section	.text.MX_RTC_Init,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.code	16
 142              		.thumb_func
 143              		.fpu softvfp
 145              	MX_RTC_Init:
 146              	.LFB56:
 305:Src/main.c    **** 
 147              		.loc 1 305 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 10B5     		push	{r4, lr}
 152              	.LCFI2:
ARM GAS  /tmp/cccixJrj.s 			page 11


 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 316:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 156              		.loc 1 316 3 view .LVU33
 316:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_12;
 157              		.loc 1 316 17 is_stmt 0 view .LVU34
 158 0002 0848     		ldr	r0, .L5
 159 0004 084B     		ldr	r3, .L5+4
 160 0006 0360     		str	r3, [r0]
 317:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 161              		.loc 1 317 3 is_stmt 1 view .LVU35
 317:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 162              		.loc 1 317 24 is_stmt 0 view .LVU36
 163 0008 4023     		movs	r3, #64
 164 000a 4360     		str	r3, [r0, #4]
 318:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 165              		.loc 1 318 3 is_stmt 1 view .LVU37
 318:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 166              		.loc 1 318 26 is_stmt 0 view .LVU38
 167 000c 3F33     		adds	r3, r3, #63
 168 000e 8360     		str	r3, [r0, #8]
 319:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 169              		.loc 1 319 3 is_stmt 1 view .LVU39
 319:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 170              		.loc 1 319 25 is_stmt 0 view .LVU40
 171 0010 8033     		adds	r3, r3, #128
 172 0012 C360     		str	r3, [r0, #12]
 320:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 173              		.loc 1 320 3 is_stmt 1 view .LVU41
 320:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 174              		.loc 1 320 20 is_stmt 0 view .LVU42
 175 0014 0023     		movs	r3, #0
 176 0016 0361     		str	r3, [r0, #16]
 321:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 177              		.loc 1 321 3 is_stmt 1 view .LVU43
 321:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 178              		.loc 1 321 28 is_stmt 0 view .LVU44
 179 0018 4361     		str	r3, [r0, #20]
 322:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 180              		.loc 1 322 3 is_stmt 1 view .LVU45
 322:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 181              		.loc 1 322 24 is_stmt 0 view .LVU46
 182 001a 8361     		str	r3, [r0, #24]
 323:Src/main.c    ****   {
 183              		.loc 1 323 3 is_stmt 1 view .LVU47
 323:Src/main.c    ****   {
 184              		.loc 1 323 7 is_stmt 0 view .LVU48
 185 001c FFF7FEFF 		bl	HAL_RTC_Init
 186              	.LVL5:
 331:Src/main.c    **** 
 187              		.loc 1 331 1 view .LVU49
 188              		@ sp needed
 189 0020 10BD     		pop	{r4, pc}
 190              	.L6:
 191 0022 C046     		.align	2
 192              	.L5:
ARM GAS  /tmp/cccixJrj.s 			page 12


 193 0024 00000000 		.word	hrtc
 194 0028 00280040 		.word	1073752064
 195              		.cfi_endproc
 196              	.LFE56:
 198              		.section	.text.MX_TIM1_Init,"ax",%progbits
 199              		.align	1
 200              		.syntax unified
 201              		.code	16
 202              		.thumb_func
 203              		.fpu softvfp
 205              	MX_TIM1_Init:
 206              	.LFB57:
 339:Src/main.c    **** 
 207              		.loc 1 339 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 24
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 30B5     		push	{r4, r5, lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 12
 214              		.cfi_offset 4, -12
 215              		.cfi_offset 5, -8
 216              		.cfi_offset 14, -4
 217 0002 87B0     		sub	sp, sp, #28
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 40
 345:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 220              		.loc 1 345 3 view .LVU51
 345:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 221              		.loc 1 345 26 is_stmt 0 view .LVU52
 222 0004 1022     		movs	r2, #16
 223 0006 0021     		movs	r1, #0
 224 0008 02A8     		add	r0, sp, #8
 225 000a FFF7FEFF 		bl	memset
 226              	.LVL6:
 346:Src/main.c    **** 
 227              		.loc 1 346 3 is_stmt 1 view .LVU53
 346:Src/main.c    **** 
 228              		.loc 1 346 27 is_stmt 0 view .LVU54
 229 000e 0822     		movs	r2, #8
 230 0010 0021     		movs	r1, #0
 231 0012 6846     		mov	r0, sp
 232 0014 FFF7FEFF 		bl	memset
 233              	.LVL7:
 351:Src/main.c    ****   htim1.Init.Prescaler = 0;
 234              		.loc 1 351 3 is_stmt 1 view .LVU55
 351:Src/main.c    ****   htim1.Init.Prescaler = 0;
 235              		.loc 1 351 18 is_stmt 0 view .LVU56
 236 0018 0D4C     		ldr	r4, .L8
 237 001a 0E4B     		ldr	r3, .L8+4
 238 001c 2360     		str	r3, [r4]
 352:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 239              		.loc 1 352 3 is_stmt 1 view .LVU57
 352:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 240              		.loc 1 352 24 is_stmt 0 view .LVU58
 241 001e 0025     		movs	r5, #0
 242 0020 6560     		str	r5, [r4, #4]
ARM GAS  /tmp/cccixJrj.s 			page 13


 353:Src/main.c    ****   htim1.Init.Period = 0;
 243              		.loc 1 353 3 is_stmt 1 view .LVU59
 353:Src/main.c    ****   htim1.Init.Period = 0;
 244              		.loc 1 353 26 is_stmt 0 view .LVU60
 245 0022 A560     		str	r5, [r4, #8]
 354:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 246              		.loc 1 354 3 is_stmt 1 view .LVU61
 354:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 247              		.loc 1 354 21 is_stmt 0 view .LVU62
 248 0024 E560     		str	r5, [r4, #12]
 355:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 249              		.loc 1 355 3 is_stmt 1 view .LVU63
 355:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 250              		.loc 1 355 28 is_stmt 0 view .LVU64
 251 0026 2561     		str	r5, [r4, #16]
 356:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 252              		.loc 1 356 3 is_stmt 1 view .LVU65
 356:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 253              		.loc 1 356 32 is_stmt 0 view .LVU66
 254 0028 6561     		str	r5, [r4, #20]
 357:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 255              		.loc 1 357 3 is_stmt 1 view .LVU67
 357:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 256              		.loc 1 357 32 is_stmt 0 view .LVU68
 257 002a A561     		str	r5, [r4, #24]
 358:Src/main.c    ****   {
 258              		.loc 1 358 3 is_stmt 1 view .LVU69
 358:Src/main.c    ****   {
 259              		.loc 1 358 7 is_stmt 0 view .LVU70
 260 002c 2000     		movs	r0, r4
 261 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 262              	.LVL8:
 362:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 263              		.loc 1 362 3 is_stmt 1 view .LVU71
 362:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 264              		.loc 1 362 34 is_stmt 0 view .LVU72
 265 0032 8023     		movs	r3, #128
 266 0034 5B01     		lsls	r3, r3, #5
 267 0036 0293     		str	r3, [sp, #8]
 363:Src/main.c    ****   {
 268              		.loc 1 363 3 is_stmt 1 view .LVU73
 363:Src/main.c    ****   {
 269              		.loc 1 363 7 is_stmt 0 view .LVU74
 270 0038 02A9     		add	r1, sp, #8
 271 003a 2000     		movs	r0, r4
 272 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 273              	.LVL9:
 367:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 274              		.loc 1 367 3 is_stmt 1 view .LVU75
 367:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 275              		.loc 1 367 37 is_stmt 0 view .LVU76
 276 0040 0095     		str	r5, [sp]
 368:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 277              		.loc 1 368 3 is_stmt 1 view .LVU77
 368:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 278              		.loc 1 368 33 is_stmt 0 view .LVU78
 279 0042 0195     		str	r5, [sp, #4]
ARM GAS  /tmp/cccixJrj.s 			page 14


 369:Src/main.c    ****   {
 280              		.loc 1 369 3 is_stmt 1 view .LVU79
 369:Src/main.c    ****   {
 281              		.loc 1 369 7 is_stmt 0 view .LVU80
 282 0044 6946     		mov	r1, sp
 283 0046 2000     		movs	r0, r4
 284 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 285              	.LVL10:
 377:Src/main.c    **** 
 286              		.loc 1 377 1 view .LVU81
 287 004c 07B0     		add	sp, sp, #28
 288              		@ sp needed
 289 004e 30BD     		pop	{r4, r5, pc}
 290              	.L9:
 291              		.align	2
 292              	.L8:
 293 0050 00000000 		.word	htim1
 294 0054 002C0140 		.word	1073818624
 295              		.cfi_endproc
 296              	.LFE57:
 298              		.section	.text.charlie,"ax",%progbits
 299              		.align	1
 300              		.global	charlie
 301              		.syntax unified
 302              		.code	16
 303              		.thumb_func
 304              		.fpu softvfp
 306              	charlie:
 307              	.LVL11:
 308              	.LFB46:
 309              		.file 2 "Src/charlie.c"
   1:Src/charlie.c **** //Charlieplexing Library
   2:Src/charlie.c **** //William Rickert March2020
   3:Src/charlie.c **** 
   4:Src/charlie.c **** 
   5:Src/charlie.c **** extern int stopFlag;
   6:Src/charlie.c **** extern int minuteFlag;
   7:Src/charlie.c **** extern int hourFlag;
   8:Src/charlie.c **** 
   9:Src/charlie.c **** void charlie(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef 
  10:Src/charlie.c **** void hands(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  11:Src/charlie.c **** void StopOneSec();
  12:Src/charlie.c **** void say();
  13:Src/charlie.c **** 
  14:Src/charlie.c **** // Function to get current time and determine what to display
  15:Src/charlie.c **** void clock(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  16:Src/charlie.c ****    RTC_TimeTypeDef RTCtime;
  17:Src/charlie.c ****    RTC_DateTypeDef RTCdate;
  18:Src/charlie.c ****    HAL_RTC_GetTime(&whatTime, &RTCtime, RTC_FORMAT_BIN);
  19:Src/charlie.c ****    HAL_RTC_GetDate(&whatTime, &RTCdate, RTC_FORMAT_BIN);
  20:Src/charlie.c **** 
  21:Src/charlie.c ****    int minutes = RTCtime.Minutes;
  22:Src/charlie.c ****    int hours = RTCtime.Hours;
  23:Src/charlie.c ****    int displayMin = 0;
  24:Src/charlie.c **** 
  25:Src/charlie.c **** 
  26:Src/charlie.c ****    if(minutes > 0 && minutes < 3)
ARM GAS  /tmp/cccixJrj.s 			page 15


  27:Src/charlie.c ****       displayMin = 12;
  28:Src/charlie.c ****    else if(minutes > 3 && minutes < 7)
  29:Src/charlie.c ****       displayMin = 1;
  30:Src/charlie.c ****    else if(minutes > 7 && minutes < 12)
  31:Src/charlie.c ****       displayMin = 2;
  32:Src/charlie.c ****    else if(minutes > 12 && minutes < 17)
  33:Src/charlie.c ****       displayMin = 3;
  34:Src/charlie.c ****    else if(minutes > 17 && minutes < 22)
  35:Src/charlie.c ****       displayMin = 4;
  36:Src/charlie.c ****    else if(minutes > 22 && minutes < 27)
  37:Src/charlie.c ****       displayMin = 5;
  38:Src/charlie.c ****    else if(minutes > 27 && minutes < 32)
  39:Src/charlie.c ****       displayMin = 6;
  40:Src/charlie.c ****    else if(minutes > 32 && minutes < 37)
  41:Src/charlie.c ****       displayMin = 7;
  42:Src/charlie.c ****    else if(minutes > 37 && minutes < 42)
  43:Src/charlie.c ****       displayMin = 8;
  44:Src/charlie.c ****    else if(minutes > 42 && minutes < 47)
  45:Src/charlie.c ****       displayMin = 9;
  46:Src/charlie.c ****    else if(minutes > 47 && minutes < 52)
  47:Src/charlie.c ****       displayMin = 10;
  48:Src/charlie.c ****    else if(minutes > 52 && minutes < 57)
  49:Src/charlie.c ****       displayMin = 11;
  50:Src/charlie.c ****    else if(minutes > 57 && minutes < 61)
  51:Src/charlie.c ****       displayMin = 12;
  52:Src/charlie.c **** 
  53:Src/charlie.c ****    hands(PinA, PinB, PinC, PinD, hours, displayMin);
  54:Src/charlie.c ****    
  55:Src/charlie.c **** }
  56:Src/charlie.c **** 
  57:Src/charlie.c **** // Function to display current time
  58:Src/charlie.c **** void hands(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  59:Src/charlie.c **** 
  60:Src/charlie.c **** //   say("in hands");
  61:Src/charlie.c ****    for(int i = 0; i < 100; i++){
  62:Src/charlie.c **** 
  63:Src/charlie.c ****       for(int j = 0; j < 10; j++){
  64:Src/charlie.c ****  //     say("first\n");
  65:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, hours);
  66:Src/charlie.c ****          HAL_Delay(100);
  67:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
  68:Src/charlie.c ****             return;
  69:Src/charlie.c ****       }
  70:Src/charlie.c ****       for(int k = 0; k < 500; k++){
  71:Src/charlie.c ****  //     say("second\n");
  72:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, hours);
  73:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, minutes);
  74:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
  75:Src/charlie.c ****             return;
  76:Src/charlie.c ****       }
  77:Src/charlie.c ****    }
  78:Src/charlie.c **** }
  79:Src/charlie.c **** 
  80:Src/charlie.c **** void dance(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef Pi
  81:Src/charlie.c ****    // Off
  82:Src/charlie.c ****    if(mambo == 0){
  83:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
ARM GAS  /tmp/cccixJrj.s 			page 16


  84:Src/charlie.c ****    }
  85:Src/charlie.c **** 
  86:Src/charlie.c ****    // Slow, low power, Spin
  87:Src/charlie.c ****    if(mambo == 8){
  88:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
  89:Src/charlie.c ****        if(stopFlag == 1)
  90:Src/charlie.c ****          return;
  91:Src/charlie.c ****        StopOneSec();
  92:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
  93:Src/charlie.c ****        if(stopFlag == 1)
  94:Src/charlie.c ****          return;
  95:Src/charlie.c ****        StopOneSec();
  96:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
  97:Src/charlie.c ****        if(stopFlag == 1)
  98:Src/charlie.c ****          return;
  99:Src/charlie.c ****        StopOneSec();
 100:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 101:Src/charlie.c ****        if(stopFlag == 1)
 102:Src/charlie.c ****          return;
 103:Src/charlie.c ****        StopOneSec();
 104:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 105:Src/charlie.c ****        if(stopFlag == 1)
 106:Src/charlie.c ****          return;
 107:Src/charlie.c ****        StopOneSec();
 108:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 109:Src/charlie.c ****        if(stopFlag == 1)
 110:Src/charlie.c ****          return;
 111:Src/charlie.c ****        StopOneSec();
 112:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 113:Src/charlie.c ****        if(stopFlag == 1)
 114:Src/charlie.c ****          return;
 115:Src/charlie.c ****        StopOneSec();
 116:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 117:Src/charlie.c ****        if(stopFlag == 1)
 118:Src/charlie.c ****          return;
 119:Src/charlie.c ****        StopOneSec();
 120:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 121:Src/charlie.c ****        if(stopFlag == 1)
 122:Src/charlie.c ****          return;
 123:Src/charlie.c ****        StopOneSec();
 124:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 125:Src/charlie.c ****        if(stopFlag == 1)
 126:Src/charlie.c ****          return;
 127:Src/charlie.c ****        StopOneSec();
 128:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 129:Src/charlie.c ****        if(stopFlag == 1)
 130:Src/charlie.c ****          return;
 131:Src/charlie.c ****        StopOneSec();
 132:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 133:Src/charlie.c ****        if(stopFlag == 1)
 134:Src/charlie.c ****          return;
 135:Src/charlie.c ****        StopOneSec();
 136:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 137:Src/charlie.c ****        if(stopFlag == 1)
 138:Src/charlie.c ****          return;
 139:Src/charlie.c ****        StopOneSec();
 140:Src/charlie.c ****    }
ARM GAS  /tmp/cccixJrj.s 			page 17


 141:Src/charlie.c **** 
 142:Src/charlie.c ****    // Slow Spin
 143:Src/charlie.c ****    if(mambo == 1){
 144:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 145:Src/charlie.c ****        if(stopFlag == 1)
 146:Src/charlie.c ****          return;
 147:Src/charlie.c ****        HAL_Delay(1000);
 148:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 149:Src/charlie.c ****        if(stopFlag == 1)
 150:Src/charlie.c ****          return;
 151:Src/charlie.c ****        HAL_Delay(1000);
 152:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 153:Src/charlie.c ****        if(stopFlag == 1)
 154:Src/charlie.c ****          return;
 155:Src/charlie.c ****        HAL_Delay(1000);
 156:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 157:Src/charlie.c ****        if(stopFlag == 1)
 158:Src/charlie.c ****          return;
 159:Src/charlie.c ****        HAL_Delay(1000);
 160:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 161:Src/charlie.c ****        if(stopFlag == 1)
 162:Src/charlie.c ****          return;
 163:Src/charlie.c ****        HAL_Delay(1000);
 164:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 165:Src/charlie.c ****        if(stopFlag == 1)
 166:Src/charlie.c ****          return;
 167:Src/charlie.c ****        HAL_Delay(1000);
 168:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 169:Src/charlie.c ****        if(stopFlag == 1)
 170:Src/charlie.c ****          return;
 171:Src/charlie.c ****        HAL_Delay(1000);
 172:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 173:Src/charlie.c ****        if(stopFlag == 1)
 174:Src/charlie.c ****          return;
 175:Src/charlie.c ****        HAL_Delay(1000);
 176:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 177:Src/charlie.c ****        if(stopFlag == 1)
 178:Src/charlie.c ****          return;
 179:Src/charlie.c ****        HAL_Delay(1000);
 180:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 181:Src/charlie.c ****        if(stopFlag == 1)
 182:Src/charlie.c ****          return;
 183:Src/charlie.c ****        HAL_Delay(1000);
 184:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 185:Src/charlie.c ****        if(stopFlag == 1)
 186:Src/charlie.c ****          return;
 187:Src/charlie.c ****        HAL_Delay(1000);
 188:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 189:Src/charlie.c ****        if(stopFlag == 1)
 190:Src/charlie.c ****          return;
 191:Src/charlie.c ****        HAL_Delay(1000);
 192:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 193:Src/charlie.c ****        if(stopFlag == 1)
 194:Src/charlie.c ****          return;
 195:Src/charlie.c ****        HAL_Delay(1000);
 196:Src/charlie.c ****    }
 197:Src/charlie.c **** 
ARM GAS  /tmp/cccixJrj.s 			page 18


 198:Src/charlie.c ****    // Fast Spin
 199:Src/charlie.c ****    if(mambo == 2){
 200:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 201:Src/charlie.c ****        if(stopFlag == 1)
 202:Src/charlie.c ****          return;
 203:Src/charlie.c ****        HAL_Delay(500);
 204:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 205:Src/charlie.c ****        if(stopFlag == 1)
 206:Src/charlie.c ****          return;
 207:Src/charlie.c ****        HAL_Delay(500);
 208:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 209:Src/charlie.c ****        if(stopFlag == 1)
 210:Src/charlie.c ****          return;
 211:Src/charlie.c ****        HAL_Delay(500);
 212:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 213:Src/charlie.c ****        if(stopFlag == 1)
 214:Src/charlie.c ****          return;
 215:Src/charlie.c ****        HAL_Delay(500);
 216:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 217:Src/charlie.c ****        if(stopFlag == 1)
 218:Src/charlie.c ****          return;
 219:Src/charlie.c ****        HAL_Delay(500);
 220:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 221:Src/charlie.c ****        if(stopFlag == 1)
 222:Src/charlie.c ****          return;
 223:Src/charlie.c ****        HAL_Delay(500);
 224:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 225:Src/charlie.c ****        if(stopFlag == 1)
 226:Src/charlie.c ****          return;
 227:Src/charlie.c ****        HAL_Delay(500);
 228:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 229:Src/charlie.c ****        if(stopFlag == 1)
 230:Src/charlie.c ****          return;
 231:Src/charlie.c ****        HAL_Delay(500);
 232:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 233:Src/charlie.c ****        if(stopFlag == 1)
 234:Src/charlie.c ****          return;
 235:Src/charlie.c ****        HAL_Delay(500);
 236:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 237:Src/charlie.c ****        if(stopFlag == 1)
 238:Src/charlie.c ****          return;
 239:Src/charlie.c ****        HAL_Delay(500);
 240:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 241:Src/charlie.c ****        if(stopFlag == 1)
 242:Src/charlie.c ****          return;
 243:Src/charlie.c ****        HAL_Delay(500);
 244:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 245:Src/charlie.c ****        if(stopFlag == 1)
 246:Src/charlie.c ****          return;
 247:Src/charlie.c ****        HAL_Delay(500);
 248:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 249:Src/charlie.c ****        if(stopFlag == 1)
 250:Src/charlie.c ****          return;
 251:Src/charlie.c ****        HAL_Delay(500);
 252:Src/charlie.c ****    }
 253:Src/charlie.c **** 
 254:Src/charlie.c ****    // POV light up all lights
ARM GAS  /tmp/cccixJrj.s 			page 19


 255:Src/charlie.c ****    if(mambo == 3){
 256:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 257:Src/charlie.c ****       for(int i=0; i<10000; i++){
 258:Src/charlie.c ****          for(int j=1; j<=12; j++){
 259:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 260:Src/charlie.c ****        //      HAL_Delay(1);
 261:Src/charlie.c ****              if(stopFlag == 1)
 262:Src/charlie.c ****                return;
 263:Src/charlie.c ****             
 264:Src/charlie.c ****          } 
 265:Src/charlie.c ****       }
 266:Src/charlie.c ****    } 
 267:Src/charlie.c **** 
 268:Src/charlie.c ****    // Doubles
 269:Src/charlie.c ****    if(mambo == 4){
 270:Src/charlie.c ****       for(int i =1; i<=7; i++){
 271:Src/charlie.c ****          if(i == 1){
 272:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 273:Src/charlie.c ****             HAL_Delay(500);
 274:Src/charlie.c ****             if(stopFlag == 1)
 275:Src/charlie.c ****                return;
 276:Src/charlie.c ****          }
 277:Src/charlie.c ****          if(i == 2){
 278:Src/charlie.c ****             for(int j =0; j<10000; j++){
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 280:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 1);
 281:Src/charlie.c ****                if(stopFlag == 1)
 282:Src/charlie.c ****                   return;
 283:Src/charlie.c ****             }
 284:Src/charlie.c ****             HAL_Delay(10);
 285:Src/charlie.c ****          }
 286:Src/charlie.c ****          if(i == 3){
 287:Src/charlie.c ****             for(int j =0; j<10000; j++){
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 289:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 290:Src/charlie.c ****                if(stopFlag == 1)
 291:Src/charlie.c ****                   return;
 292:Src/charlie.c ****             }
 293:Src/charlie.c ****          }
 294:Src/charlie.c ****          if(i == 4){
 295:Src/charlie.c ****             for(int j =0; j<10000; j++){
 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 297:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 9);
 298:Src/charlie.c ****                if(stopFlag == 1)
 299:Src/charlie.c ****                   return;
 300:Src/charlie.c ****             }
 301:Src/charlie.c ****          }
 302:Src/charlie.c ****          if(i == 5){
 303:Src/charlie.c ****             for(int j =0; j<10000; j++){
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 305:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 8);
 306:Src/charlie.c ****                if(stopFlag == 1)
 307:Src/charlie.c ****                   return;
 308:Src/charlie.c ****             }
 309:Src/charlie.c ****          }
 310:Src/charlie.c ****          if(i == 6){
 311:Src/charlie.c ****             for(int j =0; j<10000; j++){
ARM GAS  /tmp/cccixJrj.s 			page 20


 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 313:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 7);
 314:Src/charlie.c ****                if(stopFlag == 1)
 315:Src/charlie.c ****                   return;
 316:Src/charlie.c ****             }
 317:Src/charlie.c ****          }
 318:Src/charlie.c ****          if(i == 7){
 319:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 320:Src/charlie.c ****             HAL_Delay(500);
 321:Src/charlie.c ****             if(stopFlag == 1)
 322:Src/charlie.c ****                return;
 323:Src/charlie.c **** 
 324:Src/charlie.c ****          }
 325:Src/charlie.c **** 
 326:Src/charlie.c ****       }
 327:Src/charlie.c ****       
 328:Src/charlie.c ****    }  
 329:Src/charlie.c **** 
 330:Src/charlie.c **** 
 331:Src/charlie.c **** }
 332:Src/charlie.c **** 
 333:Src/charlie.c **** void charlie(GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDef 
 310              		.loc 2 333 114 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 84, pretend = 16, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		.loc 2 333 114 is_stmt 0 view .LVU83
 315 0000 84B0     		sub	sp, sp, #16
 316              	.LCFI5:
 317              		.cfi_def_cfa_offset 16
 318 0002 70B5     		push	{r4, r5, r6, lr}
 319              	.LCFI6:
 320              		.cfi_def_cfa_offset 32
 321              		.cfi_offset 4, -32
 322              		.cfi_offset 5, -28
 323              		.cfi_offset 6, -24
 324              		.cfi_offset 14, -20
 325 0004 0490     		str	r0, [sp, #16]
 326 0006 0591     		str	r1, [sp, #20]
 327 0008 0692     		str	r2, [sp, #24]
 328 000a 0793     		str	r3, [sp, #28]
 329 000c 189C     		ldr	r4, [sp, #96]
 334:Src/charlie.c ****    if(pos == 0){
 330              		.loc 2 334 4 is_stmt 1 view .LVU84
 331              		.loc 2 334 6 is_stmt 0 view .LVU85
 332 000e 002C     		cmp	r4, #0
 333 0010 24D0     		beq	.L24
 334              	.L11:
 335:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 336:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 337:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 338:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 339:Src/charlie.c ****    }
 340:Src/charlie.c **** 
 341:Src/charlie.c **** 
 342:Src/charlie.c ****    // 12'oclock
 343:Src/charlie.c ****    // A = 1
ARM GAS  /tmp/cccixJrj.s 			page 21


 344:Src/charlie.c ****    // B = Z
 345:Src/charlie.c ****    // C = 0
 346:Src/charlie.c ****    // D = Z
 347:Src/charlie.c ****    if(pos == 12){
 335              		.loc 2 347 4 is_stmt 1 view .LVU86
 336              		.loc 2 347 6 is_stmt 0 view .LVU87
 337 0012 0C2C     		cmp	r4, #12
 338 0014 35D0     		beq	.L25
 339              	.L12:
 348:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 349:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 350:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 351:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 352:Src/charlie.c **** 
 353:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 354:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 355:Src/charlie.c ****       }
 356:Src/charlie.c **** 
 357:Src/charlie.c ****    // 1'oclock
 358:Src/charlie.c ****    // A = 1
 359:Src/charlie.c ****    // B = Z
 360:Src/charlie.c ****    // C = 0
 361:Src/charlie.c ****    // D = Z
 362:Src/charlie.c ****    if(pos == 1){
 340              		.loc 2 362 4 is_stmt 1 view .LVU88
 341              		.loc 2 362 6 is_stmt 0 view .LVU89
 342 0016 012C     		cmp	r4, #1
 343 0018 50D0     		beq	.L26
 344              	.L13:
 363:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 364:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 365:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 366:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 367:Src/charlie.c **** 
 368:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 369:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 370:Src/charlie.c ****       }
 371:Src/charlie.c **** 
 372:Src/charlie.c **** 
 373:Src/charlie.c ****    // 2'oclock
 374:Src/charlie.c ****    // A = Z
 375:Src/charlie.c ****    // B = 1
 376:Src/charlie.c ****    // C = Z
 377:Src/charlie.c ****    // D = 0
 378:Src/charlie.c ****    if(pos == 2){
 345              		.loc 2 378 4 is_stmt 1 view .LVU90
 346              		.loc 2 378 6 is_stmt 0 view .LVU91
 347 001a 022C     		cmp	r4, #2
 348 001c 6BD0     		beq	.L27
 349              	.L14:
 379:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 380:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 381:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 382:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 383:Src/charlie.c **** 
 384:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 385:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
ARM GAS  /tmp/cccixJrj.s 			page 22


 386:Src/charlie.c ****       }
 387:Src/charlie.c **** 
 388:Src/charlie.c ****    // 3'oclock
 389:Src/charlie.c ****    // A = Z
 390:Src/charlie.c ****    // B = 1
 391:Src/charlie.c ****    // C = Z
 392:Src/charlie.c ****    // D = 0
 393:Src/charlie.c ****    if(pos == 3){
 350              		.loc 2 393 4 is_stmt 1 view .LVU92
 351              		.loc 2 393 6 is_stmt 0 view .LVU93
 352 001e 032C     		cmp	r4, #3
 353 0020 00D1     		bne	.LCB264
 354 0022 85E0     		b	.L28	@long jump
 355              	.LCB264:
 356              	.L15:
 394:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 395:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 396:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 397:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 398:Src/charlie.c **** 
 399:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 400:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 401:Src/charlie.c ****       }
 402:Src/charlie.c **** 
 403:Src/charlie.c **** 
 404:Src/charlie.c ****    // 4'oclock
 405:Src/charlie.c ****    // A = 1
 406:Src/charlie.c ****    // B = Z
 407:Src/charlie.c ****    // C = Z
 408:Src/charlie.c ****    // D = 0
 409:Src/charlie.c ****    if(pos == 4){
 357              		.loc 2 409 4 is_stmt 1 view .LVU94
 358              		.loc 2 409 6 is_stmt 0 view .LVU95
 359 0024 042C     		cmp	r4, #4
 360 0026 00D1     		bne	.LCB268
 361 0028 9FE0     		b	.L29	@long jump
 362              	.LCB268:
 363              	.L16:
 410:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 411:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 412:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 413:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 414:Src/charlie.c **** 
 415:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 416:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 417:Src/charlie.c ****       }
 418:Src/charlie.c **** 
 419:Src/charlie.c ****    // 5'oclock
 420:Src/charlie.c ****    // A = 0
 421:Src/charlie.c ****    // B = Z
 422:Src/charlie.c ****    // C = Z
 423:Src/charlie.c ****    // D = 1
 424:Src/charlie.c ****    if(pos == 5){
 364              		.loc 2 424 4 is_stmt 1 view .LVU96
 365              		.loc 2 424 6 is_stmt 0 view .LVU97
 366 002a 052C     		cmp	r4, #5
 367 002c 00D1     		bne	.LCB272
ARM GAS  /tmp/cccixJrj.s 			page 23


 368 002e B9E0     		b	.L30	@long jump
 369              	.LCB272:
 370              	.L17:
 425:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 426:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 427:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 428:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 429:Src/charlie.c **** 
 430:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 431:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 432:Src/charlie.c ****       }
 433:Src/charlie.c **** 
 434:Src/charlie.c ****    // 6'oclock
 435:Src/charlie.c ****    if(pos == 6){
 371              		.loc 2 435 4 is_stmt 1 view .LVU98
 372              		.loc 2 435 6 is_stmt 0 view .LVU99
 373 0030 062C     		cmp	r4, #6
 374 0032 00D1     		bne	.LCB276
 375 0034 D3E0     		b	.L31	@long jump
 376              	.LCB276:
 377              	.L18:
 436:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 437:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 438:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 439:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 440:Src/charlie.c **** 
 441:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 442:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 443:Src/charlie.c ****       }
 444:Src/charlie.c **** 
 445:Src/charlie.c ****    // 7'oclock
 446:Src/charlie.c ****    if(pos == 7){
 378              		.loc 2 446 4 is_stmt 1 view .LVU100
 379              		.loc 2 446 6 is_stmt 0 view .LVU101
 380 0036 072C     		cmp	r4, #7
 381 0038 00D1     		bne	.LCB280
 382 003a EDE0     		b	.L32	@long jump
 383              	.LCB280:
 384              	.L19:
 447:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinA);
 448:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 449:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 450:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 451:Src/charlie.c ****       
 452:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 453:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 454:Src/charlie.c ****       }
 455:Src/charlie.c **** 
 456:Src/charlie.c ****    // 8'oclock
 457:Src/charlie.c ****    // A = Z
 458:Src/charlie.c ****    // B = 1
 459:Src/charlie.c ****    // C = 0
 460:Src/charlie.c ****    // D = Z
 461:Src/charlie.c ****    if(pos == 8){
 385              		.loc 2 461 4 is_stmt 1 view .LVU102
 386              		.loc 2 461 6 is_stmt 0 view .LVU103
 387 003c 082C     		cmp	r4, #8
ARM GAS  /tmp/cccixJrj.s 			page 24


 388 003e 00D1     		bne	.LCB284
 389 0040 07E1     		b	.L33	@long jump
 390              	.LCB284:
 391              	.L20:
 462:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 463:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 464:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 465:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 466:Src/charlie.c **** 
 467:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 468:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 469:Src/charlie.c ****       }
 470:Src/charlie.c **** 
 471:Src/charlie.c ****    // 9'oclock
 472:Src/charlie.c ****    // A = Z
 473:Src/charlie.c ****    // B = 1
 474:Src/charlie.c ****    // C = 0
 475:Src/charlie.c ****    // D = Z
 476:Src/charlie.c ****    if(pos == 9){
 392              		.loc 2 476 4 is_stmt 1 view .LVU104
 393              		.loc 2 476 6 is_stmt 0 view .LVU105
 394 0042 092C     		cmp	r4, #9
 395 0044 00D1     		bne	.LCB288
 396 0046 21E1     		b	.L34	@long jump
 397              	.LCB288:
 398              	.L21:
 477:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 478:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 479:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 480:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 481:Src/charlie.c **** 
 482:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 483:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 484:Src/charlie.c ****       }
 485:Src/charlie.c **** 
 486:Src/charlie.c ****    // 10'oclock
 487:Src/charlie.c ****    // A = Z
 488:Src/charlie.c ****    // B = Z
 489:Src/charlie.c ****    // C = 0
 490:Src/charlie.c ****    // D = 1
 491:Src/charlie.c ****    if(pos == 10){
 399              		.loc 2 491 4 is_stmt 1 view .LVU106
 400              		.loc 2 491 6 is_stmt 0 view .LVU107
 401 0048 0A2C     		cmp	r4, #10
 402 004a 00D1     		bne	.LCB292
 403 004c 3BE1     		b	.L35	@long jump
 404              	.LCB292:
 405              	.L22:
 492:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 493:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 494:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 495:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 496:Src/charlie.c **** 
 497:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 498:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 499:Src/charlie.c ****       }
 500:Src/charlie.c ****    
ARM GAS  /tmp/cccixJrj.s 			page 25


 501:Src/charlie.c ****    // 11'oclock
 502:Src/charlie.c ****    // A = Z
 503:Src/charlie.c ****    // B = Z
 504:Src/charlie.c ****    // C = 1
 505:Src/charlie.c ****    // D = 0
 506:Src/charlie.c ****    if(pos == 11){
 406              		.loc 2 506 4 is_stmt 1 view .LVU108
 407              		.loc 2 506 6 is_stmt 0 view .LVU109
 408 004e 0B2C     		cmp	r4, #11
 409 0050 00D1     		bne	.LCB296
 410 0052 55E1     		b	.L36	@long jump
 411              	.LCB296:
 412              	.L10:
 507:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 508:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 509:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 510:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 511:Src/charlie.c ****             
 512:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 513:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 514:Src/charlie.c ****       }
 515:Src/charlie.c **** 
 516:Src/charlie.c **** }
 413              		.loc 2 516 1 view .LVU110
 414              		@ sp needed
 415 0054 70BC     		pop	{r4, r5, r6}
 416 0056 08BC     		pop	{r3}
 417 0058 04B0     		add	sp, sp, #16
 418 005a 1847     		bx	r3
 419              	.L24:
 335:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 420              		.loc 2 335 7 is_stmt 1 view .LVU111
 421 005c 9025     		movs	r5, #144
 422 005e ED05     		lsls	r5, r5, #23
 423 0060 0121     		movs	r1, #1
 424 0062 2800     		movs	r0, r5
 425 0064 FFF7FEFF 		bl	HAL_GPIO_DeInit
 426              	.LVL12:
 336:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 427              		.loc 2 336 7 view .LVU112
 428 0068 0221     		movs	r1, #2
 429 006a 2800     		movs	r0, r5
 430 006c FFF7FEFF 		bl	HAL_GPIO_DeInit
 431              	.LVL13:
 337:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 432              		.loc 2 337 7 view .LVU113
 433 0070 0421     		movs	r1, #4
 434 0072 2800     		movs	r0, r5
 435 0074 FFF7FEFF 		bl	HAL_GPIO_DeInit
 436              	.LVL14:
 338:Src/charlie.c ****    }
 437              		.loc 2 338 7 view .LVU114
 438 0078 0821     		movs	r1, #8
 439 007a 2800     		movs	r0, r5
 440 007c FFF7FEFF 		bl	HAL_GPIO_DeInit
 441              	.LVL15:
 442 0080 C7E7     		b	.L11
ARM GAS  /tmp/cccixJrj.s 			page 26


 443              	.L25:
 348:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 444              		.loc 2 348 7 view .LVU115
 445 0082 9025     		movs	r5, #144
 446 0084 ED05     		lsls	r5, r5, #23
 447 0086 04A9     		add	r1, sp, #16
 448 0088 2800     		movs	r0, r5
 449 008a FFF7FEFF 		bl	HAL_GPIO_Init
 450              	.LVL16:
 349:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 451              		.loc 2 349 7 view .LVU116
 452 008e 0EA9     		add	r1, sp, #56
 453 0090 2800     		movs	r0, r5
 454 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL17:
 350:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 456              		.loc 2 350 7 view .LVU117
 457 0096 0221     		movs	r1, #2
 458 0098 2800     		movs	r0, r5
 459 009a FFF7FEFF 		bl	HAL_GPIO_DeInit
 460              	.LVL18:
 351:Src/charlie.c **** 
 461              		.loc 2 351 7 view .LVU118
 462 009e 0821     		movs	r1, #8
 463 00a0 2800     		movs	r0, r5
 464 00a2 FFF7FEFF 		bl	HAL_GPIO_DeInit
 465              	.LVL19:
 353:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 466              		.loc 2 353 7 view .LVU119
 467 00a6 0122     		movs	r2, #1
 468 00a8 0121     		movs	r1, #1
 469 00aa 2800     		movs	r0, r5
 470 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 471              	.LVL20:
 354:Src/charlie.c ****       }
 472              		.loc 2 354 7 view .LVU120
 473 00b0 0022     		movs	r2, #0
 474 00b2 0421     		movs	r1, #4
 475 00b4 2800     		movs	r0, r5
 476 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 477              	.LVL21:
 478 00ba ACE7     		b	.L12
 479              	.L26:
 363:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 480              		.loc 2 363 7 view .LVU121
 481 00bc 9025     		movs	r5, #144
 482 00be ED05     		lsls	r5, r5, #23
 483 00c0 04A9     		add	r1, sp, #16
 484 00c2 2800     		movs	r0, r5
 485 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 486              	.LVL22:
 364:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 487              		.loc 2 364 7 view .LVU122
 488 00c8 0EA9     		add	r1, sp, #56
 489 00ca 2800     		movs	r0, r5
 490 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 491              	.LVL23:
ARM GAS  /tmp/cccixJrj.s 			page 27


 365:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 492              		.loc 2 365 7 view .LVU123
 493 00d0 0221     		movs	r1, #2
 494 00d2 2800     		movs	r0, r5
 495 00d4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 496              	.LVL24:
 366:Src/charlie.c **** 
 497              		.loc 2 366 7 view .LVU124
 498 00d8 0821     		movs	r1, #8
 499 00da 2800     		movs	r0, r5
 500 00dc FFF7FEFF 		bl	HAL_GPIO_DeInit
 501              	.LVL25:
 368:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 502              		.loc 2 368 7 view .LVU125
 503 00e0 0022     		movs	r2, #0
 504 00e2 0121     		movs	r1, #1
 505 00e4 2800     		movs	r0, r5
 506 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 507              	.LVL26:
 369:Src/charlie.c ****       }
 508              		.loc 2 369 7 view .LVU126
 509 00ea 0122     		movs	r2, #1
 510 00ec 0421     		movs	r1, #4
 511 00ee 2800     		movs	r0, r5
 512 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 513              	.LVL27:
 514 00f4 91E7     		b	.L13
 515              	.L27:
 379:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 516              		.loc 2 379 7 view .LVU127
 517 00f6 9025     		movs	r5, #144
 518 00f8 ED05     		lsls	r5, r5, #23
 519 00fa 09A9     		add	r1, sp, #36
 520 00fc 2800     		movs	r0, r5
 521 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 522              	.LVL28:
 380:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 523              		.loc 2 380 7 view .LVU128
 524 0102 13A9     		add	r1, sp, #76
 525 0104 2800     		movs	r0, r5
 526 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 527              	.LVL29:
 381:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 528              		.loc 2 381 7 view .LVU129
 529 010a 0121     		movs	r1, #1
 530 010c 2800     		movs	r0, r5
 531 010e FFF7FEFF 		bl	HAL_GPIO_DeInit
 532              	.LVL30:
 382:Src/charlie.c **** 
 533              		.loc 2 382 7 view .LVU130
 534 0112 0421     		movs	r1, #4
 535 0114 2800     		movs	r0, r5
 536 0116 FFF7FEFF 		bl	HAL_GPIO_DeInit
 537              	.LVL31:
 384:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 538              		.loc 2 384 7 view .LVU131
 539 011a 0122     		movs	r2, #1
ARM GAS  /tmp/cccixJrj.s 			page 28


 540 011c 0221     		movs	r1, #2
 541 011e 2800     		movs	r0, r5
 542 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 543              	.LVL32:
 385:Src/charlie.c ****       }
 544              		.loc 2 385 7 view .LVU132
 545 0124 0022     		movs	r2, #0
 546 0126 0821     		movs	r1, #8
 547 0128 2800     		movs	r0, r5
 548 012a FFF7FEFF 		bl	HAL_GPIO_WritePin
 549              	.LVL33:
 550 012e 76E7     		b	.L14
 551              	.L28:
 394:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 552              		.loc 2 394 7 view .LVU133
 553 0130 9025     		movs	r5, #144
 554 0132 ED05     		lsls	r5, r5, #23
 555 0134 09A9     		add	r1, sp, #36
 556 0136 2800     		movs	r0, r5
 557 0138 FFF7FEFF 		bl	HAL_GPIO_Init
 558              	.LVL34:
 395:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 559              		.loc 2 395 7 view .LVU134
 560 013c 13A9     		add	r1, sp, #76
 561 013e 2800     		movs	r0, r5
 562 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 563              	.LVL35:
 396:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 564              		.loc 2 396 7 view .LVU135
 565 0144 0121     		movs	r1, #1
 566 0146 2800     		movs	r0, r5
 567 0148 FFF7FEFF 		bl	HAL_GPIO_DeInit
 568              	.LVL36:
 397:Src/charlie.c **** 
 569              		.loc 2 397 7 view .LVU136
 570 014c 0421     		movs	r1, #4
 571 014e 2800     		movs	r0, r5
 572 0150 FFF7FEFF 		bl	HAL_GPIO_DeInit
 573              	.LVL37:
 399:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 574              		.loc 2 399 7 view .LVU137
 575 0154 0022     		movs	r2, #0
 576 0156 0221     		movs	r1, #2
 577 0158 2800     		movs	r0, r5
 578 015a FFF7FEFF 		bl	HAL_GPIO_WritePin
 579              	.LVL38:
 400:Src/charlie.c ****       }
 580              		.loc 2 400 7 view .LVU138
 581 015e 0122     		movs	r2, #1
 582 0160 0821     		movs	r1, #8
 583 0162 2800     		movs	r0, r5
 584 0164 FFF7FEFF 		bl	HAL_GPIO_WritePin
 585              	.LVL39:
 586 0168 5CE7     		b	.L15
 587              	.L29:
 410:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 588              		.loc 2 410 7 view .LVU139
ARM GAS  /tmp/cccixJrj.s 			page 29


 589 016a 9025     		movs	r5, #144
 590 016c ED05     		lsls	r5, r5, #23
 591 016e 04A9     		add	r1, sp, #16
 592 0170 2800     		movs	r0, r5
 593 0172 FFF7FEFF 		bl	HAL_GPIO_Init
 594              	.LVL40:
 411:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 595              		.loc 2 411 7 view .LVU140
 596 0176 13A9     		add	r1, sp, #76
 597 0178 2800     		movs	r0, r5
 598 017a FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL41:
 412:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 600              		.loc 2 412 7 view .LVU141
 601 017e 0221     		movs	r1, #2
 602 0180 2800     		movs	r0, r5
 603 0182 FFF7FEFF 		bl	HAL_GPIO_DeInit
 604              	.LVL42:
 413:Src/charlie.c **** 
 605              		.loc 2 413 7 view .LVU142
 606 0186 0421     		movs	r1, #4
 607 0188 2800     		movs	r0, r5
 608 018a FFF7FEFF 		bl	HAL_GPIO_DeInit
 609              	.LVL43:
 415:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 610              		.loc 2 415 7 view .LVU143
 611 018e 0122     		movs	r2, #1
 612 0190 0121     		movs	r1, #1
 613 0192 2800     		movs	r0, r5
 614 0194 FFF7FEFF 		bl	HAL_GPIO_WritePin
 615              	.LVL44:
 416:Src/charlie.c ****       }
 616              		.loc 2 416 7 view .LVU144
 617 0198 0022     		movs	r2, #0
 618 019a 0821     		movs	r1, #8
 619 019c 2800     		movs	r0, r5
 620 019e FFF7FEFF 		bl	HAL_GPIO_WritePin
 621              	.LVL45:
 622 01a2 42E7     		b	.L16
 623              	.L30:
 425:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 624              		.loc 2 425 7 view .LVU145
 625 01a4 9025     		movs	r5, #144
 626 01a6 ED05     		lsls	r5, r5, #23
 627 01a8 04A9     		add	r1, sp, #16
 628 01aa 2800     		movs	r0, r5
 629 01ac FFF7FEFF 		bl	HAL_GPIO_Init
 630              	.LVL46:
 426:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 631              		.loc 2 426 7 view .LVU146
 632 01b0 13A9     		add	r1, sp, #76
 633 01b2 2800     		movs	r0, r5
 634 01b4 FFF7FEFF 		bl	HAL_GPIO_Init
 635              	.LVL47:
 427:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 636              		.loc 2 427 7 view .LVU147
 637 01b8 0221     		movs	r1, #2
ARM GAS  /tmp/cccixJrj.s 			page 30


 638 01ba 2800     		movs	r0, r5
 639 01bc FFF7FEFF 		bl	HAL_GPIO_DeInit
 640              	.LVL48:
 428:Src/charlie.c **** 
 641              		.loc 2 428 7 view .LVU148
 642 01c0 0421     		movs	r1, #4
 643 01c2 2800     		movs	r0, r5
 644 01c4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 645              	.LVL49:
 430:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 646              		.loc 2 430 7 view .LVU149
 647 01c8 0022     		movs	r2, #0
 648 01ca 0121     		movs	r1, #1
 649 01cc 2800     		movs	r0, r5
 650 01ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 651              	.LVL50:
 431:Src/charlie.c ****       }
 652              		.loc 2 431 7 view .LVU150
 653 01d2 0122     		movs	r2, #1
 654 01d4 0821     		movs	r1, #8
 655 01d6 2800     		movs	r0, r5
 656 01d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 657              	.LVL51:
 658 01dc 28E7     		b	.L17
 659              	.L31:
 436:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 660              		.loc 2 436 7 view .LVU151
 661 01de 9025     		movs	r5, #144
 662 01e0 ED05     		lsls	r5, r5, #23
 663 01e2 04A9     		add	r1, sp, #16
 664 01e4 2800     		movs	r0, r5
 665 01e6 FFF7FEFF 		bl	HAL_GPIO_Init
 666              	.LVL52:
 437:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 667              		.loc 2 437 7 view .LVU152
 668 01ea 09A9     		add	r1, sp, #36
 669 01ec 2800     		movs	r0, r5
 670 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 671              	.LVL53:
 438:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 672              		.loc 2 438 7 view .LVU153
 673 01f2 0421     		movs	r1, #4
 674 01f4 2800     		movs	r0, r5
 675 01f6 FFF7FEFF 		bl	HAL_GPIO_DeInit
 676              	.LVL54:
 439:Src/charlie.c **** 
 677              		.loc 2 439 7 view .LVU154
 678 01fa 0821     		movs	r1, #8
 679 01fc 2800     		movs	r0, r5
 680 01fe FFF7FEFF 		bl	HAL_GPIO_DeInit
 681              	.LVL55:
 441:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 682              		.loc 2 441 7 view .LVU155
 683 0202 0122     		movs	r2, #1
 684 0204 0121     		movs	r1, #1
 685 0206 2800     		movs	r0, r5
 686 0208 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cccixJrj.s 			page 31


 687              	.LVL56:
 442:Src/charlie.c ****       }
 688              		.loc 2 442 7 view .LVU156
 689 020c 0022     		movs	r2, #0
 690 020e 0221     		movs	r1, #2
 691 0210 2800     		movs	r0, r5
 692 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 693              	.LVL57:
 694 0216 0EE7     		b	.L18
 695              	.L32:
 447:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinB);
 696              		.loc 2 447 7 view .LVU157
 697 0218 9025     		movs	r5, #144
 698 021a ED05     		lsls	r5, r5, #23
 699 021c 04A9     		add	r1, sp, #16
 700 021e 2800     		movs	r0, r5
 701 0220 FFF7FEFF 		bl	HAL_GPIO_Init
 702              	.LVL58:
 448:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 703              		.loc 2 448 7 view .LVU158
 704 0224 09A9     		add	r1, sp, #36
 705 0226 2800     		movs	r0, r5
 706 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 707              	.LVL59:
 449:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 708              		.loc 2 449 7 view .LVU159
 709 022c 0421     		movs	r1, #4
 710 022e 2800     		movs	r0, r5
 711 0230 FFF7FEFF 		bl	HAL_GPIO_DeInit
 712              	.LVL60:
 450:Src/charlie.c ****       
 713              		.loc 2 450 7 view .LVU160
 714 0234 0821     		movs	r1, #8
 715 0236 2800     		movs	r0, r5
 716 0238 FFF7FEFF 		bl	HAL_GPIO_DeInit
 717              	.LVL61:
 452:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 718              		.loc 2 452 7 view .LVU161
 719 023c 0022     		movs	r2, #0
 720 023e 0121     		movs	r1, #1
 721 0240 2800     		movs	r0, r5
 722 0242 FFF7FEFF 		bl	HAL_GPIO_WritePin
 723              	.LVL62:
 453:Src/charlie.c ****       }
 724              		.loc 2 453 7 view .LVU162
 725 0246 0122     		movs	r2, #1
 726 0248 0221     		movs	r1, #2
 727 024a 2800     		movs	r0, r5
 728 024c FFF7FEFF 		bl	HAL_GPIO_WritePin
 729              	.LVL63:
 730 0250 F4E6     		b	.L19
 731              	.L33:
 462:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 732              		.loc 2 462 7 view .LVU163
 733 0252 9025     		movs	r5, #144
 734 0254 ED05     		lsls	r5, r5, #23
 735 0256 09A9     		add	r1, sp, #36
ARM GAS  /tmp/cccixJrj.s 			page 32


 736 0258 2800     		movs	r0, r5
 737 025a FFF7FEFF 		bl	HAL_GPIO_Init
 738              	.LVL64:
 463:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 739              		.loc 2 463 7 view .LVU164
 740 025e 0EA9     		add	r1, sp, #56
 741 0260 2800     		movs	r0, r5
 742 0262 FFF7FEFF 		bl	HAL_GPIO_Init
 743              	.LVL65:
 464:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 744              		.loc 2 464 7 view .LVU165
 745 0266 0121     		movs	r1, #1
 746 0268 2800     		movs	r0, r5
 747 026a FFF7FEFF 		bl	HAL_GPIO_DeInit
 748              	.LVL66:
 465:Src/charlie.c **** 
 749              		.loc 2 465 7 view .LVU166
 750 026e 0821     		movs	r1, #8
 751 0270 2800     		movs	r0, r5
 752 0272 FFF7FEFF 		bl	HAL_GPIO_DeInit
 753              	.LVL67:
 467:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 754              		.loc 2 467 7 view .LVU167
 755 0276 0122     		movs	r2, #1
 756 0278 0221     		movs	r1, #2
 757 027a 2800     		movs	r0, r5
 758 027c FFF7FEFF 		bl	HAL_GPIO_WritePin
 759              	.LVL68:
 468:Src/charlie.c ****       }
 760              		.loc 2 468 7 view .LVU168
 761 0280 0022     		movs	r2, #0
 762 0282 0421     		movs	r1, #4
 763 0284 2800     		movs	r0, r5
 764 0286 FFF7FEFF 		bl	HAL_GPIO_WritePin
 765              	.LVL69:
 766 028a DAE6     		b	.L20
 767              	.L34:
 477:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinC);
 768              		.loc 2 477 7 view .LVU169
 769 028c 9025     		movs	r5, #144
 770 028e ED05     		lsls	r5, r5, #23
 771 0290 09A9     		add	r1, sp, #36
 772 0292 2800     		movs	r0, r5
 773 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 774              	.LVL70:
 478:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 775              		.loc 2 478 7 view .LVU170
 776 0298 0EA9     		add	r1, sp, #56
 777 029a 2800     		movs	r0, r5
 778 029c FFF7FEFF 		bl	HAL_GPIO_Init
 779              	.LVL71:
 479:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 780              		.loc 2 479 7 view .LVU171
 781 02a0 0121     		movs	r1, #1
 782 02a2 2800     		movs	r0, r5
 783 02a4 FFF7FEFF 		bl	HAL_GPIO_DeInit
 784              	.LVL72:
ARM GAS  /tmp/cccixJrj.s 			page 33


 480:Src/charlie.c **** 
 785              		.loc 2 480 7 view .LVU172
 786 02a8 0821     		movs	r1, #8
 787 02aa 2800     		movs	r0, r5
 788 02ac FFF7FEFF 		bl	HAL_GPIO_DeInit
 789              	.LVL73:
 482:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 790              		.loc 2 482 7 view .LVU173
 791 02b0 0022     		movs	r2, #0
 792 02b2 0221     		movs	r1, #2
 793 02b4 2800     		movs	r0, r5
 794 02b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 795              	.LVL74:
 483:Src/charlie.c ****       }
 796              		.loc 2 483 7 view .LVU174
 797 02ba 0122     		movs	r2, #1
 798 02bc 0421     		movs	r1, #4
 799 02be 2800     		movs	r0, r5
 800 02c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 801              	.LVL75:
 802 02c4 C0E6     		b	.L21
 803              	.L35:
 492:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 804              		.loc 2 492 7 view .LVU175
 805 02c6 9025     		movs	r5, #144
 806 02c8 ED05     		lsls	r5, r5, #23
 807 02ca 0EA9     		add	r1, sp, #56
 808 02cc 2800     		movs	r0, r5
 809 02ce FFF7FEFF 		bl	HAL_GPIO_Init
 810              	.LVL76:
 493:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 811              		.loc 2 493 7 view .LVU176
 812 02d2 13A9     		add	r1, sp, #76
 813 02d4 2800     		movs	r0, r5
 814 02d6 FFF7FEFF 		bl	HAL_GPIO_Init
 815              	.LVL77:
 494:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 816              		.loc 2 494 7 view .LVU177
 817 02da 0121     		movs	r1, #1
 818 02dc 2800     		movs	r0, r5
 819 02de FFF7FEFF 		bl	HAL_GPIO_DeInit
 820              	.LVL78:
 495:Src/charlie.c **** 
 821              		.loc 2 495 7 view .LVU178
 822 02e2 0221     		movs	r1, #2
 823 02e4 2800     		movs	r0, r5
 824 02e6 FFF7FEFF 		bl	HAL_GPIO_DeInit
 825              	.LVL79:
 497:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 826              		.loc 2 497 7 view .LVU179
 827 02ea 0122     		movs	r2, #1
 828 02ec 0421     		movs	r1, #4
 829 02ee 2800     		movs	r0, r5
 830 02f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 831              	.LVL80:
 498:Src/charlie.c ****       }
 832              		.loc 2 498 7 view .LVU180
ARM GAS  /tmp/cccixJrj.s 			page 34


 833 02f4 0022     		movs	r2, #0
 834 02f6 0821     		movs	r1, #8
 835 02f8 2800     		movs	r0, r5
 836 02fa FFF7FEFF 		bl	HAL_GPIO_WritePin
 837              	.LVL81:
 838 02fe A6E6     		b	.L22
 839              	.L36:
 507:Src/charlie.c ****       HAL_GPIO_Init(GPIOA, &PinD);
 840              		.loc 2 507 7 view .LVU181
 841 0300 9024     		movs	r4, #144
 842 0302 E405     		lsls	r4, r4, #23
 843 0304 0EA9     		add	r1, sp, #56
 844 0306 2000     		movs	r0, r4
 845 0308 FFF7FEFF 		bl	HAL_GPIO_Init
 846              	.LVL82:
 508:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 847              		.loc 2 508 7 view .LVU182
 848 030c 13A9     		add	r1, sp, #76
 849 030e 2000     		movs	r0, r4
 850 0310 FFF7FEFF 		bl	HAL_GPIO_Init
 851              	.LVL83:
 509:Src/charlie.c ****       HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 852              		.loc 2 509 7 view .LVU183
 853 0314 0121     		movs	r1, #1
 854 0316 2000     		movs	r0, r4
 855 0318 FFF7FEFF 		bl	HAL_GPIO_DeInit
 856              	.LVL84:
 510:Src/charlie.c ****             
 857              		.loc 2 510 7 view .LVU184
 858 031c 0221     		movs	r1, #2
 859 031e 2000     		movs	r0, r4
 860 0320 FFF7FEFF 		bl	HAL_GPIO_DeInit
 861              	.LVL85:
 512:Src/charlie.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
 862              		.loc 2 512 7 view .LVU185
 863 0324 0022     		movs	r2, #0
 864 0326 0421     		movs	r1, #4
 865 0328 2000     		movs	r0, r4
 866 032a FFF7FEFF 		bl	HAL_GPIO_WritePin
 867              	.LVL86:
 513:Src/charlie.c ****       }
 868              		.loc 2 513 7 view .LVU186
 869 032e 0122     		movs	r2, #1
 870 0330 0821     		movs	r1, #8
 871 0332 2000     		movs	r0, r4
 872 0334 FFF7FEFF 		bl	HAL_GPIO_WritePin
 873              	.LVL87:
 874              		.loc 2 516 1 is_stmt 0 view .LVU187
 875 0338 8CE6     		b	.L10
 876              		.cfi_endproc
 877              	.LFE46:
 879              		.section	.text.hands,"ax",%progbits
 880              		.align	1
 881              		.global	hands
 882              		.syntax unified
 883              		.code	16
 884              		.thumb_func
ARM GAS  /tmp/cccixJrj.s 			page 35


 885              		.fpu softvfp
 887              	hands:
 888              	.LVL88:
 889              	.LFB44:
  58:Src/charlie.c **** 
 890              		.loc 2 58 127 is_stmt 1 view -0
 891              		.cfi_startproc
 892              		@ args = 88, pretend = 16, frame = 16
 893              		@ frame_needed = 0, uses_anonymous_args = 0
  58:Src/charlie.c **** 
 894              		.loc 2 58 127 is_stmt 0 view .LVU189
 895 0000 84B0     		sub	sp, sp, #16
 896              	.LCFI7:
 897              		.cfi_def_cfa_offset 16
 898 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 899              	.LCFI8:
 900              		.cfi_def_cfa_offset 36
 901              		.cfi_offset 4, -36
 902              		.cfi_offset 5, -32
 903              		.cfi_offset 6, -28
 904              		.cfi_offset 7, -24
 905              		.cfi_offset 14, -20
 906 0004 DE46     		mov	lr, fp
 907 0006 5746     		mov	r7, r10
 908 0008 4E46     		mov	r6, r9
 909 000a 4546     		mov	r5, r8
 910 000c E0B5     		push	{r5, r6, r7, lr}
 911              	.LCFI9:
 912              		.cfi_def_cfa_offset 52
 913              		.cfi_offset 8, -52
 914              		.cfi_offset 9, -48
 915              		.cfi_offset 10, -44
 916              		.cfi_offset 11, -40
 917 000e 97B0     		sub	sp, sp, #92
 918              	.LCFI10:
 919              		.cfi_def_cfa_offset 144
 920 0010 2090     		str	r0, [sp, #128]
 921 0012 2191     		str	r1, [sp, #132]
 922 0014 2292     		str	r2, [sp, #136]
 923 0016 2393     		str	r3, [sp, #140]
 924 0018 349B     		ldr	r3, [sp, #208]
 925 001a 9A46     		mov	r10, r3
 926 001c 359B     		ldr	r3, [sp, #212]
 927 001e 9846     		mov	r8, r3
  61:Src/charlie.c **** 
 928              		.loc 2 61 4 is_stmt 1 view .LVU190
 929              	.LBB4:
  61:Src/charlie.c **** 
 930              		.loc 2 61 8 view .LVU191
 931              	.LVL89:
  61:Src/charlie.c **** 
 932              		.loc 2 61 12 is_stmt 0 view .LVU192
 933 0020 0023     		movs	r3, #0
 934 0022 1593     		str	r3, [sp, #84]
 935              	.LVL90:
 936              	.L38:
  61:Src/charlie.c **** 
ARM GAS  /tmp/cccixJrj.s 			page 36


 937              		.loc 2 61 19 is_stmt 1 discriminator 1 view .LVU193
  61:Src/charlie.c **** 
 938              		.loc 2 61 4 is_stmt 0 discriminator 1 view .LVU194
 939 0024 159B     		ldr	r3, [sp, #84]
 940 0026 632B     		cmp	r3, #99
 941 0028 00DD     		ble	.LCB766
 942 002a 89E0     		b	.L37	@long jump
 943              	.LCB766:
 944              	.LBB5:
  63:Src/charlie.c ****  //     say("first\n");
 945              		.loc 2 63 15 view .LVU195
 946 002c 0024     		movs	r4, #0
 947 002e 5546     		mov	r5, r10
 948 0030 4646     		mov	r6, r8
 949 0032 00E0     		b	.L43
 950              	.LVL91:
 951              	.L46:
  63:Src/charlie.c ****  //     say("first\n");
 952              		.loc 2 63 30 is_stmt 1 discriminator 2 view .LVU196
  63:Src/charlie.c ****  //     say("first\n");
 953              		.loc 2 63 31 is_stmt 0 discriminator 2 view .LVU197
 954 0034 0134     		adds	r4, r4, #1
 955              	.LVL92:
 956              	.L43:
  63:Src/charlie.c ****  //     say("first\n");
 957              		.loc 2 63 22 is_stmt 1 discriminator 1 view .LVU198
  63:Src/charlie.c ****  //     say("first\n");
 958              		.loc 2 63 7 is_stmt 0 discriminator 1 view .LVU199
 959 0036 092C     		cmp	r4, #9
 960 0038 2CDC     		bgt	.L45
  65:Src/charlie.c ****          HAL_Delay(100);
 961              		.loc 2 65 10 is_stmt 1 view .LVU200
 962 003a 1095     		str	r5, [sp, #64]
 963 003c 2FA8     		add	r0, sp, #188
 964 003e 0BA9     		add	r1, sp, #44
 965 0040 0B00     		movs	r3, r1
 966 0042 0200     		movs	r2, r0
 967 0044 83CA     		ldmia	r2!, {r0, r1, r7}
 968 0046 83C3     		stmia	r3!, {r0, r1, r7}
 969 0048 03CA     		ldmia	r2!, {r0, r1}
 970 004a 03C3     		stmia	r3!, {r0, r1}
 971 004c 2AA8     		add	r0, sp, #168
 972 004e 06A9     		add	r1, sp, #24
 973 0050 0B00     		movs	r3, r1
 974 0052 0200     		movs	r2, r0
 975 0054 83CA     		ldmia	r2!, {r0, r1, r7}
 976 0056 83C3     		stmia	r3!, {r0, r1, r7}
 977 0058 03CA     		ldmia	r2!, {r0, r1}
 978 005a 03C3     		stmia	r3!, {r0, r1}
 979 005c 25A8     		add	r0, sp, #148
 980 005e 01A9     		add	r1, sp, #4
 981 0060 0B00     		movs	r3, r1
 982 0062 0200     		movs	r2, r0
 983 0064 83CA     		ldmia	r2!, {r0, r1, r7}
 984 0066 83C3     		stmia	r3!, {r0, r1, r7}
 985 0068 03CA     		ldmia	r2!, {r0, r1}
 986 006a 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/cccixJrj.s 			page 37


 987 006c 249B     		ldr	r3, [sp, #144]
 988 006e 0093     		str	r3, [sp]
 989 0070 2098     		ldr	r0, [sp, #128]
 990 0072 2199     		ldr	r1, [sp, #132]
 991 0074 229A     		ldr	r2, [sp, #136]
 992 0076 239B     		ldr	r3, [sp, #140]
 993 0078 FFF7FEFF 		bl	charlie
 994              	.LVL93:
  66:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
 995              		.loc 2 66 10 view .LVU201
 996 007c 6420     		movs	r0, #100
 997 007e FFF7FEFF 		bl	HAL_Delay
 998              	.LVL94:
  67:Src/charlie.c ****             return;
 999              		.loc 2 67 10 view .LVU202
  67:Src/charlie.c ****             return;
 1000              		.loc 2 67 22 is_stmt 0 view .LVU203
 1001 0082 364B     		ldr	r3, .L49
 1002 0084 1B68     		ldr	r3, [r3]
  67:Src/charlie.c ****             return;
 1003              		.loc 2 67 12 view .LVU204
 1004 0086 012B     		cmp	r3, #1
 1005 0088 5AD0     		beq	.L37
  67:Src/charlie.c ****             return;
 1006              		.loc 2 67 27 discriminator 1 view .LVU205
 1007 008a 012E     		cmp	r6, #1
 1008 008c 58D0     		beq	.L37
  67:Src/charlie.c ****             return;
 1009              		.loc 2 67 43 discriminator 2 view .LVU206
 1010 008e 012D     		cmp	r5, #1
 1011 0090 D0D1     		bne	.L46
 1012 0092 55E0     		b	.L37
 1013              	.L45:
 1014 0094 AA46     		mov	r10, r5
 1015 0096 B046     		mov	r8, r6
 1016              	.LBE5:
 1017              	.LBB6:
  70:Src/charlie.c ****  //     say("second\n");
 1018              		.loc 2 70 15 view .LVU207
 1019 0098 0023     		movs	r3, #0
 1020 009a 9946     		mov	r9, r3
 1021 009c 02E0     		b	.L41
 1022              	.LVL95:
 1023              	.L48:
  70:Src/charlie.c ****  //     say("second\n");
 1024              		.loc 2 70 31 is_stmt 1 discriminator 2 view .LVU208
  70:Src/charlie.c ****  //     say("second\n");
 1025              		.loc 2 70 32 is_stmt 0 discriminator 2 view .LVU209
 1026 009e 0123     		movs	r3, #1
 1027 00a0 9C46     		mov	ip, r3
 1028 00a2 E144     		add	r9, r9, ip
 1029              	.LVL96:
 1030              	.L41:
  70:Src/charlie.c ****  //     say("second\n");
 1031              		.loc 2 70 22 is_stmt 1 discriminator 1 view .LVU210
  70:Src/charlie.c ****  //     say("second\n");
 1032              		.loc 2 70 7 is_stmt 0 discriminator 1 view .LVU211
ARM GAS  /tmp/cccixJrj.s 			page 38


 1033 00a4 FA23     		movs	r3, #250
 1034 00a6 5B00     		lsls	r3, r3, #1
 1035 00a8 9945     		cmp	r9, r3
 1036 00aa 53DA     		bge	.L47
  72:Src/charlie.c ****          charlie(PinA, PinB, PinC, PinD, minutes);
 1037              		.loc 2 72 10 is_stmt 1 view .LVU212
 1038 00ac 5346     		mov	r3, r10
 1039 00ae 1093     		str	r3, [sp, #64]
 1040 00b0 2FAB     		add	r3, sp, #188
 1041 00b2 9B46     		mov	fp, r3
 1042 00b4 0BAB     		add	r3, sp, #44
 1043 00b6 1393     		str	r3, [sp, #76]
 1044 00b8 5A46     		mov	r2, fp
 1045 00ba 13CA     		ldmia	r2!, {r0, r1, r4}
 1046 00bc 13C3     		stmia	r3!, {r0, r1, r4}
 1047 00be 03CA     		ldmia	r2!, {r0, r1}
 1048 00c0 03C3     		stmia	r3!, {r0, r1}
 1049 00c2 2AAF     		add	r7, sp, #168
 1050 00c4 06AE     		add	r6, sp, #24
 1051 00c6 3300     		movs	r3, r6
 1052 00c8 3A00     		movs	r2, r7
 1053 00ca 13CA     		ldmia	r2!, {r0, r1, r4}
 1054 00cc 13C3     		stmia	r3!, {r0, r1, r4}
 1055 00ce 03CA     		ldmia	r2!, {r0, r1}
 1056 00d0 03C3     		stmia	r3!, {r0, r1}
 1057 00d2 25AD     		add	r5, sp, #148
 1058 00d4 01AB     		add	r3, sp, #4
 1059 00d6 1493     		str	r3, [sp, #80]
 1060 00d8 2A00     		movs	r2, r5
 1061 00da 13CA     		ldmia	r2!, {r0, r1, r4}
 1062 00dc 13C3     		stmia	r3!, {r0, r1, r4}
 1063 00de 03CA     		ldmia	r2!, {r0, r1}
 1064 00e0 03C3     		stmia	r3!, {r0, r1}
 1065 00e2 249A     		ldr	r2, [sp, #144]
 1066 00e4 0092     		str	r2, [sp]
 1067 00e6 2098     		ldr	r0, [sp, #128]
 1068 00e8 2199     		ldr	r1, [sp, #132]
 1069 00ea 229A     		ldr	r2, [sp, #136]
 1070 00ec 239B     		ldr	r3, [sp, #140]
 1071 00ee FFF7FEFF 		bl	charlie
 1072              	.LVL97:
  73:Src/charlie.c ****          if(stopFlag == 1 || minutes == 1 || hours == 1)
 1073              		.loc 2 73 10 view .LVU213
 1074 00f2 4246     		mov	r2, r8
 1075 00f4 1092     		str	r2, [sp, #64]
 1076 00f6 1399     		ldr	r1, [sp, #76]
 1077 00f8 0B00     		movs	r3, r1
 1078 00fa 5A46     		mov	r2, fp
 1079 00fc 13CA     		ldmia	r2!, {r0, r1, r4}
 1080 00fe 13C3     		stmia	r3!, {r0, r1, r4}
 1081 0100 03CA     		ldmia	r2!, {r0, r1}
 1082 0102 03C3     		stmia	r3!, {r0, r1}
 1083 0104 3300     		movs	r3, r6
 1084 0106 3A00     		movs	r2, r7
 1085 0108 13CA     		ldmia	r2!, {r0, r1, r4}
 1086 010a 13C3     		stmia	r3!, {r0, r1, r4}
 1087 010c 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/cccixJrj.s 			page 39


 1088 010e 03C3     		stmia	r3!, {r0, r1}
 1089 0110 149B     		ldr	r3, [sp, #80]
 1090 0112 2A00     		movs	r2, r5
 1091 0114 13CA     		ldmia	r2!, {r0, r1, r4}
 1092 0116 13C3     		stmia	r3!, {r0, r1, r4}
 1093 0118 03CA     		ldmia	r2!, {r0, r1}
 1094 011a 03C3     		stmia	r3!, {r0, r1}
 1095 011c 249B     		ldr	r3, [sp, #144]
 1096 011e 0093     		str	r3, [sp]
 1097 0120 2098     		ldr	r0, [sp, #128]
 1098 0122 2199     		ldr	r1, [sp, #132]
 1099 0124 229A     		ldr	r2, [sp, #136]
 1100 0126 239B     		ldr	r3, [sp, #140]
 1101 0128 FFF7FEFF 		bl	charlie
 1102              	.LVL98:
  74:Src/charlie.c ****             return;
 1103              		.loc 2 74 10 view .LVU214
  74:Src/charlie.c ****             return;
 1104              		.loc 2 74 22 is_stmt 0 view .LVU215
 1105 012c 0B4B     		ldr	r3, .L49
 1106 012e 1B68     		ldr	r3, [r3]
  74:Src/charlie.c ****             return;
 1107              		.loc 2 74 12 view .LVU216
 1108 0130 012B     		cmp	r3, #1
 1109 0132 05D0     		beq	.L37
  74:Src/charlie.c ****             return;
 1110              		.loc 2 74 27 discriminator 1 view .LVU217
 1111 0134 4346     		mov	r3, r8
 1112 0136 012B     		cmp	r3, #1
 1113 0138 02D0     		beq	.L37
  74:Src/charlie.c ****             return;
 1114              		.loc 2 74 43 discriminator 2 view .LVU218
 1115 013a 5346     		mov	r3, r10
 1116 013c 012B     		cmp	r3, #1
 1117 013e AED1     		bne	.L48
 1118              	.LVL99:
 1119              	.L37:
  74:Src/charlie.c ****             return;
 1120              		.loc 2 74 43 discriminator 2 view .LVU219
 1121              	.LBE6:
 1122              	.LBE4:
  78:Src/charlie.c **** 
 1123              		.loc 2 78 1 view .LVU220
 1124 0140 17B0     		add	sp, sp, #92
 1125              		@ sp needed
 1126 0142 3CBC     		pop	{r2, r3, r4, r5}
 1127 0144 9046     		mov	r8, r2
 1128 0146 9946     		mov	r9, r3
 1129 0148 A246     		mov	r10, r4
 1130 014a AB46     		mov	fp, r5
 1131 014c F0BC     		pop	{r4, r5, r6, r7}
 1132 014e 08BC     		pop	{r3}
 1133 0150 04B0     		add	sp, sp, #16
 1134 0152 1847     		bx	r3
 1135              	.LVL100:
 1136              	.L47:
 1137              	.LBB7:
ARM GAS  /tmp/cccixJrj.s 			page 40


  61:Src/charlie.c **** 
 1138              		.loc 2 61 28 is_stmt 1 discriminator 2 view .LVU221
  61:Src/charlie.c **** 
 1139              		.loc 2 61 29 is_stmt 0 discriminator 2 view .LVU222
 1140 0154 159B     		ldr	r3, [sp, #84]
 1141 0156 0133     		adds	r3, r3, #1
 1142 0158 1593     		str	r3, [sp, #84]
 1143              	.LVL101:
  61:Src/charlie.c **** 
 1144              		.loc 2 61 29 discriminator 2 view .LVU223
 1145 015a 63E7     		b	.L38
 1146              	.L50:
 1147              		.align	2
 1148              	.L49:
 1149 015c 00000000 		.word	.LANCHOR0
 1150              	.LBE7:
 1151              		.cfi_endproc
 1152              	.LFE44:
 1154              		.section	.text.clock,"ax",%progbits
 1155              		.align	1
 1156              		.global	clock
 1157              		.syntax unified
 1158              		.code	16
 1159              		.thumb_func
 1160              		.fpu softvfp
 1162              	clock:
 1163              	.LFB43:
  15:Src/charlie.c ****    RTC_TimeTypeDef RTCtime;
 1164              		.loc 2 15 131 is_stmt 1 view -0
 1165              		.cfi_startproc
 1166              		@ args = 112, pretend = 16, frame = 24
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168 0000 84B0     		sub	sp, sp, #16
 1169              	.LCFI11:
 1170              		.cfi_def_cfa_offset 16
 1171 0002 10B5     		push	{r4, lr}
 1172              	.LCFI12:
 1173              		.cfi_def_cfa_offset 24
 1174              		.cfi_offset 4, -24
 1175              		.cfi_offset 14, -20
 1176 0004 98B0     		sub	sp, sp, #96
 1177              	.LCFI13:
 1178              		.cfi_def_cfa_offset 120
 1179 0006 1A90     		str	r0, [sp, #104]
 1180 0008 1B91     		str	r1, [sp, #108]
 1181 000a 1C92     		str	r2, [sp, #112]
 1182 000c 1D93     		str	r3, [sp, #116]
  16:Src/charlie.c ****    RTC_DateTypeDef RTCdate;
 1183              		.loc 2 16 4 view .LVU225
  17:Src/charlie.c ****    HAL_RTC_GetTime(&whatTime, &RTCtime, RTC_FORMAT_BIN);
 1184              		.loc 2 17 4 view .LVU226
  18:Src/charlie.c ****    HAL_RTC_GetDate(&whatTime, &RTCdate, RTC_FORMAT_BIN);
 1185              		.loc 2 18 4 view .LVU227
 1186 000e 0022     		movs	r2, #0
 1187 0010 13A9     		add	r1, sp, #76
 1188 0012 2EA8     		add	r0, sp, #184
 1189 0014 FFF7FEFF 		bl	HAL_RTC_GetTime
ARM GAS  /tmp/cccixJrj.s 			page 41


 1190              	.LVL102:
  19:Src/charlie.c **** 
 1191              		.loc 2 19 4 view .LVU228
 1192 0018 0022     		movs	r2, #0
 1193 001a 12A9     		add	r1, sp, #72
 1194 001c 2EA8     		add	r0, sp, #184
 1195 001e FFF7FEFF 		bl	HAL_RTC_GetDate
 1196              	.LVL103:
  21:Src/charlie.c ****    int hours = RTCtime.Hours;
 1197              		.loc 2 21 4 view .LVU229
  21:Src/charlie.c ****    int hours = RTCtime.Hours;
 1198              		.loc 2 21 25 is_stmt 0 view .LVU230
 1199 0022 6B46     		mov	r3, sp
 1200 0024 4D22     		movs	r2, #77
 1201 0026 9B18     		adds	r3, r3, r2
 1202 0028 1B78     		ldrb	r3, [r3]
 1203              	.LVL104:
  22:Src/charlie.c ****    int displayMin = 0;
 1204              		.loc 2 22 4 is_stmt 1 view .LVU231
  22:Src/charlie.c ****    int displayMin = 0;
 1205              		.loc 2 22 23 is_stmt 0 view .LVU232
 1206 002a 6A46     		mov	r2, sp
 1207 002c 4C21     		movs	r1, #76
 1208 002e 5218     		adds	r2, r2, r1
 1209 0030 1278     		ldrb	r2, [r2]
 1210              	.LVL105:
  23:Src/charlie.c **** 
 1211              		.loc 2 23 4 is_stmt 1 view .LVU233
  26:Src/charlie.c ****       displayMin = 12;
 1212              		.loc 2 26 4 view .LVU234
  26:Src/charlie.c ****       displayMin = 12;
 1213              		.loc 2 26 19 is_stmt 0 view .LVU235
 1214 0032 591E     		subs	r1, r3, #1
  26:Src/charlie.c ****       displayMin = 12;
 1215              		.loc 2 26 6 view .LVU236
 1216 0034 0129     		cmp	r1, #1
 1217 0036 25D9     		bls	.L53
  28:Src/charlie.c ****       displayMin = 1;
 1218              		.loc 2 28 9 is_stmt 1 view .LVU237
  28:Src/charlie.c ****       displayMin = 1;
 1219              		.loc 2 28 24 is_stmt 0 view .LVU238
 1220 0038 191F     		subs	r1, r3, #4
  28:Src/charlie.c ****       displayMin = 1;
 1221              		.loc 2 28 11 view .LVU239
 1222 003a 0229     		cmp	r1, #2
 1223 003c 4AD9     		bls	.L54
  30:Src/charlie.c ****       displayMin = 2;
 1224              		.loc 2 30 9 is_stmt 1 view .LVU240
  30:Src/charlie.c ****       displayMin = 2;
 1225              		.loc 2 30 24 is_stmt 0 view .LVU241
 1226 003e 0439     		subs	r1, r1, #4
  30:Src/charlie.c ****       displayMin = 2;
 1227              		.loc 2 30 11 view .LVU242
 1228 0040 0329     		cmp	r1, #3
 1229 0042 49D9     		bls	.L55
  32:Src/charlie.c ****       displayMin = 3;
 1230              		.loc 2 32 9 is_stmt 1 view .LVU243
ARM GAS  /tmp/cccixJrj.s 			page 42


  32:Src/charlie.c ****       displayMin = 3;
 1231              		.loc 2 32 25 is_stmt 0 view .LVU244
 1232 0044 0539     		subs	r1, r1, #5
  32:Src/charlie.c ****       displayMin = 3;
 1233              		.loc 2 32 11 view .LVU245
 1234 0046 0329     		cmp	r1, #3
 1235 0048 48D9     		bls	.L56
  34:Src/charlie.c ****       displayMin = 4;
 1236              		.loc 2 34 9 is_stmt 1 view .LVU246
  34:Src/charlie.c ****       displayMin = 4;
 1237              		.loc 2 34 25 is_stmt 0 view .LVU247
 1238 004a 0539     		subs	r1, r1, #5
  34:Src/charlie.c ****       displayMin = 4;
 1239              		.loc 2 34 11 view .LVU248
 1240 004c 0329     		cmp	r1, #3
 1241 004e 47D9     		bls	.L57
  36:Src/charlie.c ****       displayMin = 5;
 1242              		.loc 2 36 9 is_stmt 1 view .LVU249
  36:Src/charlie.c ****       displayMin = 5;
 1243              		.loc 2 36 25 is_stmt 0 view .LVU250
 1244 0050 0539     		subs	r1, r1, #5
  36:Src/charlie.c ****       displayMin = 5;
 1245              		.loc 2 36 11 view .LVU251
 1246 0052 0329     		cmp	r1, #3
 1247 0054 46D9     		bls	.L58
  38:Src/charlie.c ****       displayMin = 6;
 1248              		.loc 2 38 9 is_stmt 1 view .LVU252
  38:Src/charlie.c ****       displayMin = 6;
 1249              		.loc 2 38 25 is_stmt 0 view .LVU253
 1250 0056 0539     		subs	r1, r1, #5
  38:Src/charlie.c ****       displayMin = 6;
 1251              		.loc 2 38 11 view .LVU254
 1252 0058 0329     		cmp	r1, #3
 1253 005a 45D9     		bls	.L59
  40:Src/charlie.c ****       displayMin = 7;
 1254              		.loc 2 40 9 is_stmt 1 view .LVU255
  40:Src/charlie.c ****       displayMin = 7;
 1255              		.loc 2 40 25 is_stmt 0 view .LVU256
 1256 005c 0539     		subs	r1, r1, #5
  40:Src/charlie.c ****       displayMin = 7;
 1257              		.loc 2 40 11 view .LVU257
 1258 005e 0329     		cmp	r1, #3
 1259 0060 44D9     		bls	.L60
  42:Src/charlie.c ****       displayMin = 8;
 1260              		.loc 2 42 9 is_stmt 1 view .LVU258
  42:Src/charlie.c ****       displayMin = 8;
 1261              		.loc 2 42 25 is_stmt 0 view .LVU259
 1262 0062 0539     		subs	r1, r1, #5
  42:Src/charlie.c ****       displayMin = 8;
 1263              		.loc 2 42 11 view .LVU260
 1264 0064 0329     		cmp	r1, #3
 1265 0066 43D9     		bls	.L61
  44:Src/charlie.c ****       displayMin = 9;
 1266              		.loc 2 44 9 is_stmt 1 view .LVU261
  44:Src/charlie.c ****       displayMin = 9;
 1267              		.loc 2 44 25 is_stmt 0 view .LVU262
 1268 0068 0539     		subs	r1, r1, #5
ARM GAS  /tmp/cccixJrj.s 			page 43


  44:Src/charlie.c ****       displayMin = 9;
 1269              		.loc 2 44 11 view .LVU263
 1270 006a 0329     		cmp	r1, #3
 1271 006c 42D9     		bls	.L62
  46:Src/charlie.c ****       displayMin = 10;
 1272              		.loc 2 46 9 is_stmt 1 view .LVU264
  46:Src/charlie.c ****       displayMin = 10;
 1273              		.loc 2 46 25 is_stmt 0 view .LVU265
 1274 006e 0539     		subs	r1, r1, #5
  46:Src/charlie.c ****       displayMin = 10;
 1275              		.loc 2 46 11 view .LVU266
 1276 0070 0329     		cmp	r1, #3
 1277 0072 41D9     		bls	.L63
  48:Src/charlie.c ****       displayMin = 11;
 1278              		.loc 2 48 9 is_stmt 1 view .LVU267
  48:Src/charlie.c ****       displayMin = 11;
 1279              		.loc 2 48 25 is_stmt 0 view .LVU268
 1280 0074 0539     		subs	r1, r1, #5
  48:Src/charlie.c ****       displayMin = 11;
 1281              		.loc 2 48 11 view .LVU269
 1282 0076 0329     		cmp	r1, #3
 1283 0078 40D9     		bls	.L64
  50:Src/charlie.c ****       displayMin = 12;
 1284              		.loc 2 50 9 is_stmt 1 view .LVU270
  50:Src/charlie.c ****       displayMin = 12;
 1285              		.loc 2 50 25 is_stmt 0 view .LVU271
 1286 007a 3A3B     		subs	r3, r3, #58
 1287              	.LVL106:
  50:Src/charlie.c ****       displayMin = 12;
 1288              		.loc 2 50 11 view .LVU272
 1289 007c 022B     		cmp	r3, #2
 1290 007e 3FD9     		bls	.L65
  23:Src/charlie.c **** 
 1291              		.loc 2 23 8 view .LVU273
 1292 0080 0023     		movs	r3, #0
 1293              	.LVL107:
  23:Src/charlie.c **** 
 1294              		.loc 2 23 8 view .LVU274
 1295 0082 00E0     		b	.L52
 1296              	.LVL108:
 1297              	.L53:
  27:Src/charlie.c ****    else if(minutes > 3 && minutes < 7)
 1298              		.loc 2 27 18 view .LVU275
 1299 0084 0C23     		movs	r3, #12
 1300              	.LVL109:
 1301              	.L52:
  53:Src/charlie.c ****    
 1302              		.loc 2 53 4 is_stmt 1 view .LVU276
 1303 0086 1193     		str	r3, [sp, #68]
 1304              	.LVL110:
  53:Src/charlie.c ****    
 1305              		.loc 2 53 4 is_stmt 0 view .LVU277
 1306 0088 1092     		str	r2, [sp, #64]
 1307 008a 29A8     		add	r0, sp, #164
 1308 008c 0BA9     		add	r1, sp, #44
 1309 008e 0B00     		movs	r3, r1
 1310              	.LVL111:
ARM GAS  /tmp/cccixJrj.s 			page 44


  53:Src/charlie.c ****    
 1311              		.loc 2 53 4 view .LVU278
 1312 0090 0200     		movs	r2, r0
 1313              	.LVL112:
  53:Src/charlie.c ****    
 1314              		.loc 2 53 4 view .LVU279
 1315 0092 13CA     		ldmia	r2!, {r0, r1, r4}
 1316 0094 13C3     		stmia	r3!, {r0, r1, r4}
 1317 0096 03CA     		ldmia	r2!, {r0, r1}
 1318 0098 03C3     		stmia	r3!, {r0, r1}
 1319 009a 24A8     		add	r0, sp, #144
 1320 009c 06A9     		add	r1, sp, #24
 1321 009e 0B00     		movs	r3, r1
 1322 00a0 0200     		movs	r2, r0
 1323 00a2 13CA     		ldmia	r2!, {r0, r1, r4}
 1324 00a4 13C3     		stmia	r3!, {r0, r1, r4}
 1325 00a6 03CA     		ldmia	r2!, {r0, r1}
 1326 00a8 03C3     		stmia	r3!, {r0, r1}
 1327 00aa 1FA8     		add	r0, sp, #124
 1328 00ac 01A9     		add	r1, sp, #4
 1329 00ae 0B00     		movs	r3, r1
 1330 00b0 0200     		movs	r2, r0
 1331 00b2 13CA     		ldmia	r2!, {r0, r1, r4}
 1332 00b4 13C3     		stmia	r3!, {r0, r1, r4}
 1333 00b6 03CA     		ldmia	r2!, {r0, r1}
 1334 00b8 03C3     		stmia	r3!, {r0, r1}
 1335 00ba 1E9B     		ldr	r3, [sp, #120]
 1336 00bc 0093     		str	r3, [sp]
 1337 00be 1A98     		ldr	r0, [sp, #104]
 1338 00c0 1B99     		ldr	r1, [sp, #108]
 1339 00c2 1C9A     		ldr	r2, [sp, #112]
 1340 00c4 1D9B     		ldr	r3, [sp, #116]
 1341 00c6 FFF7FEFF 		bl	hands
 1342              	.LVL113:
  55:Src/charlie.c **** 
 1343              		.loc 2 55 1 view .LVU280
 1344 00ca 18B0     		add	sp, sp, #96
 1345              		@ sp needed
 1346 00cc 10BC     		pop	{r4}
 1347 00ce 08BC     		pop	{r3}
 1348 00d0 04B0     		add	sp, sp, #16
 1349 00d2 1847     		bx	r3
 1350              	.LVL114:
 1351              	.L54:
  29:Src/charlie.c ****    else if(minutes > 7 && minutes < 12)
 1352              		.loc 2 29 18 view .LVU281
 1353 00d4 0123     		movs	r3, #1
 1354              	.LVL115:
  29:Src/charlie.c ****    else if(minutes > 7 && minutes < 12)
 1355              		.loc 2 29 18 view .LVU282
 1356 00d6 D6E7     		b	.L52
 1357              	.LVL116:
 1358              	.L55:
  31:Src/charlie.c ****    else if(minutes > 12 && minutes < 17)
 1359              		.loc 2 31 18 view .LVU283
 1360 00d8 0223     		movs	r3, #2
 1361              	.LVL117:
ARM GAS  /tmp/cccixJrj.s 			page 45


  31:Src/charlie.c ****    else if(minutes > 12 && minutes < 17)
 1362              		.loc 2 31 18 view .LVU284
 1363 00da D4E7     		b	.L52
 1364              	.LVL118:
 1365              	.L56:
  33:Src/charlie.c ****    else if(minutes > 17 && minutes < 22)
 1366              		.loc 2 33 18 view .LVU285
 1367 00dc 0323     		movs	r3, #3
 1368              	.LVL119:
  33:Src/charlie.c ****    else if(minutes > 17 && minutes < 22)
 1369              		.loc 2 33 18 view .LVU286
 1370 00de D2E7     		b	.L52
 1371              	.LVL120:
 1372              	.L57:
  35:Src/charlie.c ****    else if(minutes > 22 && minutes < 27)
 1373              		.loc 2 35 18 view .LVU287
 1374 00e0 0423     		movs	r3, #4
 1375              	.LVL121:
  35:Src/charlie.c ****    else if(minutes > 22 && minutes < 27)
 1376              		.loc 2 35 18 view .LVU288
 1377 00e2 D0E7     		b	.L52
 1378              	.LVL122:
 1379              	.L58:
  37:Src/charlie.c ****    else if(minutes > 27 && minutes < 32)
 1380              		.loc 2 37 18 view .LVU289
 1381 00e4 0523     		movs	r3, #5
 1382              	.LVL123:
  37:Src/charlie.c ****    else if(minutes > 27 && minutes < 32)
 1383              		.loc 2 37 18 view .LVU290
 1384 00e6 CEE7     		b	.L52
 1385              	.LVL124:
 1386              	.L59:
  39:Src/charlie.c ****    else if(minutes > 32 && minutes < 37)
 1387              		.loc 2 39 18 view .LVU291
 1388 00e8 0623     		movs	r3, #6
 1389              	.LVL125:
  39:Src/charlie.c ****    else if(minutes > 32 && minutes < 37)
 1390              		.loc 2 39 18 view .LVU292
 1391 00ea CCE7     		b	.L52
 1392              	.LVL126:
 1393              	.L60:
  41:Src/charlie.c ****    else if(minutes > 37 && minutes < 42)
 1394              		.loc 2 41 18 view .LVU293
 1395 00ec 0723     		movs	r3, #7
 1396              	.LVL127:
  41:Src/charlie.c ****    else if(minutes > 37 && minutes < 42)
 1397              		.loc 2 41 18 view .LVU294
 1398 00ee CAE7     		b	.L52
 1399              	.LVL128:
 1400              	.L61:
  43:Src/charlie.c ****    else if(minutes > 42 && minutes < 47)
 1401              		.loc 2 43 18 view .LVU295
 1402 00f0 0823     		movs	r3, #8
 1403              	.LVL129:
  43:Src/charlie.c ****    else if(minutes > 42 && minutes < 47)
 1404              		.loc 2 43 18 view .LVU296
 1405 00f2 C8E7     		b	.L52
ARM GAS  /tmp/cccixJrj.s 			page 46


 1406              	.LVL130:
 1407              	.L62:
  45:Src/charlie.c ****    else if(minutes > 47 && minutes < 52)
 1408              		.loc 2 45 18 view .LVU297
 1409 00f4 0923     		movs	r3, #9
 1410              	.LVL131:
  45:Src/charlie.c ****    else if(minutes > 47 && minutes < 52)
 1411              		.loc 2 45 18 view .LVU298
 1412 00f6 C6E7     		b	.L52
 1413              	.LVL132:
 1414              	.L63:
  47:Src/charlie.c ****    else if(minutes > 52 && minutes < 57)
 1415              		.loc 2 47 18 view .LVU299
 1416 00f8 0A23     		movs	r3, #10
 1417              	.LVL133:
  47:Src/charlie.c ****    else if(minutes > 52 && minutes < 57)
 1418              		.loc 2 47 18 view .LVU300
 1419 00fa C4E7     		b	.L52
 1420              	.LVL134:
 1421              	.L64:
  49:Src/charlie.c ****    else if(minutes > 57 && minutes < 61)
 1422              		.loc 2 49 18 view .LVU301
 1423 00fc 0B23     		movs	r3, #11
 1424              	.LVL135:
  49:Src/charlie.c ****    else if(minutes > 57 && minutes < 61)
 1425              		.loc 2 49 18 view .LVU302
 1426 00fe C2E7     		b	.L52
 1427              	.L65:
  51:Src/charlie.c **** 
 1428              		.loc 2 51 18 view .LVU303
 1429 0100 0C23     		movs	r3, #12
 1430 0102 C0E7     		b	.L52
 1431              		.cfi_endproc
 1432              	.LFE43:
 1434              		.section	.text.initA,"ax",%progbits
 1435              		.align	1
 1436              		.global	initA
 1437              		.syntax unified
 1438              		.code	16
 1439              		.thumb_func
 1440              		.fpu softvfp
 1442              	initA:
 1443              	.LVL136:
 1444              	.LFB47:
 517:Src/charlie.c **** 
 518:Src/charlie.c **** GPIO_InitTypeDef initA(){
 1445              		.loc 2 518 25 is_stmt 1 view -0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 24
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
 1449              		.loc 2 518 25 is_stmt 0 view .LVU305
 1450 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1451              	.LCFI14:
 1452              		.cfi_def_cfa_offset 20
 1453              		.cfi_offset 4, -20
 1454              		.cfi_offset 5, -16
 1455              		.cfi_offset 6, -12
ARM GAS  /tmp/cccixJrj.s 			page 47


 1456              		.cfi_offset 7, -8
 1457              		.cfi_offset 14, -4
 1458 0002 87B0     		sub	sp, sp, #28
 1459              	.LCFI15:
 1460              		.cfi_def_cfa_offset 48
 1461 0004 0500     		movs	r5, r0
 519:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1462              		.loc 2 519 3 is_stmt 1 view .LVU306
 1463              		.loc 2 519 20 is_stmt 0 view .LVU307
 1464 0006 01AC     		add	r4, sp, #4
 1465 0008 1422     		movs	r2, #20
 1466 000a 0021     		movs	r1, #0
 1467 000c 2000     		movs	r0, r4
 1468              	.LVL137:
 1469              		.loc 2 519 20 view .LVU308
 1470 000e FFF7FEFF 		bl	memset
 1471              	.LVL138:
 520:Src/charlie.c **** 
 521:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 522:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, A_Pin, GPIO_PIN_RESET);
 1472              		.loc 2 522 3 is_stmt 1 view .LVU309
 1473 0012 9020     		movs	r0, #144
 1474 0014 0022     		movs	r2, #0
 1475 0016 0121     		movs	r1, #1
 1476 0018 C005     		lsls	r0, r0, #23
 1477 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1478              	.LVL139:
 523:Src/charlie.c **** 
 524:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 525:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 1479              		.loc 2 525 3 view .LVU310
 1480              		.loc 2 525 23 is_stmt 0 view .LVU311
 1481 001e 8023     		movs	r3, #128
 1482 0020 5B00     		lsls	r3, r3, #1
 1483 0022 0193     		str	r3, [sp, #4]
 526:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1484              		.loc 2 526 3 is_stmt 1 view .LVU312
 1485              		.loc 2 526 24 is_stmt 0 view .LVU313
 1486 0024 0026     		movs	r6, #0
 1487 0026 6660     		str	r6, [r4, #4]
 527:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 1488              		.loc 2 527 3 is_stmt 1 view .LVU314
 1489              		.loc 2 527 24 is_stmt 0 view .LVU315
 1490 0028 0127     		movs	r7, #1
 1491 002a A760     		str	r7, [r4, #8]
 528:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 1492              		.loc 2 528 3 is_stmt 1 view .LVU316
 1493 002c 2100     		movs	r1, r4
 1494 002e 0748     		ldr	r0, .L67
 1495 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 1496              	.LVL140:
 529:Src/charlie.c **** 
 530:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 531:Src/charlie.c ****   GPIO_InitStruct.Pin = A_Pin;
 1497              		.loc 2 531 3 view .LVU317
 1498              		.loc 2 531 23 is_stmt 0 view .LVU318
 1499 0034 0197     		str	r7, [sp, #4]
ARM GAS  /tmp/cccixJrj.s 			page 48


 532:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1500              		.loc 2 532 3 is_stmt 1 view .LVU319
 1501              		.loc 2 532 24 is_stmt 0 view .LVU320
 1502 0036 6760     		str	r7, [r4, #4]
 533:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1503              		.loc 2 533 3 is_stmt 1 view .LVU321
 1504              		.loc 2 533 24 is_stmt 0 view .LVU322
 1505 0038 A660     		str	r6, [r4, #8]
 534:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1506              		.loc 2 534 3 is_stmt 1 view .LVU323
 1507              		.loc 2 534 25 is_stmt 0 view .LVU324
 1508 003a E660     		str	r6, [r4, #12]
 535:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 536:Src/charlie.c **** 
 537:Src/charlie.c ****   return GPIO_InitStruct;
 1509              		.loc 2 537 3 is_stmt 1 view .LVU325
 1510              		.loc 2 537 10 is_stmt 0 view .LVU326
 1511 003c 2B00     		movs	r3, r5
 1512 003e 07CC     		ldmia	r4!, {r0, r1, r2}
 1513 0040 07C3     		stmia	r3!, {r0, r1, r2}
 1514 0042 06CC     		ldmia	r4!, {r1, r2}
 1515 0044 06C3     		stmia	r3!, {r1, r2}
 538:Src/charlie.c **** }
 1516              		.loc 2 538 1 view .LVU327
 1517 0046 2800     		movs	r0, r5
 1518 0048 07B0     		add	sp, sp, #28
 1519              		@ sp needed
 1520              	.LVL141:
 1521              		.loc 2 538 1 view .LVU328
 1522 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 1523              	.L68:
 1524              		.align	2
 1525              	.L67:
 1526 004c 00040048 		.word	1207960576
 1527              		.cfi_endproc
 1528              	.LFE47:
 1530              		.section	.text.initB,"ax",%progbits
 1531              		.align	1
 1532              		.global	initB
 1533              		.syntax unified
 1534              		.code	16
 1535              		.thumb_func
 1536              		.fpu softvfp
 1538              	initB:
 1539              	.LVL142:
 1540              	.LFB48:
 539:Src/charlie.c **** 
 540:Src/charlie.c **** GPIO_InitTypeDef initB(){
 1541              		.loc 2 540 25 is_stmt 1 view -0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 24
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              		.loc 2 540 25 is_stmt 0 view .LVU330
 1546 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1547              	.LCFI16:
 1548              		.cfi_def_cfa_offset 20
 1549              		.cfi_offset 4, -20
ARM GAS  /tmp/cccixJrj.s 			page 49


 1550              		.cfi_offset 5, -16
 1551              		.cfi_offset 6, -12
 1552              		.cfi_offset 7, -8
 1553              		.cfi_offset 14, -4
 1554 0002 87B0     		sub	sp, sp, #28
 1555              	.LCFI17:
 1556              		.cfi_def_cfa_offset 48
 1557 0004 0500     		movs	r5, r0
 541:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1558              		.loc 2 541 3 is_stmt 1 view .LVU331
 1559              		.loc 2 541 20 is_stmt 0 view .LVU332
 1560 0006 01AC     		add	r4, sp, #4
 1561 0008 1422     		movs	r2, #20
 1562 000a 0021     		movs	r1, #0
 1563 000c 2000     		movs	r0, r4
 1564              	.LVL143:
 1565              		.loc 2 541 20 view .LVU333
 1566 000e FFF7FEFF 		bl	memset
 1567              	.LVL144:
 542:Src/charlie.c **** 
 543:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 544:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, B_Pin, GPIO_PIN_RESET);
 1568              		.loc 2 544 3 is_stmt 1 view .LVU334
 1569 0012 9020     		movs	r0, #144
 1570 0014 0022     		movs	r2, #0
 1571 0016 0221     		movs	r1, #2
 1572 0018 C005     		lsls	r0, r0, #23
 1573 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1574              	.LVL145:
 545:Src/charlie.c **** 
 546:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 547:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 1575              		.loc 2 547 3 view .LVU335
 1576              		.loc 2 547 23 is_stmt 0 view .LVU336
 1577 001e 8023     		movs	r3, #128
 1578 0020 5B00     		lsls	r3, r3, #1
 1579 0022 0193     		str	r3, [sp, #4]
 548:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1580              		.loc 2 548 3 is_stmt 1 view .LVU337
 1581              		.loc 2 548 24 is_stmt 0 view .LVU338
 1582 0024 0026     		movs	r6, #0
 1583 0026 6660     		str	r6, [r4, #4]
 549:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 1584              		.loc 2 549 3 is_stmt 1 view .LVU339
 1585              		.loc 2 549 24 is_stmt 0 view .LVU340
 1586 0028 0127     		movs	r7, #1
 1587 002a A760     		str	r7, [r4, #8]
 550:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 1588              		.loc 2 550 3 is_stmt 1 view .LVU341
 1589 002c 2100     		movs	r1, r4
 1590 002e 0848     		ldr	r0, .L70
 1591 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 1592              	.LVL146:
 551:Src/charlie.c **** 
 552:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 553:Src/charlie.c ****   GPIO_InitStruct.Pin = B_Pin;
 1593              		.loc 2 553 3 view .LVU342
ARM GAS  /tmp/cccixJrj.s 			page 50


 1594              		.loc 2 553 23 is_stmt 0 view .LVU343
 1595 0034 0223     		movs	r3, #2
 1596 0036 0193     		str	r3, [sp, #4]
 554:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1597              		.loc 2 554 3 is_stmt 1 view .LVU344
 1598              		.loc 2 554 24 is_stmt 0 view .LVU345
 1599 0038 6760     		str	r7, [r4, #4]
 555:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1600              		.loc 2 555 3 is_stmt 1 view .LVU346
 1601              		.loc 2 555 24 is_stmt 0 view .LVU347
 1602 003a A660     		str	r6, [r4, #8]
 556:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1603              		.loc 2 556 3 is_stmt 1 view .LVU348
 1604              		.loc 2 556 25 is_stmt 0 view .LVU349
 1605 003c E660     		str	r6, [r4, #12]
 557:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 558:Src/charlie.c **** 
 559:Src/charlie.c ****   return GPIO_InitStruct;
 1606              		.loc 2 559 3 is_stmt 1 view .LVU350
 1607              		.loc 2 559 10 is_stmt 0 view .LVU351
 1608 003e 2B00     		movs	r3, r5
 1609 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 1610 0042 07C3     		stmia	r3!, {r0, r1, r2}
 1611 0044 06CC     		ldmia	r4!, {r1, r2}
 1612 0046 06C3     		stmia	r3!, {r1, r2}
 560:Src/charlie.c **** }
 1613              		.loc 2 560 1 view .LVU352
 1614 0048 2800     		movs	r0, r5
 1615 004a 07B0     		add	sp, sp, #28
 1616              		@ sp needed
 1617              	.LVL147:
 1618              		.loc 2 560 1 view .LVU353
 1619 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 1620              	.L71:
 1621 004e C046     		.align	2
 1622              	.L70:
 1623 0050 00040048 		.word	1207960576
 1624              		.cfi_endproc
 1625              	.LFE48:
 1627              		.section	.text.initC,"ax",%progbits
 1628              		.align	1
 1629              		.global	initC
 1630              		.syntax unified
 1631              		.code	16
 1632              		.thumb_func
 1633              		.fpu softvfp
 1635              	initC:
 1636              	.LVL148:
 1637              	.LFB49:
 561:Src/charlie.c **** 
 562:Src/charlie.c **** GPIO_InitTypeDef initC(){
 1638              		.loc 2 562 25 is_stmt 1 view -0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 24
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              		.loc 2 562 25 is_stmt 0 view .LVU355
 1643 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /tmp/cccixJrj.s 			page 51


 1644              	.LCFI18:
 1645              		.cfi_def_cfa_offset 20
 1646              		.cfi_offset 4, -20
 1647              		.cfi_offset 5, -16
 1648              		.cfi_offset 6, -12
 1649              		.cfi_offset 7, -8
 1650              		.cfi_offset 14, -4
 1651 0002 87B0     		sub	sp, sp, #28
 1652              	.LCFI19:
 1653              		.cfi_def_cfa_offset 48
 1654 0004 0500     		movs	r5, r0
 563:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1655              		.loc 2 563 3 is_stmt 1 view .LVU356
 1656              		.loc 2 563 20 is_stmt 0 view .LVU357
 1657 0006 01AC     		add	r4, sp, #4
 1658 0008 1422     		movs	r2, #20
 1659 000a 0021     		movs	r1, #0
 1660 000c 2000     		movs	r0, r4
 1661              	.LVL149:
 1662              		.loc 2 563 20 view .LVU358
 1663 000e FFF7FEFF 		bl	memset
 1664              	.LVL150:
 564:Src/charlie.c **** 
 565:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 566:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, C_Pin, GPIO_PIN_RESET);
 1665              		.loc 2 566 3 is_stmt 1 view .LVU359
 1666 0012 9020     		movs	r0, #144
 1667 0014 0022     		movs	r2, #0
 1668 0016 0421     		movs	r1, #4
 1669 0018 C005     		lsls	r0, r0, #23
 1670 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1671              	.LVL151:
 567:Src/charlie.c **** 
 568:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 569:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 1672              		.loc 2 569 3 view .LVU360
 1673              		.loc 2 569 23 is_stmt 0 view .LVU361
 1674 001e 8023     		movs	r3, #128
 1675 0020 5B00     		lsls	r3, r3, #1
 1676 0022 0193     		str	r3, [sp, #4]
 570:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1677              		.loc 2 570 3 is_stmt 1 view .LVU362
 1678              		.loc 2 570 24 is_stmt 0 view .LVU363
 1679 0024 0026     		movs	r6, #0
 1680 0026 6660     		str	r6, [r4, #4]
 571:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 1681              		.loc 2 571 3 is_stmt 1 view .LVU364
 1682              		.loc 2 571 24 is_stmt 0 view .LVU365
 1683 0028 0127     		movs	r7, #1
 1684 002a A760     		str	r7, [r4, #8]
 572:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 1685              		.loc 2 572 3 is_stmt 1 view .LVU366
 1686 002c 2100     		movs	r1, r4
 1687 002e 0848     		ldr	r0, .L73
 1688 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 1689              	.LVL152:
 573:Src/charlie.c **** 
ARM GAS  /tmp/cccixJrj.s 			page 52


 574:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 575:Src/charlie.c ****   GPIO_InitStruct.Pin = C_Pin;
 1690              		.loc 2 575 3 view .LVU367
 1691              		.loc 2 575 23 is_stmt 0 view .LVU368
 1692 0034 0423     		movs	r3, #4
 1693 0036 0193     		str	r3, [sp, #4]
 576:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1694              		.loc 2 576 3 is_stmt 1 view .LVU369
 1695              		.loc 2 576 24 is_stmt 0 view .LVU370
 1696 0038 6760     		str	r7, [r4, #4]
 577:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1697              		.loc 2 577 3 is_stmt 1 view .LVU371
 1698              		.loc 2 577 24 is_stmt 0 view .LVU372
 1699 003a A660     		str	r6, [r4, #8]
 578:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1700              		.loc 2 578 3 is_stmt 1 view .LVU373
 1701              		.loc 2 578 25 is_stmt 0 view .LVU374
 1702 003c E660     		str	r6, [r4, #12]
 579:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 580:Src/charlie.c **** 
 581:Src/charlie.c ****   return GPIO_InitStruct;
 1703              		.loc 2 581 3 is_stmt 1 view .LVU375
 1704              		.loc 2 581 10 is_stmt 0 view .LVU376
 1705 003e 2B00     		movs	r3, r5
 1706 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 1707 0042 07C3     		stmia	r3!, {r0, r1, r2}
 1708 0044 06CC     		ldmia	r4!, {r1, r2}
 1709 0046 06C3     		stmia	r3!, {r1, r2}
 582:Src/charlie.c **** }
 1710              		.loc 2 582 1 view .LVU377
 1711 0048 2800     		movs	r0, r5
 1712 004a 07B0     		add	sp, sp, #28
 1713              		@ sp needed
 1714              	.LVL153:
 1715              		.loc 2 582 1 view .LVU378
 1716 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 1717              	.L74:
 1718 004e C046     		.align	2
 1719              	.L73:
 1720 0050 00040048 		.word	1207960576
 1721              		.cfi_endproc
 1722              	.LFE49:
 1724              		.section	.text.initD,"ax",%progbits
 1725              		.align	1
 1726              		.global	initD
 1727              		.syntax unified
 1728              		.code	16
 1729              		.thumb_func
 1730              		.fpu softvfp
 1732              	initD:
 1733              	.LVL154:
 1734              	.LFB50:
 583:Src/charlie.c **** 
 584:Src/charlie.c **** GPIO_InitTypeDef initD(){
 1735              		.loc 2 584 25 is_stmt 1 view -0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/cccixJrj.s 			page 53


 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              		.loc 2 584 25 is_stmt 0 view .LVU380
 1740 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1741              	.LCFI20:
 1742              		.cfi_def_cfa_offset 20
 1743              		.cfi_offset 4, -20
 1744              		.cfi_offset 5, -16
 1745              		.cfi_offset 6, -12
 1746              		.cfi_offset 7, -8
 1747              		.cfi_offset 14, -4
 1748 0002 87B0     		sub	sp, sp, #28
 1749              	.LCFI21:
 1750              		.cfi_def_cfa_offset 48
 1751 0004 0500     		movs	r5, r0
 585:Src/charlie.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1752              		.loc 2 585 3 is_stmt 1 view .LVU381
 1753              		.loc 2 585 20 is_stmt 0 view .LVU382
 1754 0006 01AC     		add	r4, sp, #4
 1755 0008 1422     		movs	r2, #20
 1756 000a 0021     		movs	r1, #0
 1757 000c 2000     		movs	r0, r4
 1758              	.LVL155:
 1759              		.loc 2 585 20 view .LVU383
 1760 000e FFF7FEFF 		bl	memset
 1761              	.LVL156:
 586:Src/charlie.c **** 
 587:Src/charlie.c ****   /*Configure GPIO pin Output Level */
 588:Src/charlie.c ****   HAL_GPIO_WritePin(GPIOA, D_Pin, GPIO_PIN_RESET);
 1762              		.loc 2 588 3 is_stmt 1 view .LVU384
 1763 0012 9020     		movs	r0, #144
 1764 0014 0022     		movs	r2, #0
 1765 0016 0821     		movs	r1, #8
 1766 0018 C005     		lsls	r0, r0, #23
 1767 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1768              	.LVL157:
 589:Src/charlie.c **** 
 590:Src/charlie.c ****   /*Configure GPIO pin : Mode_Pin */
 591:Src/charlie.c ****   GPIO_InitStruct.Pin = Mode_Pin;
 1769              		.loc 2 591 3 view .LVU385
 1770              		.loc 2 591 23 is_stmt 0 view .LVU386
 1771 001e 8023     		movs	r3, #128
 1772 0020 5B00     		lsls	r3, r3, #1
 1773 0022 0193     		str	r3, [sp, #4]
 592:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1774              		.loc 2 592 3 is_stmt 1 view .LVU387
 1775              		.loc 2 592 24 is_stmt 0 view .LVU388
 1776 0024 0026     		movs	r6, #0
 1777 0026 6660     		str	r6, [r4, #4]
 593:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 1778              		.loc 2 593 3 is_stmt 1 view .LVU389
 1779              		.loc 2 593 24 is_stmt 0 view .LVU390
 1780 0028 0127     		movs	r7, #1
 1781 002a A760     		str	r7, [r4, #8]
 594:Src/charlie.c ****   HAL_GPIO_Init(Mode_GPIO_Port, &GPIO_InitStruct);
 1782              		.loc 2 594 3 is_stmt 1 view .LVU391
 1783 002c 2100     		movs	r1, r4
 1784 002e 0848     		ldr	r0, .L76
ARM GAS  /tmp/cccixJrj.s 			page 54


 1785 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 1786              	.LVL158:
 595:Src/charlie.c **** 
 596:Src/charlie.c ****   /*Configure GPIO pins : A_Pin */
 597:Src/charlie.c ****   GPIO_InitStruct.Pin = D_Pin;
 1787              		.loc 2 597 3 view .LVU392
 1788              		.loc 2 597 23 is_stmt 0 view .LVU393
 1789 0034 0823     		movs	r3, #8
 1790 0036 0193     		str	r3, [sp, #4]
 598:Src/charlie.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1791              		.loc 2 598 3 is_stmt 1 view .LVU394
 1792              		.loc 2 598 24 is_stmt 0 view .LVU395
 1793 0038 6760     		str	r7, [r4, #4]
 599:Src/charlie.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1794              		.loc 2 599 3 is_stmt 1 view .LVU396
 1795              		.loc 2 599 24 is_stmt 0 view .LVU397
 1796 003a A660     		str	r6, [r4, #8]
 600:Src/charlie.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1797              		.loc 2 600 3 is_stmt 1 view .LVU398
 1798              		.loc 2 600 25 is_stmt 0 view .LVU399
 1799 003c E660     		str	r6, [r4, #12]
 601:Src/charlie.c **** //  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 602:Src/charlie.c **** 
 603:Src/charlie.c ****   return GPIO_InitStruct;
 1800              		.loc 2 603 3 is_stmt 1 view .LVU400
 1801              		.loc 2 603 10 is_stmt 0 view .LVU401
 1802 003e 2B00     		movs	r3, r5
 1803 0040 07CC     		ldmia	r4!, {r0, r1, r2}
 1804 0042 07C3     		stmia	r3!, {r0, r1, r2}
 1805 0044 06CC     		ldmia	r4!, {r1, r2}
 1806 0046 06C3     		stmia	r3!, {r1, r2}
 604:Src/charlie.c **** }
 1807              		.loc 2 604 1 view .LVU402
 1808 0048 2800     		movs	r0, r5
 1809 004a 07B0     		add	sp, sp, #28
 1810              		@ sp needed
 1811              	.LVL159:
 1812              		.loc 2 604 1 view .LVU403
 1813 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 1814              	.L77:
 1815 004e C046     		.align	2
 1816              	.L76:
 1817 0050 00040048 		.word	1207960576
 1818              		.cfi_endproc
 1819              	.LFE50:
 1821              		.section	.text.send_command,"ax",%progbits
 1822              		.align	1
 1823              		.global	send_command
 1824              		.syntax unified
 1825              		.code	16
 1826              		.thumb_func
 1827              		.fpu softvfp
 1829              	send_command:
 1830              	.LVL160:
 1831              	.LFB52:
 1832              		.file 3 "Src/semihosting.c"
   1:Src/semihosting.c **** // Some Semihosting stuff to make debugging eaiser
ARM GAS  /tmp/cccixJrj.s 			page 55


   2:Src/semihosting.c **** // Use with openocd, need to add the command "monitor arm semihosting enable"
   3:Src/semihosting.c **** // William Rickert March2020
   4:Src/semihosting.c **** 
   5:Src/semihosting.c **** void send_command(int command, void *message);
   6:Src/semihosting.c **** void put_char(char c);
   7:Src/semihosting.c **** 
   8:Src/semihosting.c **** void say(char s[]){
   9:Src/semihosting.c ****    
  10:Src/semihosting.c ****    uint32_t m[] = { 2/*stderr*/, (uint32_t)s, strlen(s) };
  11:Src/semihosting.c ****    send_command(0x05, m);
  12:Src/semihosting.c **** }  
  13:Src/semihosting.c **** 
  14:Src/semihosting.c **** void send_command(int command, void *message)
  15:Src/semihosting.c **** {
 1833              		.loc 3 15 1 is_stmt 1 view -0
 1834              		.cfi_startproc
 1835              		@ args = 0, pretend = 0, frame = 0
 1836              		@ frame_needed = 0, uses_anonymous_args = 0
 1837              		@ link register save eliminated.
 1838              		.loc 3 15 1 is_stmt 0 view .LVU405
 1839 0000 0300     		movs	r3, r0
 1840 0002 0A00     		movs	r2, r1
  16:Src/semihosting.c ****    asm("mov r0, %[cmd];"
 1841              		.loc 3 16 4 is_stmt 1 view .LVU406
 1842              		.syntax divided
 1843              	@ 16 "Src/semihosting.c" 1
 1844 0004 181C111C 		mov r0, r3;mov r1, r2;bkpt #0xAB
 1844      ABBE
 1845              	@ 0 "" 2
 1846              	.LVL161:
  17:Src/semihosting.c ****      "mov r1, %[msg];"
  18:Src/semihosting.c ****      "bkpt #0xAB"
  19:Src/semihosting.c ****         :
  20:Src/semihosting.c ****         : [cmd] "r" (command), [msg] "r" (message)
  21:Src/semihosting.c ****         : "r0", "r1", "memory");
  22:Src/semihosting.c **** }
 1847              		.loc 3 22 1 is_stmt 0 view .LVU407
 1848              		.thumb
 1849              		.syntax unified
 1850              		@ sp needed
 1851 000a 7047     		bx	lr
 1852              		.cfi_endproc
 1853              	.LFE52:
 1855              		.section	.text.say,"ax",%progbits
 1856              		.align	1
 1857              		.global	say
 1858              		.syntax unified
 1859              		.code	16
 1860              		.thumb_func
 1861              		.fpu softvfp
 1863              	say:
 1864              	.LVL162:
 1865              	.LFB51:
   8:Src/semihosting.c ****    
 1866              		.loc 3 8 19 is_stmt 1 view -0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cccixJrj.s 			page 56


 1869              		@ frame_needed = 0, uses_anonymous_args = 0
   8:Src/semihosting.c ****    
 1870              		.loc 3 8 19 is_stmt 0 view .LVU409
 1871 0000 00B5     		push	{lr}
 1872              	.LCFI22:
 1873              		.cfi_def_cfa_offset 4
 1874              		.cfi_offset 14, -4
 1875 0002 85B0     		sub	sp, sp, #20
 1876              	.LCFI23:
 1877              		.cfi_def_cfa_offset 24
  10:Src/semihosting.c ****    send_command(0x05, m);
 1878              		.loc 3 10 4 is_stmt 1 view .LVU410
  10:Src/semihosting.c ****    send_command(0x05, m);
 1879              		.loc 3 10 13 is_stmt 0 view .LVU411
 1880 0004 0223     		movs	r3, #2
 1881 0006 0193     		str	r3, [sp, #4]
 1882 0008 0290     		str	r0, [sp, #8]
  10:Src/semihosting.c ****    send_command(0x05, m);
 1883              		.loc 3 10 47 view .LVU412
 1884 000a FFF7FEFF 		bl	strlen
 1885              	.LVL163:
  10:Src/semihosting.c ****    send_command(0x05, m);
 1886              		.loc 3 10 13 view .LVU413
 1887 000e 0390     		str	r0, [sp, #12]
  11:Src/semihosting.c **** }  
 1888              		.loc 3 11 4 is_stmt 1 view .LVU414
 1889 0010 01A9     		add	r1, sp, #4
 1890 0012 0520     		movs	r0, #5
 1891 0014 FFF7FEFF 		bl	send_command
 1892              	.LVL164:
  12:Src/semihosting.c **** 
 1893              		.loc 3 12 1 is_stmt 0 view .LVU415
 1894 0018 05B0     		add	sp, sp, #20
 1895              		@ sp needed
 1896 001a 00BD     		pop	{pc}
 1897              		.cfi_endproc
 1898              	.LFE51:
 1900              		.section	.text.put_char,"ax",%progbits
 1901              		.align	1
 1902              		.global	put_char
 1903              		.syntax unified
 1904              		.code	16
 1905              		.thumb_func
 1906              		.fpu softvfp
 1908              	put_char:
 1909              	.LVL165:
 1910              	.LFB53:
  23:Src/semihosting.c **** 
  24:Src/semihosting.c **** void put_char(char c)
  25:Src/semihosting.c **** {
 1911              		.loc 3 25 1 is_stmt 1 view -0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 8
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              		@ link register save eliminated.
 1916              		.loc 3 25 1 is_stmt 0 view .LVU417
 1917 0000 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/cccixJrj.s 			page 57


 1918              	.LCFI24:
 1919              		.cfi_def_cfa_offset 8
  26:Src/semihosting.c ****     asm (
 1920              		.loc 3 26 5 is_stmt 1 view .LVU418
 1921 0002 6B46     		mov	r3, sp
 1922 0004 0733     		adds	r3, r3, #7
 1923              		.syntax divided
 1924              	@ 26 "Src/semihosting.c" 1
 1925 0006 0320     		mov r0, #0x03
 1926 0008 191C     	mov r1, r3
 1927 000a ABBE     	bkpt #0xAB
 1928              	
 1929              	@ 0 "" 2
 1930              	.LVL166:
  27:Src/semihosting.c ****       "mov r0, #0x03\n"   /* SYS_WRITEC */
  28:Src/semihosting.c ****       "mov r1, %[msg]\n"
  29:Src/semihosting.c ****       "bkpt #0xAB\n"
  30:Src/semihosting.c ****       :
  31:Src/semihosting.c ****       : [msg] "r" (&c)
  32:Src/semihosting.c ****       : "r0", "r1"
  33:Src/semihosting.c ****       );
  34:Src/semihosting.c **** }
 1931              		.loc 3 34 1 is_stmt 0 view .LVU419
 1932              		.thumb
 1933              		.syntax unified
 1934 000c 02B0     		add	sp, sp, #8
 1935              		@ sp needed
 1936 000e 7047     		bx	lr
 1937              		.cfi_endproc
 1938              	.LFE53:
 1940              		.section	.text.SystemClock_Config,"ax",%progbits
 1941              		.align	1
 1942              		.global	SystemClock_Config
 1943              		.syntax unified
 1944              		.code	16
 1945              		.thumb_func
 1946              		.fpu softvfp
 1948              	SystemClock_Config:
 1949              	.LFB55:
 262:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1950              		.loc 1 262 1 is_stmt 1 view -0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 96
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954 0000 10B5     		push	{r4, lr}
 1955              	.LCFI25:
 1956              		.cfi_def_cfa_offset 8
 1957              		.cfi_offset 4, -8
 1958              		.cfi_offset 14, -4
 1959 0002 98B0     		sub	sp, sp, #96
 1960              	.LCFI26:
 1961              		.cfi_def_cfa_offset 104
 263:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1962              		.loc 1 263 3 view .LVU421
 263:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1963              		.loc 1 263 22 is_stmt 0 view .LVU422
 1964 0004 3022     		movs	r2, #48
ARM GAS  /tmp/cccixJrj.s 			page 58


 1965 0006 0021     		movs	r1, #0
 1966 0008 0CA8     		add	r0, sp, #48
 1967 000a FFF7FEFF 		bl	memset
 1968              	.LVL167:
 264:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1969              		.loc 1 264 3 is_stmt 1 view .LVU423
 264:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1970              		.loc 1 264 22 is_stmt 0 view .LVU424
 1971 000e 1022     		movs	r2, #16
 1972 0010 0021     		movs	r1, #0
 1973 0012 07A8     		add	r0, sp, #28
 1974 0014 FFF7FEFF 		bl	memset
 1975              	.LVL168:
 265:Src/main.c    **** 
 1976              		.loc 1 265 3 is_stmt 1 view .LVU425
 265:Src/main.c    **** 
 1977              		.loc 1 265 28 is_stmt 0 view .LVU426
 1978 0018 1822     		movs	r2, #24
 1979 001a 0021     		movs	r1, #0
 1980 001c 01A8     		add	r0, sp, #4
 1981 001e FFF7FEFF 		bl	memset
 1982              	.LVL169:
 269:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1983              		.loc 1 269 3 is_stmt 1 view .LVU427
 269:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1984              		.loc 1 269 36 is_stmt 0 view .LVU428
 1985 0022 2823     		movs	r3, #40
 1986 0024 0B93     		str	r3, [sp, #44]
 270:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1987              		.loc 1 270 3 is_stmt 1 view .LVU429
 270:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1988              		.loc 1 270 32 is_stmt 0 view .LVU430
 1989 0026 273B     		subs	r3, r3, #39
 1990 0028 1393     		str	r3, [sp, #76]
 271:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1991              		.loc 1 271 3 is_stmt 1 view .LVU431
 271:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1992              		.loc 1 271 30 is_stmt 0 view .LVU432
 1993 002a 1293     		str	r3, [sp, #72]
 272:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1994              		.loc 1 272 3 is_stmt 1 view .LVU433
 273:Src/main.c    ****   {
 1995              		.loc 1 273 3 view .LVU434
 273:Src/main.c    ****   {
 1996              		.loc 1 273 7 is_stmt 0 view .LVU435
 1997 002c 0BA8     		add	r0, sp, #44
 1998 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1999              	.LVL170:
 279:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 2000              		.loc 1 279 3 is_stmt 1 view .LVU436
 279:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 2001              		.loc 1 279 31 is_stmt 0 view .LVU437
 2002 0032 0723     		movs	r3, #7
 2003 0034 0793     		str	r3, [sp, #28]
 281:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2004              		.loc 1 281 3 is_stmt 1 view .LVU438
 281:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/cccixJrj.s 			page 59


 2005              		.loc 1 281 34 is_stmt 0 view .LVU439
 2006 0036 043B     		subs	r3, r3, #4
 2007 0038 0893     		str	r3, [sp, #32]
 282:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2008              		.loc 1 282 3 is_stmt 1 view .LVU440
 282:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2009              		.loc 1 282 35 is_stmt 0 view .LVU441
 2010 003a 0024     		movs	r4, #0
 2011 003c 0994     		str	r4, [sp, #36]
 283:Src/main.c    **** 
 2012              		.loc 1 283 3 is_stmt 1 view .LVU442
 283:Src/main.c    **** 
 2013              		.loc 1 283 36 is_stmt 0 view .LVU443
 2014 003e 0A94     		str	r4, [sp, #40]
 285:Src/main.c    ****   {
 2015              		.loc 1 285 3 is_stmt 1 view .LVU444
 285:Src/main.c    ****   {
 2016              		.loc 1 285 7 is_stmt 0 view .LVU445
 2017 0040 0121     		movs	r1, #1
 2018 0042 07A8     		add	r0, sp, #28
 2019 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2020              	.LVL171:
 289:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 2021              		.loc 1 289 3 is_stmt 1 view .LVU446
 289:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 2022              		.loc 1 289 38 is_stmt 0 view .LVU447
 2023 0048 C023     		movs	r3, #192
 2024 004a 9B02     		lsls	r3, r3, #10
 2025 004c 0193     		str	r3, [sp, #4]
 290:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 2026              		.loc 1 290 3 is_stmt 1 view .LVU448
 290:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 2027              		.loc 1 290 35 is_stmt 0 view .LVU449
 2028 004e 8023     		movs	r3, #128
 2029 0050 9B00     		lsls	r3, r3, #2
 2030 0052 0293     		str	r3, [sp, #8]
 291:Src/main.c    **** 
 2031              		.loc 1 291 3 is_stmt 1 view .LVU450
 291:Src/main.c    **** 
 2032              		.loc 1 291 35 is_stmt 0 view .LVU451
 2033 0054 0694     		str	r4, [sp, #24]
 293:Src/main.c    ****   {
 2034              		.loc 1 293 3 is_stmt 1 view .LVU452
 293:Src/main.c    ****   {
 2035              		.loc 1 293 7 is_stmt 0 view .LVU453
 2036 0056 01A8     		add	r0, sp, #4
 2037 0058 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 2038              	.LVL172:
 297:Src/main.c    **** 
 2039              		.loc 1 297 1 view .LVU454
 2040 005c 18B0     		add	sp, sp, #96
 2041              		@ sp needed
 2042 005e 10BD     		pop	{r4, pc}
 2043              		.cfi_endproc
 2044              	.LFE55:
 2046              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 2047              		.align	1
ARM GAS  /tmp/cccixJrj.s 			page 60


 2048              		.global	HAL_GPIO_EXTI_Callback
 2049              		.syntax unified
 2050              		.code	16
 2051              		.thumb_func
 2052              		.fpu softvfp
 2054              	HAL_GPIO_EXTI_Callback:
 2055              	.LVL173:
 2056              	.LFB59:
 421:Src/main.c    **** 
 422:Src/main.c    **** /* USER CODE BEGIN 4 */
 423:Src/main.c    **** 
 424:Src/main.c    **** /**
 425:Src/main.c    **** * @brief Interrupt callback for GPIOs
 426:Src/main.c    **** */
 427:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 428:Src/main.c    **** {
 2057              		.loc 1 428 1 is_stmt 1 view -0
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 0
 2060              		@ frame_needed = 0, uses_anonymous_args = 0
 2061              		@ link register save eliminated.
 429:Src/main.c    ****     // Mode
 430:Src/main.c    ****     if ( GPIO_Pin == GPIO_PIN_8) {
 2062              		.loc 1 430 5 view .LVU456
 2063              		.loc 1 430 8 is_stmt 0 view .LVU457
 2064 0000 8023     		movs	r3, #128
 2065 0002 5B00     		lsls	r3, r3, #1
 2066 0004 9842     		cmp	r0, r3
 2067 0006 09D0     		beq	.L86
 431:Src/main.c    ****       stopFlag = 1;
 432:Src/main.c    ****     }
 433:Src/main.c    ****     // Minute  
 434:Src/main.c    ****     else if ( GPIO_Pin == GPIO_PIN_6) {
 2068              		.loc 1 434 10 is_stmt 1 view .LVU458
 2069              		.loc 1 434 13 is_stmt 0 view .LVU459
 2070 0008 4028     		cmp	r0, #64
 2071 000a 0BD0     		beq	.L87
 435:Src/main.c    ****       stopFlag = 1;
 436:Src/main.c    ****       minuteFlag = 1;
 437:Src/main.c    ****     }
 438:Src/main.c    ****     // Hour 
 439:Src/main.c    ****     else if ( GPIO_Pin == GPIO_PIN_5) {
 2072              		.loc 1 439 10 is_stmt 1 view .LVU460
 2073              		.loc 1 439 13 is_stmt 0 view .LVU461
 2074 000c 2028     		cmp	r0, #32
 2075 000e 08D1     		bne	.L82
 440:Src/main.c    ****       stopFlag = 1;
 2076              		.loc 1 440 7 is_stmt 1 view .LVU462
 2077              		.loc 1 440 16 is_stmt 0 view .LVU463
 2078 0010 0123     		movs	r3, #1
 2079 0012 074A     		ldr	r2, .L88
 2080 0014 1360     		str	r3, [r2]
 441:Src/main.c    ****       hourFlag = 1;
 2081              		.loc 1 441 7 is_stmt 1 view .LVU464
 2082              		.loc 1 441 16 is_stmt 0 view .LVU465
 2083 0016 074A     		ldr	r2, .L88+4
 2084 0018 1360     		str	r3, [r2]
ARM GAS  /tmp/cccixJrj.s 			page 61


 442:Src/main.c    ****     }
 443:Src/main.c    **** 
 444:Src/main.c    **** }
 2085              		.loc 1 444 1 view .LVU466
 2086 001a 02E0     		b	.L82
 2087              	.L86:
 431:Src/main.c    ****     }
 2088              		.loc 1 431 7 is_stmt 1 view .LVU467
 431:Src/main.c    ****     }
 2089              		.loc 1 431 16 is_stmt 0 view .LVU468
 2090 001c 044B     		ldr	r3, .L88
 2091 001e 0122     		movs	r2, #1
 2092 0020 1A60     		str	r2, [r3]
 2093              	.L82:
 2094              		.loc 1 444 1 view .LVU469
 2095              		@ sp needed
 2096 0022 7047     		bx	lr
 2097              	.L87:
 435:Src/main.c    ****       minuteFlag = 1;
 2098              		.loc 1 435 7 is_stmt 1 view .LVU470
 435:Src/main.c    ****       minuteFlag = 1;
 2099              		.loc 1 435 16 is_stmt 0 view .LVU471
 2100 0024 0123     		movs	r3, #1
 2101 0026 024A     		ldr	r2, .L88
 2102 0028 1360     		str	r3, [r2]
 436:Src/main.c    ****     }
 2103              		.loc 1 436 7 is_stmt 1 view .LVU472
 436:Src/main.c    ****     }
 2104              		.loc 1 436 18 is_stmt 0 view .LVU473
 2105 002a 034A     		ldr	r2, .L88+8
 2106 002c 1360     		str	r3, [r2]
 2107 002e F8E7     		b	.L82
 2108              	.L89:
 2109              		.align	2
 2110              	.L88:
 2111 0030 00000000 		.word	.LANCHOR0
 2112 0034 00000000 		.word	.LANCHOR2
 2113 0038 00000000 		.word	.LANCHOR1
 2114              		.cfi_endproc
 2115              	.LFE59:
 2117              		.section	.rodata.trySleep.str1.4,"aMS",%progbits,1
 2118              		.align	2
 2119              	.LC7:
 2120 0000 456E7465 		.ascii	"Entering sleep mode\000"
 2120      72696E67 
 2120      20736C65 
 2120      6570206D 
 2120      6F646500 
 2121              		.align	2
 2122              	.LC9:
 2123 0014 65786974 		.ascii	"exiting sleep mode\000"
 2123      696E6720 
 2123      736C6565 
 2123      70206D6F 
 2123      646500
 2124              		.section	.text.trySleep,"ax",%progbits
 2125              		.align	1
ARM GAS  /tmp/cccixJrj.s 			page 62


 2126              		.global	trySleep
 2127              		.syntax unified
 2128              		.code	16
 2129              		.thumb_func
 2130              		.fpu softvfp
 2132              	trySleep:
 2133              	.LFB60:
 445:Src/main.c    **** 
 446:Src/main.c    **** void trySleep( GPIO_InitTypeDef PinA, GPIO_InitTypeDef PinB, GPIO_InitTypeDef PinC, GPIO_InitTypeDe
 2134              		.loc 1 446 135 is_stmt 1 view -0
 2135              		.cfi_startproc
 2136              		@ args = 112, pretend = 16, frame = 88
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138 0000 84B0     		sub	sp, sp, #16
 2139              	.LCFI27:
 2140              		.cfi_def_cfa_offset 16
 2141 0002 30B5     		push	{r4, r5, lr}
 2142              	.LCFI28:
 2143              		.cfi_def_cfa_offset 28
 2144              		.cfi_offset 4, -28
 2145              		.cfi_offset 5, -24
 2146              		.cfi_offset 14, -20
 2147 0004 97B0     		sub	sp, sp, #92
 2148              	.LCFI29:
 2149              		.cfi_def_cfa_offset 120
 2150 0006 1A90     		str	r0, [sp, #104]
 2151 0008 1B91     		str	r1, [sp, #108]
 2152 000a 1C92     		str	r2, [sp, #112]
 2153 000c 1D93     		str	r3, [sp, #116]
 447:Src/main.c    ****    RTC_AlarmTypeDef AlarmSet;
 2154              		.loc 1 447 4 view .LVU475
 448:Src/main.c    ****    RTC_TimeTypeDef newTime;
 2155              		.loc 1 448 4 view .LVU476
 449:Src/main.c    ****    RTC_DateTypeDef currentDate;
 2156              		.loc 1 449 4 view .LVU477
 450:Src/main.c    ****    RTC_TimeTypeDef currentTime;
 2157              		.loc 1 450 4 view .LVU478
 451:Src/main.c    ****    memset(&newTime, 0, sizeof(newTime));
 2158              		.loc 1 451 4 view .LVU479
 2159 000e 07AC     		add	r4, sp, #28
 2160 0010 1422     		movs	r2, #20
 2161 0012 0021     		movs	r1, #0
 2162 0014 2000     		movs	r0, r4
 2163 0016 FFF7FEFF 		bl	memset
 2164              	.LVL174:
 452:Src/main.c    ****    memset(&currentTime, 0, sizeof(currentTime));
 2165              		.loc 1 452 4 view .LVU480
 2166 001a 1422     		movs	r2, #20
 2167 001c 0021     		movs	r1, #0
 2168 001e 01A8     		add	r0, sp, #4
 2169 0020 FFF7FEFF 		bl	memset
 2170              	.LVL175:
 453:Src/main.c    **** 
 454:Src/main.c    ****    HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 2171              		.loc 1 454 4 view .LVU481
 2172 0024 154D     		ldr	r5, .L91
 2173 0026 0022     		movs	r2, #0
ARM GAS  /tmp/cccixJrj.s 			page 63


 2174 0028 01A9     		add	r1, sp, #4
 2175 002a 2800     		movs	r0, r5
 2176 002c FFF7FEFF 		bl	HAL_RTC_GetTime
 2177              	.LVL176:
 455:Src/main.c    ****    // Weird. We dont care about the date but unless we touch the date the registers
 456:Src/main.c    ****    // for rtc time dont unlock...
 457:Src/main.c    ****    // You dont want to know how long I fought this
 458:Src/main.c    ****    HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 2178              		.loc 1 458 4 view .LVU482
 2179 0030 0022     		movs	r2, #0
 2180 0032 06A9     		add	r1, sp, #24
 2181 0034 2800     		movs	r0, r5
 2182 0036 FFF7FEFF 		bl	HAL_RTC_GetDate
 2183              	.LVL177:
 459:Src/main.c    **** 
 460:Src/main.c    ****    newTime.Minutes = currentTime.Minutes; 
 2184              		.loc 1 460 4 view .LVU483
 2185              		.loc 1 460 33 is_stmt 0 view .LVU484
 2186 003a 6B46     		mov	r3, sp
 2187 003c 5B79     		ldrb	r3, [r3, #5]
 2188              		.loc 1 460 20 view .LVU485
 2189 003e 6370     		strb	r3, [r4, #1]
 461:Src/main.c    ****    newTime.Seconds = (currentTime.Seconds +30); 
 2190              		.loc 1 461 4 is_stmt 1 view .LVU486
 2191              		.loc 1 461 34 is_stmt 0 view .LVU487
 2192 0040 6B46     		mov	r3, sp
 2193 0042 9B79     		ldrb	r3, [r3, #6]
 2194              		.loc 1 461 43 view .LVU488
 2195 0044 1E33     		adds	r3, r3, #30
 2196              		.loc 1 461 20 view .LVU489
 2197 0046 A370     		strb	r3, [r4, #2]
 462:Src/main.c    **** 
 463:Src/main.c    ****    AlarmSet.AlarmTime = newTime;
 2198              		.loc 1 463 4 is_stmt 1 view .LVU490
 2199              		.loc 1 463 23 is_stmt 0 view .LVU491
 2200 0048 0CA9     		add	r1, sp, #48
 2201 004a 0B00     		movs	r3, r1
 2202 004c 2200     		movs	r2, r4
 2203 004e 31CA     		ldmia	r2!, {r0, r4, r5}
 2204 0050 31C3     		stmia	r3!, {r0, r4, r5}
 2205 0052 11CA     		ldmia	r2!, {r0, r4}
 2206 0054 11C3     		stmia	r3!, {r0, r4}
 464:Src/main.c    **** 
 465:Src/main.c    **** //      HAL_RTC_SetTime(&hrtc, &newTime, RTC_FORMAT_BIN);
 466:Src/main.c    **** 
 467:Src/main.c    ****    
 468:Src/main.c    ****    HAL_RTC_SetAlarm_IT(&whatTime, &AlarmSet, RTC_FORMAT_BIN);
 2207              		.loc 1 468 4 is_stmt 1 view .LVU492
 2208 0056 0022     		movs	r2, #0
 2209 0058 2EA8     		add	r0, sp, #184
 2210 005a FFF7FEFF 		bl	HAL_RTC_SetAlarm_IT
 2211              	.LVL178:
 469:Src/main.c    ****    say("Entering sleep mode");
 2212              		.loc 1 469 4 view .LVU493
 2213 005e 0848     		ldr	r0, .L91+4
 2214 0060 FFF7FEFF 		bl	say
 2215              	.LVL179:
ARM GAS  /tmp/cccixJrj.s 			page 64


 470:Src/main.c    ****    // Standby Sets all pins to High Z, which does weird things with the charlieplexing
 471:Src/main.c    ****    //HAL_PWR_EnterSTANDBYMode();
 472:Src/main.c    ****    
 473:Src/main.c    ****    HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_SLEEPENTRY_WFI);
 2216              		.loc 1 473 4 view .LVU494
 2217 0064 0121     		movs	r1, #1
 2218 0066 0120     		movs	r0, #1
 2219 0068 FFF7FEFF 		bl	HAL_PWR_EnterSTOPMode
 2220              	.LVL180:
 474:Src/main.c    ****    say("exiting sleep mode");
 2221              		.loc 1 474 4 view .LVU495
 2222 006c 0548     		ldr	r0, .L91+8
 2223 006e FFF7FEFF 		bl	say
 2224              	.LVL181:
 475:Src/main.c    **** }
 2225              		.loc 1 475 1 is_stmt 0 view .LVU496
 2226 0072 17B0     		add	sp, sp, #92
 2227              		@ sp needed
 2228 0074 30BC     		pop	{r4, r5}
 2229 0076 08BC     		pop	{r3}
 2230 0078 04B0     		add	sp, sp, #16
 2231 007a 1847     		bx	r3
 2232              	.L92:
 2233              		.align	2
 2234              	.L91:
 2235 007c 00000000 		.word	hrtc
 2236 0080 00000000 		.word	.LC7
 2237 0084 14000000 		.word	.LC9
 2238              		.cfi_endproc
 2239              	.LFE60:
 2241              		.section	.text.StopOneSec,"ax",%progbits
 2242              		.align	1
 2243              		.global	StopOneSec
 2244              		.syntax unified
 2245              		.code	16
 2246              		.thumb_func
 2247              		.fpu softvfp
 2249              	StopOneSec:
 2250              	.LFB61:
 476:Src/main.c    **** 
 477:Src/main.c    **** void StopOneSec(){
 2251              		.loc 1 477 18 is_stmt 1 view -0
 2252              		.cfi_startproc
 2253              		@ args = 0, pretend = 0, frame = 88
 2254              		@ frame_needed = 0, uses_anonymous_args = 0
 2255 0000 70B5     		push	{r4, r5, r6, lr}
 2256              	.LCFI30:
 2257              		.cfi_def_cfa_offset 16
 2258              		.cfi_offset 4, -16
 2259              		.cfi_offset 5, -12
 2260              		.cfi_offset 6, -8
 2261              		.cfi_offset 14, -4
 2262 0002 96B0     		sub	sp, sp, #88
 2263              	.LCFI31:
 2264              		.cfi_def_cfa_offset 104
 478:Src/main.c    ****    RTC_AlarmTypeDef AlarmSet;
 2265              		.loc 1 478 4 view .LVU498
ARM GAS  /tmp/cccixJrj.s 			page 65


 479:Src/main.c    ****    RTC_TimeTypeDef newTime;
 2266              		.loc 1 479 4 view .LVU499
 480:Src/main.c    ****    RTC_DateTypeDef currentDate;
 2267              		.loc 1 480 4 view .LVU500
 481:Src/main.c    ****    RTC_TimeTypeDef currentTime;
 2268              		.loc 1 481 4 view .LVU501
 482:Src/main.c    ****    memset(&newTime, 0, sizeof(newTime));
 2269              		.loc 1 482 4 view .LVU502
 2270 0004 07AC     		add	r4, sp, #28
 2271 0006 1422     		movs	r2, #20
 2272 0008 0021     		movs	r1, #0
 2273 000a 2000     		movs	r0, r4
 2274 000c FFF7FEFF 		bl	memset
 2275              	.LVL182:
 483:Src/main.c    ****    memset(&currentTime, 0, sizeof(currentTime));
 2276              		.loc 1 483 4 view .LVU503
 2277 0010 1422     		movs	r2, #20
 2278 0012 0021     		movs	r1, #0
 2279 0014 01A8     		add	r0, sp, #4
 2280 0016 FFF7FEFF 		bl	memset
 2281              	.LVL183:
 484:Src/main.c    **** 
 485:Src/main.c    ****    HAL_RTC_GetTime(&hrtc, &currentTime, RTC_FORMAT_BIN);
 2282              		.loc 1 485 4 view .LVU504
 2283 001a 114D     		ldr	r5, .L94
 2284 001c 0022     		movs	r2, #0
 2285 001e 01A9     		add	r1, sp, #4
 2286 0020 2800     		movs	r0, r5
 2287 0022 FFF7FEFF 		bl	HAL_RTC_GetTime
 2288              	.LVL184:
 486:Src/main.c    ****    // Weird. We dont care about the date but unless we touch the date the registers
 487:Src/main.c    ****    // for rtc time dont unlock...
 488:Src/main.c    ****    // You dont want to know how long I fought this
 489:Src/main.c    ****    HAL_RTC_GetDate(&hrtc, &currentDate, RTC_FORMAT_BIN);
 2289              		.loc 1 489 4 view .LVU505
 2290 0026 0022     		movs	r2, #0
 2291 0028 06A9     		add	r1, sp, #24
 2292 002a 2800     		movs	r0, r5
 2293 002c FFF7FEFF 		bl	HAL_RTC_GetDate
 2294              	.LVL185:
 490:Src/main.c    **** 
 491:Src/main.c    ****    newTime.Minutes = currentTime.Minutes; 
 2295              		.loc 1 491 4 view .LVU506
 2296              		.loc 1 491 33 is_stmt 0 view .LVU507
 2297 0030 6B46     		mov	r3, sp
 2298 0032 5B79     		ldrb	r3, [r3, #5]
 2299              		.loc 1 491 20 view .LVU508
 2300 0034 6370     		strb	r3, [r4, #1]
 492:Src/main.c    ****    newTime.Seconds = (currentTime.Seconds +1); 
 2301              		.loc 1 492 4 is_stmt 1 view .LVU509
 2302              		.loc 1 492 34 is_stmt 0 view .LVU510
 2303 0036 6B46     		mov	r3, sp
 2304 0038 9B79     		ldrb	r3, [r3, #6]
 2305              		.loc 1 492 43 view .LVU511
 2306 003a 0133     		adds	r3, r3, #1
 2307              		.loc 1 492 20 view .LVU512
 2308 003c A370     		strb	r3, [r4, #2]
ARM GAS  /tmp/cccixJrj.s 			page 66


 493:Src/main.c    **** 
 494:Src/main.c    ****    AlarmSet.AlarmTime = newTime;
 2309              		.loc 1 494 4 is_stmt 1 view .LVU513
 2310              		.loc 1 494 23 is_stmt 0 view .LVU514
 2311 003e 0CA9     		add	r1, sp, #48
 2312 0040 0B00     		movs	r3, r1
 2313 0042 2200     		movs	r2, r4
 2314 0044 51CA     		ldmia	r2!, {r0, r4, r6}
 2315 0046 51C3     		stmia	r3!, {r0, r4, r6}
 2316 0048 11CA     		ldmia	r2!, {r0, r4}
 2317 004a 11C3     		stmia	r3!, {r0, r4}
 495:Src/main.c    ****    
 496:Src/main.c    ****    HAL_RTC_SetAlarm_IT(&hrtc, &AlarmSet, RTC_FORMAT_BIN);
 2318              		.loc 1 496 4 is_stmt 1 view .LVU515
 2319 004c 0022     		movs	r2, #0
 2320 004e 2800     		movs	r0, r5
 2321 0050 FFF7FEFF 		bl	HAL_RTC_SetAlarm_IT
 2322              	.LVL186:
 497:Src/main.c    **** 
 498:Src/main.c    ****    // Standby Sets all pins to High Z, which does weird things with the charlieplexing
 499:Src/main.c    ****    //HAL_PWR_EnterSTANDBYMode();
 500:Src/main.c    ****    
 501:Src/main.c    ****    HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_SLEEPENTRY_WFI);
 2323              		.loc 1 501 4 view .LVU516
 2324 0054 0121     		movs	r1, #1
 2325 0056 0120     		movs	r0, #1
 2326 0058 FFF7FEFF 		bl	HAL_PWR_EnterSTOPMode
 2327              	.LVL187:
 502:Src/main.c    **** }
 2328              		.loc 1 502 1 is_stmt 0 view .LVU517
 2329 005c 16B0     		add	sp, sp, #88
 2330              		@ sp needed
 2331 005e 70BD     		pop	{r4, r5, r6, pc}
 2332              	.L95:
 2333              		.align	2
 2334              	.L94:
 2335 0060 00000000 		.word	hrtc
 2336              		.cfi_endproc
 2337              	.LFE61:
 2339              		.section	.text.dance,"ax",%progbits
 2340              		.align	1
 2341              		.global	dance
 2342              		.syntax unified
 2343              		.code	16
 2344              		.thumb_func
 2345              		.fpu softvfp
 2347              	dance:
 2348              	.LVL188:
 2349              	.LFB45:
  80:Src/charlie.c ****    // Off
 2350              		.loc 2 80 114 is_stmt 1 view -0
 2351              		.cfi_startproc
 2352              		@ args = 84, pretend = 16, frame = 8
 2353              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Src/charlie.c ****    // Off
 2354              		.loc 2 80 114 is_stmt 0 view .LVU519
 2355 0000 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/cccixJrj.s 			page 67


 2356              	.LCFI32:
 2357              		.cfi_def_cfa_offset 16
 2358 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 2359              	.LCFI33:
 2360              		.cfi_def_cfa_offset 36
 2361              		.cfi_offset 4, -36
 2362              		.cfi_offset 5, -32
 2363              		.cfi_offset 6, -28
 2364              		.cfi_offset 7, -24
 2365              		.cfi_offset 14, -20
 2366 0004 DE46     		mov	lr, fp
 2367 0006 5746     		mov	r7, r10
 2368 0008 4E46     		mov	r6, r9
 2369 000a 4546     		mov	r5, r8
 2370 000c E0B5     		push	{r5, r6, r7, lr}
 2371              	.LCFI34:
 2372              		.cfi_def_cfa_offset 52
 2373              		.cfi_offset 8, -52
 2374              		.cfi_offset 9, -48
 2375              		.cfi_offset 10, -44
 2376              		.cfi_offset 11, -40
 2377 000e 95B0     		sub	sp, sp, #84
 2378              	.LCFI35:
 2379              		.cfi_def_cfa_offset 136
 2380 0010 1E90     		str	r0, [sp, #120]
 2381 0012 1F91     		str	r1, [sp, #124]
 2382 0014 2092     		str	r2, [sp, #128]
 2383 0016 2193     		str	r3, [sp, #132]
 2384 0018 329C     		ldr	r4, [sp, #200]
  82:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 2385              		.loc 2 82 4 is_stmt 1 view .LVU520
  82:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 2386              		.loc 2 82 6 is_stmt 0 view .LVU521
 2387 001a 002C     		cmp	r4, #0
 2388 001c 1AD0     		beq	.L132
 2389              	.L97:
  87:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 2390              		.loc 2 87 4 is_stmt 1 view .LVU522
  87:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 2391              		.loc 2 87 6 is_stmt 0 view .LVU523
 2392 001e 082C     		cmp	r4, #8
 2393 0020 3BD0     		beq	.L133
 2394              	.L98:
 143:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 2395              		.loc 2 143 4 is_stmt 1 view .LVU524
 143:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 2396              		.loc 2 143 6 is_stmt 0 view .LVU525
 2397 0022 012C     		cmp	r4, #1
 2398 0024 00D1     		bne	.LCB1961
 2399 0026 51E2     		b	.L134	@long jump
 2400              	.LCB1961:
 2401              	.L100:
 199:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 2402              		.loc 2 199 4 is_stmt 1 view .LVU526
 199:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 0);
 2403              		.loc 2 199 6 is_stmt 0 view .LVU527
 2404 0028 022C     		cmp	r4, #2
ARM GAS  /tmp/cccixJrj.s 			page 68


 2405 002a 01D1     		bne	.LCB1965
 2406 002c 00F088FC 		bl	.L135	@far jump
 2407              	.LCB1965:
 2408              	.L101:
 255:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 2409              		.loc 2 255 4 is_stmt 1 view .LVU528
 255:Src/charlie.c ****       charlie(PinA, PinB, PinC, PinD, 0);
 2410              		.loc 2 255 6 is_stmt 0 view .LVU529
 2411 0030 032C     		cmp	r4, #3
 2412 0032 01D1     		bne	.LCB1969
 2413 0034 00F0C6FE 		bl	.L136	@far jump
 2414              	.LCB1969:
 2415              	.L102:
 269:Src/charlie.c ****       for(int i =1; i<=7; i++){
 2416              		.loc 2 269 4 is_stmt 1 view .LVU530
 269:Src/charlie.c ****       for(int i =1; i<=7; i++){
 2417              		.loc 2 269 6 is_stmt 0 view .LVU531
 2418 0038 042C     		cmp	r4, #4
 2419 003a 01D1     		bne	.LCB1973
 2420 003c 01F029F9 		bl	.L137	@far jump
 2421              	.LCB1973:
 2422              	.LVL189:
 2423              	.L96:
 331:Src/charlie.c **** 
 2424              		.loc 2 331 1 view .LVU532
 2425 0040 15B0     		add	sp, sp, #84
 2426              		@ sp needed
 2427 0042 3CBC     		pop	{r2, r3, r4, r5}
 2428 0044 9046     		mov	r8, r2
 2429 0046 9946     		mov	r9, r3
 2430 0048 A246     		mov	r10, r4
 2431 004a AB46     		mov	fp, r5
 2432 004c F0BC     		pop	{r4, r5, r6, r7}
 2433 004e 08BC     		pop	{r3}
 2434 0050 04B0     		add	sp, sp, #16
 2435 0052 1847     		bx	r3
 2436              	.LVL190:
 2437              	.L132:
  83:Src/charlie.c ****    }
 2438              		.loc 2 83 8 is_stmt 1 view .LVU533
 2439 0054 0023     		movs	r3, #0
 2440 0056 1093     		str	r3, [sp, #64]
 2441 0058 2DA8     		add	r0, sp, #180
 2442 005a 0BA9     		add	r1, sp, #44
 2443 005c 0B00     		movs	r3, r1
 2444 005e 0200     		movs	r2, r0
 2445 0060 23CA     		ldmia	r2!, {r0, r1, r5}
 2446 0062 23C3     		stmia	r3!, {r0, r1, r5}
 2447 0064 03CA     		ldmia	r2!, {r0, r1}
 2448 0066 03C3     		stmia	r3!, {r0, r1}
 2449 0068 28A8     		add	r0, sp, #160
 2450 006a 06A9     		add	r1, sp, #24
 2451 006c 0B00     		movs	r3, r1
 2452 006e 0200     		movs	r2, r0
 2453 0070 23CA     		ldmia	r2!, {r0, r1, r5}
 2454 0072 23C3     		stmia	r3!, {r0, r1, r5}
 2455 0074 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/cccixJrj.s 			page 69


 2456 0076 03C3     		stmia	r3!, {r0, r1}
 2457 0078 23A8     		add	r0, sp, #140
 2458 007a 01A9     		add	r1, sp, #4
 2459 007c 0B00     		movs	r3, r1
 2460 007e 0200     		movs	r2, r0
 2461 0080 23CA     		ldmia	r2!, {r0, r1, r5}
 2462 0082 23C3     		stmia	r3!, {r0, r1, r5}
 2463 0084 03CA     		ldmia	r2!, {r0, r1}
 2464 0086 03C3     		stmia	r3!, {r0, r1}
 2465 0088 229B     		ldr	r3, [sp, #136]
 2466 008a 0093     		str	r3, [sp]
 2467 008c 1E98     		ldr	r0, [sp, #120]
 2468 008e 1F99     		ldr	r1, [sp, #124]
 2469 0090 209A     		ldr	r2, [sp, #128]
 2470 0092 219B     		ldr	r3, [sp, #132]
 2471 0094 FFF7FEFF 		bl	charlie
 2472              	.LVL191:
 2473 0098 C1E7     		b	.L97
 2474              	.L133:
  88:Src/charlie.c ****        if(stopFlag == 1)
 2475              		.loc 2 88 8 view .LVU534
 2476 009a 0023     		movs	r3, #0
 2477 009c 1093     		str	r3, [sp, #64]
 2478 009e 2DA8     		add	r0, sp, #180
 2479 00a0 0BA9     		add	r1, sp, #44
 2480 00a2 0B00     		movs	r3, r1
 2481 00a4 0200     		movs	r2, r0
 2482 00a6 23CA     		ldmia	r2!, {r0, r1, r5}
 2483 00a8 23C3     		stmia	r3!, {r0, r1, r5}
 2484 00aa 03CA     		ldmia	r2!, {r0, r1}
 2485 00ac 03C3     		stmia	r3!, {r0, r1}
 2486 00ae 28A8     		add	r0, sp, #160
 2487 00b0 06A9     		add	r1, sp, #24
 2488 00b2 0B00     		movs	r3, r1
 2489 00b4 0200     		movs	r2, r0
 2490 00b6 23CA     		ldmia	r2!, {r0, r1, r5}
 2491 00b8 23C3     		stmia	r3!, {r0, r1, r5}
 2492 00ba 03CA     		ldmia	r2!, {r0, r1}
 2493 00bc 03C3     		stmia	r3!, {r0, r1}
 2494 00be 23A8     		add	r0, sp, #140
 2495 00c0 01A9     		add	r1, sp, #4
 2496 00c2 0B00     		movs	r3, r1
 2497 00c4 0200     		movs	r2, r0
 2498 00c6 23CA     		ldmia	r2!, {r0, r1, r5}
 2499 00c8 23C3     		stmia	r3!, {r0, r1, r5}
 2500 00ca 03CA     		ldmia	r2!, {r0, r1}
 2501 00cc 03C3     		stmia	r3!, {r0, r1}
 2502 00ce 229B     		ldr	r3, [sp, #136]
 2503 00d0 0093     		str	r3, [sp]
 2504 00d2 1E98     		ldr	r0, [sp, #120]
 2505 00d4 1F99     		ldr	r1, [sp, #124]
 2506 00d6 209A     		ldr	r2, [sp, #128]
 2507 00d8 219B     		ldr	r3, [sp, #132]
 2508 00da FFF7FEFF 		bl	charlie
 2509              	.LVL192:
  89:Src/charlie.c ****          return;
 2510              		.loc 2 89 8 view .LVU535
ARM GAS  /tmp/cccixJrj.s 			page 70


  89:Src/charlie.c ****          return;
 2511              		.loc 2 89 20 is_stmt 0 view .LVU536
 2512 00de F74B     		ldr	r3, .L147
 2513 00e0 1B68     		ldr	r3, [r3]
  89:Src/charlie.c ****          return;
 2514              		.loc 2 89 10 view .LVU537
 2515 00e2 012B     		cmp	r3, #1
 2516 00e4 ACD0     		beq	.L96
  91:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 2517              		.loc 2 91 8 is_stmt 1 view .LVU538
 2518 00e6 FFF7FEFF 		bl	StopOneSec
 2519              	.LVL193:
  92:Src/charlie.c ****        if(stopFlag == 1)
 2520              		.loc 2 92 8 view .LVU539
 2521 00ea 0123     		movs	r3, #1
 2522 00ec 1093     		str	r3, [sp, #64]
 2523 00ee 2DA8     		add	r0, sp, #180
 2524 00f0 0BA9     		add	r1, sp, #44
 2525 00f2 0B00     		movs	r3, r1
 2526 00f4 0200     		movs	r2, r0
 2527 00f6 23CA     		ldmia	r2!, {r0, r1, r5}
 2528 00f8 23C3     		stmia	r3!, {r0, r1, r5}
 2529 00fa 03CA     		ldmia	r2!, {r0, r1}
 2530 00fc 03C3     		stmia	r3!, {r0, r1}
 2531 00fe 28A8     		add	r0, sp, #160
 2532 0100 06A9     		add	r1, sp, #24
 2533 0102 0B00     		movs	r3, r1
 2534 0104 0200     		movs	r2, r0
 2535 0106 23CA     		ldmia	r2!, {r0, r1, r5}
 2536 0108 23C3     		stmia	r3!, {r0, r1, r5}
 2537 010a 03CA     		ldmia	r2!, {r0, r1}
 2538 010c 03C3     		stmia	r3!, {r0, r1}
 2539 010e 23A8     		add	r0, sp, #140
 2540 0110 01A9     		add	r1, sp, #4
 2541 0112 0B00     		movs	r3, r1
 2542 0114 0200     		movs	r2, r0
 2543 0116 23CA     		ldmia	r2!, {r0, r1, r5}
 2544 0118 23C3     		stmia	r3!, {r0, r1, r5}
 2545 011a 03CA     		ldmia	r2!, {r0, r1}
 2546 011c 03C3     		stmia	r3!, {r0, r1}
 2547 011e 229B     		ldr	r3, [sp, #136]
 2548 0120 0093     		str	r3, [sp]
 2549 0122 1E98     		ldr	r0, [sp, #120]
 2550 0124 1F99     		ldr	r1, [sp, #124]
 2551 0126 209A     		ldr	r2, [sp, #128]
 2552 0128 219B     		ldr	r3, [sp, #132]
 2553 012a FFF7FEFF 		bl	charlie
 2554              	.LVL194:
  93:Src/charlie.c ****          return;
 2555              		.loc 2 93 8 view .LVU540
  93:Src/charlie.c ****          return;
 2556              		.loc 2 93 20 is_stmt 0 view .LVU541
 2557 012e E34B     		ldr	r3, .L147
 2558 0130 1B68     		ldr	r3, [r3]
  93:Src/charlie.c ****          return;
 2559              		.loc 2 93 10 view .LVU542
 2560 0132 012B     		cmp	r3, #1
ARM GAS  /tmp/cccixJrj.s 			page 71


 2561 0134 00D1     		bne	.LCB2113
 2562 0136 83E7     		b	.L96	@long jump
 2563              	.LCB2113:
  95:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 2564              		.loc 2 95 8 is_stmt 1 view .LVU543
 2565 0138 FFF7FEFF 		bl	StopOneSec
 2566              	.LVL195:
  96:Src/charlie.c ****        if(stopFlag == 1)
 2567              		.loc 2 96 8 view .LVU544
 2568 013c 0223     		movs	r3, #2
 2569 013e 1093     		str	r3, [sp, #64]
 2570 0140 2DA8     		add	r0, sp, #180
 2571 0142 0BA9     		add	r1, sp, #44
 2572 0144 0B00     		movs	r3, r1
 2573 0146 0200     		movs	r2, r0
 2574 0148 23CA     		ldmia	r2!, {r0, r1, r5}
 2575 014a 23C3     		stmia	r3!, {r0, r1, r5}
 2576 014c 03CA     		ldmia	r2!, {r0, r1}
 2577 014e 03C3     		stmia	r3!, {r0, r1}
 2578 0150 28A8     		add	r0, sp, #160
 2579 0152 06A9     		add	r1, sp, #24
 2580 0154 0B00     		movs	r3, r1
 2581 0156 0200     		movs	r2, r0
 2582 0158 23CA     		ldmia	r2!, {r0, r1, r5}
 2583 015a 23C3     		stmia	r3!, {r0, r1, r5}
 2584 015c 03CA     		ldmia	r2!, {r0, r1}
 2585 015e 03C3     		stmia	r3!, {r0, r1}
 2586 0160 23A8     		add	r0, sp, #140
 2587 0162 01A9     		add	r1, sp, #4
 2588 0164 0B00     		movs	r3, r1
 2589 0166 0200     		movs	r2, r0
 2590 0168 23CA     		ldmia	r2!, {r0, r1, r5}
 2591 016a 23C3     		stmia	r3!, {r0, r1, r5}
 2592 016c 03CA     		ldmia	r2!, {r0, r1}
 2593 016e 03C3     		stmia	r3!, {r0, r1}
 2594 0170 229B     		ldr	r3, [sp, #136]
 2595 0172 0093     		str	r3, [sp]
 2596 0174 1E98     		ldr	r0, [sp, #120]
 2597 0176 1F99     		ldr	r1, [sp, #124]
 2598 0178 209A     		ldr	r2, [sp, #128]
 2599 017a 219B     		ldr	r3, [sp, #132]
 2600 017c FFF7FEFF 		bl	charlie
 2601              	.LVL196:
  97:Src/charlie.c ****          return;
 2602              		.loc 2 97 8 view .LVU545
  97:Src/charlie.c ****          return;
 2603              		.loc 2 97 20 is_stmt 0 view .LVU546
 2604 0180 CE4B     		ldr	r3, .L147
 2605 0182 1B68     		ldr	r3, [r3]
  97:Src/charlie.c ****          return;
 2606              		.loc 2 97 10 view .LVU547
 2607 0184 012B     		cmp	r3, #1
 2608 0186 00D1     		bne	.LCB2155
 2609 0188 5AE7     		b	.L96	@long jump
 2610              	.LCB2155:
  99:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 2611              		.loc 2 99 8 is_stmt 1 view .LVU548
ARM GAS  /tmp/cccixJrj.s 			page 72


 2612 018a FFF7FEFF 		bl	StopOneSec
 2613              	.LVL197:
 100:Src/charlie.c ****        if(stopFlag == 1)
 2614              		.loc 2 100 8 view .LVU549
 2615 018e 0323     		movs	r3, #3
 2616 0190 1093     		str	r3, [sp, #64]
 2617 0192 2DA8     		add	r0, sp, #180
 2618 0194 0BA9     		add	r1, sp, #44
 2619 0196 0B00     		movs	r3, r1
 2620 0198 0200     		movs	r2, r0
 2621 019a 23CA     		ldmia	r2!, {r0, r1, r5}
 2622 019c 23C3     		stmia	r3!, {r0, r1, r5}
 2623 019e 03CA     		ldmia	r2!, {r0, r1}
 2624 01a0 03C3     		stmia	r3!, {r0, r1}
 2625 01a2 28A8     		add	r0, sp, #160
 2626 01a4 06A9     		add	r1, sp, #24
 2627 01a6 0B00     		movs	r3, r1
 2628 01a8 0200     		movs	r2, r0
 2629 01aa 23CA     		ldmia	r2!, {r0, r1, r5}
 2630 01ac 23C3     		stmia	r3!, {r0, r1, r5}
 2631 01ae 03CA     		ldmia	r2!, {r0, r1}
 2632 01b0 03C3     		stmia	r3!, {r0, r1}
 2633 01b2 23A8     		add	r0, sp, #140
 2634 01b4 01A9     		add	r1, sp, #4
 2635 01b6 0B00     		movs	r3, r1
 2636 01b8 0200     		movs	r2, r0
 2637 01ba 23CA     		ldmia	r2!, {r0, r1, r5}
 2638 01bc 23C3     		stmia	r3!, {r0, r1, r5}
 2639 01be 03CA     		ldmia	r2!, {r0, r1}
 2640 01c0 03C3     		stmia	r3!, {r0, r1}
 2641 01c2 229B     		ldr	r3, [sp, #136]
 2642 01c4 0093     		str	r3, [sp]
 2643 01c6 1E98     		ldr	r0, [sp, #120]
 2644 01c8 1F99     		ldr	r1, [sp, #124]
 2645 01ca 209A     		ldr	r2, [sp, #128]
 2646 01cc 219B     		ldr	r3, [sp, #132]
 2647 01ce FFF7FEFF 		bl	charlie
 2648              	.LVL198:
 101:Src/charlie.c ****          return;
 2649              		.loc 2 101 8 view .LVU550
 101:Src/charlie.c ****          return;
 2650              		.loc 2 101 20 is_stmt 0 view .LVU551
 2651 01d2 BA4B     		ldr	r3, .L147
 2652 01d4 1B68     		ldr	r3, [r3]
 101:Src/charlie.c ****          return;
 2653              		.loc 2 101 10 view .LVU552
 2654 01d6 012B     		cmp	r3, #1
 2655 01d8 00D1     		bne	.LCB2197
 2656 01da 31E7     		b	.L96	@long jump
 2657              	.LCB2197:
 103:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 2658              		.loc 2 103 8 is_stmt 1 view .LVU553
 2659 01dc FFF7FEFF 		bl	StopOneSec
 2660              	.LVL199:
 104:Src/charlie.c ****        if(stopFlag == 1)
 2661              		.loc 2 104 8 view .LVU554
 2662 01e0 0423     		movs	r3, #4
ARM GAS  /tmp/cccixJrj.s 			page 73


 2663 01e2 1093     		str	r3, [sp, #64]
 2664 01e4 2DA8     		add	r0, sp, #180
 2665 01e6 0BA9     		add	r1, sp, #44
 2666 01e8 0B00     		movs	r3, r1
 2667 01ea 0200     		movs	r2, r0
 2668 01ec 23CA     		ldmia	r2!, {r0, r1, r5}
 2669 01ee 23C3     		stmia	r3!, {r0, r1, r5}
 2670 01f0 03CA     		ldmia	r2!, {r0, r1}
 2671 01f2 03C3     		stmia	r3!, {r0, r1}
 2672 01f4 28A8     		add	r0, sp, #160
 2673 01f6 06A9     		add	r1, sp, #24
 2674 01f8 0B00     		movs	r3, r1
 2675 01fa 0200     		movs	r2, r0
 2676 01fc 23CA     		ldmia	r2!, {r0, r1, r5}
 2677 01fe 23C3     		stmia	r3!, {r0, r1, r5}
 2678 0200 03CA     		ldmia	r2!, {r0, r1}
 2679 0202 03C3     		stmia	r3!, {r0, r1}
 2680 0204 23A8     		add	r0, sp, #140
 2681 0206 01A9     		add	r1, sp, #4
 2682 0208 0B00     		movs	r3, r1
 2683 020a 0200     		movs	r2, r0
 2684 020c 23CA     		ldmia	r2!, {r0, r1, r5}
 2685 020e 23C3     		stmia	r3!, {r0, r1, r5}
 2686 0210 03CA     		ldmia	r2!, {r0, r1}
 2687 0212 03C3     		stmia	r3!, {r0, r1}
 2688 0214 229B     		ldr	r3, [sp, #136]
 2689 0216 0093     		str	r3, [sp]
 2690 0218 1E98     		ldr	r0, [sp, #120]
 2691 021a 1F99     		ldr	r1, [sp, #124]
 2692 021c 209A     		ldr	r2, [sp, #128]
 2693 021e 219B     		ldr	r3, [sp, #132]
 2694 0220 FFF7FEFF 		bl	charlie
 2695              	.LVL200:
 105:Src/charlie.c ****          return;
 2696              		.loc 2 105 8 view .LVU555
 105:Src/charlie.c ****          return;
 2697              		.loc 2 105 20 is_stmt 0 view .LVU556
 2698 0224 A54B     		ldr	r3, .L147
 2699 0226 1B68     		ldr	r3, [r3]
 105:Src/charlie.c ****          return;
 2700              		.loc 2 105 10 view .LVU557
 2701 0228 012B     		cmp	r3, #1
 2702 022a 00D1     		bne	.LCB2239
 2703 022c 08E7     		b	.L96	@long jump
 2704              	.LCB2239:
 107:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 2705              		.loc 2 107 8 is_stmt 1 view .LVU558
 2706 022e FFF7FEFF 		bl	StopOneSec
 2707              	.LVL201:
 108:Src/charlie.c ****        if(stopFlag == 1)
 2708              		.loc 2 108 8 view .LVU559
 2709 0232 0523     		movs	r3, #5
 2710 0234 1093     		str	r3, [sp, #64]
 2711 0236 2DA8     		add	r0, sp, #180
 2712 0238 0BA9     		add	r1, sp, #44
 2713 023a 0B00     		movs	r3, r1
 2714 023c 0200     		movs	r2, r0
ARM GAS  /tmp/cccixJrj.s 			page 74


 2715 023e 23CA     		ldmia	r2!, {r0, r1, r5}
 2716 0240 23C3     		stmia	r3!, {r0, r1, r5}
 2717 0242 03CA     		ldmia	r2!, {r0, r1}
 2718 0244 03C3     		stmia	r3!, {r0, r1}
 2719 0246 28A8     		add	r0, sp, #160
 2720 0248 06A9     		add	r1, sp, #24
 2721 024a 0B00     		movs	r3, r1
 2722 024c 0200     		movs	r2, r0
 2723 024e 23CA     		ldmia	r2!, {r0, r1, r5}
 2724 0250 23C3     		stmia	r3!, {r0, r1, r5}
 2725 0252 03CA     		ldmia	r2!, {r0, r1}
 2726 0254 03C3     		stmia	r3!, {r0, r1}
 2727 0256 23A8     		add	r0, sp, #140
 2728 0258 01A9     		add	r1, sp, #4
 2729 025a 0B00     		movs	r3, r1
 2730 025c 0200     		movs	r2, r0
 2731 025e 23CA     		ldmia	r2!, {r0, r1, r5}
 2732 0260 23C3     		stmia	r3!, {r0, r1, r5}
 2733 0262 03CA     		ldmia	r2!, {r0, r1}
 2734 0264 03C3     		stmia	r3!, {r0, r1}
 2735 0266 229B     		ldr	r3, [sp, #136]
 2736 0268 0093     		str	r3, [sp]
 2737 026a 1E98     		ldr	r0, [sp, #120]
 2738 026c 1F99     		ldr	r1, [sp, #124]
 2739 026e 209A     		ldr	r2, [sp, #128]
 2740 0270 219B     		ldr	r3, [sp, #132]
 2741 0272 FFF7FEFF 		bl	charlie
 2742              	.LVL202:
 109:Src/charlie.c ****          return;
 2743              		.loc 2 109 8 view .LVU560
 109:Src/charlie.c ****          return;
 2744              		.loc 2 109 20 is_stmt 0 view .LVU561
 2745 0276 914B     		ldr	r3, .L147
 2746 0278 1B68     		ldr	r3, [r3]
 109:Src/charlie.c ****          return;
 2747              		.loc 2 109 10 view .LVU562
 2748 027a 012B     		cmp	r3, #1
 2749 027c 00D1     		bne	.LCB2281
 2750 027e DFE6     		b	.L96	@long jump
 2751              	.LCB2281:
 111:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 2752              		.loc 2 111 8 is_stmt 1 view .LVU563
 2753 0280 FFF7FEFF 		bl	StopOneSec
 2754              	.LVL203:
 112:Src/charlie.c ****        if(stopFlag == 1)
 2755              		.loc 2 112 8 view .LVU564
 2756 0284 0623     		movs	r3, #6
 2757 0286 1093     		str	r3, [sp, #64]
 2758 0288 2DA8     		add	r0, sp, #180
 2759 028a 0BA9     		add	r1, sp, #44
 2760 028c 0B00     		movs	r3, r1
 2761 028e 0200     		movs	r2, r0
 2762 0290 23CA     		ldmia	r2!, {r0, r1, r5}
 2763 0292 23C3     		stmia	r3!, {r0, r1, r5}
 2764 0294 03CA     		ldmia	r2!, {r0, r1}
 2765 0296 03C3     		stmia	r3!, {r0, r1}
 2766 0298 28A8     		add	r0, sp, #160
ARM GAS  /tmp/cccixJrj.s 			page 75


 2767 029a 06A9     		add	r1, sp, #24
 2768 029c 0B00     		movs	r3, r1
 2769 029e 0200     		movs	r2, r0
 2770 02a0 23CA     		ldmia	r2!, {r0, r1, r5}
 2771 02a2 23C3     		stmia	r3!, {r0, r1, r5}
 2772 02a4 03CA     		ldmia	r2!, {r0, r1}
 2773 02a6 03C3     		stmia	r3!, {r0, r1}
 2774 02a8 23A8     		add	r0, sp, #140
 2775 02aa 01A9     		add	r1, sp, #4
 2776 02ac 0B00     		movs	r3, r1
 2777 02ae 0200     		movs	r2, r0
 2778 02b0 23CA     		ldmia	r2!, {r0, r1, r5}
 2779 02b2 23C3     		stmia	r3!, {r0, r1, r5}
 2780 02b4 03CA     		ldmia	r2!, {r0, r1}
 2781 02b6 03C3     		stmia	r3!, {r0, r1}
 2782 02b8 229B     		ldr	r3, [sp, #136]
 2783 02ba 0093     		str	r3, [sp]
 2784 02bc 1E98     		ldr	r0, [sp, #120]
 2785 02be 1F99     		ldr	r1, [sp, #124]
 2786 02c0 209A     		ldr	r2, [sp, #128]
 2787 02c2 219B     		ldr	r3, [sp, #132]
 2788 02c4 FFF7FEFF 		bl	charlie
 2789              	.LVL204:
 113:Src/charlie.c ****          return;
 2790              		.loc 2 113 8 view .LVU565
 113:Src/charlie.c ****          return;
 2791              		.loc 2 113 20 is_stmt 0 view .LVU566
 2792 02c8 7C4B     		ldr	r3, .L147
 2793 02ca 1B68     		ldr	r3, [r3]
 113:Src/charlie.c ****          return;
 2794              		.loc 2 113 10 view .LVU567
 2795 02cc 012B     		cmp	r3, #1
 2796 02ce 00D1     		bne	.LCB2323
 2797 02d0 B6E6     		b	.L96	@long jump
 2798              	.LCB2323:
 115:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 2799              		.loc 2 115 8 is_stmt 1 view .LVU568
 2800 02d2 FFF7FEFF 		bl	StopOneSec
 2801              	.LVL205:
 116:Src/charlie.c ****        if(stopFlag == 1)
 2802              		.loc 2 116 8 view .LVU569
 2803 02d6 0723     		movs	r3, #7
 2804 02d8 1093     		str	r3, [sp, #64]
 2805 02da 2DA8     		add	r0, sp, #180
 2806 02dc 0BA9     		add	r1, sp, #44
 2807 02de 0B00     		movs	r3, r1
 2808 02e0 0200     		movs	r2, r0
 2809 02e2 23CA     		ldmia	r2!, {r0, r1, r5}
 2810 02e4 23C3     		stmia	r3!, {r0, r1, r5}
 2811 02e6 03CA     		ldmia	r2!, {r0, r1}
 2812 02e8 03C3     		stmia	r3!, {r0, r1}
 2813 02ea 28A8     		add	r0, sp, #160
 2814 02ec 06A9     		add	r1, sp, #24
 2815 02ee 0B00     		movs	r3, r1
 2816 02f0 0200     		movs	r2, r0
 2817 02f2 23CA     		ldmia	r2!, {r0, r1, r5}
 2818 02f4 23C3     		stmia	r3!, {r0, r1, r5}
ARM GAS  /tmp/cccixJrj.s 			page 76


 2819 02f6 03CA     		ldmia	r2!, {r0, r1}
 2820 02f8 03C3     		stmia	r3!, {r0, r1}
 2821 02fa 23A8     		add	r0, sp, #140
 2822 02fc 01A9     		add	r1, sp, #4
 2823 02fe 0B00     		movs	r3, r1
 2824 0300 0200     		movs	r2, r0
 2825 0302 23CA     		ldmia	r2!, {r0, r1, r5}
 2826 0304 23C3     		stmia	r3!, {r0, r1, r5}
 2827 0306 03CA     		ldmia	r2!, {r0, r1}
 2828 0308 03C3     		stmia	r3!, {r0, r1}
 2829 030a 229B     		ldr	r3, [sp, #136]
 2830 030c 0093     		str	r3, [sp]
 2831 030e 1E98     		ldr	r0, [sp, #120]
 2832 0310 1F99     		ldr	r1, [sp, #124]
 2833 0312 209A     		ldr	r2, [sp, #128]
 2834 0314 219B     		ldr	r3, [sp, #132]
 2835 0316 FFF7FEFF 		bl	charlie
 2836              	.LVL206:
 117:Src/charlie.c ****          return;
 2837              		.loc 2 117 8 view .LVU570
 117:Src/charlie.c ****          return;
 2838              		.loc 2 117 20 is_stmt 0 view .LVU571
 2839 031a 684B     		ldr	r3, .L147
 2840 031c 1B68     		ldr	r3, [r3]
 117:Src/charlie.c ****          return;
 2841              		.loc 2 117 10 view .LVU572
 2842 031e 012B     		cmp	r3, #1
 2843 0320 00D1     		bne	.LCB2365
 2844 0322 8DE6     		b	.L96	@long jump
 2845              	.LCB2365:
 119:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 2846              		.loc 2 119 8 is_stmt 1 view .LVU573
 2847 0324 FFF7FEFF 		bl	StopOneSec
 2848              	.LVL207:
 120:Src/charlie.c ****        if(stopFlag == 1)
 2849              		.loc 2 120 8 view .LVU574
 2850 0328 0823     		movs	r3, #8
 2851 032a 1093     		str	r3, [sp, #64]
 2852 032c 2DA8     		add	r0, sp, #180
 2853 032e 0BA9     		add	r1, sp, #44
 2854 0330 0B00     		movs	r3, r1
 2855 0332 0200     		movs	r2, r0
 2856 0334 23CA     		ldmia	r2!, {r0, r1, r5}
 2857 0336 23C3     		stmia	r3!, {r0, r1, r5}
 2858 0338 03CA     		ldmia	r2!, {r0, r1}
 2859 033a 03C3     		stmia	r3!, {r0, r1}
 2860 033c 28A8     		add	r0, sp, #160
 2861 033e 06A9     		add	r1, sp, #24
 2862 0340 0B00     		movs	r3, r1
 2863 0342 0200     		movs	r2, r0
 2864 0344 23CA     		ldmia	r2!, {r0, r1, r5}
 2865 0346 23C3     		stmia	r3!, {r0, r1, r5}
 2866 0348 03CA     		ldmia	r2!, {r0, r1}
 2867 034a 03C3     		stmia	r3!, {r0, r1}
 2868 034c 23A8     		add	r0, sp, #140
 2869 034e 01A9     		add	r1, sp, #4
 2870 0350 0B00     		movs	r3, r1
ARM GAS  /tmp/cccixJrj.s 			page 77


 2871 0352 0200     		movs	r2, r0
 2872 0354 23CA     		ldmia	r2!, {r0, r1, r5}
 2873 0356 23C3     		stmia	r3!, {r0, r1, r5}
 2874 0358 03CA     		ldmia	r2!, {r0, r1}
 2875 035a 03C3     		stmia	r3!, {r0, r1}
 2876 035c 229B     		ldr	r3, [sp, #136]
 2877 035e 0093     		str	r3, [sp]
 2878 0360 1E98     		ldr	r0, [sp, #120]
 2879 0362 1F99     		ldr	r1, [sp, #124]
 2880 0364 209A     		ldr	r2, [sp, #128]
 2881 0366 219B     		ldr	r3, [sp, #132]
 2882 0368 FFF7FEFF 		bl	charlie
 2883              	.LVL208:
 121:Src/charlie.c ****          return;
 2884              		.loc 2 121 8 view .LVU575
 121:Src/charlie.c ****          return;
 2885              		.loc 2 121 20 is_stmt 0 view .LVU576
 2886 036c 534B     		ldr	r3, .L147
 2887 036e 1B68     		ldr	r3, [r3]
 121:Src/charlie.c ****          return;
 2888              		.loc 2 121 10 view .LVU577
 2889 0370 012B     		cmp	r3, #1
 2890 0372 00D1     		bne	.LCB2407
 2891 0374 64E6     		b	.L96	@long jump
 2892              	.LCB2407:
 123:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 2893              		.loc 2 123 8 is_stmt 1 view .LVU578
 2894 0376 FFF7FEFF 		bl	StopOneSec
 2895              	.LVL209:
 124:Src/charlie.c ****        if(stopFlag == 1)
 2896              		.loc 2 124 8 view .LVU579
 2897 037a 0923     		movs	r3, #9
 2898 037c 1093     		str	r3, [sp, #64]
 2899 037e 2DA8     		add	r0, sp, #180
 2900 0380 0BA9     		add	r1, sp, #44
 2901 0382 0B00     		movs	r3, r1
 2902 0384 0200     		movs	r2, r0
 2903 0386 23CA     		ldmia	r2!, {r0, r1, r5}
 2904 0388 23C3     		stmia	r3!, {r0, r1, r5}
 2905 038a 03CA     		ldmia	r2!, {r0, r1}
 2906 038c 03C3     		stmia	r3!, {r0, r1}
 2907 038e 28A8     		add	r0, sp, #160
 2908 0390 06A9     		add	r1, sp, #24
 2909 0392 0B00     		movs	r3, r1
 2910 0394 0200     		movs	r2, r0
 2911 0396 23CA     		ldmia	r2!, {r0, r1, r5}
 2912 0398 23C3     		stmia	r3!, {r0, r1, r5}
 2913 039a 03CA     		ldmia	r2!, {r0, r1}
 2914 039c 03C3     		stmia	r3!, {r0, r1}
 2915 039e 23A8     		add	r0, sp, #140
 2916 03a0 01A9     		add	r1, sp, #4
 2917 03a2 0B00     		movs	r3, r1
 2918 03a4 0200     		movs	r2, r0
 2919 03a6 23CA     		ldmia	r2!, {r0, r1, r5}
 2920 03a8 23C3     		stmia	r3!, {r0, r1, r5}
 2921 03aa 03CA     		ldmia	r2!, {r0, r1}
 2922 03ac 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/cccixJrj.s 			page 78


 2923 03ae 229B     		ldr	r3, [sp, #136]
 2924 03b0 0093     		str	r3, [sp]
 2925 03b2 1E98     		ldr	r0, [sp, #120]
 2926 03b4 1F99     		ldr	r1, [sp, #124]
 2927 03b6 209A     		ldr	r2, [sp, #128]
 2928 03b8 219B     		ldr	r3, [sp, #132]
 2929 03ba FFF7FEFF 		bl	charlie
 2930              	.LVL210:
 125:Src/charlie.c ****          return;
 2931              		.loc 2 125 8 view .LVU580
 125:Src/charlie.c ****          return;
 2932              		.loc 2 125 20 is_stmt 0 view .LVU581
 2933 03be 3F4B     		ldr	r3, .L147
 2934 03c0 1B68     		ldr	r3, [r3]
 125:Src/charlie.c ****          return;
 2935              		.loc 2 125 10 view .LVU582
 2936 03c2 012B     		cmp	r3, #1
 2937 03c4 00D1     		bne	.LCB2449
 2938 03c6 3BE6     		b	.L96	@long jump
 2939              	.LCB2449:
 127:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 2940              		.loc 2 127 8 is_stmt 1 view .LVU583
 2941 03c8 FFF7FEFF 		bl	StopOneSec
 2942              	.LVL211:
 128:Src/charlie.c ****        if(stopFlag == 1)
 2943              		.loc 2 128 8 view .LVU584
 2944 03cc 0A23     		movs	r3, #10
 2945 03ce 1093     		str	r3, [sp, #64]
 2946 03d0 2DA8     		add	r0, sp, #180
 2947 03d2 0BA9     		add	r1, sp, #44
 2948 03d4 0B00     		movs	r3, r1
 2949 03d6 0200     		movs	r2, r0
 2950 03d8 23CA     		ldmia	r2!, {r0, r1, r5}
 2951 03da 23C3     		stmia	r3!, {r0, r1, r5}
 2952 03dc 03CA     		ldmia	r2!, {r0, r1}
 2953 03de 03C3     		stmia	r3!, {r0, r1}
 2954 03e0 28A8     		add	r0, sp, #160
 2955 03e2 06A9     		add	r1, sp, #24
 2956 03e4 0B00     		movs	r3, r1
 2957 03e6 0200     		movs	r2, r0
 2958 03e8 23CA     		ldmia	r2!, {r0, r1, r5}
 2959 03ea 23C3     		stmia	r3!, {r0, r1, r5}
 2960 03ec 03CA     		ldmia	r2!, {r0, r1}
 2961 03ee 03C3     		stmia	r3!, {r0, r1}
 2962 03f0 23A8     		add	r0, sp, #140
 2963 03f2 01A9     		add	r1, sp, #4
 2964 03f4 0B00     		movs	r3, r1
 2965 03f6 0200     		movs	r2, r0
 2966 03f8 23CA     		ldmia	r2!, {r0, r1, r5}
 2967 03fa 23C3     		stmia	r3!, {r0, r1, r5}
 2968 03fc 03CA     		ldmia	r2!, {r0, r1}
 2969 03fe 03C3     		stmia	r3!, {r0, r1}
 2970 0400 229B     		ldr	r3, [sp, #136]
 2971 0402 0093     		str	r3, [sp]
 2972 0404 1E98     		ldr	r0, [sp, #120]
 2973 0406 1F99     		ldr	r1, [sp, #124]
 2974 0408 209A     		ldr	r2, [sp, #128]
ARM GAS  /tmp/cccixJrj.s 			page 79


 2975 040a 219B     		ldr	r3, [sp, #132]
 2976 040c FFF7FEFF 		bl	charlie
 2977              	.LVL212:
 129:Src/charlie.c ****          return;
 2978              		.loc 2 129 8 view .LVU585
 129:Src/charlie.c ****          return;
 2979              		.loc 2 129 20 is_stmt 0 view .LVU586
 2980 0410 2A4B     		ldr	r3, .L147
 2981 0412 1B68     		ldr	r3, [r3]
 129:Src/charlie.c ****          return;
 2982              		.loc 2 129 10 view .LVU587
 2983 0414 012B     		cmp	r3, #1
 2984 0416 00D1     		bne	.LCB2491
 2985 0418 12E6     		b	.L96	@long jump
 2986              	.LCB2491:
 131:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 2987              		.loc 2 131 8 is_stmt 1 view .LVU588
 2988 041a FFF7FEFF 		bl	StopOneSec
 2989              	.LVL213:
 132:Src/charlie.c ****        if(stopFlag == 1)
 2990              		.loc 2 132 8 view .LVU589
 2991 041e 0B23     		movs	r3, #11
 2992 0420 1093     		str	r3, [sp, #64]
 2993 0422 2DA8     		add	r0, sp, #180
 2994 0424 0BA9     		add	r1, sp, #44
 2995 0426 0B00     		movs	r3, r1
 2996 0428 0200     		movs	r2, r0
 2997 042a 23CA     		ldmia	r2!, {r0, r1, r5}
 2998 042c 23C3     		stmia	r3!, {r0, r1, r5}
 2999 042e 03CA     		ldmia	r2!, {r0, r1}
 3000 0430 03C3     		stmia	r3!, {r0, r1}
 3001 0432 28A8     		add	r0, sp, #160
 3002 0434 06A9     		add	r1, sp, #24
 3003 0436 0B00     		movs	r3, r1
 3004 0438 0200     		movs	r2, r0
 3005 043a 23CA     		ldmia	r2!, {r0, r1, r5}
 3006 043c 23C3     		stmia	r3!, {r0, r1, r5}
 3007 043e 03CA     		ldmia	r2!, {r0, r1}
 3008 0440 03C3     		stmia	r3!, {r0, r1}
 3009 0442 23A8     		add	r0, sp, #140
 3010 0444 01A9     		add	r1, sp, #4
 3011 0446 0B00     		movs	r3, r1
 3012 0448 0200     		movs	r2, r0
 3013 044a 23CA     		ldmia	r2!, {r0, r1, r5}
 3014 044c 23C3     		stmia	r3!, {r0, r1, r5}
 3015 044e 03CA     		ldmia	r2!, {r0, r1}
 3016 0450 03C3     		stmia	r3!, {r0, r1}
 3017 0452 229B     		ldr	r3, [sp, #136]
 3018 0454 0093     		str	r3, [sp]
 3019 0456 1E98     		ldr	r0, [sp, #120]
 3020 0458 1F99     		ldr	r1, [sp, #124]
 3021 045a 209A     		ldr	r2, [sp, #128]
 3022 045c 219B     		ldr	r3, [sp, #132]
 3023 045e FFF7FEFF 		bl	charlie
 3024              	.LVL214:
 133:Src/charlie.c ****          return;
 3025              		.loc 2 133 8 view .LVU590
ARM GAS  /tmp/cccixJrj.s 			page 80


 133:Src/charlie.c ****          return;
 3026              		.loc 2 133 20 is_stmt 0 view .LVU591
 3027 0462 164B     		ldr	r3, .L147
 3028 0464 1B68     		ldr	r3, [r3]
 133:Src/charlie.c ****          return;
 3029              		.loc 2 133 10 view .LVU592
 3030 0466 012B     		cmp	r3, #1
 3031 0468 00D1     		bne	.LCB2533
 3032 046a E9E5     		b	.L96	@long jump
 3033              	.LCB2533:
 135:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 3034              		.loc 2 135 8 is_stmt 1 view .LVU593
 3035 046c FFF7FEFF 		bl	StopOneSec
 3036              	.LVL215:
 136:Src/charlie.c ****        if(stopFlag == 1)
 3037              		.loc 2 136 8 view .LVU594
 3038 0470 0C23     		movs	r3, #12
 3039 0472 1093     		str	r3, [sp, #64]
 3040 0474 2DA8     		add	r0, sp, #180
 3041 0476 0BA9     		add	r1, sp, #44
 3042 0478 0B00     		movs	r3, r1
 3043 047a 0200     		movs	r2, r0
 3044 047c 23CA     		ldmia	r2!, {r0, r1, r5}
 3045 047e 23C3     		stmia	r3!, {r0, r1, r5}
 3046 0480 03CA     		ldmia	r2!, {r0, r1}
 3047 0482 03C3     		stmia	r3!, {r0, r1}
 3048 0484 28A8     		add	r0, sp, #160
 3049 0486 06A9     		add	r1, sp, #24
 3050 0488 0B00     		movs	r3, r1
 3051 048a 0200     		movs	r2, r0
 3052 048c 23CA     		ldmia	r2!, {r0, r1, r5}
 3053 048e 23C3     		stmia	r3!, {r0, r1, r5}
 3054 0490 03CA     		ldmia	r2!, {r0, r1}
 3055 0492 03C3     		stmia	r3!, {r0, r1}
 3056 0494 23A8     		add	r0, sp, #140
 3057 0496 01A9     		add	r1, sp, #4
 3058 0498 0B00     		movs	r3, r1
 3059 049a 0200     		movs	r2, r0
 3060 049c 23CA     		ldmia	r2!, {r0, r1, r5}
 3061 049e 23C3     		stmia	r3!, {r0, r1, r5}
 3062 04a0 03CA     		ldmia	r2!, {r0, r1}
 3063 04a2 03C3     		stmia	r3!, {r0, r1}
 3064 04a4 229B     		ldr	r3, [sp, #136]
 3065 04a6 0093     		str	r3, [sp]
 3066 04a8 1E98     		ldr	r0, [sp, #120]
 3067 04aa 1F99     		ldr	r1, [sp, #124]
 3068 04ac 209A     		ldr	r2, [sp, #128]
 3069 04ae 219B     		ldr	r3, [sp, #132]
 3070 04b0 FFF7FEFF 		bl	charlie
 3071              	.LVL216:
 137:Src/charlie.c ****          return;
 3072              		.loc 2 137 8 view .LVU595
 137:Src/charlie.c ****          return;
 3073              		.loc 2 137 20 is_stmt 0 view .LVU596
 3074 04b4 014B     		ldr	r3, .L147
 3075 04b6 1B68     		ldr	r3, [r3]
 3076 04b8 02E0     		b	.L148
ARM GAS  /tmp/cccixJrj.s 			page 81


 3077              	.L149:
 3078 04ba C046     		.align	2
 3079              	.L147:
 3080 04bc 00000000 		.word	.LANCHOR0
 3081              	.L148:
 137:Src/charlie.c ****          return;
 3082              		.loc 2 137 10 view .LVU597
 3083 04c0 012B     		cmp	r3, #1
 3084 04c2 00D1     		bne	.LCB2584
 3085 04c4 BCE5     		b	.L96	@long jump
 3086              	.LCB2584:
 139:Src/charlie.c ****    }
 3087              		.loc 2 139 8 is_stmt 1 view .LVU598
 3088 04c6 FFF7FEFF 		bl	StopOneSec
 3089              	.LVL217:
 3090 04ca AAE5     		b	.L98
 3091              	.L134:
 144:Src/charlie.c ****        if(stopFlag == 1)
 3092              		.loc 2 144 8 view .LVU599
 3093 04cc 0023     		movs	r3, #0
 3094 04ce 1093     		str	r3, [sp, #64]
 3095 04d0 2DA8     		add	r0, sp, #180
 3096 04d2 0BA9     		add	r1, sp, #44
 3097 04d4 0B00     		movs	r3, r1
 3098 04d6 0200     		movs	r2, r0
 3099 04d8 23CA     		ldmia	r2!, {r0, r1, r5}
 3100 04da 23C3     		stmia	r3!, {r0, r1, r5}
 3101 04dc 03CA     		ldmia	r2!, {r0, r1}
 3102 04de 03C3     		stmia	r3!, {r0, r1}
 3103 04e0 28A8     		add	r0, sp, #160
 3104 04e2 06A9     		add	r1, sp, #24
 3105 04e4 0B00     		movs	r3, r1
 3106 04e6 0200     		movs	r2, r0
 3107 04e8 23CA     		ldmia	r2!, {r0, r1, r5}
 3108 04ea 23C3     		stmia	r3!, {r0, r1, r5}
 3109 04ec 03CA     		ldmia	r2!, {r0, r1}
 3110 04ee 03C3     		stmia	r3!, {r0, r1}
 3111 04f0 23A8     		add	r0, sp, #140
 3112 04f2 01A9     		add	r1, sp, #4
 3113 04f4 0B00     		movs	r3, r1
 3114 04f6 0200     		movs	r2, r0
 3115 04f8 23CA     		ldmia	r2!, {r0, r1, r5}
 3116 04fa 23C3     		stmia	r3!, {r0, r1, r5}
 3117 04fc 03CA     		ldmia	r2!, {r0, r1}
 3118 04fe 03C3     		stmia	r3!, {r0, r1}
 3119 0500 229B     		ldr	r3, [sp, #136]
 3120 0502 0093     		str	r3, [sp]
 3121 0504 1E98     		ldr	r0, [sp, #120]
 3122 0506 1F99     		ldr	r1, [sp, #124]
 3123 0508 209A     		ldr	r2, [sp, #128]
 3124 050a 219B     		ldr	r3, [sp, #132]
 3125 050c FFF7FEFF 		bl	charlie
 3126              	.LVL218:
 145:Src/charlie.c ****          return;
 3127              		.loc 2 145 8 view .LVU600
 145:Src/charlie.c ****          return;
 3128              		.loc 2 145 20 is_stmt 0 view .LVU601
ARM GAS  /tmp/cccixJrj.s 			page 82


 3129 0510 F04B     		ldr	r3, .L150
 3130 0512 1B68     		ldr	r3, [r3]
 145:Src/charlie.c ****          return;
 3131              		.loc 2 145 10 view .LVU602
 3132 0514 012B     		cmp	r3, #1
 3133 0516 00D1     		bne	.LCB2630
 3134 0518 92E5     		b	.L96	@long jump
 3135              	.LCB2630:
 147:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 3136              		.loc 2 147 8 is_stmt 1 view .LVU603
 3137 051a FA20     		movs	r0, #250
 3138 051c 8000     		lsls	r0, r0, #2
 3139 051e FFF7FEFF 		bl	HAL_Delay
 3140              	.LVL219:
 148:Src/charlie.c ****        if(stopFlag == 1)
 3141              		.loc 2 148 8 view .LVU604
 3142 0522 0123     		movs	r3, #1
 3143 0524 1093     		str	r3, [sp, #64]
 3144 0526 2DA8     		add	r0, sp, #180
 3145 0528 0BA9     		add	r1, sp, #44
 3146 052a 0B00     		movs	r3, r1
 3147 052c 0200     		movs	r2, r0
 3148 052e 23CA     		ldmia	r2!, {r0, r1, r5}
 3149 0530 23C3     		stmia	r3!, {r0, r1, r5}
 3150 0532 03CA     		ldmia	r2!, {r0, r1}
 3151 0534 03C3     		stmia	r3!, {r0, r1}
 3152 0536 28A8     		add	r0, sp, #160
 3153 0538 06A9     		add	r1, sp, #24
 3154 053a 0B00     		movs	r3, r1
 3155 053c 0200     		movs	r2, r0
 3156 053e 23CA     		ldmia	r2!, {r0, r1, r5}
 3157 0540 23C3     		stmia	r3!, {r0, r1, r5}
 3158 0542 03CA     		ldmia	r2!, {r0, r1}
 3159 0544 03C3     		stmia	r3!, {r0, r1}
 3160 0546 23A8     		add	r0, sp, #140
 3161 0548 01A9     		add	r1, sp, #4
 3162 054a 0B00     		movs	r3, r1
 3163 054c 0200     		movs	r2, r0
 3164 054e 23CA     		ldmia	r2!, {r0, r1, r5}
 3165 0550 23C3     		stmia	r3!, {r0, r1, r5}
 3166 0552 03CA     		ldmia	r2!, {r0, r1}
 3167 0554 03C3     		stmia	r3!, {r0, r1}
 3168 0556 229B     		ldr	r3, [sp, #136]
 3169 0558 0093     		str	r3, [sp]
 3170 055a 1E98     		ldr	r0, [sp, #120]
 3171 055c 1F99     		ldr	r1, [sp, #124]
 3172 055e 209A     		ldr	r2, [sp, #128]
 3173 0560 219B     		ldr	r3, [sp, #132]
 3174 0562 FFF7FEFF 		bl	charlie
 3175              	.LVL220:
 149:Src/charlie.c ****          return;
 3176              		.loc 2 149 8 view .LVU605
 149:Src/charlie.c ****          return;
 3177              		.loc 2 149 20 is_stmt 0 view .LVU606
 3178 0566 DB4B     		ldr	r3, .L150
 3179 0568 1B68     		ldr	r3, [r3]
 149:Src/charlie.c ****          return;
ARM GAS  /tmp/cccixJrj.s 			page 83


 3180              		.loc 2 149 10 view .LVU607
 3181 056a 012B     		cmp	r3, #1
 3182 056c 00D1     		bne	.LCB2674
 3183 056e 67E5     		b	.L96	@long jump
 3184              	.LCB2674:
 151:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 3185              		.loc 2 151 8 is_stmt 1 view .LVU608
 3186 0570 FA20     		movs	r0, #250
 3187 0572 8000     		lsls	r0, r0, #2
 3188 0574 FFF7FEFF 		bl	HAL_Delay
 3189              	.LVL221:
 152:Src/charlie.c ****        if(stopFlag == 1)
 3190              		.loc 2 152 8 view .LVU609
 3191 0578 0223     		movs	r3, #2
 3192 057a 1093     		str	r3, [sp, #64]
 3193 057c 2DA8     		add	r0, sp, #180
 3194 057e 0BA9     		add	r1, sp, #44
 3195 0580 0B00     		movs	r3, r1
 3196 0582 0200     		movs	r2, r0
 3197 0584 23CA     		ldmia	r2!, {r0, r1, r5}
 3198 0586 23C3     		stmia	r3!, {r0, r1, r5}
 3199 0588 03CA     		ldmia	r2!, {r0, r1}
 3200 058a 03C3     		stmia	r3!, {r0, r1}
 3201 058c 28A8     		add	r0, sp, #160
 3202 058e 06A9     		add	r1, sp, #24
 3203 0590 0B00     		movs	r3, r1
 3204 0592 0200     		movs	r2, r0
 3205 0594 23CA     		ldmia	r2!, {r0, r1, r5}
 3206 0596 23C3     		stmia	r3!, {r0, r1, r5}
 3207 0598 03CA     		ldmia	r2!, {r0, r1}
 3208 059a 03C3     		stmia	r3!, {r0, r1}
 3209 059c 23A8     		add	r0, sp, #140
 3210 059e 01A9     		add	r1, sp, #4
 3211 05a0 0B00     		movs	r3, r1
 3212 05a2 0200     		movs	r2, r0
 3213 05a4 23CA     		ldmia	r2!, {r0, r1, r5}
 3214 05a6 23C3     		stmia	r3!, {r0, r1, r5}
 3215 05a8 03CA     		ldmia	r2!, {r0, r1}
 3216 05aa 03C3     		stmia	r3!, {r0, r1}
 3217 05ac 229B     		ldr	r3, [sp, #136]
 3218 05ae 0093     		str	r3, [sp]
 3219 05b0 1E98     		ldr	r0, [sp, #120]
 3220 05b2 1F99     		ldr	r1, [sp, #124]
 3221 05b4 209A     		ldr	r2, [sp, #128]
 3222 05b6 219B     		ldr	r3, [sp, #132]
 3223 05b8 FFF7FEFF 		bl	charlie
 3224              	.LVL222:
 153:Src/charlie.c ****          return;
 3225              		.loc 2 153 8 view .LVU610
 153:Src/charlie.c ****          return;
 3226              		.loc 2 153 20 is_stmt 0 view .LVU611
 3227 05bc C54B     		ldr	r3, .L150
 3228 05be 1B68     		ldr	r3, [r3]
 153:Src/charlie.c ****          return;
 3229              		.loc 2 153 10 view .LVU612
 3230 05c0 012B     		cmp	r3, #1
 3231 05c2 00D1     		bne	.LCB2718
ARM GAS  /tmp/cccixJrj.s 			page 84


 3232 05c4 3CE5     		b	.L96	@long jump
 3233              	.LCB2718:
 155:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 3234              		.loc 2 155 8 is_stmt 1 view .LVU613
 3235 05c6 FA20     		movs	r0, #250
 3236 05c8 8000     		lsls	r0, r0, #2
 3237 05ca FFF7FEFF 		bl	HAL_Delay
 3238              	.LVL223:
 156:Src/charlie.c ****        if(stopFlag == 1)
 3239              		.loc 2 156 8 view .LVU614
 3240 05ce 0323     		movs	r3, #3
 3241 05d0 1093     		str	r3, [sp, #64]
 3242 05d2 2DA8     		add	r0, sp, #180
 3243 05d4 0BA9     		add	r1, sp, #44
 3244 05d6 0B00     		movs	r3, r1
 3245 05d8 0200     		movs	r2, r0
 3246 05da 23CA     		ldmia	r2!, {r0, r1, r5}
 3247 05dc 23C3     		stmia	r3!, {r0, r1, r5}
 3248 05de 03CA     		ldmia	r2!, {r0, r1}
 3249 05e0 03C3     		stmia	r3!, {r0, r1}
 3250 05e2 28A8     		add	r0, sp, #160
 3251 05e4 06A9     		add	r1, sp, #24
 3252 05e6 0B00     		movs	r3, r1
 3253 05e8 0200     		movs	r2, r0
 3254 05ea 23CA     		ldmia	r2!, {r0, r1, r5}
 3255 05ec 23C3     		stmia	r3!, {r0, r1, r5}
 3256 05ee 03CA     		ldmia	r2!, {r0, r1}
 3257 05f0 03C3     		stmia	r3!, {r0, r1}
 3258 05f2 23A8     		add	r0, sp, #140
 3259 05f4 01A9     		add	r1, sp, #4
 3260 05f6 0B00     		movs	r3, r1
 3261 05f8 0200     		movs	r2, r0
 3262 05fa 23CA     		ldmia	r2!, {r0, r1, r5}
 3263 05fc 23C3     		stmia	r3!, {r0, r1, r5}
 3264 05fe 03CA     		ldmia	r2!, {r0, r1}
 3265 0600 03C3     		stmia	r3!, {r0, r1}
 3266 0602 229B     		ldr	r3, [sp, #136]
 3267 0604 0093     		str	r3, [sp]
 3268 0606 1E98     		ldr	r0, [sp, #120]
 3269 0608 1F99     		ldr	r1, [sp, #124]
 3270 060a 209A     		ldr	r2, [sp, #128]
 3271 060c 219B     		ldr	r3, [sp, #132]
 3272 060e FFF7FEFF 		bl	charlie
 3273              	.LVL224:
 157:Src/charlie.c ****          return;
 3274              		.loc 2 157 8 view .LVU615
 157:Src/charlie.c ****          return;
 3275              		.loc 2 157 20 is_stmt 0 view .LVU616
 3276 0612 B04B     		ldr	r3, .L150
 3277 0614 1B68     		ldr	r3, [r3]
 157:Src/charlie.c ****          return;
 3278              		.loc 2 157 10 view .LVU617
 3279 0616 012B     		cmp	r3, #1
 3280 0618 00D1     		bne	.LCB2762
 3281 061a 11E5     		b	.L96	@long jump
 3282              	.LCB2762:
 159:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
ARM GAS  /tmp/cccixJrj.s 			page 85


 3283              		.loc 2 159 8 is_stmt 1 view .LVU618
 3284 061c FA20     		movs	r0, #250
 3285 061e 8000     		lsls	r0, r0, #2
 3286 0620 FFF7FEFF 		bl	HAL_Delay
 3287              	.LVL225:
 160:Src/charlie.c ****        if(stopFlag == 1)
 3288              		.loc 2 160 8 view .LVU619
 3289 0624 0423     		movs	r3, #4
 3290 0626 1093     		str	r3, [sp, #64]
 3291 0628 2DA8     		add	r0, sp, #180
 3292 062a 0BA9     		add	r1, sp, #44
 3293 062c 0B00     		movs	r3, r1
 3294 062e 0200     		movs	r2, r0
 3295 0630 23CA     		ldmia	r2!, {r0, r1, r5}
 3296 0632 23C3     		stmia	r3!, {r0, r1, r5}
 3297 0634 03CA     		ldmia	r2!, {r0, r1}
 3298 0636 03C3     		stmia	r3!, {r0, r1}
 3299 0638 28A8     		add	r0, sp, #160
 3300 063a 06A9     		add	r1, sp, #24
 3301 063c 0B00     		movs	r3, r1
 3302 063e 0200     		movs	r2, r0
 3303 0640 23CA     		ldmia	r2!, {r0, r1, r5}
 3304 0642 23C3     		stmia	r3!, {r0, r1, r5}
 3305 0644 03CA     		ldmia	r2!, {r0, r1}
 3306 0646 03C3     		stmia	r3!, {r0, r1}
 3307 0648 23A8     		add	r0, sp, #140
 3308 064a 01A9     		add	r1, sp, #4
 3309 064c 0B00     		movs	r3, r1
 3310 064e 0200     		movs	r2, r0
 3311 0650 23CA     		ldmia	r2!, {r0, r1, r5}
 3312 0652 23C3     		stmia	r3!, {r0, r1, r5}
 3313 0654 03CA     		ldmia	r2!, {r0, r1}
 3314 0656 03C3     		stmia	r3!, {r0, r1}
 3315 0658 229B     		ldr	r3, [sp, #136]
 3316 065a 0093     		str	r3, [sp]
 3317 065c 1E98     		ldr	r0, [sp, #120]
 3318 065e 1F99     		ldr	r1, [sp, #124]
 3319 0660 209A     		ldr	r2, [sp, #128]
 3320 0662 219B     		ldr	r3, [sp, #132]
 3321 0664 FFF7FEFF 		bl	charlie
 3322              	.LVL226:
 161:Src/charlie.c ****          return;
 3323              		.loc 2 161 8 view .LVU620
 161:Src/charlie.c ****          return;
 3324              		.loc 2 161 20 is_stmt 0 view .LVU621
 3325 0668 9A4B     		ldr	r3, .L150
 3326 066a 1B68     		ldr	r3, [r3]
 161:Src/charlie.c ****          return;
 3327              		.loc 2 161 10 view .LVU622
 3328 066c 012B     		cmp	r3, #1
 3329 066e 00D1     		bne	.LCB2806
 3330 0670 E6E4     		b	.L96	@long jump
 3331              	.LCB2806:
 163:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 3332              		.loc 2 163 8 is_stmt 1 view .LVU623
 3333 0672 FA20     		movs	r0, #250
 3334 0674 8000     		lsls	r0, r0, #2
ARM GAS  /tmp/cccixJrj.s 			page 86


 3335 0676 FFF7FEFF 		bl	HAL_Delay
 3336              	.LVL227:
 164:Src/charlie.c ****        if(stopFlag == 1)
 3337              		.loc 2 164 8 view .LVU624
 3338 067a 0523     		movs	r3, #5
 3339 067c 1093     		str	r3, [sp, #64]
 3340 067e 2DA8     		add	r0, sp, #180
 3341 0680 0BA9     		add	r1, sp, #44
 3342 0682 0B00     		movs	r3, r1
 3343 0684 0200     		movs	r2, r0
 3344 0686 23CA     		ldmia	r2!, {r0, r1, r5}
 3345 0688 23C3     		stmia	r3!, {r0, r1, r5}
 3346 068a 03CA     		ldmia	r2!, {r0, r1}
 3347 068c 03C3     		stmia	r3!, {r0, r1}
 3348 068e 28A8     		add	r0, sp, #160
 3349 0690 06A9     		add	r1, sp, #24
 3350 0692 0B00     		movs	r3, r1
 3351 0694 0200     		movs	r2, r0
 3352 0696 23CA     		ldmia	r2!, {r0, r1, r5}
 3353 0698 23C3     		stmia	r3!, {r0, r1, r5}
 3354 069a 03CA     		ldmia	r2!, {r0, r1}
 3355 069c 03C3     		stmia	r3!, {r0, r1}
 3356 069e 23A8     		add	r0, sp, #140
 3357 06a0 01A9     		add	r1, sp, #4
 3358 06a2 0B00     		movs	r3, r1
 3359 06a4 0200     		movs	r2, r0
 3360 06a6 23CA     		ldmia	r2!, {r0, r1, r5}
 3361 06a8 23C3     		stmia	r3!, {r0, r1, r5}
 3362 06aa 03CA     		ldmia	r2!, {r0, r1}
 3363 06ac 03C3     		stmia	r3!, {r0, r1}
 3364 06ae 229B     		ldr	r3, [sp, #136]
 3365 06b0 0093     		str	r3, [sp]
 3366 06b2 1E98     		ldr	r0, [sp, #120]
 3367 06b4 1F99     		ldr	r1, [sp, #124]
 3368 06b6 209A     		ldr	r2, [sp, #128]
 3369 06b8 219B     		ldr	r3, [sp, #132]
 3370 06ba FFF7FEFF 		bl	charlie
 3371              	.LVL228:
 165:Src/charlie.c ****          return;
 3372              		.loc 2 165 8 view .LVU625
 165:Src/charlie.c ****          return;
 3373              		.loc 2 165 20 is_stmt 0 view .LVU626
 3374 06be 854B     		ldr	r3, .L150
 3375 06c0 1B68     		ldr	r3, [r3]
 165:Src/charlie.c ****          return;
 3376              		.loc 2 165 10 view .LVU627
 3377 06c2 012B     		cmp	r3, #1
 3378 06c4 00D1     		bne	.LCB2850
 3379 06c6 BBE4     		b	.L96	@long jump
 3380              	.LCB2850:
 167:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 3381              		.loc 2 167 8 is_stmt 1 view .LVU628
 3382 06c8 FA20     		movs	r0, #250
 3383 06ca 8000     		lsls	r0, r0, #2
 3384 06cc FFF7FEFF 		bl	HAL_Delay
 3385              	.LVL229:
 168:Src/charlie.c ****        if(stopFlag == 1)
ARM GAS  /tmp/cccixJrj.s 			page 87


 3386              		.loc 2 168 8 view .LVU629
 3387 06d0 0623     		movs	r3, #6
 3388 06d2 1093     		str	r3, [sp, #64]
 3389 06d4 2DA8     		add	r0, sp, #180
 3390 06d6 0BA9     		add	r1, sp, #44
 3391 06d8 0B00     		movs	r3, r1
 3392 06da 0200     		movs	r2, r0
 3393 06dc 23CA     		ldmia	r2!, {r0, r1, r5}
 3394 06de 23C3     		stmia	r3!, {r0, r1, r5}
 3395 06e0 03CA     		ldmia	r2!, {r0, r1}
 3396 06e2 03C3     		stmia	r3!, {r0, r1}
 3397 06e4 28A8     		add	r0, sp, #160
 3398 06e6 06A9     		add	r1, sp, #24
 3399 06e8 0B00     		movs	r3, r1
 3400 06ea 0200     		movs	r2, r0
 3401 06ec 23CA     		ldmia	r2!, {r0, r1, r5}
 3402 06ee 23C3     		stmia	r3!, {r0, r1, r5}
 3403 06f0 03CA     		ldmia	r2!, {r0, r1}
 3404 06f2 03C3     		stmia	r3!, {r0, r1}
 3405 06f4 23A8     		add	r0, sp, #140
 3406 06f6 01A9     		add	r1, sp, #4
 3407 06f8 0B00     		movs	r3, r1
 3408 06fa 0200     		movs	r2, r0
 3409 06fc 23CA     		ldmia	r2!, {r0, r1, r5}
 3410 06fe 23C3     		stmia	r3!, {r0, r1, r5}
 3411 0700 03CA     		ldmia	r2!, {r0, r1}
 3412 0702 03C3     		stmia	r3!, {r0, r1}
 3413 0704 229B     		ldr	r3, [sp, #136]
 3414 0706 0093     		str	r3, [sp]
 3415 0708 1E98     		ldr	r0, [sp, #120]
 3416 070a 1F99     		ldr	r1, [sp, #124]
 3417 070c 209A     		ldr	r2, [sp, #128]
 3418 070e 219B     		ldr	r3, [sp, #132]
 3419 0710 FFF7FEFF 		bl	charlie
 3420              	.LVL230:
 169:Src/charlie.c ****          return;
 3421              		.loc 2 169 8 view .LVU630
 169:Src/charlie.c ****          return;
 3422              		.loc 2 169 20 is_stmt 0 view .LVU631
 3423 0714 6F4B     		ldr	r3, .L150
 3424 0716 1B68     		ldr	r3, [r3]
 169:Src/charlie.c ****          return;
 3425              		.loc 2 169 10 view .LVU632
 3426 0718 012B     		cmp	r3, #1
 3427 071a 00D1     		bne	.LCB2894
 3428 071c 90E4     		b	.L96	@long jump
 3429              	.LCB2894:
 171:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 3430              		.loc 2 171 8 is_stmt 1 view .LVU633
 3431 071e FA20     		movs	r0, #250
 3432 0720 8000     		lsls	r0, r0, #2
 3433 0722 FFF7FEFF 		bl	HAL_Delay
 3434              	.LVL231:
 172:Src/charlie.c ****        if(stopFlag == 1)
 3435              		.loc 2 172 8 view .LVU634
 3436 0726 0723     		movs	r3, #7
 3437 0728 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/cccixJrj.s 			page 88


 3438 072a 2DA8     		add	r0, sp, #180
 3439 072c 0BA9     		add	r1, sp, #44
 3440 072e 0B00     		movs	r3, r1
 3441 0730 0200     		movs	r2, r0
 3442 0732 23CA     		ldmia	r2!, {r0, r1, r5}
 3443 0734 23C3     		stmia	r3!, {r0, r1, r5}
 3444 0736 03CA     		ldmia	r2!, {r0, r1}
 3445 0738 03C3     		stmia	r3!, {r0, r1}
 3446 073a 28A8     		add	r0, sp, #160
 3447 073c 06A9     		add	r1, sp, #24
 3448 073e 0B00     		movs	r3, r1
 3449 0740 0200     		movs	r2, r0
 3450 0742 23CA     		ldmia	r2!, {r0, r1, r5}
 3451 0744 23C3     		stmia	r3!, {r0, r1, r5}
 3452 0746 03CA     		ldmia	r2!, {r0, r1}
 3453 0748 03C3     		stmia	r3!, {r0, r1}
 3454 074a 23A8     		add	r0, sp, #140
 3455 074c 01A9     		add	r1, sp, #4
 3456 074e 0B00     		movs	r3, r1
 3457 0750 0200     		movs	r2, r0
 3458 0752 23CA     		ldmia	r2!, {r0, r1, r5}
 3459 0754 23C3     		stmia	r3!, {r0, r1, r5}
 3460 0756 03CA     		ldmia	r2!, {r0, r1}
 3461 0758 03C3     		stmia	r3!, {r0, r1}
 3462 075a 229B     		ldr	r3, [sp, #136]
 3463 075c 0093     		str	r3, [sp]
 3464 075e 1E98     		ldr	r0, [sp, #120]
 3465 0760 1F99     		ldr	r1, [sp, #124]
 3466 0762 209A     		ldr	r2, [sp, #128]
 3467 0764 219B     		ldr	r3, [sp, #132]
 3468 0766 FFF7FEFF 		bl	charlie
 3469              	.LVL232:
 173:Src/charlie.c ****          return;
 3470              		.loc 2 173 8 view .LVU635
 173:Src/charlie.c ****          return;
 3471              		.loc 2 173 20 is_stmt 0 view .LVU636
 3472 076a 5A4B     		ldr	r3, .L150
 3473 076c 1B68     		ldr	r3, [r3]
 173:Src/charlie.c ****          return;
 3474              		.loc 2 173 10 view .LVU637
 3475 076e 012B     		cmp	r3, #1
 3476 0770 00D1     		bne	.LCB2938
 3477 0772 65E4     		b	.L96	@long jump
 3478              	.LCB2938:
 175:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 3479              		.loc 2 175 8 is_stmt 1 view .LVU638
 3480 0774 FA20     		movs	r0, #250
 3481 0776 8000     		lsls	r0, r0, #2
 3482 0778 FFF7FEFF 		bl	HAL_Delay
 3483              	.LVL233:
 176:Src/charlie.c ****        if(stopFlag == 1)
 3484              		.loc 2 176 8 view .LVU639
 3485 077c 0823     		movs	r3, #8
 3486 077e 1093     		str	r3, [sp, #64]
 3487 0780 2DA8     		add	r0, sp, #180
 3488 0782 0BA9     		add	r1, sp, #44
 3489 0784 0B00     		movs	r3, r1
ARM GAS  /tmp/cccixJrj.s 			page 89


 3490 0786 0200     		movs	r2, r0
 3491 0788 23CA     		ldmia	r2!, {r0, r1, r5}
 3492 078a 23C3     		stmia	r3!, {r0, r1, r5}
 3493 078c 03CA     		ldmia	r2!, {r0, r1}
 3494 078e 03C3     		stmia	r3!, {r0, r1}
 3495 0790 28A8     		add	r0, sp, #160
 3496 0792 06A9     		add	r1, sp, #24
 3497 0794 0B00     		movs	r3, r1
 3498 0796 0200     		movs	r2, r0
 3499 0798 23CA     		ldmia	r2!, {r0, r1, r5}
 3500 079a 23C3     		stmia	r3!, {r0, r1, r5}
 3501 079c 03CA     		ldmia	r2!, {r0, r1}
 3502 079e 03C3     		stmia	r3!, {r0, r1}
 3503 07a0 23A8     		add	r0, sp, #140
 3504 07a2 01A9     		add	r1, sp, #4
 3505 07a4 0B00     		movs	r3, r1
 3506 07a6 0200     		movs	r2, r0
 3507 07a8 23CA     		ldmia	r2!, {r0, r1, r5}
 3508 07aa 23C3     		stmia	r3!, {r0, r1, r5}
 3509 07ac 03CA     		ldmia	r2!, {r0, r1}
 3510 07ae 03C3     		stmia	r3!, {r0, r1}
 3511 07b0 229B     		ldr	r3, [sp, #136]
 3512 07b2 0093     		str	r3, [sp]
 3513 07b4 1E98     		ldr	r0, [sp, #120]
 3514 07b6 1F99     		ldr	r1, [sp, #124]
 3515 07b8 209A     		ldr	r2, [sp, #128]
 3516 07ba 219B     		ldr	r3, [sp, #132]
 3517 07bc FFF7FEFF 		bl	charlie
 3518              	.LVL234:
 177:Src/charlie.c ****          return;
 3519              		.loc 2 177 8 view .LVU640
 177:Src/charlie.c ****          return;
 3520              		.loc 2 177 20 is_stmt 0 view .LVU641
 3521 07c0 444B     		ldr	r3, .L150
 3522 07c2 1B68     		ldr	r3, [r3]
 177:Src/charlie.c ****          return;
 3523              		.loc 2 177 10 view .LVU642
 3524 07c4 012B     		cmp	r3, #1
 3525 07c6 00D1     		bne	.LCB2982
 3526 07c8 3AE4     		b	.L96	@long jump
 3527              	.LCB2982:
 179:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 3528              		.loc 2 179 8 is_stmt 1 view .LVU643
 3529 07ca FA20     		movs	r0, #250
 3530 07cc 8000     		lsls	r0, r0, #2
 3531 07ce FFF7FEFF 		bl	HAL_Delay
 3532              	.LVL235:
 180:Src/charlie.c ****        if(stopFlag == 1)
 3533              		.loc 2 180 8 view .LVU644
 3534 07d2 0923     		movs	r3, #9
 3535 07d4 1093     		str	r3, [sp, #64]
 3536 07d6 2DA8     		add	r0, sp, #180
 3537 07d8 0BA9     		add	r1, sp, #44
 3538 07da 0B00     		movs	r3, r1
 3539 07dc 0200     		movs	r2, r0
 3540 07de 23CA     		ldmia	r2!, {r0, r1, r5}
 3541 07e0 23C3     		stmia	r3!, {r0, r1, r5}
ARM GAS  /tmp/cccixJrj.s 			page 90


 3542 07e2 03CA     		ldmia	r2!, {r0, r1}
 3543 07e4 03C3     		stmia	r3!, {r0, r1}
 3544 07e6 28A8     		add	r0, sp, #160
 3545 07e8 06A9     		add	r1, sp, #24
 3546 07ea 0B00     		movs	r3, r1
 3547 07ec 0200     		movs	r2, r0
 3548 07ee 23CA     		ldmia	r2!, {r0, r1, r5}
 3549 07f0 23C3     		stmia	r3!, {r0, r1, r5}
 3550 07f2 03CA     		ldmia	r2!, {r0, r1}
 3551 07f4 03C3     		stmia	r3!, {r0, r1}
 3552 07f6 23A8     		add	r0, sp, #140
 3553 07f8 01A9     		add	r1, sp, #4
 3554 07fa 0B00     		movs	r3, r1
 3555 07fc 0200     		movs	r2, r0
 3556 07fe 23CA     		ldmia	r2!, {r0, r1, r5}
 3557 0800 23C3     		stmia	r3!, {r0, r1, r5}
 3558 0802 03CA     		ldmia	r2!, {r0, r1}
 3559 0804 03C3     		stmia	r3!, {r0, r1}
 3560 0806 229B     		ldr	r3, [sp, #136]
 3561 0808 0093     		str	r3, [sp]
 3562 080a 1E98     		ldr	r0, [sp, #120]
 3563 080c 1F99     		ldr	r1, [sp, #124]
 3564 080e 209A     		ldr	r2, [sp, #128]
 3565 0810 219B     		ldr	r3, [sp, #132]
 3566 0812 FFF7FEFF 		bl	charlie
 3567              	.LVL236:
 181:Src/charlie.c ****          return;
 3568              		.loc 2 181 8 view .LVU645
 181:Src/charlie.c ****          return;
 3569              		.loc 2 181 20 is_stmt 0 view .LVU646
 3570 0816 2F4B     		ldr	r3, .L150
 3571 0818 1B68     		ldr	r3, [r3]
 181:Src/charlie.c ****          return;
 3572              		.loc 2 181 10 view .LVU647
 3573 081a 012B     		cmp	r3, #1
 3574 081c 01D1     		bne	.LCB3026
 3575 081e FFF70FFC 		bl	.L96	@far jump
 3576              	.LCB3026:
 183:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 3577              		.loc 2 183 8 is_stmt 1 view .LVU648
 3578 0822 FA20     		movs	r0, #250
 3579 0824 8000     		lsls	r0, r0, #2
 3580 0826 FFF7FEFF 		bl	HAL_Delay
 3581              	.LVL237:
 184:Src/charlie.c ****        if(stopFlag == 1)
 3582              		.loc 2 184 8 view .LVU649
 3583 082a 0A23     		movs	r3, #10
 3584 082c 1093     		str	r3, [sp, #64]
 3585 082e 2DA8     		add	r0, sp, #180
 3586 0830 0BA9     		add	r1, sp, #44
 3587 0832 0B00     		movs	r3, r1
 3588 0834 0200     		movs	r2, r0
 3589 0836 23CA     		ldmia	r2!, {r0, r1, r5}
 3590 0838 23C3     		stmia	r3!, {r0, r1, r5}
 3591 083a 03CA     		ldmia	r2!, {r0, r1}
 3592 083c 03C3     		stmia	r3!, {r0, r1}
 3593 083e 28A8     		add	r0, sp, #160
ARM GAS  /tmp/cccixJrj.s 			page 91


 3594 0840 06A9     		add	r1, sp, #24
 3595 0842 0B00     		movs	r3, r1
 3596 0844 0200     		movs	r2, r0
 3597 0846 23CA     		ldmia	r2!, {r0, r1, r5}
 3598 0848 23C3     		stmia	r3!, {r0, r1, r5}
 3599 084a 03CA     		ldmia	r2!, {r0, r1}
 3600 084c 03C3     		stmia	r3!, {r0, r1}
 3601 084e 23A8     		add	r0, sp, #140
 3602 0850 01A9     		add	r1, sp, #4
 3603 0852 0B00     		movs	r3, r1
 3604 0854 0200     		movs	r2, r0
 3605 0856 23CA     		ldmia	r2!, {r0, r1, r5}
 3606 0858 23C3     		stmia	r3!, {r0, r1, r5}
 3607 085a 03CA     		ldmia	r2!, {r0, r1}
 3608 085c 03C3     		stmia	r3!, {r0, r1}
 3609 085e 229B     		ldr	r3, [sp, #136]
 3610 0860 0093     		str	r3, [sp]
 3611 0862 1E98     		ldr	r0, [sp, #120]
 3612 0864 1F99     		ldr	r1, [sp, #124]
 3613 0866 209A     		ldr	r2, [sp, #128]
 3614 0868 219B     		ldr	r3, [sp, #132]
 3615 086a FFF7FEFF 		bl	charlie
 3616              	.LVL238:
 185:Src/charlie.c ****          return;
 3617              		.loc 2 185 8 view .LVU650
 185:Src/charlie.c ****          return;
 3618              		.loc 2 185 20 is_stmt 0 view .LVU651
 3619 086e 194B     		ldr	r3, .L150
 3620 0870 1B68     		ldr	r3, [r3]
 185:Src/charlie.c ****          return;
 3621              		.loc 2 185 10 view .LVU652
 3622 0872 012B     		cmp	r3, #1
 3623 0874 01D1     		bne	.LCB3070
 3624 0876 FFF7E3FB 		bl	.L96	@far jump
 3625              	.LCB3070:
 187:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 3626              		.loc 2 187 8 is_stmt 1 view .LVU653
 3627 087a FA20     		movs	r0, #250
 3628 087c 8000     		lsls	r0, r0, #2
 3629 087e FFF7FEFF 		bl	HAL_Delay
 3630              	.LVL239:
 188:Src/charlie.c ****        if(stopFlag == 1)
 3631              		.loc 2 188 8 view .LVU654
 3632 0882 0B23     		movs	r3, #11
 3633 0884 1093     		str	r3, [sp, #64]
 3634 0886 2DA8     		add	r0, sp, #180
 3635 0888 0BA9     		add	r1, sp, #44
 3636 088a 0B00     		movs	r3, r1
 3637 088c 0200     		movs	r2, r0
 3638 088e 23CA     		ldmia	r2!, {r0, r1, r5}
 3639 0890 23C3     		stmia	r3!, {r0, r1, r5}
 3640 0892 03CA     		ldmia	r2!, {r0, r1}
 3641 0894 03C3     		stmia	r3!, {r0, r1}
 3642 0896 28A8     		add	r0, sp, #160
 3643 0898 06A9     		add	r1, sp, #24
 3644 089a 0B00     		movs	r3, r1
 3645 089c 0200     		movs	r2, r0
ARM GAS  /tmp/cccixJrj.s 			page 92


 3646 089e 23CA     		ldmia	r2!, {r0, r1, r5}
 3647 08a0 23C3     		stmia	r3!, {r0, r1, r5}
 3648 08a2 03CA     		ldmia	r2!, {r0, r1}
 3649 08a4 03C3     		stmia	r3!, {r0, r1}
 3650 08a6 23A8     		add	r0, sp, #140
 3651 08a8 01A9     		add	r1, sp, #4
 3652 08aa 0B00     		movs	r3, r1
 3653 08ac 0200     		movs	r2, r0
 3654 08ae 23CA     		ldmia	r2!, {r0, r1, r5}
 3655 08b0 23C3     		stmia	r3!, {r0, r1, r5}
 3656 08b2 03CA     		ldmia	r2!, {r0, r1}
 3657 08b4 03C3     		stmia	r3!, {r0, r1}
 3658 08b6 229B     		ldr	r3, [sp, #136]
 3659 08b8 0093     		str	r3, [sp]
 3660 08ba 1E98     		ldr	r0, [sp, #120]
 3661 08bc 1F99     		ldr	r1, [sp, #124]
 3662 08be 209A     		ldr	r2, [sp, #128]
 3663 08c0 219B     		ldr	r3, [sp, #132]
 3664 08c2 FFF7FEFF 		bl	charlie
 3665              	.LVL240:
 189:Src/charlie.c ****          return;
 3666              		.loc 2 189 8 view .LVU655
 189:Src/charlie.c ****          return;
 3667              		.loc 2 189 20 is_stmt 0 view .LVU656
 3668 08c6 034B     		ldr	r3, .L150
 3669 08c8 1B68     		ldr	r3, [r3]
 189:Src/charlie.c ****          return;
 3670              		.loc 2 189 10 view .LVU657
 3671 08ca 012B     		cmp	r3, #1
 3672 08cc 01D1     		bne	.LCB3114
 3673 08ce FFF7B7FB 		bl	.L96	@far jump
 3674              	.LCB3114:
 3675 08d2 01E0     		b	.L151
 3676              	.L152:
 3677              		.align	2
 3678              	.L150:
 3679 08d4 00000000 		.word	.LANCHOR0
 3680              	.L151:
 191:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 3681              		.loc 2 191 8 is_stmt 1 view .LVU658
 3682 08d8 FA20     		movs	r0, #250
 3683 08da 8000     		lsls	r0, r0, #2
 3684 08dc FFF7FEFF 		bl	HAL_Delay
 3685              	.LVL241:
 192:Src/charlie.c ****        if(stopFlag == 1)
 3686              		.loc 2 192 8 view .LVU659
 3687 08e0 0C23     		movs	r3, #12
 3688 08e2 1093     		str	r3, [sp, #64]
 3689 08e4 2DA8     		add	r0, sp, #180
 3690 08e6 0BA9     		add	r1, sp, #44
 3691 08e8 0B00     		movs	r3, r1
 3692 08ea 0200     		movs	r2, r0
 3693 08ec 23CA     		ldmia	r2!, {r0, r1, r5}
 3694 08ee 23C3     		stmia	r3!, {r0, r1, r5}
 3695 08f0 03CA     		ldmia	r2!, {r0, r1}
 3696 08f2 03C3     		stmia	r3!, {r0, r1}
 3697 08f4 28A8     		add	r0, sp, #160
ARM GAS  /tmp/cccixJrj.s 			page 93


 3698 08f6 06A9     		add	r1, sp, #24
 3699 08f8 0B00     		movs	r3, r1
 3700 08fa 0200     		movs	r2, r0
 3701 08fc 23CA     		ldmia	r2!, {r0, r1, r5}
 3702 08fe 23C3     		stmia	r3!, {r0, r1, r5}
 3703 0900 03CA     		ldmia	r2!, {r0, r1}
 3704 0902 03C3     		stmia	r3!, {r0, r1}
 3705 0904 23A8     		add	r0, sp, #140
 3706 0906 01A9     		add	r1, sp, #4
 3707 0908 0B00     		movs	r3, r1
 3708 090a 0200     		movs	r2, r0
 3709 090c 23CA     		ldmia	r2!, {r0, r1, r5}
 3710 090e 23C3     		stmia	r3!, {r0, r1, r5}
 3711 0910 03CA     		ldmia	r2!, {r0, r1}
 3712 0912 03C3     		stmia	r3!, {r0, r1}
 3713 0914 229B     		ldr	r3, [sp, #136]
 3714 0916 0093     		str	r3, [sp]
 3715 0918 1E98     		ldr	r0, [sp, #120]
 3716 091a 1F99     		ldr	r1, [sp, #124]
 3717 091c 209A     		ldr	r2, [sp, #128]
 3718 091e 219B     		ldr	r3, [sp, #132]
 3719 0920 FFF7FEFF 		bl	charlie
 3720              	.LVL242:
 193:Src/charlie.c ****          return;
 3721              		.loc 2 193 8 view .LVU660
 193:Src/charlie.c ****          return;
 3722              		.loc 2 193 20 is_stmt 0 view .LVU661
 3723 0924 054B     		ldr	r3, .L153
 3724 0926 1B68     		ldr	r3, [r3]
 193:Src/charlie.c ****          return;
 3725              		.loc 2 193 10 view .LVU662
 3726 0928 012B     		cmp	r3, #1
 3727 092a 01D1     		bne	.LCB3167
 3728 092c FFF788FB 		bl	.L96	@far jump
 3729              	.LCB3167:
 195:Src/charlie.c ****    }
 3730              		.loc 2 195 8 is_stmt 1 view .LVU663
 3731 0930 FA20     		movs	r0, #250
 3732 0932 8000     		lsls	r0, r0, #2
 3733 0934 FFF7FEFF 		bl	HAL_Delay
 3734              	.LVL243:
 3735 0938 FFF776FB 		bl	.L100	@ far jump
 3736              	.L154:
 3737              		.align	2
 3738              	.L153:
 3739 093c 00000000 		.word	.LANCHOR0
 3740              	.L135:
 200:Src/charlie.c ****        if(stopFlag == 1)
 3741              		.loc 2 200 8 view .LVU664
 3742 0940 0023     		movs	r3, #0
 3743 0942 1093     		str	r3, [sp, #64]
 3744 0944 2DA8     		add	r0, sp, #180
 3745 0946 0BA9     		add	r1, sp, #44
 3746 0948 0B00     		movs	r3, r1
 3747 094a 0200     		movs	r2, r0
 3748 094c 23CA     		ldmia	r2!, {r0, r1, r5}
 3749 094e 23C3     		stmia	r3!, {r0, r1, r5}
ARM GAS  /tmp/cccixJrj.s 			page 94


 3750 0950 03CA     		ldmia	r2!, {r0, r1}
 3751 0952 03C3     		stmia	r3!, {r0, r1}
 3752 0954 28A8     		add	r0, sp, #160
 3753 0956 06A9     		add	r1, sp, #24
 3754 0958 0B00     		movs	r3, r1
 3755 095a 0200     		movs	r2, r0
 3756 095c 23CA     		ldmia	r2!, {r0, r1, r5}
 3757 095e 23C3     		stmia	r3!, {r0, r1, r5}
 3758 0960 03CA     		ldmia	r2!, {r0, r1}
 3759 0962 03C3     		stmia	r3!, {r0, r1}
 3760 0964 23A8     		add	r0, sp, #140
 3761 0966 01A9     		add	r1, sp, #4
 3762 0968 0B00     		movs	r3, r1
 3763 096a 0200     		movs	r2, r0
 3764 096c 23CA     		ldmia	r2!, {r0, r1, r5}
 3765 096e 23C3     		stmia	r3!, {r0, r1, r5}
 3766 0970 03CA     		ldmia	r2!, {r0, r1}
 3767 0972 03C3     		stmia	r3!, {r0, r1}
 3768 0974 229B     		ldr	r3, [sp, #136]
 3769 0976 0093     		str	r3, [sp]
 3770 0978 1E98     		ldr	r0, [sp, #120]
 3771 097a 1F99     		ldr	r1, [sp, #124]
 3772 097c 209A     		ldr	r2, [sp, #128]
 3773 097e 219B     		ldr	r3, [sp, #132]
 3774 0980 FFF7FEFF 		bl	charlie
 3775              	.LVL244:
 201:Src/charlie.c ****          return;
 3776              		.loc 2 201 8 view .LVU665
 201:Src/charlie.c ****          return;
 3777              		.loc 2 201 20 is_stmt 0 view .LVU666
 3778 0984 F54B     		ldr	r3, .L155
 3779 0986 1B68     		ldr	r3, [r3]
 201:Src/charlie.c ****          return;
 3780              		.loc 2 201 10 view .LVU667
 3781 0988 012B     		cmp	r3, #1
 3782 098a 01D1     		bne	.LCB3221
 3783 098c FFF758FB 		bl	.L96	@far jump
 3784              	.LCB3221:
 203:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 1);
 3785              		.loc 2 203 8 is_stmt 1 view .LVU668
 3786 0990 FA20     		movs	r0, #250
 3787 0992 4000     		lsls	r0, r0, #1
 3788 0994 FFF7FEFF 		bl	HAL_Delay
 3789              	.LVL245:
 204:Src/charlie.c ****        if(stopFlag == 1)
 3790              		.loc 2 204 8 view .LVU669
 3791 0998 0123     		movs	r3, #1
 3792 099a 1093     		str	r3, [sp, #64]
 3793 099c 2DA8     		add	r0, sp, #180
 3794 099e 0BA9     		add	r1, sp, #44
 3795 09a0 0B00     		movs	r3, r1
 3796 09a2 0200     		movs	r2, r0
 3797 09a4 23CA     		ldmia	r2!, {r0, r1, r5}
 3798 09a6 23C3     		stmia	r3!, {r0, r1, r5}
 3799 09a8 03CA     		ldmia	r2!, {r0, r1}
 3800 09aa 03C3     		stmia	r3!, {r0, r1}
 3801 09ac 28A8     		add	r0, sp, #160
ARM GAS  /tmp/cccixJrj.s 			page 95


 3802 09ae 06A9     		add	r1, sp, #24
 3803 09b0 0B00     		movs	r3, r1
 3804 09b2 0200     		movs	r2, r0
 3805 09b4 23CA     		ldmia	r2!, {r0, r1, r5}
 3806 09b6 23C3     		stmia	r3!, {r0, r1, r5}
 3807 09b8 03CA     		ldmia	r2!, {r0, r1}
 3808 09ba 03C3     		stmia	r3!, {r0, r1}
 3809 09bc 23A8     		add	r0, sp, #140
 3810 09be 01A9     		add	r1, sp, #4
 3811 09c0 0B00     		movs	r3, r1
 3812 09c2 0200     		movs	r2, r0
 3813 09c4 23CA     		ldmia	r2!, {r0, r1, r5}
 3814 09c6 23C3     		stmia	r3!, {r0, r1, r5}
 3815 09c8 03CA     		ldmia	r2!, {r0, r1}
 3816 09ca 03C3     		stmia	r3!, {r0, r1}
 3817 09cc 229B     		ldr	r3, [sp, #136]
 3818 09ce 0093     		str	r3, [sp]
 3819 09d0 1E98     		ldr	r0, [sp, #120]
 3820 09d2 1F99     		ldr	r1, [sp, #124]
 3821 09d4 209A     		ldr	r2, [sp, #128]
 3822 09d6 219B     		ldr	r3, [sp, #132]
 3823 09d8 FFF7FEFF 		bl	charlie
 3824              	.LVL246:
 205:Src/charlie.c ****          return;
 3825              		.loc 2 205 8 view .LVU670
 205:Src/charlie.c ****          return;
 3826              		.loc 2 205 20 is_stmt 0 view .LVU671
 3827 09dc DF4B     		ldr	r3, .L155
 3828 09de 1B68     		ldr	r3, [r3]
 205:Src/charlie.c ****          return;
 3829              		.loc 2 205 10 view .LVU672
 3830 09e0 012B     		cmp	r3, #1
 3831 09e2 01D1     		bne	.LCB3265
 3832 09e4 FFF72CFB 		bl	.L96	@far jump
 3833              	.LCB3265:
 207:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 2);
 3834              		.loc 2 207 8 is_stmt 1 view .LVU673
 3835 09e8 FA20     		movs	r0, #250
 3836 09ea 4000     		lsls	r0, r0, #1
 3837 09ec FFF7FEFF 		bl	HAL_Delay
 3838              	.LVL247:
 208:Src/charlie.c ****        if(stopFlag == 1)
 3839              		.loc 2 208 8 view .LVU674
 3840 09f0 0223     		movs	r3, #2
 3841 09f2 1093     		str	r3, [sp, #64]
 3842 09f4 2DA8     		add	r0, sp, #180
 3843 09f6 0BA9     		add	r1, sp, #44
 3844 09f8 0B00     		movs	r3, r1
 3845 09fa 0200     		movs	r2, r0
 3846 09fc 23CA     		ldmia	r2!, {r0, r1, r5}
 3847 09fe 23C3     		stmia	r3!, {r0, r1, r5}
 3848 0a00 03CA     		ldmia	r2!, {r0, r1}
 3849 0a02 03C3     		stmia	r3!, {r0, r1}
 3850 0a04 28A8     		add	r0, sp, #160
 3851 0a06 06A9     		add	r1, sp, #24
 3852 0a08 0B00     		movs	r3, r1
 3853 0a0a 0200     		movs	r2, r0
ARM GAS  /tmp/cccixJrj.s 			page 96


 3854 0a0c 23CA     		ldmia	r2!, {r0, r1, r5}
 3855 0a0e 23C3     		stmia	r3!, {r0, r1, r5}
 3856 0a10 03CA     		ldmia	r2!, {r0, r1}
 3857 0a12 03C3     		stmia	r3!, {r0, r1}
 3858 0a14 23A8     		add	r0, sp, #140
 3859 0a16 01A9     		add	r1, sp, #4
 3860 0a18 0B00     		movs	r3, r1
 3861 0a1a 0200     		movs	r2, r0
 3862 0a1c 23CA     		ldmia	r2!, {r0, r1, r5}
 3863 0a1e 23C3     		stmia	r3!, {r0, r1, r5}
 3864 0a20 03CA     		ldmia	r2!, {r0, r1}
 3865 0a22 03C3     		stmia	r3!, {r0, r1}
 3866 0a24 229B     		ldr	r3, [sp, #136]
 3867 0a26 0093     		str	r3, [sp]
 3868 0a28 1E98     		ldr	r0, [sp, #120]
 3869 0a2a 1F99     		ldr	r1, [sp, #124]
 3870 0a2c 209A     		ldr	r2, [sp, #128]
 3871 0a2e 219B     		ldr	r3, [sp, #132]
 3872 0a30 FFF7FEFF 		bl	charlie
 3873              	.LVL248:
 209:Src/charlie.c ****          return;
 3874              		.loc 2 209 8 view .LVU675
 209:Src/charlie.c ****          return;
 3875              		.loc 2 209 20 is_stmt 0 view .LVU676
 3876 0a34 C94B     		ldr	r3, .L155
 3877 0a36 1B68     		ldr	r3, [r3]
 209:Src/charlie.c ****          return;
 3878              		.loc 2 209 10 view .LVU677
 3879 0a38 012B     		cmp	r3, #1
 3880 0a3a 01D1     		bne	.LCB3309
 3881 0a3c FFF700FB 		bl	.L96	@far jump
 3882              	.LCB3309:
 211:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 3);
 3883              		.loc 2 211 8 is_stmt 1 view .LVU678
 3884 0a40 FA20     		movs	r0, #250
 3885 0a42 4000     		lsls	r0, r0, #1
 3886 0a44 FFF7FEFF 		bl	HAL_Delay
 3887              	.LVL249:
 212:Src/charlie.c ****        if(stopFlag == 1)
 3888              		.loc 2 212 8 view .LVU679
 3889 0a48 0323     		movs	r3, #3
 3890 0a4a 1093     		str	r3, [sp, #64]
 3891 0a4c 2DA8     		add	r0, sp, #180
 3892 0a4e 0BA9     		add	r1, sp, #44
 3893 0a50 0B00     		movs	r3, r1
 3894 0a52 0200     		movs	r2, r0
 3895 0a54 23CA     		ldmia	r2!, {r0, r1, r5}
 3896 0a56 23C3     		stmia	r3!, {r0, r1, r5}
 3897 0a58 03CA     		ldmia	r2!, {r0, r1}
 3898 0a5a 03C3     		stmia	r3!, {r0, r1}
 3899 0a5c 28A8     		add	r0, sp, #160
 3900 0a5e 06A9     		add	r1, sp, #24
 3901 0a60 0B00     		movs	r3, r1
 3902 0a62 0200     		movs	r2, r0
 3903 0a64 23CA     		ldmia	r2!, {r0, r1, r5}
 3904 0a66 23C3     		stmia	r3!, {r0, r1, r5}
 3905 0a68 03CA     		ldmia	r2!, {r0, r1}
ARM GAS  /tmp/cccixJrj.s 			page 97


 3906 0a6a 03C3     		stmia	r3!, {r0, r1}
 3907 0a6c 23A8     		add	r0, sp, #140
 3908 0a6e 01A9     		add	r1, sp, #4
 3909 0a70 0B00     		movs	r3, r1
 3910 0a72 0200     		movs	r2, r0
 3911 0a74 23CA     		ldmia	r2!, {r0, r1, r5}
 3912 0a76 23C3     		stmia	r3!, {r0, r1, r5}
 3913 0a78 03CA     		ldmia	r2!, {r0, r1}
 3914 0a7a 03C3     		stmia	r3!, {r0, r1}
 3915 0a7c 229B     		ldr	r3, [sp, #136]
 3916 0a7e 0093     		str	r3, [sp]
 3917 0a80 1E98     		ldr	r0, [sp, #120]
 3918 0a82 1F99     		ldr	r1, [sp, #124]
 3919 0a84 209A     		ldr	r2, [sp, #128]
 3920 0a86 219B     		ldr	r3, [sp, #132]
 3921 0a88 FFF7FEFF 		bl	charlie
 3922              	.LVL250:
 213:Src/charlie.c ****          return;
 3923              		.loc 2 213 8 view .LVU680
 213:Src/charlie.c ****          return;
 3924              		.loc 2 213 20 is_stmt 0 view .LVU681
 3925 0a8c B34B     		ldr	r3, .L155
 3926 0a8e 1B68     		ldr	r3, [r3]
 213:Src/charlie.c ****          return;
 3927              		.loc 2 213 10 view .LVU682
 3928 0a90 012B     		cmp	r3, #1
 3929 0a92 01D1     		bne	.LCB3353
 3930 0a94 FFF7D4FA 		bl	.L96	@far jump
 3931              	.LCB3353:
 215:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 4);
 3932              		.loc 2 215 8 is_stmt 1 view .LVU683
 3933 0a98 FA20     		movs	r0, #250
 3934 0a9a 4000     		lsls	r0, r0, #1
 3935 0a9c FFF7FEFF 		bl	HAL_Delay
 3936              	.LVL251:
 216:Src/charlie.c ****        if(stopFlag == 1)
 3937              		.loc 2 216 8 view .LVU684
 3938 0aa0 0423     		movs	r3, #4
 3939 0aa2 1093     		str	r3, [sp, #64]
 3940 0aa4 2DA8     		add	r0, sp, #180
 3941 0aa6 0BA9     		add	r1, sp, #44
 3942 0aa8 0B00     		movs	r3, r1
 3943 0aaa 0200     		movs	r2, r0
 3944 0aac 23CA     		ldmia	r2!, {r0, r1, r5}
 3945 0aae 23C3     		stmia	r3!, {r0, r1, r5}
 3946 0ab0 03CA     		ldmia	r2!, {r0, r1}
 3947 0ab2 03C3     		stmia	r3!, {r0, r1}
 3948 0ab4 28A8     		add	r0, sp, #160
 3949 0ab6 06A9     		add	r1, sp, #24
 3950 0ab8 0B00     		movs	r3, r1
 3951 0aba 0200     		movs	r2, r0
 3952 0abc 23CA     		ldmia	r2!, {r0, r1, r5}
 3953 0abe 23C3     		stmia	r3!, {r0, r1, r5}
 3954 0ac0 03CA     		ldmia	r2!, {r0, r1}
 3955 0ac2 03C3     		stmia	r3!, {r0, r1}
 3956 0ac4 23A8     		add	r0, sp, #140
 3957 0ac6 01A9     		add	r1, sp, #4
ARM GAS  /tmp/cccixJrj.s 			page 98


 3958 0ac8 0B00     		movs	r3, r1
 3959 0aca 0200     		movs	r2, r0
 3960 0acc 23CA     		ldmia	r2!, {r0, r1, r5}
 3961 0ace 23C3     		stmia	r3!, {r0, r1, r5}
 3962 0ad0 03CA     		ldmia	r2!, {r0, r1}
 3963 0ad2 03C3     		stmia	r3!, {r0, r1}
 3964 0ad4 229B     		ldr	r3, [sp, #136]
 3965 0ad6 0093     		str	r3, [sp]
 3966 0ad8 1E98     		ldr	r0, [sp, #120]
 3967 0ada 1F99     		ldr	r1, [sp, #124]
 3968 0adc 209A     		ldr	r2, [sp, #128]
 3969 0ade 219B     		ldr	r3, [sp, #132]
 3970 0ae0 FFF7FEFF 		bl	charlie
 3971              	.LVL252:
 217:Src/charlie.c ****          return;
 3972              		.loc 2 217 8 view .LVU685
 217:Src/charlie.c ****          return;
 3973              		.loc 2 217 20 is_stmt 0 view .LVU686
 3974 0ae4 9D4B     		ldr	r3, .L155
 3975 0ae6 1B68     		ldr	r3, [r3]
 217:Src/charlie.c ****          return;
 3976              		.loc 2 217 10 view .LVU687
 3977 0ae8 012B     		cmp	r3, #1
 3978 0aea 01D1     		bne	.LCB3397
 3979 0aec FFF7A8FA 		bl	.L96	@far jump
 3980              	.LCB3397:
 219:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 5);
 3981              		.loc 2 219 8 is_stmt 1 view .LVU688
 3982 0af0 FA20     		movs	r0, #250
 3983 0af2 4000     		lsls	r0, r0, #1
 3984 0af4 FFF7FEFF 		bl	HAL_Delay
 3985              	.LVL253:
 220:Src/charlie.c ****        if(stopFlag == 1)
 3986              		.loc 2 220 8 view .LVU689
 3987 0af8 0523     		movs	r3, #5
 3988 0afa 1093     		str	r3, [sp, #64]
 3989 0afc 2DA8     		add	r0, sp, #180
 3990 0afe 0BA9     		add	r1, sp, #44
 3991 0b00 0B00     		movs	r3, r1
 3992 0b02 0200     		movs	r2, r0
 3993 0b04 23CA     		ldmia	r2!, {r0, r1, r5}
 3994 0b06 23C3     		stmia	r3!, {r0, r1, r5}
 3995 0b08 03CA     		ldmia	r2!, {r0, r1}
 3996 0b0a 03C3     		stmia	r3!, {r0, r1}
 3997 0b0c 28A8     		add	r0, sp, #160
 3998 0b0e 06A9     		add	r1, sp, #24
 3999 0b10 0B00     		movs	r3, r1
 4000 0b12 0200     		movs	r2, r0
 4001 0b14 23CA     		ldmia	r2!, {r0, r1, r5}
 4002 0b16 23C3     		stmia	r3!, {r0, r1, r5}
 4003 0b18 03CA     		ldmia	r2!, {r0, r1}
 4004 0b1a 03C3     		stmia	r3!, {r0, r1}
 4005 0b1c 23A8     		add	r0, sp, #140
 4006 0b1e 01A9     		add	r1, sp, #4
 4007 0b20 0B00     		movs	r3, r1
 4008 0b22 0200     		movs	r2, r0
 4009 0b24 23CA     		ldmia	r2!, {r0, r1, r5}
ARM GAS  /tmp/cccixJrj.s 			page 99


 4010 0b26 23C3     		stmia	r3!, {r0, r1, r5}
 4011 0b28 03CA     		ldmia	r2!, {r0, r1}
 4012 0b2a 03C3     		stmia	r3!, {r0, r1}
 4013 0b2c 229B     		ldr	r3, [sp, #136]
 4014 0b2e 0093     		str	r3, [sp]
 4015 0b30 1E98     		ldr	r0, [sp, #120]
 4016 0b32 1F99     		ldr	r1, [sp, #124]
 4017 0b34 209A     		ldr	r2, [sp, #128]
 4018 0b36 219B     		ldr	r3, [sp, #132]
 4019 0b38 FFF7FEFF 		bl	charlie
 4020              	.LVL254:
 221:Src/charlie.c ****          return;
 4021              		.loc 2 221 8 view .LVU690
 221:Src/charlie.c ****          return;
 4022              		.loc 2 221 20 is_stmt 0 view .LVU691
 4023 0b3c 874B     		ldr	r3, .L155
 4024 0b3e 1B68     		ldr	r3, [r3]
 221:Src/charlie.c ****          return;
 4025              		.loc 2 221 10 view .LVU692
 4026 0b40 012B     		cmp	r3, #1
 4027 0b42 01D1     		bne	.LCB3441
 4028 0b44 FFF77CFA 		bl	.L96	@far jump
 4029              	.LCB3441:
 223:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 6);
 4030              		.loc 2 223 8 is_stmt 1 view .LVU693
 4031 0b48 FA20     		movs	r0, #250
 4032 0b4a 4000     		lsls	r0, r0, #1
 4033 0b4c FFF7FEFF 		bl	HAL_Delay
 4034              	.LVL255:
 224:Src/charlie.c ****        if(stopFlag == 1)
 4035              		.loc 2 224 8 view .LVU694
 4036 0b50 0623     		movs	r3, #6
 4037 0b52 1093     		str	r3, [sp, #64]
 4038 0b54 2DA8     		add	r0, sp, #180
 4039 0b56 0BA9     		add	r1, sp, #44
 4040 0b58 0B00     		movs	r3, r1
 4041 0b5a 0200     		movs	r2, r0
 4042 0b5c 23CA     		ldmia	r2!, {r0, r1, r5}
 4043 0b5e 23C3     		stmia	r3!, {r0, r1, r5}
 4044 0b60 03CA     		ldmia	r2!, {r0, r1}
 4045 0b62 03C3     		stmia	r3!, {r0, r1}
 4046 0b64 28A8     		add	r0, sp, #160
 4047 0b66 06A9     		add	r1, sp, #24
 4048 0b68 0B00     		movs	r3, r1
 4049 0b6a 0200     		movs	r2, r0
 4050 0b6c 23CA     		ldmia	r2!, {r0, r1, r5}
 4051 0b6e 23C3     		stmia	r3!, {r0, r1, r5}
 4052 0b70 03CA     		ldmia	r2!, {r0, r1}
 4053 0b72 03C3     		stmia	r3!, {r0, r1}
 4054 0b74 23A8     		add	r0, sp, #140
 4055 0b76 01A9     		add	r1, sp, #4
 4056 0b78 0B00     		movs	r3, r1
 4057 0b7a 0200     		movs	r2, r0
 4058 0b7c 23CA     		ldmia	r2!, {r0, r1, r5}
 4059 0b7e 23C3     		stmia	r3!, {r0, r1, r5}
 4060 0b80 03CA     		ldmia	r2!, {r0, r1}
 4061 0b82 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/cccixJrj.s 			page 100


 4062 0b84 229B     		ldr	r3, [sp, #136]
 4063 0b86 0093     		str	r3, [sp]
 4064 0b88 1E98     		ldr	r0, [sp, #120]
 4065 0b8a 1F99     		ldr	r1, [sp, #124]
 4066 0b8c 209A     		ldr	r2, [sp, #128]
 4067 0b8e 219B     		ldr	r3, [sp, #132]
 4068 0b90 FFF7FEFF 		bl	charlie
 4069              	.LVL256:
 225:Src/charlie.c ****          return;
 4070              		.loc 2 225 8 view .LVU695
 225:Src/charlie.c ****          return;
 4071              		.loc 2 225 20 is_stmt 0 view .LVU696
 4072 0b94 714B     		ldr	r3, .L155
 4073 0b96 1B68     		ldr	r3, [r3]
 225:Src/charlie.c ****          return;
 4074              		.loc 2 225 10 view .LVU697
 4075 0b98 012B     		cmp	r3, #1
 4076 0b9a 01D1     		bne	.LCB3485
 4077 0b9c FFF750FA 		bl	.L96	@far jump
 4078              	.LCB3485:
 227:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 7);
 4079              		.loc 2 227 8 is_stmt 1 view .LVU698
 4080 0ba0 FA20     		movs	r0, #250
 4081 0ba2 4000     		lsls	r0, r0, #1
 4082 0ba4 FFF7FEFF 		bl	HAL_Delay
 4083              	.LVL257:
 228:Src/charlie.c ****        if(stopFlag == 1)
 4084              		.loc 2 228 8 view .LVU699
 4085 0ba8 0723     		movs	r3, #7
 4086 0baa 1093     		str	r3, [sp, #64]
 4087 0bac 2DA8     		add	r0, sp, #180
 4088 0bae 0BA9     		add	r1, sp, #44
 4089 0bb0 0B00     		movs	r3, r1
 4090 0bb2 0200     		movs	r2, r0
 4091 0bb4 23CA     		ldmia	r2!, {r0, r1, r5}
 4092 0bb6 23C3     		stmia	r3!, {r0, r1, r5}
 4093 0bb8 03CA     		ldmia	r2!, {r0, r1}
 4094 0bba 03C3     		stmia	r3!, {r0, r1}
 4095 0bbc 28A8     		add	r0, sp, #160
 4096 0bbe 06A9     		add	r1, sp, #24
 4097 0bc0 0B00     		movs	r3, r1
 4098 0bc2 0200     		movs	r2, r0
 4099 0bc4 23CA     		ldmia	r2!, {r0, r1, r5}
 4100 0bc6 23C3     		stmia	r3!, {r0, r1, r5}
 4101 0bc8 03CA     		ldmia	r2!, {r0, r1}
 4102 0bca 03C3     		stmia	r3!, {r0, r1}
 4103 0bcc 23A8     		add	r0, sp, #140
 4104 0bce 01A9     		add	r1, sp, #4
 4105 0bd0 0B00     		movs	r3, r1
 4106 0bd2 0200     		movs	r2, r0
 4107 0bd4 23CA     		ldmia	r2!, {r0, r1, r5}
 4108 0bd6 23C3     		stmia	r3!, {r0, r1, r5}
 4109 0bd8 03CA     		ldmia	r2!, {r0, r1}
 4110 0bda 03C3     		stmia	r3!, {r0, r1}
 4111 0bdc 229B     		ldr	r3, [sp, #136]
 4112 0bde 0093     		str	r3, [sp]
 4113 0be0 1E98     		ldr	r0, [sp, #120]
ARM GAS  /tmp/cccixJrj.s 			page 101


 4114 0be2 1F99     		ldr	r1, [sp, #124]
 4115 0be4 209A     		ldr	r2, [sp, #128]
 4116 0be6 219B     		ldr	r3, [sp, #132]
 4117 0be8 FFF7FEFF 		bl	charlie
 4118              	.LVL258:
 229:Src/charlie.c ****          return;
 4119              		.loc 2 229 8 view .LVU700
 229:Src/charlie.c ****          return;
 4120              		.loc 2 229 20 is_stmt 0 view .LVU701
 4121 0bec 5B4B     		ldr	r3, .L155
 4122 0bee 1B68     		ldr	r3, [r3]
 229:Src/charlie.c ****          return;
 4123              		.loc 2 229 10 view .LVU702
 4124 0bf0 012B     		cmp	r3, #1
 4125 0bf2 01D1     		bne	.LCB3529
 4126 0bf4 FFF724FA 		bl	.L96	@far jump
 4127              	.LCB3529:
 231:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 8);
 4128              		.loc 2 231 8 is_stmt 1 view .LVU703
 4129 0bf8 FA20     		movs	r0, #250
 4130 0bfa 4000     		lsls	r0, r0, #1
 4131 0bfc FFF7FEFF 		bl	HAL_Delay
 4132              	.LVL259:
 232:Src/charlie.c ****        if(stopFlag == 1)
 4133              		.loc 2 232 8 view .LVU704
 4134 0c00 0823     		movs	r3, #8
 4135 0c02 1093     		str	r3, [sp, #64]
 4136 0c04 2DA8     		add	r0, sp, #180
 4137 0c06 0BA9     		add	r1, sp, #44
 4138 0c08 0B00     		movs	r3, r1
 4139 0c0a 0200     		movs	r2, r0
 4140 0c0c 23CA     		ldmia	r2!, {r0, r1, r5}
 4141 0c0e 23C3     		stmia	r3!, {r0, r1, r5}
 4142 0c10 03CA     		ldmia	r2!, {r0, r1}
 4143 0c12 03C3     		stmia	r3!, {r0, r1}
 4144 0c14 28A8     		add	r0, sp, #160
 4145 0c16 06A9     		add	r1, sp, #24
 4146 0c18 0B00     		movs	r3, r1
 4147 0c1a 0200     		movs	r2, r0
 4148 0c1c 23CA     		ldmia	r2!, {r0, r1, r5}
 4149 0c1e 23C3     		stmia	r3!, {r0, r1, r5}
 4150 0c20 03CA     		ldmia	r2!, {r0, r1}
 4151 0c22 03C3     		stmia	r3!, {r0, r1}
 4152 0c24 23A8     		add	r0, sp, #140
 4153 0c26 01A9     		add	r1, sp, #4
 4154 0c28 0B00     		movs	r3, r1
 4155 0c2a 0200     		movs	r2, r0
 4156 0c2c 23CA     		ldmia	r2!, {r0, r1, r5}
 4157 0c2e 23C3     		stmia	r3!, {r0, r1, r5}
 4158 0c30 03CA     		ldmia	r2!, {r0, r1}
 4159 0c32 03C3     		stmia	r3!, {r0, r1}
 4160 0c34 229B     		ldr	r3, [sp, #136]
 4161 0c36 0093     		str	r3, [sp]
 4162 0c38 1E98     		ldr	r0, [sp, #120]
 4163 0c3a 1F99     		ldr	r1, [sp, #124]
 4164 0c3c 209A     		ldr	r2, [sp, #128]
 4165 0c3e 219B     		ldr	r3, [sp, #132]
ARM GAS  /tmp/cccixJrj.s 			page 102


 4166 0c40 FFF7FEFF 		bl	charlie
 4167              	.LVL260:
 233:Src/charlie.c ****          return;
 4168              		.loc 2 233 8 view .LVU705
 233:Src/charlie.c ****          return;
 4169              		.loc 2 233 20 is_stmt 0 view .LVU706
 4170 0c44 454B     		ldr	r3, .L155
 4171 0c46 1B68     		ldr	r3, [r3]
 233:Src/charlie.c ****          return;
 4172              		.loc 2 233 10 view .LVU707
 4173 0c48 012B     		cmp	r3, #1
 4174 0c4a 01D1     		bne	.LCB3573
 4175 0c4c FFF7F8F9 		bl	.L96	@far jump
 4176              	.LCB3573:
 235:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 9);
 4177              		.loc 2 235 8 is_stmt 1 view .LVU708
 4178 0c50 FA20     		movs	r0, #250
 4179 0c52 4000     		lsls	r0, r0, #1
 4180 0c54 FFF7FEFF 		bl	HAL_Delay
 4181              	.LVL261:
 236:Src/charlie.c ****        if(stopFlag == 1)
 4182              		.loc 2 236 8 view .LVU709
 4183 0c58 0923     		movs	r3, #9
 4184 0c5a 1093     		str	r3, [sp, #64]
 4185 0c5c 2DA8     		add	r0, sp, #180
 4186 0c5e 0BA9     		add	r1, sp, #44
 4187 0c60 0B00     		movs	r3, r1
 4188 0c62 0200     		movs	r2, r0
 4189 0c64 23CA     		ldmia	r2!, {r0, r1, r5}
 4190 0c66 23C3     		stmia	r3!, {r0, r1, r5}
 4191 0c68 03CA     		ldmia	r2!, {r0, r1}
 4192 0c6a 03C3     		stmia	r3!, {r0, r1}
 4193 0c6c 28A8     		add	r0, sp, #160
 4194 0c6e 06A9     		add	r1, sp, #24
 4195 0c70 0B00     		movs	r3, r1
 4196 0c72 0200     		movs	r2, r0
 4197 0c74 23CA     		ldmia	r2!, {r0, r1, r5}
 4198 0c76 23C3     		stmia	r3!, {r0, r1, r5}
 4199 0c78 03CA     		ldmia	r2!, {r0, r1}
 4200 0c7a 03C3     		stmia	r3!, {r0, r1}
 4201 0c7c 23A8     		add	r0, sp, #140
 4202 0c7e 01A9     		add	r1, sp, #4
 4203 0c80 0B00     		movs	r3, r1
 4204 0c82 0200     		movs	r2, r0
 4205 0c84 23CA     		ldmia	r2!, {r0, r1, r5}
 4206 0c86 23C3     		stmia	r3!, {r0, r1, r5}
 4207 0c88 03CA     		ldmia	r2!, {r0, r1}
 4208 0c8a 03C3     		stmia	r3!, {r0, r1}
 4209 0c8c 229B     		ldr	r3, [sp, #136]
 4210 0c8e 0093     		str	r3, [sp]
 4211 0c90 1E98     		ldr	r0, [sp, #120]
 4212 0c92 1F99     		ldr	r1, [sp, #124]
 4213 0c94 209A     		ldr	r2, [sp, #128]
 4214 0c96 219B     		ldr	r3, [sp, #132]
 4215 0c98 FFF7FEFF 		bl	charlie
 4216              	.LVL262:
 237:Src/charlie.c ****          return;
ARM GAS  /tmp/cccixJrj.s 			page 103


 4217              		.loc 2 237 8 view .LVU710
 237:Src/charlie.c ****          return;
 4218              		.loc 2 237 20 is_stmt 0 view .LVU711
 4219 0c9c 2F4B     		ldr	r3, .L155
 4220 0c9e 1B68     		ldr	r3, [r3]
 237:Src/charlie.c ****          return;
 4221              		.loc 2 237 10 view .LVU712
 4222 0ca0 012B     		cmp	r3, #1
 4223 0ca2 01D1     		bne	.LCB3617
 4224 0ca4 FFF7CCF9 		bl	.L96	@far jump
 4225              	.LCB3617:
 239:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 10);
 4226              		.loc 2 239 8 is_stmt 1 view .LVU713
 4227 0ca8 FA20     		movs	r0, #250
 4228 0caa 4000     		lsls	r0, r0, #1
 4229 0cac FFF7FEFF 		bl	HAL_Delay
 4230              	.LVL263:
 240:Src/charlie.c ****        if(stopFlag == 1)
 4231              		.loc 2 240 8 view .LVU714
 4232 0cb0 0A23     		movs	r3, #10
 4233 0cb2 1093     		str	r3, [sp, #64]
 4234 0cb4 2DA8     		add	r0, sp, #180
 4235 0cb6 0BA9     		add	r1, sp, #44
 4236 0cb8 0B00     		movs	r3, r1
 4237 0cba 0200     		movs	r2, r0
 4238 0cbc 23CA     		ldmia	r2!, {r0, r1, r5}
 4239 0cbe 23C3     		stmia	r3!, {r0, r1, r5}
 4240 0cc0 03CA     		ldmia	r2!, {r0, r1}
 4241 0cc2 03C3     		stmia	r3!, {r0, r1}
 4242 0cc4 28A8     		add	r0, sp, #160
 4243 0cc6 06A9     		add	r1, sp, #24
 4244 0cc8 0B00     		movs	r3, r1
 4245 0cca 0200     		movs	r2, r0
 4246 0ccc 23CA     		ldmia	r2!, {r0, r1, r5}
 4247 0cce 23C3     		stmia	r3!, {r0, r1, r5}
 4248 0cd0 03CA     		ldmia	r2!, {r0, r1}
 4249 0cd2 03C3     		stmia	r3!, {r0, r1}
 4250 0cd4 23A8     		add	r0, sp, #140
 4251 0cd6 01A9     		add	r1, sp, #4
 4252 0cd8 0B00     		movs	r3, r1
 4253 0cda 0200     		movs	r2, r0
 4254 0cdc 23CA     		ldmia	r2!, {r0, r1, r5}
 4255 0cde 23C3     		stmia	r3!, {r0, r1, r5}
 4256 0ce0 03CA     		ldmia	r2!, {r0, r1}
 4257 0ce2 03C3     		stmia	r3!, {r0, r1}
 4258 0ce4 229B     		ldr	r3, [sp, #136]
 4259 0ce6 0093     		str	r3, [sp]
 4260 0ce8 1E98     		ldr	r0, [sp, #120]
 4261 0cea 1F99     		ldr	r1, [sp, #124]
 4262 0cec 209A     		ldr	r2, [sp, #128]
 4263 0cee 219B     		ldr	r3, [sp, #132]
 4264 0cf0 FFF7FEFF 		bl	charlie
 4265              	.LVL264:
 241:Src/charlie.c ****          return;
 4266              		.loc 2 241 8 view .LVU715
 241:Src/charlie.c ****          return;
 4267              		.loc 2 241 20 is_stmt 0 view .LVU716
ARM GAS  /tmp/cccixJrj.s 			page 104


 4268 0cf4 194B     		ldr	r3, .L155
 4269 0cf6 1B68     		ldr	r3, [r3]
 241:Src/charlie.c ****          return;
 4270              		.loc 2 241 10 view .LVU717
 4271 0cf8 012B     		cmp	r3, #1
 4272 0cfa 01D1     		bne	.LCB3661
 4273 0cfc FFF7A0F9 		bl	.L96	@far jump
 4274              	.LCB3661:
 243:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 11);
 4275              		.loc 2 243 8 is_stmt 1 view .LVU718
 4276 0d00 FA20     		movs	r0, #250
 4277 0d02 4000     		lsls	r0, r0, #1
 4278 0d04 FFF7FEFF 		bl	HAL_Delay
 4279              	.LVL265:
 244:Src/charlie.c ****        if(stopFlag == 1)
 4280              		.loc 2 244 8 view .LVU719
 4281 0d08 0B23     		movs	r3, #11
 4282 0d0a 1093     		str	r3, [sp, #64]
 4283 0d0c 2DA8     		add	r0, sp, #180
 4284 0d0e 0BA9     		add	r1, sp, #44
 4285 0d10 0B00     		movs	r3, r1
 4286 0d12 0200     		movs	r2, r0
 4287 0d14 23CA     		ldmia	r2!, {r0, r1, r5}
 4288 0d16 23C3     		stmia	r3!, {r0, r1, r5}
 4289 0d18 03CA     		ldmia	r2!, {r0, r1}
 4290 0d1a 03C3     		stmia	r3!, {r0, r1}
 4291 0d1c 28A8     		add	r0, sp, #160
 4292 0d1e 06A9     		add	r1, sp, #24
 4293 0d20 0B00     		movs	r3, r1
 4294 0d22 0200     		movs	r2, r0
 4295 0d24 23CA     		ldmia	r2!, {r0, r1, r5}
 4296 0d26 23C3     		stmia	r3!, {r0, r1, r5}
 4297 0d28 03CA     		ldmia	r2!, {r0, r1}
 4298 0d2a 03C3     		stmia	r3!, {r0, r1}
 4299 0d2c 23A8     		add	r0, sp, #140
 4300 0d2e 01A9     		add	r1, sp, #4
 4301 0d30 0B00     		movs	r3, r1
 4302 0d32 0200     		movs	r2, r0
 4303 0d34 23CA     		ldmia	r2!, {r0, r1, r5}
 4304 0d36 23C3     		stmia	r3!, {r0, r1, r5}
 4305 0d38 03CA     		ldmia	r2!, {r0, r1}
 4306 0d3a 03C3     		stmia	r3!, {r0, r1}
 4307 0d3c 229B     		ldr	r3, [sp, #136]
 4308 0d3e 0093     		str	r3, [sp]
 4309 0d40 1E98     		ldr	r0, [sp, #120]
 4310 0d42 1F99     		ldr	r1, [sp, #124]
 4311 0d44 209A     		ldr	r2, [sp, #128]
 4312 0d46 219B     		ldr	r3, [sp, #132]
 4313 0d48 FFF7FEFF 		bl	charlie
 4314              	.LVL266:
 245:Src/charlie.c ****          return;
 4315              		.loc 2 245 8 view .LVU720
 245:Src/charlie.c ****          return;
 4316              		.loc 2 245 20 is_stmt 0 view .LVU721
 4317 0d4c 034B     		ldr	r3, .L155
 4318 0d4e 1B68     		ldr	r3, [r3]
 245:Src/charlie.c ****          return;
ARM GAS  /tmp/cccixJrj.s 			page 105


 4319              		.loc 2 245 10 view .LVU722
 4320 0d50 012B     		cmp	r3, #1
 4321 0d52 01D1     		bne	.LCB3705
 4322 0d54 FFF774F9 		bl	.L96	@far jump
 4323              	.LCB3705:
 4324 0d58 02E0     		b	.L156
 4325              	.L157:
 4326 0d5a C046     		.align	2
 4327              	.L155:
 4328 0d5c 00000000 		.word	.LANCHOR0
 4329              	.L156:
 247:Src/charlie.c ****        charlie(PinA, PinB, PinC, PinD, 12);
 4330              		.loc 2 247 8 is_stmt 1 view .LVU723
 4331 0d60 FA20     		movs	r0, #250
 4332 0d62 4000     		lsls	r0, r0, #1
 4333 0d64 FFF7FEFF 		bl	HAL_Delay
 4334              	.LVL267:
 248:Src/charlie.c ****        if(stopFlag == 1)
 4335              		.loc 2 248 8 view .LVU724
 4336 0d68 0C23     		movs	r3, #12
 4337 0d6a 1093     		str	r3, [sp, #64]
 4338 0d6c 2DA8     		add	r0, sp, #180
 4339 0d6e 0BA9     		add	r1, sp, #44
 4340 0d70 0B00     		movs	r3, r1
 4341 0d72 0200     		movs	r2, r0
 4342 0d74 23CA     		ldmia	r2!, {r0, r1, r5}
 4343 0d76 23C3     		stmia	r3!, {r0, r1, r5}
 4344 0d78 03CA     		ldmia	r2!, {r0, r1}
 4345 0d7a 03C3     		stmia	r3!, {r0, r1}
 4346 0d7c 28A8     		add	r0, sp, #160
 4347 0d7e 06A9     		add	r1, sp, #24
 4348 0d80 0B00     		movs	r3, r1
 4349 0d82 0200     		movs	r2, r0
 4350 0d84 23CA     		ldmia	r2!, {r0, r1, r5}
 4351 0d86 23C3     		stmia	r3!, {r0, r1, r5}
 4352 0d88 03CA     		ldmia	r2!, {r0, r1}
 4353 0d8a 03C3     		stmia	r3!, {r0, r1}
 4354 0d8c 23A8     		add	r0, sp, #140
 4355 0d8e 01A9     		add	r1, sp, #4
 4356 0d90 0B00     		movs	r3, r1
 4357 0d92 0200     		movs	r2, r0
 4358 0d94 23CA     		ldmia	r2!, {r0, r1, r5}
 4359 0d96 23C3     		stmia	r3!, {r0, r1, r5}
 4360 0d98 03CA     		ldmia	r2!, {r0, r1}
 4361 0d9a 03C3     		stmia	r3!, {r0, r1}
 4362 0d9c 229B     		ldr	r3, [sp, #136]
 4363 0d9e 0093     		str	r3, [sp]
 4364 0da0 1E98     		ldr	r0, [sp, #120]
 4365 0da2 1F99     		ldr	r1, [sp, #124]
 4366 0da4 209A     		ldr	r2, [sp, #128]
 4367 0da6 219B     		ldr	r3, [sp, #132]
 4368 0da8 FFF7FEFF 		bl	charlie
 4369              	.LVL268:
 249:Src/charlie.c ****          return;
 4370              		.loc 2 249 8 view .LVU725
 249:Src/charlie.c ****          return;
 4371              		.loc 2 249 20 is_stmt 0 view .LVU726
ARM GAS  /tmp/cccixJrj.s 			page 106


 4372 0dac E84B     		ldr	r3, .L158
 4373 0dae 1B68     		ldr	r3, [r3]
 249:Src/charlie.c ****          return;
 4374              		.loc 2 249 10 view .LVU727
 4375 0db0 012B     		cmp	r3, #1
 4376 0db2 01D1     		bne	.LCB3758
 4377 0db4 FFF744F9 		bl	.L96	@far jump
 4378              	.LCB3758:
 251:Src/charlie.c ****    }
 4379              		.loc 2 251 8 is_stmt 1 view .LVU728
 4380 0db8 FA20     		movs	r0, #250
 4381 0dba 4000     		lsls	r0, r0, #1
 4382 0dbc FFF7FEFF 		bl	HAL_Delay
 4383              	.LVL269:
 4384 0dc0 FFF736F9 		bl	.L101	@ far jump
 4385              	.L136:
 256:Src/charlie.c ****       for(int i=0; i<10000; i++){
 4386              		.loc 2 256 7 view .LVU729
 4387 0dc4 0023     		movs	r3, #0
 4388 0dc6 1093     		str	r3, [sp, #64]
 4389 0dc8 2DA8     		add	r0, sp, #180
 4390 0dca 0BA9     		add	r1, sp, #44
 4391 0dcc 0B00     		movs	r3, r1
 4392 0dce 0200     		movs	r2, r0
 4393 0dd0 23CA     		ldmia	r2!, {r0, r1, r5}
 4394 0dd2 23C3     		stmia	r3!, {r0, r1, r5}
 4395 0dd4 03CA     		ldmia	r2!, {r0, r1}
 4396 0dd6 03C3     		stmia	r3!, {r0, r1}
 4397 0dd8 28A8     		add	r0, sp, #160
 4398 0dda 06A9     		add	r1, sp, #24
 4399 0ddc 0B00     		movs	r3, r1
 4400 0dde 0200     		movs	r2, r0
 4401 0de0 23CA     		ldmia	r2!, {r0, r1, r5}
 4402 0de2 23C3     		stmia	r3!, {r0, r1, r5}
 4403 0de4 03CA     		ldmia	r2!, {r0, r1}
 4404 0de6 03C3     		stmia	r3!, {r0, r1}
 4405 0de8 23A8     		add	r0, sp, #140
 4406 0dea 01A9     		add	r1, sp, #4
 4407 0dec 0B00     		movs	r3, r1
 4408 0dee 0200     		movs	r2, r0
 4409 0df0 23CA     		ldmia	r2!, {r0, r1, r5}
 4410 0df2 23C3     		stmia	r3!, {r0, r1, r5}
 4411 0df4 03CA     		ldmia	r2!, {r0, r1}
 4412 0df6 03C3     		stmia	r3!, {r0, r1}
 4413 0df8 229B     		ldr	r3, [sp, #136]
 4414 0dfa 0093     		str	r3, [sp]
 4415 0dfc 1E98     		ldr	r0, [sp, #120]
 4416 0dfe 1F99     		ldr	r1, [sp, #124]
 4417 0e00 209A     		ldr	r2, [sp, #128]
 4418 0e02 219B     		ldr	r3, [sp, #132]
 4419 0e04 FFF7FEFF 		bl	charlie
 4420              	.LVL270:
 257:Src/charlie.c ****          for(int j=1; j<=12; j++){
 4421              		.loc 2 257 7 view .LVU730
 4422              	.LBB8:
 257:Src/charlie.c ****          for(int j=1; j<=12; j++){
 4423              		.loc 2 257 11 view .LVU731
ARM GAS  /tmp/cccixJrj.s 			page 107


 257:Src/charlie.c ****          for(int j=1; j<=12; j++){
 4424              		.loc 2 257 15 is_stmt 0 view .LVU732
 4425 0e08 0026     		movs	r6, #0
 257:Src/charlie.c ****          for(int j=1; j<=12; j++){
 4426              		.loc 2 257 7 view .LVU733
 4427 0e0a 00E0     		b	.L103
 4428              	.LVL271:
 4429              	.L138:
 257:Src/charlie.c ****          for(int j=1; j<=12; j++){
 4430              		.loc 2 257 29 is_stmt 1 discriminator 2 view .LVU734
 257:Src/charlie.c ****          for(int j=1; j<=12; j++){
 4431              		.loc 2 257 30 is_stmt 0 discriminator 2 view .LVU735
 4432 0e0c 0136     		adds	r6, r6, #1
 4433              	.LVL272:
 4434              	.L103:
 257:Src/charlie.c ****          for(int j=1; j<=12; j++){
 4435              		.loc 2 257 20 is_stmt 1 discriminator 1 view .LVU736
 257:Src/charlie.c ****          for(int j=1; j<=12; j++){
 4436              		.loc 2 257 7 is_stmt 0 discriminator 1 view .LVU737
 4437 0e0e D14B     		ldr	r3, .L158+4
 4438 0e10 9E42     		cmp	r6, r3
 4439 0e12 01DD     		ble	.LCB3825
 4440 0e14 FFF710F9 		bl	.L102	@far jump
 4441              	.LCB3825:
 4442              	.LBB9:
 258:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 4443              		.loc 2 258 18 view .LVU738
 4444 0e18 0125     		movs	r5, #1
 4445              	.L105:
 4446              	.LVL273:
 258:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 4447              		.loc 2 258 23 is_stmt 1 discriminator 1 view .LVU739
 258:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 4448              		.loc 2 258 10 is_stmt 0 discriminator 1 view .LVU740
 4449 0e1a 0C2D     		cmp	r5, #12
 4450 0e1c F6DC     		bgt	.L138
 259:Src/charlie.c ****        //      HAL_Delay(1);
 4451              		.loc 2 259 14 is_stmt 1 view .LVU741
 4452 0e1e 1095     		str	r5, [sp, #64]
 4453 0e20 2DA8     		add	r0, sp, #180
 4454 0e22 0BA9     		add	r1, sp, #44
 4455 0e24 0B00     		movs	r3, r1
 4456 0e26 0200     		movs	r2, r0
 4457 0e28 83CA     		ldmia	r2!, {r0, r1, r7}
 4458 0e2a 83C3     		stmia	r3!, {r0, r1, r7}
 4459 0e2c 03CA     		ldmia	r2!, {r0, r1}
 4460 0e2e 03C3     		stmia	r3!, {r0, r1}
 4461 0e30 28A8     		add	r0, sp, #160
 4462 0e32 06A9     		add	r1, sp, #24
 4463 0e34 0B00     		movs	r3, r1
 4464 0e36 0200     		movs	r2, r0
 4465 0e38 83CA     		ldmia	r2!, {r0, r1, r7}
 4466 0e3a 83C3     		stmia	r3!, {r0, r1, r7}
 4467 0e3c 03CA     		ldmia	r2!, {r0, r1}
 4468 0e3e 03C3     		stmia	r3!, {r0, r1}
 4469 0e40 23A8     		add	r0, sp, #140
 4470 0e42 01A9     		add	r1, sp, #4
ARM GAS  /tmp/cccixJrj.s 			page 108


 4471 0e44 0B00     		movs	r3, r1
 4472 0e46 0200     		movs	r2, r0
 4473 0e48 83CA     		ldmia	r2!, {r0, r1, r7}
 4474 0e4a 83C3     		stmia	r3!, {r0, r1, r7}
 4475 0e4c 03CA     		ldmia	r2!, {r0, r1}
 4476 0e4e 03C3     		stmia	r3!, {r0, r1}
 4477 0e50 229B     		ldr	r3, [sp, #136]
 4478 0e52 0093     		str	r3, [sp]
 4479 0e54 1E98     		ldr	r0, [sp, #120]
 4480 0e56 1F99     		ldr	r1, [sp, #124]
 4481 0e58 209A     		ldr	r2, [sp, #128]
 4482 0e5a 219B     		ldr	r3, [sp, #132]
 4483 0e5c FFF7FEFF 		bl	charlie
 4484              	.LVL274:
 261:Src/charlie.c ****                return;
 4485              		.loc 2 261 14 view .LVU742
 261:Src/charlie.c ****                return;
 4486              		.loc 2 261 26 is_stmt 0 view .LVU743
 4487 0e60 BB4B     		ldr	r3, .L158
 4488 0e62 1B68     		ldr	r3, [r3]
 261:Src/charlie.c ****                return;
 4489              		.loc 2 261 16 view .LVU744
 4490 0e64 012B     		cmp	r3, #1
 4491 0e66 01D1     		bne	.LCB3872
 4492 0e68 FFF7EAF8 		bl	.L96	@far jump
 4493              	.LCB3872:
 258:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 4494              		.loc 2 258 30 is_stmt 1 discriminator 2 view .LVU745
 258:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 4495              		.loc 2 258 31 is_stmt 0 discriminator 2 view .LVU746
 4496 0e6c 0135     		adds	r5, r5, #1
 4497              	.LVL275:
 258:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 4498              		.loc 2 258 31 discriminator 2 view .LVU747
 4499 0e6e D4E7     		b	.L105
 4500              	.LVL276:
 4501              	.L141:
 258:Src/charlie.c ****              charlie(PinA, PinB, PinC, PinD, j);
 4502              		.loc 2 258 31 discriminator 2 view .LVU748
 4503              	.LBE9:
 4504              	.LBE8:
 4505              	.LBB10:
 272:Src/charlie.c ****             HAL_Delay(500);
 4506              		.loc 2 272 13 is_stmt 1 view .LVU749
 4507 0e70 0B33     		adds	r3, r3, #11
 4508              	.LVL277:
 272:Src/charlie.c ****             HAL_Delay(500);
 4509              		.loc 2 272 13 is_stmt 0 view .LVU750
 4510 0e72 1093     		str	r3, [sp, #64]
 4511 0e74 2DA8     		add	r0, sp, #180
 4512 0e76 0BA9     		add	r1, sp, #44
 4513 0e78 0B00     		movs	r3, r1
 4514 0e7a 0200     		movs	r2, r0
 4515 0e7c 13CA     		ldmia	r2!, {r0, r1, r4}
 4516 0e7e 13C3     		stmia	r3!, {r0, r1, r4}
 4517 0e80 03CA     		ldmia	r2!, {r0, r1}
 4518 0e82 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/cccixJrj.s 			page 109


 4519 0e84 28A8     		add	r0, sp, #160
 4520 0e86 06A9     		add	r1, sp, #24
 4521 0e88 0B00     		movs	r3, r1
 4522 0e8a 0200     		movs	r2, r0
 4523 0e8c 13CA     		ldmia	r2!, {r0, r1, r4}
 4524 0e8e 13C3     		stmia	r3!, {r0, r1, r4}
 4525 0e90 03CA     		ldmia	r2!, {r0, r1}
 4526 0e92 03C3     		stmia	r3!, {r0, r1}
 4527 0e94 23A8     		add	r0, sp, #140
 4528 0e96 01A9     		add	r1, sp, #4
 4529 0e98 0B00     		movs	r3, r1
 4530 0e9a 0200     		movs	r2, r0
 4531 0e9c 13CA     		ldmia	r2!, {r0, r1, r4}
 4532 0e9e 13C3     		stmia	r3!, {r0, r1, r4}
 4533 0ea0 03CA     		ldmia	r2!, {r0, r1}
 4534 0ea2 03C3     		stmia	r3!, {r0, r1}
 4535 0ea4 229B     		ldr	r3, [sp, #136]
 4536 0ea6 0093     		str	r3, [sp]
 4537 0ea8 1E98     		ldr	r0, [sp, #120]
 4538 0eaa 1F99     		ldr	r1, [sp, #124]
 4539 0eac 209A     		ldr	r2, [sp, #128]
 4540 0eae 219B     		ldr	r3, [sp, #132]
 4541 0eb0 FFF7FEFF 		bl	charlie
 4542              	.LVL278:
 273:Src/charlie.c ****             if(stopFlag == 1)
 4543              		.loc 2 273 13 is_stmt 1 view .LVU751
 4544 0eb4 FA20     		movs	r0, #250
 4545 0eb6 4000     		lsls	r0, r0, #1
 4546 0eb8 FFF7FEFF 		bl	HAL_Delay
 4547              	.LVL279:
 274:Src/charlie.c ****                return;
 4548              		.loc 2 274 13 view .LVU752
 274:Src/charlie.c ****                return;
 4549              		.loc 2 274 25 is_stmt 0 view .LVU753
 4550 0ebc A44B     		ldr	r3, .L158
 4551 0ebe 1B68     		ldr	r3, [r3]
 274:Src/charlie.c ****                return;
 4552              		.loc 2 274 15 view .LVU754
 4553 0ec0 012B     		cmp	r3, #1
 4554 0ec2 00D0     		beq	.LCB3932
 4555 0ec4 A3E1     		b	.L107	@long jump
 4556              	.LCB3932:
 274:Src/charlie.c ****                return;
 4557              		.loc 2 274 15 view .LVU755
 4558 0ec6 FFF7BBF8 		bl	.L96	@ far jump
 4559              	.LVL280:
 4560              	.L142:
 4561              	.LBB11:
 278:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 4562              		.loc 2 278 21 view .LVU756
 4563 0eca 0023     		movs	r3, #0
 4564              	.LVL281:
 278:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 4565              		.loc 2 278 21 view .LVU757
 4566 0ecc 9B46     		mov	fp, r3
 4567              	.L108:
 4568              	.LVL282:
ARM GAS  /tmp/cccixJrj.s 			page 110


 278:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 4569              		.loc 2 278 27 is_stmt 1 discriminator 1 view .LVU758
 278:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 4570              		.loc 2 278 13 is_stmt 0 discriminator 1 view .LVU759
 4571 0ece A14B     		ldr	r3, .L158+4
 4572 0ed0 9B45     		cmp	fp, r3
 4573 0ed2 49DC     		bgt	.L139
 279:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 1);
 4574              		.loc 2 279 16 is_stmt 1 view .LVU760
 4575 0ed4 0B23     		movs	r3, #11
 4576 0ed6 1093     		str	r3, [sp, #64]
 4577 0ed8 2DAB     		add	r3, sp, #180
 4578 0eda 9946     		mov	r9, r3
 4579 0edc 0BAB     		add	r3, sp, #44
 4580 0ede 9846     		mov	r8, r3
 4581 0ee0 4A46     		mov	r2, r9
 4582 0ee2 13CA     		ldmia	r2!, {r0, r1, r4}
 4583 0ee4 13C3     		stmia	r3!, {r0, r1, r4}
 4584 0ee6 03CA     		ldmia	r2!, {r0, r1}
 4585 0ee8 03C3     		stmia	r3!, {r0, r1}
 4586 0eea 28AF     		add	r7, sp, #160
 4587 0eec 06AE     		add	r6, sp, #24
 4588 0eee 3300     		movs	r3, r6
 4589 0ef0 3A00     		movs	r2, r7
 4590 0ef2 13CA     		ldmia	r2!, {r0, r1, r4}
 4591 0ef4 13C3     		stmia	r3!, {r0, r1, r4}
 4592 0ef6 03CA     		ldmia	r2!, {r0, r1}
 4593 0ef8 03C3     		stmia	r3!, {r0, r1}
 4594 0efa 23AD     		add	r5, sp, #140
 4595 0efc 01AB     		add	r3, sp, #4
 4596 0efe 1393     		str	r3, [sp, #76]
 4597 0f00 2A00     		movs	r2, r5
 4598 0f02 13CA     		ldmia	r2!, {r0, r1, r4}
 4599 0f04 13C3     		stmia	r3!, {r0, r1, r4}
 4600 0f06 03CA     		ldmia	r2!, {r0, r1}
 4601 0f08 03C3     		stmia	r3!, {r0, r1}
 4602 0f0a 229B     		ldr	r3, [sp, #136]
 4603 0f0c 0093     		str	r3, [sp]
 4604 0f0e 1E98     		ldr	r0, [sp, #120]
 4605 0f10 1F99     		ldr	r1, [sp, #124]
 4606 0f12 209A     		ldr	r2, [sp, #128]
 4607 0f14 219B     		ldr	r3, [sp, #132]
 4608 0f16 FFF7FEFF 		bl	charlie
 4609              	.LVL283:
 280:Src/charlie.c ****                if(stopFlag == 1)
 4610              		.loc 2 280 16 view .LVU761
 4611 0f1a 0123     		movs	r3, #1
 4612 0f1c 1093     		str	r3, [sp, #64]
 4613 0f1e 4346     		mov	r3, r8
 4614 0f20 4A46     		mov	r2, r9
 4615 0f22 13CA     		ldmia	r2!, {r0, r1, r4}
 4616 0f24 13C3     		stmia	r3!, {r0, r1, r4}
 4617 0f26 03CA     		ldmia	r2!, {r0, r1}
 4618 0f28 03C3     		stmia	r3!, {r0, r1}
 4619 0f2a 3300     		movs	r3, r6
 4620 0f2c 3A00     		movs	r2, r7
 4621 0f2e 13CA     		ldmia	r2!, {r0, r1, r4}
ARM GAS  /tmp/cccixJrj.s 			page 111


 4622 0f30 13C3     		stmia	r3!, {r0, r1, r4}
 4623 0f32 03CA     		ldmia	r2!, {r0, r1}
 4624 0f34 03C3     		stmia	r3!, {r0, r1}
 4625 0f36 1399     		ldr	r1, [sp, #76]
 4626 0f38 0B00     		movs	r3, r1
 4627 0f3a 2A00     		movs	r2, r5
 4628 0f3c 13CA     		ldmia	r2!, {r0, r1, r4}
 4629 0f3e 13C3     		stmia	r3!, {r0, r1, r4}
 4630 0f40 03CA     		ldmia	r2!, {r0, r1}
 4631 0f42 03C3     		stmia	r3!, {r0, r1}
 4632 0f44 229B     		ldr	r3, [sp, #136]
 4633 0f46 0093     		str	r3, [sp]
 4634 0f48 1E98     		ldr	r0, [sp, #120]
 4635 0f4a 1F99     		ldr	r1, [sp, #124]
 4636 0f4c 209A     		ldr	r2, [sp, #128]
 4637 0f4e 219B     		ldr	r3, [sp, #132]
 4638 0f50 FFF7FEFF 		bl	charlie
 4639              	.LVL284:
 281:Src/charlie.c ****                   return;
 4640              		.loc 2 281 16 view .LVU762
 281:Src/charlie.c ****                   return;
 4641              		.loc 2 281 28 is_stmt 0 view .LVU763
 4642 0f54 7E4B     		ldr	r3, .L158
 4643 0f56 1B68     		ldr	r3, [r3]
 281:Src/charlie.c ****                   return;
 4644              		.loc 2 281 18 view .LVU764
 4645 0f58 012B     		cmp	r3, #1
 4646 0f5a 01D1     		bne	.LCB4021
 4647 0f5c FFF770F8 		bl	.L96	@far jump
 4648              	.LCB4021:
 278:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 4649              		.loc 2 278 36 is_stmt 1 discriminator 2 view .LVU765
 278:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 4650              		.loc 2 278 37 is_stmt 0 discriminator 2 view .LVU766
 4651 0f60 0123     		movs	r3, #1
 4652 0f62 9C46     		mov	ip, r3
 4653 0f64 E344     		add	fp, fp, ip
 4654              	.LVL285:
 278:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 4655              		.loc 2 278 37 discriminator 2 view .LVU767
 4656 0f66 B2E7     		b	.L108
 4657              	.L139:
 278:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 11);
 4658              		.loc 2 278 37 discriminator 2 view .LVU768
 4659              	.LBE11:
 284:Src/charlie.c ****          }
 4660              		.loc 2 284 13 is_stmt 1 view .LVU769
 4661 0f68 0A20     		movs	r0, #10
 4662 0f6a FFF7FEFF 		bl	HAL_Delay
 4663              	.LVL286:
 4664 0f6e 52E1     		b	.L109
 4665              	.LVL287:
 4666              	.L143:
 4667              	.LBB12:
 287:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 4668              		.loc 2 287 21 is_stmt 0 view .LVU770
 4669 0f70 0023     		movs	r3, #0
ARM GAS  /tmp/cccixJrj.s 			page 112


 4670              	.LVL288:
 287:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 4671              		.loc 2 287 21 view .LVU771
 4672 0f72 9B46     		mov	fp, r3
 4673              	.L111:
 4674              	.LVL289:
 287:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 4675              		.loc 2 287 27 is_stmt 1 discriminator 1 view .LVU772
 287:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 4676              		.loc 2 287 13 is_stmt 0 discriminator 1 view .LVU773
 4677 0f74 774B     		ldr	r3, .L158+4
 4678 0f76 9B45     		cmp	fp, r3
 4679 0f78 00DD     		ble	.LCB4053
 4680 0f7a 50E1     		b	.L112	@long jump
 4681              	.LCB4053:
 288:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 10);
 4682              		.loc 2 288 16 is_stmt 1 view .LVU774
 4683 0f7c 0223     		movs	r3, #2
 4684 0f7e 1093     		str	r3, [sp, #64]
 4685 0f80 2DAB     		add	r3, sp, #180
 4686 0f82 9946     		mov	r9, r3
 4687 0f84 0BAB     		add	r3, sp, #44
 4688 0f86 9846     		mov	r8, r3
 4689 0f88 4A46     		mov	r2, r9
 4690 0f8a 13CA     		ldmia	r2!, {r0, r1, r4}
 4691 0f8c 13C3     		stmia	r3!, {r0, r1, r4}
 4692 0f8e 03CA     		ldmia	r2!, {r0, r1}
 4693 0f90 03C3     		stmia	r3!, {r0, r1}
 4694 0f92 28AF     		add	r7, sp, #160
 4695 0f94 06AE     		add	r6, sp, #24
 4696 0f96 3300     		movs	r3, r6
 4697 0f98 3A00     		movs	r2, r7
 4698 0f9a 13CA     		ldmia	r2!, {r0, r1, r4}
 4699 0f9c 13C3     		stmia	r3!, {r0, r1, r4}
 4700 0f9e 03CA     		ldmia	r2!, {r0, r1}
 4701 0fa0 03C3     		stmia	r3!, {r0, r1}
 4702 0fa2 23AD     		add	r5, sp, #140
 4703 0fa4 01AB     		add	r3, sp, #4
 4704 0fa6 1393     		str	r3, [sp, #76]
 4705 0fa8 2A00     		movs	r2, r5
 4706 0faa 13CA     		ldmia	r2!, {r0, r1, r4}
 4707 0fac 13C3     		stmia	r3!, {r0, r1, r4}
 4708 0fae 03CA     		ldmia	r2!, {r0, r1}
 4709 0fb0 03C3     		stmia	r3!, {r0, r1}
 4710 0fb2 229B     		ldr	r3, [sp, #136]
 4711 0fb4 0093     		str	r3, [sp]
 4712 0fb6 1E98     		ldr	r0, [sp, #120]
 4713 0fb8 1F99     		ldr	r1, [sp, #124]
 4714 0fba 209A     		ldr	r2, [sp, #128]
 4715 0fbc 219B     		ldr	r3, [sp, #132]
 4716 0fbe FFF7FEFF 		bl	charlie
 4717              	.LVL290:
 289:Src/charlie.c ****                if(stopFlag == 1)
 4718              		.loc 2 289 16 view .LVU775
 4719 0fc2 0A23     		movs	r3, #10
 4720 0fc4 1093     		str	r3, [sp, #64]
 4721 0fc6 4346     		mov	r3, r8
ARM GAS  /tmp/cccixJrj.s 			page 113


 4722 0fc8 4A46     		mov	r2, r9
 4723 0fca 13CA     		ldmia	r2!, {r0, r1, r4}
 4724 0fcc 13C3     		stmia	r3!, {r0, r1, r4}
 4725 0fce 03CA     		ldmia	r2!, {r0, r1}
 4726 0fd0 03C3     		stmia	r3!, {r0, r1}
 4727 0fd2 3300     		movs	r3, r6
 4728 0fd4 3A00     		movs	r2, r7
 4729 0fd6 13CA     		ldmia	r2!, {r0, r1, r4}
 4730 0fd8 13C3     		stmia	r3!, {r0, r1, r4}
 4731 0fda 03CA     		ldmia	r2!, {r0, r1}
 4732 0fdc 03C3     		stmia	r3!, {r0, r1}
 4733 0fde 1399     		ldr	r1, [sp, #76]
 4734 0fe0 0B00     		movs	r3, r1
 4735 0fe2 2A00     		movs	r2, r5
 4736 0fe4 13CA     		ldmia	r2!, {r0, r1, r4}
 4737 0fe6 13C3     		stmia	r3!, {r0, r1, r4}
 4738 0fe8 03CA     		ldmia	r2!, {r0, r1}
 4739 0fea 03C3     		stmia	r3!, {r0, r1}
 4740 0fec 229B     		ldr	r3, [sp, #136]
 4741 0fee 0093     		str	r3, [sp]
 4742 0ff0 1E98     		ldr	r0, [sp, #120]
 4743 0ff2 1F99     		ldr	r1, [sp, #124]
 4744 0ff4 209A     		ldr	r2, [sp, #128]
 4745 0ff6 219B     		ldr	r3, [sp, #132]
 4746 0ff8 FFF7FEFF 		bl	charlie
 4747              	.LVL291:
 290:Src/charlie.c ****                   return;
 4748              		.loc 2 290 16 view .LVU776
 290:Src/charlie.c ****                   return;
 4749              		.loc 2 290 28 is_stmt 0 view .LVU777
 4750 0ffc 544B     		ldr	r3, .L158
 4751 0ffe 1B68     		ldr	r3, [r3]
 290:Src/charlie.c ****                   return;
 4752              		.loc 2 290 18 view .LVU778
 4753 1000 012B     		cmp	r3, #1
 4754 1002 01D1     		bne	.LCB4125
 4755 1004 FFF71CF8 		bl	.L96	@far jump
 4756              	.LCB4125:
 287:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 4757              		.loc 2 287 36 is_stmt 1 discriminator 2 view .LVU779
 287:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 4758              		.loc 2 287 37 is_stmt 0 discriminator 2 view .LVU780
 4759 1008 0123     		movs	r3, #1
 4760 100a 9C46     		mov	ip, r3
 4761 100c E344     		add	fp, fp, ip
 4762              	.LVL292:
 287:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 4763              		.loc 2 287 37 discriminator 2 view .LVU781
 4764 100e B1E7     		b	.L111
 4765              	.LVL293:
 4766              	.L140:
 287:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 2);
 4767              		.loc 2 287 37 discriminator 2 view .LVU782
 4768              	.LBE12:
 4769              	.LBB13:
 295:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 4770              		.loc 2 295 36 is_stmt 1 discriminator 2 view .LVU783
ARM GAS  /tmp/cccixJrj.s 			page 114


 295:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 4771              		.loc 2 295 37 is_stmt 0 discriminator 2 view .LVU784
 4772 1010 0123     		movs	r3, #1
 4773 1012 9C46     		mov	ip, r3
 4774 1014 E344     		add	fp, fp, ip
 4775              	.LVL294:
 4776              	.L114:
 295:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 4777              		.loc 2 295 27 is_stmt 1 discriminator 1 view .LVU785
 295:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 4778              		.loc 2 295 13 is_stmt 0 discriminator 1 view .LVU786
 4779 1016 4F4B     		ldr	r3, .L158+4
 4780 1018 9B45     		cmp	fp, r3
 4781 101a 00DD     		ble	.LCB4154
 4782 101c 03E1     		b	.L115	@long jump
 4783              	.LCB4154:
 296:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 9);
 4784              		.loc 2 296 16 is_stmt 1 view .LVU787
 4785 101e 0323     		movs	r3, #3
 4786 1020 1093     		str	r3, [sp, #64]
 4787 1022 2DAB     		add	r3, sp, #180
 4788 1024 9946     		mov	r9, r3
 4789 1026 0BAB     		add	r3, sp, #44
 4790 1028 9846     		mov	r8, r3
 4791 102a 4A46     		mov	r2, r9
 4792 102c 13CA     		ldmia	r2!, {r0, r1, r4}
 4793 102e 13C3     		stmia	r3!, {r0, r1, r4}
 4794 1030 03CA     		ldmia	r2!, {r0, r1}
 4795 1032 03C3     		stmia	r3!, {r0, r1}
 4796 1034 28AF     		add	r7, sp, #160
 4797 1036 06AE     		add	r6, sp, #24
 4798 1038 3300     		movs	r3, r6
 4799 103a 3A00     		movs	r2, r7
 4800 103c 13CA     		ldmia	r2!, {r0, r1, r4}
 4801 103e 13C3     		stmia	r3!, {r0, r1, r4}
 4802 1040 03CA     		ldmia	r2!, {r0, r1}
 4803 1042 03C3     		stmia	r3!, {r0, r1}
 4804 1044 23AD     		add	r5, sp, #140
 4805 1046 01AB     		add	r3, sp, #4
 4806 1048 1393     		str	r3, [sp, #76]
 4807 104a 2A00     		movs	r2, r5
 4808 104c 13CA     		ldmia	r2!, {r0, r1, r4}
 4809 104e 13C3     		stmia	r3!, {r0, r1, r4}
 4810 1050 03CA     		ldmia	r2!, {r0, r1}
 4811 1052 03C3     		stmia	r3!, {r0, r1}
 4812 1054 229B     		ldr	r3, [sp, #136]
 4813 1056 0093     		str	r3, [sp]
 4814 1058 1E98     		ldr	r0, [sp, #120]
 4815 105a 1F99     		ldr	r1, [sp, #124]
 4816 105c 209A     		ldr	r2, [sp, #128]
 4817 105e 219B     		ldr	r3, [sp, #132]
 4818 1060 FFF7FEFF 		bl	charlie
 4819              	.LVL295:
 297:Src/charlie.c ****                if(stopFlag == 1)
 4820              		.loc 2 297 16 view .LVU788
 4821 1064 0923     		movs	r3, #9
 4822 1066 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/cccixJrj.s 			page 115


 4823 1068 4346     		mov	r3, r8
 4824 106a 4A46     		mov	r2, r9
 4825 106c 13CA     		ldmia	r2!, {r0, r1, r4}
 4826 106e 13C3     		stmia	r3!, {r0, r1, r4}
 4827 1070 03CA     		ldmia	r2!, {r0, r1}
 4828 1072 03C3     		stmia	r3!, {r0, r1}
 4829 1074 3300     		movs	r3, r6
 4830 1076 3A00     		movs	r2, r7
 4831 1078 13CA     		ldmia	r2!, {r0, r1, r4}
 4832 107a 13C3     		stmia	r3!, {r0, r1, r4}
 4833 107c 03CA     		ldmia	r2!, {r0, r1}
 4834 107e 03C3     		stmia	r3!, {r0, r1}
 4835 1080 1399     		ldr	r1, [sp, #76]
 4836 1082 0B00     		movs	r3, r1
 4837 1084 2A00     		movs	r2, r5
 4838 1086 13CA     		ldmia	r2!, {r0, r1, r4}
 4839 1088 13C3     		stmia	r3!, {r0, r1, r4}
 4840 108a 03CA     		ldmia	r2!, {r0, r1}
 4841 108c 03C3     		stmia	r3!, {r0, r1}
 4842 108e 229B     		ldr	r3, [sp, #136]
 4843 1090 0093     		str	r3, [sp]
 4844 1092 1E98     		ldr	r0, [sp, #120]
 4845 1094 1F99     		ldr	r1, [sp, #124]
 4846 1096 209A     		ldr	r2, [sp, #128]
 4847 1098 219B     		ldr	r3, [sp, #132]
 4848 109a FFF7FEFF 		bl	charlie
 4849              	.LVL296:
 298:Src/charlie.c ****                   return;
 4850              		.loc 2 298 16 view .LVU789
 298:Src/charlie.c ****                   return;
 4851              		.loc 2 298 28 is_stmt 0 view .LVU790
 4852 109e 2C4B     		ldr	r3, .L158
 4853 10a0 1B68     		ldr	r3, [r3]
 298:Src/charlie.c ****                   return;
 4854              		.loc 2 298 18 view .LVU791
 4855 10a2 012B     		cmp	r3, #1
 4856 10a4 B4D1     		bne	.L140
 4857 10a6 FEF7CBFF 		bl	.L96	@ far jump
 4858              	.LVL297:
 4859              	.L144:
 295:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 4860              		.loc 2 295 21 view .LVU792
 4861 10aa 0023     		movs	r3, #0
 4862              	.LVL298:
 295:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 4863              		.loc 2 295 21 view .LVU793
 4864 10ac 9B46     		mov	fp, r3
 4865 10ae B2E7     		b	.L114
 4866              	.LVL299:
 4867              	.L145:
 295:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 3);
 4868              		.loc 2 295 21 view .LVU794
 4869              	.LBE13:
 4870              	.LBB14:
 303:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 4871              		.loc 2 303 21 view .LVU795
 4872 10b0 0023     		movs	r3, #0
ARM GAS  /tmp/cccixJrj.s 			page 116


 4873              	.LVL300:
 303:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 4874              		.loc 2 303 21 view .LVU796
 4875 10b2 9B46     		mov	fp, r3
 4876              	.L117:
 4877              	.LVL301:
 303:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 4878              		.loc 2 303 27 is_stmt 1 discriminator 1 view .LVU797
 303:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 4879              		.loc 2 303 13 is_stmt 0 discriminator 1 view .LVU798
 4880 10b4 274B     		ldr	r3, .L158+4
 4881 10b6 9B45     		cmp	fp, r3
 4882 10b8 00DD     		ble	.LCB4252
 4883 10ba B8E0     		b	.L118	@long jump
 4884              	.LCB4252:
 304:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 8);
 4885              		.loc 2 304 16 is_stmt 1 view .LVU799
 4886 10bc 0423     		movs	r3, #4
 4887 10be 1093     		str	r3, [sp, #64]
 4888 10c0 2DAB     		add	r3, sp, #180
 4889 10c2 9946     		mov	r9, r3
 4890 10c4 0BAB     		add	r3, sp, #44
 4891 10c6 9846     		mov	r8, r3
 4892 10c8 4A46     		mov	r2, r9
 4893 10ca 13CA     		ldmia	r2!, {r0, r1, r4}
 4894 10cc 13C3     		stmia	r3!, {r0, r1, r4}
 4895 10ce 03CA     		ldmia	r2!, {r0, r1}
 4896 10d0 03C3     		stmia	r3!, {r0, r1}
 4897 10d2 28AF     		add	r7, sp, #160
 4898 10d4 06AE     		add	r6, sp, #24
 4899 10d6 3300     		movs	r3, r6
 4900 10d8 3A00     		movs	r2, r7
 4901 10da 13CA     		ldmia	r2!, {r0, r1, r4}
 4902 10dc 13C3     		stmia	r3!, {r0, r1, r4}
 4903 10de 03CA     		ldmia	r2!, {r0, r1}
 4904 10e0 03C3     		stmia	r3!, {r0, r1}
 4905 10e2 23AD     		add	r5, sp, #140
 4906 10e4 01AB     		add	r3, sp, #4
 4907 10e6 1393     		str	r3, [sp, #76]
 4908 10e8 2A00     		movs	r2, r5
 4909 10ea 13CA     		ldmia	r2!, {r0, r1, r4}
 4910 10ec 13C3     		stmia	r3!, {r0, r1, r4}
 4911 10ee 03CA     		ldmia	r2!, {r0, r1}
 4912 10f0 03C3     		stmia	r3!, {r0, r1}
 4913 10f2 229B     		ldr	r3, [sp, #136]
 4914 10f4 0093     		str	r3, [sp]
 4915 10f6 1E98     		ldr	r0, [sp, #120]
 4916 10f8 1F99     		ldr	r1, [sp, #124]
 4917 10fa 209A     		ldr	r2, [sp, #128]
 4918 10fc 219B     		ldr	r3, [sp, #132]
 4919 10fe FFF7FEFF 		bl	charlie
 4920              	.LVL302:
 305:Src/charlie.c ****                if(stopFlag == 1)
 4921              		.loc 2 305 16 view .LVU800
 4922 1102 0823     		movs	r3, #8
 4923 1104 1093     		str	r3, [sp, #64]
 4924 1106 4346     		mov	r3, r8
ARM GAS  /tmp/cccixJrj.s 			page 117


 4925 1108 4A46     		mov	r2, r9
 4926 110a 13CA     		ldmia	r2!, {r0, r1, r4}
 4927 110c 13C3     		stmia	r3!, {r0, r1, r4}
 4928 110e 03CA     		ldmia	r2!, {r0, r1}
 4929 1110 03C3     		stmia	r3!, {r0, r1}
 4930 1112 3300     		movs	r3, r6
 4931 1114 3A00     		movs	r2, r7
 4932 1116 13CA     		ldmia	r2!, {r0, r1, r4}
 4933 1118 13C3     		stmia	r3!, {r0, r1, r4}
 4934 111a 03CA     		ldmia	r2!, {r0, r1}
 4935 111c 03C3     		stmia	r3!, {r0, r1}
 4936 111e 1399     		ldr	r1, [sp, #76]
 4937 1120 0B00     		movs	r3, r1
 4938 1122 2A00     		movs	r2, r5
 4939 1124 13CA     		ldmia	r2!, {r0, r1, r4}
 4940 1126 13C3     		stmia	r3!, {r0, r1, r4}
 4941 1128 03CA     		ldmia	r2!, {r0, r1}
 4942 112a 03C3     		stmia	r3!, {r0, r1}
 4943 112c 229B     		ldr	r3, [sp, #136]
 4944 112e 0093     		str	r3, [sp]
 4945 1130 1E98     		ldr	r0, [sp, #120]
 4946 1132 1F99     		ldr	r1, [sp, #124]
 4947 1134 209A     		ldr	r2, [sp, #128]
 4948 1136 219B     		ldr	r3, [sp, #132]
 4949 1138 FFF7FEFF 		bl	charlie
 4950              	.LVL303:
 306:Src/charlie.c ****                   return;
 4951              		.loc 2 306 16 view .LVU801
 306:Src/charlie.c ****                   return;
 4952              		.loc 2 306 28 is_stmt 0 view .LVU802
 4953 113c 044B     		ldr	r3, .L158
 4954 113e 1B68     		ldr	r3, [r3]
 306:Src/charlie.c ****                   return;
 4955              		.loc 2 306 18 view .LVU803
 4956 1140 012B     		cmp	r3, #1
 4957 1142 01D1     		bne	.LCB4324
 4958 1144 FEF77CFF 		bl	.L96	@far jump
 4959              	.LCB4324:
 303:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 4960              		.loc 2 303 36 is_stmt 1 discriminator 2 view .LVU804
 303:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 4961              		.loc 2 303 37 is_stmt 0 discriminator 2 view .LVU805
 4962 1148 0123     		movs	r3, #1
 4963 114a 9C46     		mov	ip, r3
 4964 114c E344     		add	fp, fp, ip
 4965              	.LVL304:
 303:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
 4966              		.loc 2 303 37 discriminator 2 view .LVU806
 4967 114e B1E7     		b	.L117
 4968              	.L159:
 4969              		.align	2
 4970              	.L158:
 4971 1150 00000000 		.word	.LANCHOR0
 4972 1154 0F270000 		.word	9999
 4973              	.LVL305:
 4974              	.L146:
 303:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 4);
ARM GAS  /tmp/cccixJrj.s 			page 118


 4975              		.loc 2 303 37 discriminator 2 view .LVU807
 4976              	.LBE14:
 4977              	.LBB15:
 311:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 4978              		.loc 2 311 21 view .LVU808
 4979 1158 0023     		movs	r3, #0
 4980              	.LVL306:
 311:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 4981              		.loc 2 311 21 view .LVU809
 4982 115a 9B46     		mov	fp, r3
 4983              	.L120:
 4984              	.LVL307:
 311:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 4985              		.loc 2 311 27 is_stmt 1 discriminator 1 view .LVU810
 311:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 4986              		.loc 2 311 13 is_stmt 0 discriminator 1 view .LVU811
 4987 115c 4E4B     		ldr	r3, .L160
 4988 115e 9B45     		cmp	fp, r3
 4989 1160 68DC     		bgt	.L121
 312:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 7);
 4990              		.loc 2 312 16 is_stmt 1 view .LVU812
 4991 1162 0523     		movs	r3, #5
 4992 1164 1093     		str	r3, [sp, #64]
 4993 1166 2DAB     		add	r3, sp, #180
 4994 1168 9946     		mov	r9, r3
 4995 116a 0BAB     		add	r3, sp, #44
 4996 116c 9846     		mov	r8, r3
 4997 116e 4A46     		mov	r2, r9
 4998 1170 13CA     		ldmia	r2!, {r0, r1, r4}
 4999 1172 13C3     		stmia	r3!, {r0, r1, r4}
 5000 1174 03CA     		ldmia	r2!, {r0, r1}
 5001 1176 03C3     		stmia	r3!, {r0, r1}
 5002 1178 28AF     		add	r7, sp, #160
 5003 117a 06AE     		add	r6, sp, #24
 5004 117c 3300     		movs	r3, r6
 5005 117e 3A00     		movs	r2, r7
 5006 1180 13CA     		ldmia	r2!, {r0, r1, r4}
 5007 1182 13C3     		stmia	r3!, {r0, r1, r4}
 5008 1184 03CA     		ldmia	r2!, {r0, r1}
 5009 1186 03C3     		stmia	r3!, {r0, r1}
 5010 1188 23AD     		add	r5, sp, #140
 5011 118a 01AB     		add	r3, sp, #4
 5012 118c 1393     		str	r3, [sp, #76]
 5013 118e 2A00     		movs	r2, r5
 5014 1190 13CA     		ldmia	r2!, {r0, r1, r4}
 5015 1192 13C3     		stmia	r3!, {r0, r1, r4}
 5016 1194 03CA     		ldmia	r2!, {r0, r1}
 5017 1196 03C3     		stmia	r3!, {r0, r1}
 5018 1198 229B     		ldr	r3, [sp, #136]
 5019 119a 0093     		str	r3, [sp]
 5020 119c 1E98     		ldr	r0, [sp, #120]
 5021 119e 1F99     		ldr	r1, [sp, #124]
 5022 11a0 209A     		ldr	r2, [sp, #128]
 5023 11a2 219B     		ldr	r3, [sp, #132]
 5024 11a4 FFF7FEFF 		bl	charlie
 5025              	.LVL308:
 313:Src/charlie.c ****                if(stopFlag == 1)
ARM GAS  /tmp/cccixJrj.s 			page 119


 5026              		.loc 2 313 16 view .LVU813
 5027 11a8 0723     		movs	r3, #7
 5028 11aa 1093     		str	r3, [sp, #64]
 5029 11ac 4346     		mov	r3, r8
 5030 11ae 4A46     		mov	r2, r9
 5031 11b0 13CA     		ldmia	r2!, {r0, r1, r4}
 5032 11b2 13C3     		stmia	r3!, {r0, r1, r4}
 5033 11b4 03CA     		ldmia	r2!, {r0, r1}
 5034 11b6 03C3     		stmia	r3!, {r0, r1}
 5035 11b8 3300     		movs	r3, r6
 5036 11ba 3A00     		movs	r2, r7
 5037 11bc 13CA     		ldmia	r2!, {r0, r1, r4}
 5038 11be 13C3     		stmia	r3!, {r0, r1, r4}
 5039 11c0 03CA     		ldmia	r2!, {r0, r1}
 5040 11c2 03C3     		stmia	r3!, {r0, r1}
 5041 11c4 1399     		ldr	r1, [sp, #76]
 5042 11c6 0B00     		movs	r3, r1
 5043 11c8 2A00     		movs	r2, r5
 5044 11ca 13CA     		ldmia	r2!, {r0, r1, r4}
 5045 11cc 13C3     		stmia	r3!, {r0, r1, r4}
 5046 11ce 03CA     		ldmia	r2!, {r0, r1}
 5047 11d0 03C3     		stmia	r3!, {r0, r1}
 5048 11d2 229B     		ldr	r3, [sp, #136]
 5049 11d4 0093     		str	r3, [sp]
 5050 11d6 1E98     		ldr	r0, [sp, #120]
 5051 11d8 1F99     		ldr	r1, [sp, #124]
 5052 11da 209A     		ldr	r2, [sp, #128]
 5053 11dc 219B     		ldr	r3, [sp, #132]
 5054 11de FFF7FEFF 		bl	charlie
 5055              	.LVL309:
 314:Src/charlie.c ****                   return;
 5056              		.loc 2 314 16 view .LVU814
 314:Src/charlie.c ****                   return;
 5057              		.loc 2 314 28 is_stmt 0 view .LVU815
 5058 11e2 2E4B     		ldr	r3, .L160+4
 5059 11e4 1B68     		ldr	r3, [r3]
 314:Src/charlie.c ****                   return;
 5060              		.loc 2 314 18 view .LVU816
 5061 11e6 012B     		cmp	r3, #1
 5062 11e8 01D1     		bne	.LCB4427
 5063 11ea FEF729FF 		bl	.L96	@far jump
 5064              	.LCB4427:
 311:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 5065              		.loc 2 311 36 is_stmt 1 discriminator 2 view .LVU817
 311:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 5066              		.loc 2 311 37 is_stmt 0 discriminator 2 view .LVU818
 5067 11ee 0123     		movs	r3, #1
 5068 11f0 9C46     		mov	ip, r3
 5069 11f2 E344     		add	fp, fp, ip
 5070              	.LVL310:
 311:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 5071              		.loc 2 311 37 discriminator 2 view .LVU819
 5072 11f4 B2E7     		b	.L120
 5073              	.LVL311:
 5074              	.L123:
 311:Src/charlie.c ****                charlie(PinA, PinB, PinC, PinD, 5);
 5075              		.loc 2 311 37 discriminator 2 view .LVU820
ARM GAS  /tmp/cccixJrj.s 			page 120


 5076              	.LBE15:
 270:Src/charlie.c ****          if(i == 1){
 5077              		.loc 2 270 27 is_stmt 1 discriminator 2 view .LVU821
 270:Src/charlie.c ****          if(i == 1){
 5078              		.loc 2 270 28 is_stmt 0 discriminator 2 view .LVU822
 5079 11f6 0123     		movs	r3, #1
 5080 11f8 9C46     		mov	ip, r3
 5081 11fa E244     		add	r10, r10, ip
 5082              	.LVL312:
 5083              	.L106:
 270:Src/charlie.c ****          if(i == 1){
 5084              		.loc 2 270 21 is_stmt 1 discriminator 1 view .LVU823
 270:Src/charlie.c ****          if(i == 1){
 5085              		.loc 2 270 7 is_stmt 0 discriminator 1 view .LVU824
 5086 11fc 5346     		mov	r3, r10
 5087 11fe 072B     		cmp	r3, #7
 5088 1200 01DD     		ble	.LCB4454
 5089 1202 FEF71DFF 		bl	.L96	@far jump
 5090              	.LCB4454:
 271:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 5091              		.loc 2 271 10 is_stmt 1 view .LVU825
 271:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 12);
 5092              		.loc 2 271 12 is_stmt 0 view .LVU826
 5093 1206 5346     		mov	r3, r10
 5094 1208 012B     		cmp	r3, #1
 5095 120a 00D1     		bne	.LCB4458
 5096 120c 30E6     		b	.L141	@long jump
 5097              	.LCB4458:
 5098              	.L107:
 277:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5099              		.loc 2 277 10 is_stmt 1 view .LVU827
 277:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5100              		.loc 2 277 12 is_stmt 0 view .LVU828
 5101 120e 5346     		mov	r3, r10
 5102 1210 022B     		cmp	r3, #2
 5103 1212 00D1     		bne	.LCB4464
 5104 1214 59E6     		b	.L142	@long jump
 5105              	.LCB4464:
 5106              	.L109:
 286:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5107              		.loc 2 286 10 is_stmt 1 view .LVU829
 286:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5108              		.loc 2 286 12 is_stmt 0 view .LVU830
 5109 1216 5346     		mov	r3, r10
 5110 1218 032B     		cmp	r3, #3
 5111 121a 00D1     		bne	.LCB4469
 5112 121c A8E6     		b	.L143	@long jump
 5113              	.LCB4469:
 5114              	.L112:
 294:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5115              		.loc 2 294 10 is_stmt 1 view .LVU831
 294:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5116              		.loc 2 294 12 is_stmt 0 view .LVU832
 5117 121e 5346     		mov	r3, r10
 5118 1220 042B     		cmp	r3, #4
 5119 1222 00D1     		bne	.LCB4474
 5120 1224 41E7     		b	.L144	@long jump
ARM GAS  /tmp/cccixJrj.s 			page 121


 5121              	.LCB4474:
 5122              	.L115:
 302:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5123              		.loc 2 302 10 is_stmt 1 view .LVU833
 302:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5124              		.loc 2 302 12 is_stmt 0 view .LVU834
 5125 1226 5346     		mov	r3, r10
 5126 1228 052B     		cmp	r3, #5
 5127 122a 00D1     		bne	.LCB4479
 5128 122c 40E7     		b	.L145	@long jump
 5129              	.LCB4479:
 5130              	.L118:
 310:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5131              		.loc 2 310 10 is_stmt 1 view .LVU835
 310:Src/charlie.c ****             for(int j =0; j<10000; j++){
 5132              		.loc 2 310 12 is_stmt 0 view .LVU836
 5133 122e 5346     		mov	r3, r10
 5134 1230 062B     		cmp	r3, #6
 5135 1232 91D0     		beq	.L146
 5136              	.L121:
 318:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 5137              		.loc 2 318 10 is_stmt 1 view .LVU837
 318:Src/charlie.c ****             charlie(PinA, PinB, PinC, PinD, 6);
 5138              		.loc 2 318 12 is_stmt 0 view .LVU838
 5139 1234 5346     		mov	r3, r10
 5140 1236 072B     		cmp	r3, #7
 5141 1238 DDD1     		bne	.L123
 5142              	.LVL313:
 319:Src/charlie.c ****             HAL_Delay(500);
 5143              		.loc 2 319 13 is_stmt 1 view .LVU839
 5144 123a 013B     		subs	r3, r3, #1
 5145              	.LVL314:
 319:Src/charlie.c ****             HAL_Delay(500);
 5146              		.loc 2 319 13 is_stmt 0 view .LVU840
 5147 123c 1093     		str	r3, [sp, #64]
 5148 123e 2DA8     		add	r0, sp, #180
 5149 1240 0BA9     		add	r1, sp, #44
 5150 1242 0B00     		movs	r3, r1
 5151 1244 0200     		movs	r2, r0
 5152 1246 13CA     		ldmia	r2!, {r0, r1, r4}
 5153 1248 13C3     		stmia	r3!, {r0, r1, r4}
 5154 124a 03CA     		ldmia	r2!, {r0, r1}
 5155 124c 03C3     		stmia	r3!, {r0, r1}
 5156 124e 28A8     		add	r0, sp, #160
 5157 1250 06A9     		add	r1, sp, #24
 5158 1252 0B00     		movs	r3, r1
 5159 1254 0200     		movs	r2, r0
 5160 1256 13CA     		ldmia	r2!, {r0, r1, r4}
 5161 1258 13C3     		stmia	r3!, {r0, r1, r4}
 5162 125a 03CA     		ldmia	r2!, {r0, r1}
 5163 125c 03C3     		stmia	r3!, {r0, r1}
 5164 125e 23A8     		add	r0, sp, #140
 5165 1260 01A9     		add	r1, sp, #4
 5166 1262 0B00     		movs	r3, r1
 5167 1264 0200     		movs	r2, r0
 5168 1266 13CA     		ldmia	r2!, {r0, r1, r4}
 5169 1268 13C3     		stmia	r3!, {r0, r1, r4}
ARM GAS  /tmp/cccixJrj.s 			page 122


 5170 126a 03CA     		ldmia	r2!, {r0, r1}
 5171 126c 03C3     		stmia	r3!, {r0, r1}
 5172 126e 229B     		ldr	r3, [sp, #136]
 5173 1270 0093     		str	r3, [sp]
 5174 1272 1E98     		ldr	r0, [sp, #120]
 5175 1274 1F99     		ldr	r1, [sp, #124]
 5176 1276 209A     		ldr	r2, [sp, #128]
 5177 1278 219B     		ldr	r3, [sp, #132]
 5178 127a FFF7FEFF 		bl	charlie
 5179              	.LVL315:
 320:Src/charlie.c ****             if(stopFlag == 1)
 5180              		.loc 2 320 13 is_stmt 1 view .LVU841
 5181 127e FA20     		movs	r0, #250
 5182 1280 4000     		lsls	r0, r0, #1
 5183 1282 FFF7FEFF 		bl	HAL_Delay
 5184              	.LVL316:
 321:Src/charlie.c ****                return;
 5185              		.loc 2 321 13 view .LVU842
 321:Src/charlie.c ****                return;
 5186              		.loc 2 321 25 is_stmt 0 view .LVU843
 5187 1286 054B     		ldr	r3, .L160+4
 5188 1288 1B68     		ldr	r3, [r3]
 321:Src/charlie.c ****                return;
 5189              		.loc 2 321 15 view .LVU844
 5190 128a 012B     		cmp	r3, #1
 5191 128c B3D1     		bne	.L123
 5192 128e FEF7D7FE 		bl	.L96	@ far jump
 5193              	.LVL317:
 5194              	.L137:
 270:Src/charlie.c ****          if(i == 1){
 5195              		.loc 2 270 15 view .LVU845
 5196 1292 0123     		movs	r3, #1
 5197 1294 9A46     		mov	r10, r3
 5198 1296 B1E7     		b	.L106
 5199              	.L161:
 5200              		.align	2
 5201              	.L160:
 5202 1298 0F270000 		.word	9999
 5203 129c 00000000 		.word	.LANCHOR0
 5204              	.LBE10:
 5205              		.cfi_endproc
 5206              	.LFE45:
 5208              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 5209              		.align	2
 5210              	.LC17:
 5211 0000 496E2068 		.ascii	"In hour button\012\000"
 5211      6F757220 
 5211      62757474 
 5211      6F6E0A00 
 5212              		.align	2
 5213              	.LC19:
 5214 0010 686F7572 		.ascii	"hour is %d \012\000"
 5214      20697320 
 5214      2564200A 
 5214      00
 5215 001d 000000   		.align	2
 5216              	.LC21:
ARM GAS  /tmp/cccixJrj.s 			page 123


 5217 0020 53657420 		.ascii	"Set hour time error is %d \012\000"
 5217      686F7572 
 5217      2074696D 
 5217      65206572 
 5217      726F7220 
 5218              		.align	2
 5219              	.LC24:
 5220 003c 496E206D 		.ascii	"In minute button\012\000"
 5220      696E7574 
 5220      65206275 
 5220      74746F6E 
 5220      0A00
 5221 004e 0000     		.align	2
 5222              	.LC26:
 5223 0050 6D696E75 		.ascii	"minute is %d \012\000"
 5223      74652069 
 5223      73202564 
 5223      200A00
 5224 005f 00       		.align	2
 5225              	.LC28:
 5226 0060 6D696E75 		.ascii	"minute time error %d \012\000"
 5226      74652074 
 5226      696D6520 
 5226      6572726F 
 5226      72202564 
 5227 0077 00       		.align	2
 5228              	.LC30:
 5229 0078 57652061 		.ascii	"We are in mode %d \012\000"
 5229      72652069 
 5229      6E206D6F 
 5229      64652025 
 5229      64200A00 
 5230              		.section	.text.main,"ax",%progbits
 5231              		.align	1
 5232              		.global	main
 5233              		.syntax unified
 5234              		.code	16
 5235              		.thumb_func
 5236              		.fpu softvfp
 5238              	main:
 5239              	.LFB54:
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 5240              		.loc 1 88 1 is_stmt 1 view -0
 5241              		.cfi_startproc
 5242              		@ args = 0, pretend = 0, frame = 168
 5243              		@ frame_needed = 0, uses_anonymous_args = 0
 5244 0000 70B5     		push	{r4, r5, r6, lr}
 5245              	.LCFI36:
 5246              		.cfi_def_cfa_offset 16
 5247              		.cfi_offset 4, -16
 5248              		.cfi_offset 5, -12
 5249              		.cfi_offset 6, -8
 5250              		.cfi_offset 14, -4
 5251 0002 C2B0     		sub	sp, sp, #264
 5252              	.LCFI37:
 5253              		.cfi_def_cfa_offset 280
  96:Src/main.c    **** 
ARM GAS  /tmp/cccixJrj.s 			page 124


 5254              		.loc 1 96 3 view .LVU847
 5255 0004 FFF7FEFF 		bl	HAL_Init
 5256              	.LVL318:
 103:Src/main.c    **** 
 5257              		.loc 1 103 3 view .LVU848
 5258 0008 FFF7FEFF 		bl	SystemClock_Config
 5259              	.LVL319:
 110:Src/main.c    ****   MX_USB_DEVICE_Init();
 5260              		.loc 1 110 3 view .LVU849
 5261 000c FFF7FEFF 		bl	MX_GPIO_Init
 5262              	.LVL320:
 111:Src/main.c    ****   MX_RTC_Init();
 5263              		.loc 1 111 3 view .LVU850
 5264 0010 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 5265              	.LVL321:
 112:Src/main.c    ****   MX_TIM1_Init();
 5266              		.loc 1 112 3 view .LVU851
 5267 0014 FFF7FEFF 		bl	MX_RTC_Init
 5268              	.LVL322:
 113:Src/main.c    ****   /* USER CODE BEGIN 2 */
 5269              		.loc 1 113 3 view .LVU852
 5270 0018 FFF7FEFF 		bl	MX_TIM1_Init
 5271              	.LVL323:
 115:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 5272              		.loc 1 115 3 view .LVU853
 115:Src/main.c    ****   GPIO_InitTypeDef PinB = initB();
 5273              		.loc 1 115 27 is_stmt 0 view .LVU854
 5274 001c 3DA8     		add	r0, sp, #244
 5275 001e FFF7FEFF 		bl	initA
 5276              	.LVL324:
 116:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 5277              		.loc 1 116 3 is_stmt 1 view .LVU855
 116:Src/main.c    ****   GPIO_InitTypeDef PinC = initC();
 5278              		.loc 1 116 27 is_stmt 0 view .LVU856
 5279 0022 38A8     		add	r0, sp, #224
 5280 0024 FFF7FEFF 		bl	initB
 5281              	.LVL325:
 117:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 5282              		.loc 1 117 3 is_stmt 1 view .LVU857
 117:Src/main.c    ****   GPIO_InitTypeDef PinD = initD();
 5283              		.loc 1 117 27 is_stmt 0 view .LVU858
 5284 0028 33A8     		add	r0, sp, #204
 5285 002a FFF7FEFF 		bl	initC
 5286              	.LVL326:
 118:Src/main.c    **** 
 5287              		.loc 1 118 3 is_stmt 1 view .LVU859
 118:Src/main.c    **** 
 5288              		.loc 1 118 27 is_stmt 0 view .LVU860
 5289 002e 2EA8     		add	r0, sp, #184
 5290 0030 FFF7FEFF 		bl	initD
 5291              	.LVL327:
 120:Src/main.c    ****   int newMinutes = 0;
 5292              		.loc 1 120 3 is_stmt 1 view .LVU861
 120:Src/main.c    ****   int newMinutes = 0;
 5293              		.loc 1 120 12 is_stmt 0 view .LVU862
 5294 0034 864B     		ldr	r3, .L180
 5295 0036 0022     		movs	r2, #0
ARM GAS  /tmp/cccixJrj.s 			page 125


 5296 0038 1A60     		str	r2, [r3]
 121:Src/main.c    ****   int newHours = 0;
 5297              		.loc 1 121 3 is_stmt 1 view .LVU863
 5298              	.LVL328:
 122:Src/main.c    **** 
 5299              		.loc 1 122 3 view .LVU864
 122:Src/main.c    **** 
 5300              		.loc 1 122 3 is_stmt 0 view .LVU865
 5301 003a 93E0     		b	.L173
 5302              	.LVL329:
 5303              	.L178:
 137:Src/main.c    **** 
 5304              		.loc 1 137 7 is_stmt 1 view .LVU866
 5305 003c 854B     		ldr	r3, .L180+4
 5306 003e 10A9     		add	r1, sp, #64
 5307 0040 0A00     		movs	r2, r1
 5308 0042 13CB     		ldmia	r3!, {r0, r1, r4}
 5309 0044 13C2     		stmia	r2!, {r0, r1, r4}
 5310 0046 13CB     		ldmia	r3!, {r0, r1, r4}
 5311 0048 13C2     		stmia	r2!, {r0, r1, r4}
 5312 004a 03CB     		ldmia	r3!, {r0, r1}
 5313 004c 03C2     		stmia	r2!, {r0, r1}
 5314 004e 2EAB     		add	r3, sp, #184
 5315 0050 0BA9     		add	r1, sp, #44
 5316 0052 0A00     		movs	r2, r1
 5317 0054 13CB     		ldmia	r3!, {r0, r1, r4}
 5318 0056 13C2     		stmia	r2!, {r0, r1, r4}
 5319 0058 03CB     		ldmia	r3!, {r0, r1}
 5320 005a 03C2     		stmia	r2!, {r0, r1}
 5321 005c 33AB     		add	r3, sp, #204
 5322 005e 06A9     		add	r1, sp, #24
 5323 0060 0A00     		movs	r2, r1
 5324 0062 13CB     		ldmia	r3!, {r0, r1, r4}
 5325 0064 13C2     		stmia	r2!, {r0, r1, r4}
 5326 0066 03CB     		ldmia	r3!, {r0, r1}
 5327 0068 03C2     		stmia	r2!, {r0, r1}
 5328 006a 38AB     		add	r3, sp, #224
 5329 006c 01A9     		add	r1, sp, #4
 5330 006e 0A00     		movs	r2, r1
 5331 0070 13CB     		ldmia	r3!, {r0, r1, r4}
 5332 0072 13C2     		stmia	r2!, {r0, r1, r4}
 5333 0074 03CB     		ldmia	r3!, {r0, r1}
 5334 0076 03C2     		stmia	r2!, {r0, r1}
 5335 0078 419B     		ldr	r3, [sp, #260]
 5336 007a 1993     		str	r3, [sp, #100]
 5337 007c 0093     		str	r3, [sp]
 5338 007e 3D98     		ldr	r0, [sp, #244]
 5339 0080 3E99     		ldr	r1, [sp, #248]
 5340 0082 3F9A     		ldr	r2, [sp, #252]
 5341 0084 409B     		ldr	r3, [sp, #256]
 5342 0086 FFF7FEFF 		bl	clock
 5343              	.LVL330:
 5344 008a 8FE0     		b	.L164
 5345              	.L179:
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 5346              		.loc 1 148 34 is_stmt 0 discriminator 1 view .LVU867
 5347 008c 724B     		ldr	r3, .L180+8
ARM GAS  /tmp/cccixJrj.s 			page 126


 5348 008e 1B68     		ldr	r3, [r3]
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 5349              		.loc 1 148 22 discriminator 1 view .LVU868
 5350 0090 012B     		cmp	r3, #1
 5351 0092 00D0     		beq	.LCB4645
 5352 0094 8FE0     		b	.L165	@long jump
 5353              	.LCB4645:
 5354              	.LBB16:
 149:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 5355              		.loc 1 149 7 is_stmt 1 view .LVU869
 151:Src/main.c    ****       RTC_DateTypeDef currentDate;
 5356              		.loc 1 151 7 view .LVU870
 152:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 5357              		.loc 1 152 7 view .LVU871
 153:Src/main.c    ****       memset(&newTime, 0, sizeof(newTime));
 5358              		.loc 1 153 7 view .LVU872
 154:Src/main.c    ****       memset(&currentTime, 0, sizeof(currentTime));
 5359              		.loc 1 154 7 view .LVU873
 5360 0096 1422     		movs	r2, #20
 5361 0098 0021     		movs	r1, #0
 5362 009a 1CA8     		add	r0, sp, #112
 5363 009c FFF7FEFF 		bl	memset
 5364              	.LVL331:
 155:Src/main.c    **** 
 5365              		.loc 1 155 7 view .LVU874
 5366 00a0 21AC     		add	r4, sp, #132
 5367 00a2 1422     		movs	r2, #20
 5368 00a4 0021     		movs	r1, #0
 5369 00a6 2000     		movs	r0, r4
 5370 00a8 FFF7FEFF 		bl	memset
 5371              	.LVL332:
 157:Src/main.c    ****       HAL_Delay(100);
 5372              		.loc 1 157 7 view .LVU875
 5373 00ac 6B48     		ldr	r0, .L180+12
 5374 00ae FFF7FEFF 		bl	say
 5375              	.LVL333:
 158:Src/main.c    **** 
 5376              		.loc 1 158 7 view .LVU876
 5377 00b2 6420     		movs	r0, #100
 5378 00b4 FFF7FEFF 		bl	HAL_Delay
 5379              	.LVL334:
 161:Src/main.c    ****       
 5380              		.loc 1 161 7 view .LVU877
 164:Src/main.c    ****       hourFlag =0;
 5381              		.loc 1 164 7 view .LVU878
 164:Src/main.c    ****       hourFlag =0;
 5382              		.loc 1 164 16 is_stmt 0 view .LVU879
 5383 00b8 0023     		movs	r3, #0
 5384 00ba 654A     		ldr	r2, .L180
 5385 00bc 1360     		str	r3, [r2]
 165:Src/main.c    ****       mamboNumber = 5;
 5386              		.loc 1 165 7 is_stmt 1 view .LVU880
 165:Src/main.c    ****       mamboNumber = 5;
 5387              		.loc 1 165 16 is_stmt 0 view .LVU881
 5388 00be 664A     		ldr	r2, .L180+8
 5389 00c0 1360     		str	r3, [r2]
 166:Src/main.c    **** 
ARM GAS  /tmp/cccixJrj.s 			page 127


 5390              		.loc 1 166 7 is_stmt 1 view .LVU882
 166:Src/main.c    **** 
 5391              		.loc 1 166 19 is_stmt 0 view .LVU883
 5392 00c2 674B     		ldr	r3, .L180+16
 5393 00c4 0522     		movs	r2, #5
 5394 00c6 1A60     		str	r2, [r3]
 169:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 5395              		.loc 1 169 7 is_stmt 1 view .LVU884
 169:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 5396              		.loc 1 169 13 is_stmt 0 view .LVU885
 5397 00c8 624D     		ldr	r5, .L180+4
 5398 00ca 0022     		movs	r2, #0
 5399 00cc 2100     		movs	r1, r4
 5400 00ce 2800     		movs	r0, r5
 5401 00d0 FFF7FEFF 		bl	HAL_RTC_GetTime
 5402              	.LVL335:
 173:Src/main.c    ****       newHours = currentTime.Hours;
 5403              		.loc 1 173 7 is_stmt 1 view .LVU886
 173:Src/main.c    ****       newHours = currentTime.Hours;
 5404              		.loc 1 173 13 is_stmt 0 view .LVU887
 5405 00d4 0022     		movs	r2, #0
 5406 00d6 1BA9     		add	r1, sp, #108
 5407 00d8 2800     		movs	r0, r5
 5408 00da FFF7FEFF 		bl	HAL_RTC_GetDate
 5409              	.LVL336:
 174:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 5410              		.loc 1 174 7 is_stmt 1 view .LVU888
 174:Src/main.c    ****       sprintf(buf,"hour is %d \n", currentTime.Hours);
 5411              		.loc 1 174 29 is_stmt 0 view .LVU889
 5412 00de 2478     		ldrb	r4, [r4]
 5413              	.LVL337:
 175:Src/main.c    ****       say(buf);
 5414              		.loc 1 175 7 is_stmt 1 view .LVU890
 5415 00e0 2200     		movs	r2, r4
 5416 00e2 6049     		ldr	r1, .L180+20
 5417 00e4 26A8     		add	r0, sp, #152
 5418 00e6 FFF7FEFF 		bl	sprintf
 5419              	.LVL338:
 176:Src/main.c    **** 
 5420              		.loc 1 176 7 view .LVU891
 5421 00ea 26A8     		add	r0, sp, #152
 5422 00ec FFF7FEFF 		bl	say
 5423              	.LVL339:
 178:Src/main.c    ****          newTime.Hours = 1;
 5424              		.loc 1 178 7 view .LVU892
 178:Src/main.c    ****          newTime.Hours = 1;
 5425              		.loc 1 178 9 is_stmt 0 view .LVU893
 5426 00f0 0C2C     		cmp	r4, #12
 5427 00f2 1ADD     		ble	.L166
 179:Src/main.c    ****       else
 5428              		.loc 1 179 10 is_stmt 1 view .LVU894
 179:Src/main.c    ****       else
 5429              		.loc 1 179 24 is_stmt 0 view .LVU895
 5430 00f4 1CAB     		add	r3, sp, #112
 5431 00f6 0122     		movs	r2, #1
 5432 00f8 1A70     		strb	r2, [r3]
 5433              	.LVL340:
ARM GAS  /tmp/cccixJrj.s 			page 128


 5434              	.L167:
 183:Src/main.c    ****       newTime.Seconds = 0; 
 5435              		.loc 1 183 7 is_stmt 1 view .LVU896
 183:Src/main.c    ****       newTime.Seconds = 0; 
 5436              		.loc 1 183 23 is_stmt 0 view .LVU897
 5437 00fa 0023     		movs	r3, #0
 5438 00fc 02AA     		add	r2, sp, #8
 5439 00fe 6921     		movs	r1, #105
 5440 0100 5218     		adds	r2, r2, r1
 5441 0102 1370     		strb	r3, [r2]
 184:Src/main.c    **** 
 5442              		.loc 1 184 7 is_stmt 1 view .LVU898
 184:Src/main.c    **** 
 5443              		.loc 1 184 23 is_stmt 0 view .LVU899
 5444 0104 02AA     		add	r2, sp, #8
 5445 0106 0131     		adds	r1, r1, #1
 5446 0108 5218     		adds	r2, r2, r1
 5447 010a 1370     		strb	r3, [r2]
 187:Src/main.c    ****       if(res != 0){
 5448              		.loc 1 187 7 is_stmt 1 view .LVU900
 187:Src/main.c    ****       if(res != 0){
 5449              		.loc 1 187 13 is_stmt 0 view .LVU901
 5450 010c 0022     		movs	r2, #0
 5451 010e 1CA9     		add	r1, sp, #112
 5452 0110 5048     		ldr	r0, .L180+4
 5453 0112 FFF7FEFF 		bl	HAL_RTC_SetTime
 5454              	.LVL341:
 5455 0116 021E     		subs	r2, r0, #0
 5456              	.LVL342:
 188:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 5457              		.loc 1 188 7 is_stmt 1 view .LVU902
 188:Src/main.c    ****          sprintf(buf,"Set hour time error is %d \n", res);
 5458              		.loc 1 188 9 is_stmt 0 view .LVU903
 5459 0118 4DD0     		beq	.L165
 189:Src/main.c    ****          say(buf);
 5460              		.loc 1 189 10 is_stmt 1 view .LVU904
 5461 011a 5349     		ldr	r1, .L180+24
 5462 011c 26A8     		add	r0, sp, #152
 5463              	.LVL343:
 189:Src/main.c    ****          say(buf);
 5464              		.loc 1 189 10 is_stmt 0 view .LVU905
 5465 011e FFF7FEFF 		bl	sprintf
 5466              	.LVL344:
 190:Src/main.c    ****       }
 5467              		.loc 1 190 10 is_stmt 1 view .LVU906
 5468 0122 26A8     		add	r0, sp, #152
 5469 0124 FFF7FEFF 		bl	say
 5470              	.LVL345:
 5471 0128 45E0     		b	.L165
 5472              	.LVL346:
 5473              	.L166:
 181:Src/main.c    **** 
 5474              		.loc 1 181 10 view .LVU907
 181:Src/main.c    **** 
 5475              		.loc 1 181 24 is_stmt 0 view .LVU908
 5476 012a 0134     		adds	r4, r4, #1
 5477              	.LVL347:
ARM GAS  /tmp/cccixJrj.s 			page 129


 181:Src/main.c    **** 
 5478              		.loc 1 181 24 view .LVU909
 5479 012c 1CAB     		add	r3, sp, #112
 5480 012e 1C70     		strb	r4, [r3]
 5481 0130 E3E7     		b	.L167
 5482              	.LVL348:
 5483              	.L170:
 181:Src/main.c    **** 
 5484              		.loc 1 181 24 view .LVU910
 5485              	.LBE16:
 5486              	.LBB17:
 226:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 5487              		.loc 1 226 10 is_stmt 1 view .LVU911
 226:Src/main.c    ****          newTime.Hours = (currentTime.Hours + 1);
 5488              		.loc 1 226 26 is_stmt 0 view .LVU912
 5489 0132 1CA9     		add	r1, sp, #112
 5490 0134 0023     		movs	r3, #0
 5491 0136 4B70     		strb	r3, [r1, #1]
 227:Src/main.c    ****       }
 5492              		.loc 1 227 10 is_stmt 1 view .LVU913
 227:Src/main.c    ****       }
 5493              		.loc 1 227 38 is_stmt 0 view .LVU914
 5494 0138 21AB     		add	r3, sp, #132
 5495 013a 1B78     		ldrb	r3, [r3]
 227:Src/main.c    ****       }
 5496              		.loc 1 227 45 view .LVU915
 5497 013c 0133     		adds	r3, r3, #1
 227:Src/main.c    ****       }
 5498              		.loc 1 227 24 view .LVU916
 5499 013e 0B70     		strb	r3, [r1]
 5500              	.L171:
 230:Src/main.c    ****       say(buf);
 5501              		.loc 1 230 7 is_stmt 1 view .LVU917
 5502 0140 4A49     		ldr	r1, .L180+28
 5503 0142 26A8     		add	r0, sp, #152
 5504 0144 FFF7FEFF 		bl	sprintf
 5505              	.LVL349:
 231:Src/main.c    **** 
 5506              		.loc 1 231 7 view .LVU918
 5507 0148 26A8     		add	r0, sp, #152
 5508 014a FFF7FEFF 		bl	say
 5509              	.LVL350:
 233:Src/main.c    ****       if(res != 0){
 5510              		.loc 1 233 7 view .LVU919
 233:Src/main.c    ****       if(res != 0){
 5511              		.loc 1 233 13 is_stmt 0 view .LVU920
 5512 014e 0022     		movs	r2, #0
 5513 0150 1CA9     		add	r1, sp, #112
 5514 0152 4048     		ldr	r0, .L180+4
 5515 0154 FFF7FEFF 		bl	HAL_RTC_SetTime
 5516              	.LVL351:
 5517 0158 021E     		subs	r2, r0, #0
 5518              	.LVL352:
 234:Src/main.c    ****          sprintf(buf,"minute time error %d \n", res);
 5519              		.loc 1 234 7 is_stmt 1 view .LVU921
 234:Src/main.c    ****          sprintf(buf,"minute time error %d \n", res);
 5520              		.loc 1 234 9 is_stmt 0 view .LVU922
ARM GAS  /tmp/cccixJrj.s 			page 130


 5521 015a 5AD1     		bne	.L176
 5522              	.LVL353:
 5523              	.L169:
 234:Src/main.c    ****          sprintf(buf,"minute time error %d \n", res);
 5524              		.loc 1 234 9 view .LVU923
 5525              	.LBE17:
 241:Src/main.c    ****       char buf[20];
 5526              		.loc 1 241 5 is_stmt 1 view .LVU924
 241:Src/main.c    ****       char buf[20];
 5527              		.loc 1 241 17 is_stmt 0 view .LVU925
 5528 015c 3C4B     		ldr	r3, .L180
 5529 015e 1B68     		ldr	r3, [r3]
 241:Src/main.c    ****       char buf[20];
 5530              		.loc 1 241 7 view .LVU926
 5531 0160 012B     		cmp	r3, #1
 5532 0162 5ED0     		beq	.L177
 5533              	.L173:
 129:Src/main.c    ****   {
 5534              		.loc 1 129 3 is_stmt 1 view .LVU927
 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 5535              		.loc 1 136 5 view .LVU928
 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 5536              		.loc 1 136 20 is_stmt 0 view .LVU929
 5537 0164 3E4B     		ldr	r3, .L180+16
 5538 0166 1B68     		ldr	r3, [r3]
 136:Src/main.c    ****       clock(PinA, PinB, PinC, PinD, hrtc);
 5539              		.loc 1 136 7 view .LVU930
 5540 0168 052B     		cmp	r3, #5
 5541 016a 00D1     		bne	.LCB4812
 5542 016c 66E7     		b	.L178	@long jump
 5543              	.LCB4812:
 144:Src/main.c    **** 
 5544              		.loc 1 144 8 is_stmt 1 view .LVU931
 5545 016e 1093     		str	r3, [sp, #64]
 5546 0170 2EAB     		add	r3, sp, #184
 5547 0172 0BA9     		add	r1, sp, #44
 5548 0174 0A00     		movs	r2, r1
 5549 0176 13CB     		ldmia	r3!, {r0, r1, r4}
 5550 0178 13C2     		stmia	r2!, {r0, r1, r4}
 5551 017a 03CB     		ldmia	r3!, {r0, r1}
 5552 017c 03C2     		stmia	r2!, {r0, r1}
 5553 017e 33AB     		add	r3, sp, #204
 5554 0180 06A9     		add	r1, sp, #24
 5555 0182 0A00     		movs	r2, r1
 5556 0184 13CB     		ldmia	r3!, {r0, r1, r4}
 5557 0186 13C2     		stmia	r2!, {r0, r1, r4}
 5558 0188 03CB     		ldmia	r3!, {r0, r1}
 5559 018a 03C2     		stmia	r2!, {r0, r1}
 5560 018c 38AB     		add	r3, sp, #224
 5561 018e 01A9     		add	r1, sp, #4
 5562 0190 0A00     		movs	r2, r1
 5563 0192 13CB     		ldmia	r3!, {r0, r1, r4}
 5564 0194 13C2     		stmia	r2!, {r0, r1, r4}
 5565 0196 03CB     		ldmia	r3!, {r0, r1}
 5566 0198 03C2     		stmia	r2!, {r0, r1}
 5567 019a 419B     		ldr	r3, [sp, #260]
 5568 019c 1993     		str	r3, [sp, #100]
ARM GAS  /tmp/cccixJrj.s 			page 131


 5569 019e 0093     		str	r3, [sp]
 5570 01a0 3D98     		ldr	r0, [sp, #244]
 5571 01a2 3E99     		ldr	r1, [sp, #248]
 5572 01a4 3F9A     		ldr	r2, [sp, #252]
 5573 01a6 409B     		ldr	r3, [sp, #256]
 5574 01a8 FFF7FEFF 		bl	dance
 5575              	.LVL354:
 5576              	.L164:
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 5577              		.loc 1 148 5 view .LVU932
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 5578              		.loc 1 148 17 is_stmt 0 view .LVU933
 5579 01ac 284B     		ldr	r3, .L180
 5580 01ae 1B68     		ldr	r3, [r3]
 148:Src/main.c    ****       HAL_StatusTypeDef res;
 5581              		.loc 1 148 7 view .LVU934
 5582 01b0 012B     		cmp	r3, #1
 5583 01b2 00D1     		bne	.LCB4845
 5584 01b4 6AE7     		b	.L179	@long jump
 5585              	.LCB4845:
 5586              	.L165:
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 5587              		.loc 1 196 5 is_stmt 1 view .LVU935
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 5588              		.loc 1 196 17 is_stmt 0 view .LVU936
 5589 01b6 264B     		ldr	r3, .L180
 5590 01b8 1B68     		ldr	r3, [r3]
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 5591              		.loc 1 196 7 view .LVU937
 5592 01ba 012B     		cmp	r3, #1
 5593 01bc CED1     		bne	.L169
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 5594              		.loc 1 196 36 discriminator 1 view .LVU938
 5595 01be 2C4B     		ldr	r3, .L180+32
 5596 01c0 1B68     		ldr	r3, [r3]
 196:Src/main.c    ****       HAL_StatusTypeDef res;
 5597              		.loc 1 196 22 discriminator 1 view .LVU939
 5598 01c2 012B     		cmp	r3, #1
 5599 01c4 CAD1     		bne	.L169
 5600              	.LBB18:
 197:Src/main.c    ****       // Make new values, I got an oblique warning that this was needed to avoid a bug
 5601              		.loc 1 197 7 is_stmt 1 view .LVU940
 199:Src/main.c    ****       RTC_DateTypeDef currentDate;
 5602              		.loc 1 199 7 view .LVU941
 200:Src/main.c    ****       RTC_TimeTypeDef currentTime;
 5603              		.loc 1 200 7 view .LVU942
 201:Src/main.c    ****       say("In minute button\n");
 5604              		.loc 1 201 7 view .LVU943
 202:Src/main.c    ****       HAL_Delay(100);
 5605              		.loc 1 202 7 view .LVU944
 5606 01c6 2B48     		ldr	r0, .L180+36
 5607 01c8 FFF7FEFF 		bl	say
 5608              	.LVL355:
 203:Src/main.c    ****       char buf[30];
 5609              		.loc 1 203 7 view .LVU945
 5610 01cc 6420     		movs	r0, #100
 5611 01ce FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/cccixJrj.s 			page 132


 5612              	.LVL356:
 204:Src/main.c    **** 
 5613              		.loc 1 204 7 view .LVU946
 207:Src/main.c    ****       minuteFlag =0;
 5614              		.loc 1 207 7 view .LVU947
 207:Src/main.c    ****       minuteFlag =0;
 5615              		.loc 1 207 16 is_stmt 0 view .LVU948
 5616 01d2 0024     		movs	r4, #0
 5617 01d4 1E4B     		ldr	r3, .L180
 5618 01d6 1C60     		str	r4, [r3]
 208:Src/main.c    ****       mamboNumber = 5;
 5619              		.loc 1 208 7 is_stmt 1 view .LVU949
 208:Src/main.c    ****       mamboNumber = 5;
 5620              		.loc 1 208 18 is_stmt 0 view .LVU950
 5621 01d8 254B     		ldr	r3, .L180+32
 5622 01da 1C60     		str	r4, [r3]
 209:Src/main.c    **** 
 5623              		.loc 1 209 7 is_stmt 1 view .LVU951
 209:Src/main.c    **** 
 5624              		.loc 1 209 19 is_stmt 0 view .LVU952
 5625 01dc 204B     		ldr	r3, .L180+16
 5626 01de 0522     		movs	r2, #5
 5627 01e0 1A60     		str	r2, [r3]
 211:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 5628              		.loc 1 211 7 is_stmt 1 view .LVU953
 211:Src/main.c    ****       // Weird. We dont care about the date but unless we touch the date the registers
 5629              		.loc 1 211 13 is_stmt 0 view .LVU954
 5630 01e2 21AD     		add	r5, sp, #132
 5631 01e4 1B4E     		ldr	r6, .L180+4
 5632 01e6 0022     		movs	r2, #0
 5633 01e8 2900     		movs	r1, r5
 5634 01ea 3000     		movs	r0, r6
 5635 01ec FFF7FEFF 		bl	HAL_RTC_GetTime
 5636              	.LVL357:
 215:Src/main.c    **** 
 5637              		.loc 1 215 7 is_stmt 1 view .LVU955
 215:Src/main.c    **** 
 5638              		.loc 1 215 13 is_stmt 0 view .LVU956
 5639 01f0 0022     		movs	r2, #0
 5640 01f2 1BA9     		add	r1, sp, #108
 5641 01f4 3000     		movs	r0, r6
 5642 01f6 FFF7FEFF 		bl	HAL_RTC_GetDate
 5643              	.LVL358:
 217:Src/main.c    **** 
 5644              		.loc 1 217 7 is_stmt 1 view .LVU957
 217:Src/main.c    **** 
 5645              		.loc 1 217 31 is_stmt 0 view .LVU958
 5646 01fa 6A78     		ldrb	r2, [r5, #1]
 5647              	.LVL359:
 219:Src/main.c    ****       
 5648              		.loc 1 219 7 is_stmt 1 view .LVU959
 219:Src/main.c    ****       
 5649              		.loc 1 219 23 is_stmt 0 view .LVU960
 5650 01fc 1CAB     		add	r3, sp, #112
 5651 01fe 9C70     		strb	r4, [r3, #2]
 221:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 5652              		.loc 1 221 7 is_stmt 1 view .LVU961
ARM GAS  /tmp/cccixJrj.s 			page 133


 221:Src/main.c    ****          newTime.Minutes = (newMinutes + 5);
 5653              		.loc 1 221 9 is_stmt 0 view .LVU962
 5654 0200 362A     		cmp	r2, #54
 5655 0202 96D8     		bhi	.L170
 222:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 5656              		.loc 1 222 10 is_stmt 1 view .LVU963
 222:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 5657              		.loc 1 222 40 is_stmt 0 view .LVU964
 5658 0204 531D     		adds	r3, r2, #5
 222:Src/main.c    ****          newTime.Hours = currentTime.Hours;
 5659              		.loc 1 222 26 view .LVU965
 5660 0206 1CA9     		add	r1, sp, #112
 5661 0208 4B70     		strb	r3, [r1, #1]
 223:Src/main.c    ****       }
 5662              		.loc 1 223 10 is_stmt 1 view .LVU966
 223:Src/main.c    ****       }
 5663              		.loc 1 223 37 is_stmt 0 view .LVU967
 5664 020a 21AB     		add	r3, sp, #132
 5665 020c 1B78     		ldrb	r3, [r3]
 223:Src/main.c    ****       }
 5666              		.loc 1 223 24 view .LVU968
 5667 020e 0B70     		strb	r3, [r1]
 5668 0210 96E7     		b	.L171
 5669              	.LVL360:
 5670              	.L176:
 235:Src/main.c    ****          say(buf);
 5671              		.loc 1 235 10 is_stmt 1 view .LVU969
 5672 0212 1949     		ldr	r1, .L180+40
 5673 0214 26A8     		add	r0, sp, #152
 5674              	.LVL361:
 235:Src/main.c    ****          say(buf);
 5675              		.loc 1 235 10 is_stmt 0 view .LVU970
 5676 0216 FFF7FEFF 		bl	sprintf
 5677              	.LVL362:
 236:Src/main.c    ****       }
 5678              		.loc 1 236 10 is_stmt 1 view .LVU971
 5679 021a 26A8     		add	r0, sp, #152
 5680 021c FFF7FEFF 		bl	say
 5681              	.LVL363:
 5682 0220 9CE7     		b	.L169
 5683              	.L177:
 236:Src/main.c    ****       }
 5684              		.loc 1 236 10 is_stmt 0 view .LVU972
 5685              	.LBE18:
 5686              	.LBB19:
 242:Src/main.c    ****       sprintf(buf,"We are in mode %d \n", mamboNumber);
 5687              		.loc 1 242 7 is_stmt 1 view .LVU973
 243:Src/main.c    ****       say(buf);
 5688              		.loc 1 243 7 view .LVU974
 5689 0222 0F4C     		ldr	r4, .L180+16
 5690 0224 2268     		ldr	r2, [r4]
 5691 0226 1549     		ldr	r1, .L180+44
 5692 0228 26A8     		add	r0, sp, #152
 5693 022a FFF7FEFF 		bl	sprintf
 5694              	.LVL364:
 244:Src/main.c    **** 
 5695              		.loc 1 244 7 view .LVU975
ARM GAS  /tmp/cccixJrj.s 			page 134


 5696 022e 26A8     		add	r0, sp, #152
 5697 0230 FFF7FEFF 		bl	say
 5698              	.LVL365:
 246:Src/main.c    ****       stopFlag =0;
 5699              		.loc 1 246 7 view .LVU976
 5700 0234 6420     		movs	r0, #100
 5701 0236 FFF7FEFF 		bl	HAL_Delay
 5702              	.LVL366:
 247:Src/main.c    ****       mamboNumber++;
 5703              		.loc 1 247 7 view .LVU977
 247:Src/main.c    ****       mamboNumber++;
 5704              		.loc 1 247 16 is_stmt 0 view .LVU978
 5705 023a 054B     		ldr	r3, .L180
 5706 023c 0022     		movs	r2, #0
 5707 023e 1A60     		str	r2, [r3]
 248:Src/main.c    ****       if(mamboNumber > 5)
 5708              		.loc 1 248 7 is_stmt 1 view .LVU979
 248:Src/main.c    ****       if(mamboNumber > 5)
 5709              		.loc 1 248 18 is_stmt 0 view .LVU980
 5710 0240 2368     		ldr	r3, [r4]
 5711 0242 0133     		adds	r3, r3, #1
 5712 0244 2360     		str	r3, [r4]
 249:Src/main.c    ****          mamboNumber = 0;
 5713              		.loc 1 249 7 is_stmt 1 view .LVU981
 249:Src/main.c    ****          mamboNumber = 0;
 5714              		.loc 1 249 9 is_stmt 0 view .LVU982
 5715 0246 052B     		cmp	r3, #5
 5716 0248 8CDD     		ble	.L173
 250:Src/main.c    ****     }
 5717              		.loc 1 250 10 is_stmt 1 view .LVU983
 250:Src/main.c    ****     }
 5718              		.loc 1 250 22 is_stmt 0 view .LVU984
 5719 024a 054B     		ldr	r3, .L180+16
 5720 024c 1A60     		str	r2, [r3]
 5721 024e 89E7     		b	.L173
 5722              	.L181:
 5723              		.align	2
 5724              	.L180:
 5725 0250 00000000 		.word	.LANCHOR0
 5726 0254 00000000 		.word	hrtc
 5727 0258 00000000 		.word	.LANCHOR2
 5728 025c 00000000 		.word	.LC17
 5729 0260 00000000 		.word	.LANCHOR3
 5730 0264 10000000 		.word	.LC19
 5731 0268 20000000 		.word	.LC21
 5732 026c 50000000 		.word	.LC26
 5733 0270 00000000 		.word	.LANCHOR1
 5734 0274 3C000000 		.word	.LC24
 5735 0278 60000000 		.word	.LC28
 5736 027c 78000000 		.word	.LC30
 5737              	.LBE19:
 5738              		.cfi_endproc
 5739              	.LFE54:
 5741              		.section	.text.Error_Handler,"ax",%progbits
 5742              		.align	1
 5743              		.global	Error_Handler
 5744              		.syntax unified
ARM GAS  /tmp/cccixJrj.s 			page 135


 5745              		.code	16
 5746              		.thumb_func
 5747              		.fpu softvfp
 5749              	Error_Handler:
 5750              	.LFB62:
 503:Src/main.c    **** /* USER CODE END 4 */
 504:Src/main.c    **** 
 505:Src/main.c    **** /**
 506:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 507:Src/main.c    ****   * @retval None
 508:Src/main.c    ****   */
 509:Src/main.c    **** void Error_Handler(void)
 510:Src/main.c    **** {
 5751              		.loc 1 510 1 is_stmt 1 view -0
 5752              		.cfi_startproc
 5753              		@ args = 0, pretend = 0, frame = 0
 5754              		@ frame_needed = 0, uses_anonymous_args = 0
 5755              		@ link register save eliminated.
 511:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 512:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 513:Src/main.c    **** 
 514:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 515:Src/main.c    **** }
 5756              		.loc 1 515 1 view .LVU986
 5757              		@ sp needed
 5758 0000 7047     		bx	lr
 5759              		.cfi_endproc
 5760              	.LFE62:
 5762              		.comm	RTCtime,20,4
 5763              		.global	minuteFlag
 5764              		.global	hourFlag
 5765              		.global	stopFlag
 5766              		.global	mamboNumber
 5767              		.comm	htim1,64,4
 5768              		.comm	hrtc,32,4
 5769              		.section	.bss.hourFlag,"aw",%nobits
 5770              		.align	2
 5771              		.set	.LANCHOR2,. + 0
 5774              	hourFlag:
 5775 0000 00000000 		.space	4
 5776              		.section	.bss.minuteFlag,"aw",%nobits
 5777              		.align	2
 5778              		.set	.LANCHOR1,. + 0
 5781              	minuteFlag:
 5782 0000 00000000 		.space	4
 5783              		.section	.bss.stopFlag,"aw",%nobits
 5784              		.align	2
 5785              		.set	.LANCHOR0,. + 0
 5788              	stopFlag:
 5789 0000 00000000 		.space	4
 5790              		.section	.data.mamboNumber,"aw"
 5791              		.align	2
 5792              		.set	.LANCHOR3,. + 0
 5795              	mamboNumber:
 5796 0000 01000000 		.word	1
 5797              		.text
 5798              	.Letext0:
ARM GAS  /tmp/cccixJrj.s 			page 136


 5799              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 5800              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 5801              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 5802              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 5803              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 5804              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 5805              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 5806              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 5807              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 5808              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rtc.h"
 5809              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 5810              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 5811              		.file 16 "/usr/arm-none-eabi/include/sys/lock.h"
 5812              		.file 17 "/usr/arm-none-eabi/include/sys/_types.h"
 5813              		.file 18 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 5814              		.file 19 "/usr/arm-none-eabi/include/sys/reent.h"
 5815              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 5816              		.file 21 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pwr.h"
 5817              		.file 22 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 5818              		.file 23 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 5819              		.file 24 "/usr/arm-none-eabi/include/stdio.h"
 5820              		.file 25 "Inc/usb_device.h"
 5821              		.file 26 "/usr/arm-none-eabi/include/string.h"
 5822              		.file 27 "<built-in>"
ARM GAS  /tmp/cccixJrj.s 			page 137


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cccixJrj.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cccixJrj.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cccixJrj.s:132    .text.MX_GPIO_Init:0000000000000070 $d
     /tmp/cccixJrj.s:139    .text.MX_RTC_Init:0000000000000000 $t
     /tmp/cccixJrj.s:145    .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/cccixJrj.s:193    .text.MX_RTC_Init:0000000000000024 $d
                            *COM*:0000000000000020 hrtc
     /tmp/cccixJrj.s:199    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cccixJrj.s:205    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cccixJrj.s:293    .text.MX_TIM1_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim1
     /tmp/cccixJrj.s:299    .text.charlie:0000000000000000 $t
     /tmp/cccixJrj.s:306    .text.charlie:0000000000000000 charlie
     /tmp/cccixJrj.s:880    .text.hands:0000000000000000 $t
     /tmp/cccixJrj.s:887    .text.hands:0000000000000000 hands
     /tmp/cccixJrj.s:1149   .text.hands:000000000000015c $d
     /tmp/cccixJrj.s:1155   .text.clock:0000000000000000 $t
     /tmp/cccixJrj.s:1162   .text.clock:0000000000000000 clock
     /tmp/cccixJrj.s:1435   .text.initA:0000000000000000 $t
     /tmp/cccixJrj.s:1442   .text.initA:0000000000000000 initA
     /tmp/cccixJrj.s:1526   .text.initA:000000000000004c $d
     /tmp/cccixJrj.s:1531   .text.initB:0000000000000000 $t
     /tmp/cccixJrj.s:1538   .text.initB:0000000000000000 initB
     /tmp/cccixJrj.s:1623   .text.initB:0000000000000050 $d
     /tmp/cccixJrj.s:1628   .text.initC:0000000000000000 $t
     /tmp/cccixJrj.s:1635   .text.initC:0000000000000000 initC
     /tmp/cccixJrj.s:1720   .text.initC:0000000000000050 $d
     /tmp/cccixJrj.s:1725   .text.initD:0000000000000000 $t
     /tmp/cccixJrj.s:1732   .text.initD:0000000000000000 initD
     /tmp/cccixJrj.s:1817   .text.initD:0000000000000050 $d
     /tmp/cccixJrj.s:1822   .text.send_command:0000000000000000 $t
     /tmp/cccixJrj.s:1829   .text.send_command:0000000000000000 send_command
     /tmp/cccixJrj.s:1856   .text.say:0000000000000000 $t
     /tmp/cccixJrj.s:1863   .text.say:0000000000000000 say
     /tmp/cccixJrj.s:1901   .text.put_char:0000000000000000 $t
     /tmp/cccixJrj.s:1908   .text.put_char:0000000000000000 put_char
     /tmp/cccixJrj.s:1941   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cccixJrj.s:1948   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cccixJrj.s:2047   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cccixJrj.s:2054   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cccixJrj.s:2111   .text.HAL_GPIO_EXTI_Callback:0000000000000030 $d
     /tmp/cccixJrj.s:2118   .rodata.trySleep.str1.4:0000000000000000 $d
     /tmp/cccixJrj.s:2125   .text.trySleep:0000000000000000 $t
     /tmp/cccixJrj.s:2132   .text.trySleep:0000000000000000 trySleep
     /tmp/cccixJrj.s:2235   .text.trySleep:000000000000007c $d
     /tmp/cccixJrj.s:2242   .text.StopOneSec:0000000000000000 $t
     /tmp/cccixJrj.s:2249   .text.StopOneSec:0000000000000000 StopOneSec
     /tmp/cccixJrj.s:2335   .text.StopOneSec:0000000000000060 $d
     /tmp/cccixJrj.s:2340   .text.dance:0000000000000000 $t
     /tmp/cccixJrj.s:2347   .text.dance:0000000000000000 dance
     /tmp/cccixJrj.s:3080   .text.dance:00000000000004bc $d
     /tmp/cccixJrj.s:3083   .text.dance:00000000000004c0 $t
     /tmp/cccixJrj.s:3679   .text.dance:00000000000008d4 $d
     /tmp/cccixJrj.s:3682   .text.dance:00000000000008d8 $t
     /tmp/cccixJrj.s:3739   .text.dance:000000000000093c $d
ARM GAS  /tmp/cccixJrj.s 			page 138


     /tmp/cccixJrj.s:3742   .text.dance:0000000000000940 $t
     /tmp/cccixJrj.s:4328   .text.dance:0000000000000d5c $d
     /tmp/cccixJrj.s:4331   .text.dance:0000000000000d60 $t
     /tmp/cccixJrj.s:4971   .text.dance:0000000000001150 $d
     /tmp/cccixJrj.s:4979   .text.dance:0000000000001158 $t
     /tmp/cccixJrj.s:5202   .text.dance:0000000000001298 $d
     /tmp/cccixJrj.s:5209   .rodata.main.str1.4:0000000000000000 $d
     /tmp/cccixJrj.s:5231   .text.main:0000000000000000 $t
     /tmp/cccixJrj.s:5238   .text.main:0000000000000000 main
     /tmp/cccixJrj.s:5725   .text.main:0000000000000250 $d
     /tmp/cccixJrj.s:5742   .text.Error_Handler:0000000000000000 $t
     /tmp/cccixJrj.s:5749   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000014 RTCtime
     /tmp/cccixJrj.s:5781   .bss.minuteFlag:0000000000000000 minuteFlag
     /tmp/cccixJrj.s:5774   .bss.hourFlag:0000000000000000 hourFlag
     /tmp/cccixJrj.s:5788   .bss.stopFlag:0000000000000000 stopFlag
     /tmp/cccixJrj.s:5795   .data.mamboNumber:0000000000000000 mamboNumber
     /tmp/cccixJrj.s:5770   .bss.hourFlag:0000000000000000 $d
     /tmp/cccixJrj.s:5777   .bss.minuteFlag:0000000000000000 $d
     /tmp/cccixJrj.s:5784   .bss.stopFlag:0000000000000000 $d
     /tmp/cccixJrj.s:5791   .data.mamboNumber:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RTC_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_GPIO_DeInit
HAL_GPIO_WritePin
HAL_Delay
HAL_RTC_GetTime
HAL_RTC_GetDate
strlen
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RTC_SetAlarm_IT
HAL_PWR_EnterSTOPMode
HAL_Init
MX_USB_DEVICE_Init
sprintf
HAL_RTC_SetTime
