ARM GAS  /tmp/cc2mHEhO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB134:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/cc2mHEhO.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** SPI_HandleTypeDef hspi1;
  46:Src/main.c    **** 
  47:Src/main.c    **** UART_HandleTypeDef huart2;
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** static void MX_GPIO_Init(void);
  56:Src/main.c    **** static void MX_USART2_UART_Init(void);
  57:Src/main.c    **** static void MX_SPI1_Init(void);
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PFP */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /**
  68:Src/main.c    ****   * @brief  The application entry point.
  69:Src/main.c    ****   * @retval int
  70:Src/main.c    ****   */
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* USER CODE END 1 */
  76:Src/main.c    ****   
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Src/main.c    ****   HAL_Init();
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Configure the system clock */
  88:Src/main.c    ****   SystemClock_Config();
ARM GAS  /tmp/cc2mHEhO.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Initialize all configured peripherals */
  95:Src/main.c    ****   MX_GPIO_Init();
  96:Src/main.c    ****   MX_USART2_UART_Init();
  97:Src/main.c    ****   MX_SPI1_Init();
  98:Src/main.c    ****   /* USER CODE BEGIN 2 */
  99:Src/main.c    ****   uint16_t i =0;
 100:Src/main.c    ****   uint16_t once =0;
 101:Src/main.c    ****   /* USER CODE END 2 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* Infinite loop */
 104:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 105:Src/main.c    ****   while (1)
 106:Src/main.c    ****   {
 107:Src/main.c    ****     /* USER CODE END WHILE */
 108:Src/main.c    ****       HAL_SPI_Transmit(&hspi1, 1, 16, 100);
 109:Src/main.c    ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 110:Src/main.c    ****       HAL_Delay(1);
 111:Src/main.c    ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 112:Src/main.c    ****       HAL_Delay(1000);
 113:Src/main.c    **** 
 114:Src/main.c    **** 
 115:Src/main.c    ****     /* USER CODE BEGIN 3 */
 116:Src/main.c    ****   }
 117:Src/main.c    ****   /* USER CODE END 3 */
 118:Src/main.c    **** }
 119:Src/main.c    **** 
 120:Src/main.c    **** /**
 121:Src/main.c    ****   * @brief System Clock Configuration
 122:Src/main.c    ****   * @retval None
 123:Src/main.c    ****   */
 124:Src/main.c    **** void SystemClock_Config(void)
 125:Src/main.c    **** {
 126:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 127:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 128:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 129:Src/main.c    **** 
 130:Src/main.c    ****   /** Configure LSE Drive Capability 
 131:Src/main.c    ****   */
 132:Src/main.c    ****   HAL_PWR_EnableBkUpAccess();
 133:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 134:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 135:Src/main.c    ****   */
 136:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 137:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 138:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 139:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 140:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
ARM GAS  /tmp/cc2mHEhO.s 			page 4


 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Src/main.c    ****   {
 150:Src/main.c    ****     Error_Handler();
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 153:Src/main.c    ****   */
 154:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Src/main.c    **** 
 161:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 162:Src/main.c    ****   {
 163:Src/main.c    ****     Error_Handler();
 164:Src/main.c    ****   }
 165:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 166:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 167:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 168:Src/main.c    ****   {
 169:Src/main.c    ****     Error_Handler();
 170:Src/main.c    ****   }
 171:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 172:Src/main.c    ****   */
 173:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 174:Src/main.c    ****   {
 175:Src/main.c    ****     Error_Handler();
 176:Src/main.c    ****   }
 177:Src/main.c    ****   /** Enable MSI Auto calibration 
 178:Src/main.c    ****   */
 179:Src/main.c    ****   HAL_RCCEx_EnableMSIPLLMode();
 180:Src/main.c    **** }
 181:Src/main.c    **** 
 182:Src/main.c    **** /**
 183:Src/main.c    ****   * @brief SPI1 Initialization Function
 184:Src/main.c    ****   * @param None
 185:Src/main.c    ****   * @retval None
 186:Src/main.c    ****   */
 187:Src/main.c    **** static void MX_SPI1_Init(void)
 188:Src/main.c    **** {
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 197:Src/main.c    ****   /* SPI1 parameter configuration*/
 198:Src/main.c    ****   hspi1.Instance = SPI1;
 199:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 200:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 201:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 202:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
ARM GAS  /tmp/cc2mHEhO.s 			page 5


 203:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 204:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 205:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 206:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 207:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 208:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 209:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 210:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 211:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 212:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 213:Src/main.c    ****   {
 214:Src/main.c    ****     Error_Handler();
 215:Src/main.c    ****   }
 216:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 217:Src/main.c    **** 
 218:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 219:Src/main.c    **** 
 220:Src/main.c    **** }
 221:Src/main.c    **** 
 222:Src/main.c    **** /**
 223:Src/main.c    ****   * @brief USART2 Initialization Function
 224:Src/main.c    ****   * @param None
 225:Src/main.c    ****   * @retval None
 226:Src/main.c    ****   */
 227:Src/main.c    **** static void MX_USART2_UART_Init(void)
 228:Src/main.c    **** {
 229:Src/main.c    **** 
 230:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 231:Src/main.c    **** 
 232:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 233:Src/main.c    **** 
 234:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 237:Src/main.c    ****   huart2.Instance = USART2;
 238:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 239:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 240:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 241:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 242:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 243:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 244:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 245:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 246:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 247:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 248:Src/main.c    ****   {
 249:Src/main.c    ****     Error_Handler();
 250:Src/main.c    ****   }
 251:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 254:Src/main.c    **** 
 255:Src/main.c    **** }
 256:Src/main.c    **** 
 257:Src/main.c    **** /**
 258:Src/main.c    ****   * @brief GPIO Initialization Function
 259:Src/main.c    ****   * @param None
ARM GAS  /tmp/cc2mHEhO.s 			page 6


 260:Src/main.c    ****   * @retval None
 261:Src/main.c    ****   */
 262:Src/main.c    **** static void MX_GPIO_Init(void)
 263:Src/main.c    **** {
  28              		.loc 1 263 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 264:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 264 3 view .LVU1
  43              		.loc 1 264 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0394     		str	r4, [sp, #12]
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* GPIO Ports Clock Enable */
 267:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 267 3 is_stmt 1 view .LVU3
  51              	.LBB2:
  52              		.loc 1 267 3 view .LVU4
  53              		.loc 1 267 3 view .LVU5
  54 0010 1E4B     		ldr	r3, .L3
  55 0012 DA6C     		ldr	r2, [r3, #76]
  56 0014 42F00402 		orr	r2, r2, #4
  57 0018 DA64     		str	r2, [r3, #76]
  58              		.loc 1 267 3 view .LVU6
  59 001a DA6C     		ldr	r2, [r3, #76]
  60 001c 02F00402 		and	r2, r2, #4
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 267 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE2:
 268:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 268 3 view .LVU8
  66              	.LBB3:
  67              		.loc 1 268 3 view .LVU9
  68              		.loc 1 268 3 view .LVU10
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F00102 		orr	r2, r2, #1
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 268 3 view .LVU11
  73 002c DA6C     		ldr	r2, [r3, #76]
  74 002e 02F00102 		and	r2, r2, #1
  75 0032 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/cc2mHEhO.s 			page 7


  76              		.loc 1 268 3 view .LVU12
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE3:
 269:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  79              		.loc 1 269 3 view .LVU13
  80              	.LBB4:
  81              		.loc 1 269 3 view .LVU14
  82              		.loc 1 269 3 view .LVU15
  83 0036 DA6C     		ldr	r2, [r3, #76]
  84 0038 42F00202 		orr	r2, r2, #2
  85 003c DA64     		str	r2, [r3, #76]
  86              		.loc 1 269 3 view .LVU16
  87 003e DB6C     		ldr	r3, [r3, #76]
  88 0040 03F00203 		and	r3, r3, #2
  89 0044 0293     		str	r3, [sp, #8]
  90              		.loc 1 269 3 view .LVU17
  91 0046 029B     		ldr	r3, [sp, #8]
  92              	.LBE4:
 270:Src/main.c    **** 
 271:Src/main.c    ****   /*Configure GPIO pin Output Level */
 272:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, LE_Pin|OE_Pin|Clk_Pin|SDI_Pin, GPIO_PIN_RESET);
  93              		.loc 1 272 3 view .LVU18
  94 0048 2246     		mov	r2, r4
  95 004a F021     		movs	r1, #240
  96 004c 4FF09040 		mov	r0, #1207959552
  97 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 273:Src/main.c    **** 
 274:Src/main.c    ****   /*Configure GPIO pin Output Level */
 275:Src/main.c    ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  99              		.loc 1 275 3 view .LVU19
 100 0054 0E4D     		ldr	r5, .L3+4
 101 0056 2246     		mov	r2, r4
 102 0058 0821     		movs	r1, #8
 103 005a 2846     		mov	r0, r5
 104 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 105              	.LVL1:
 276:Src/main.c    **** 
 277:Src/main.c    ****   /*Configure GPIO pins : LE_Pin OE_Pin Clk_Pin SDI_Pin */
 278:Src/main.c    ****   GPIO_InitStruct.Pin = LE_Pin|OE_Pin|Clk_Pin|SDI_Pin;
 106              		.loc 1 278 3 view .LVU20
 107              		.loc 1 278 23 is_stmt 0 view .LVU21
 108 0060 F023     		movs	r3, #240
 109 0062 0393     		str	r3, [sp, #12]
 279:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 110              		.loc 1 279 3 is_stmt 1 view .LVU22
 111              		.loc 1 279 24 is_stmt 0 view .LVU23
 112 0064 0126     		movs	r6, #1
 113 0066 0496     		str	r6, [sp, #16]
 280:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 280 3 is_stmt 1 view .LVU24
 115              		.loc 1 280 24 is_stmt 0 view .LVU25
 116 0068 0594     		str	r4, [sp, #20]
 281:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 117              		.loc 1 281 3 is_stmt 1 view .LVU26
 118              		.loc 1 281 25 is_stmt 0 view .LVU27
 119 006a 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/cc2mHEhO.s 			page 8


 282:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 120              		.loc 1 282 3 is_stmt 1 view .LVU28
 121 006c 03A9     		add	r1, sp, #12
 122 006e 4FF09040 		mov	r0, #1207959552
 123 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 124              	.LVL2:
 283:Src/main.c    **** 
 284:Src/main.c    ****   /*Configure GPIO pin : LD3_Pin */
 285:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin;
 125              		.loc 1 285 3 view .LVU29
 126              		.loc 1 285 23 is_stmt 0 view .LVU30
 127 0076 0823     		movs	r3, #8
 128 0078 0393     		str	r3, [sp, #12]
 286:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 129              		.loc 1 286 3 is_stmt 1 view .LVU31
 130              		.loc 1 286 24 is_stmt 0 view .LVU32
 131 007a 0496     		str	r6, [sp, #16]
 287:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 132              		.loc 1 287 3 is_stmt 1 view .LVU33
 133              		.loc 1 287 24 is_stmt 0 view .LVU34
 134 007c 0594     		str	r4, [sp, #20]
 288:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 135              		.loc 1 288 3 is_stmt 1 view .LVU35
 136              		.loc 1 288 25 is_stmt 0 view .LVU36
 137 007e 0694     		str	r4, [sp, #24]
 289:Src/main.c    ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 138              		.loc 1 289 3 is_stmt 1 view .LVU37
 139 0080 03A9     		add	r1, sp, #12
 140 0082 2846     		mov	r0, r5
 141 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 142              	.LVL3:
 290:Src/main.c    **** 
 291:Src/main.c    **** }
 143              		.loc 1 291 1 is_stmt 0 view .LVU38
 144 0088 08B0     		add	sp, sp, #32
 145              	.LCFI2:
 146              		.cfi_def_cfa_offset 16
 147              		@ sp needed
 148 008a 70BD     		pop	{r4, r5, r6, pc}
 149              	.L4:
 150              		.align	2
 151              	.L3:
 152 008c 00100240 		.word	1073876992
 153 0090 00040048 		.word	1207960576
 154              		.cfi_endproc
 155              	.LFE134:
 157              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv4-sp-d16
 164              	MX_USART2_UART_Init:
 165              	.LFB133:
 228:Src/main.c    **** 
 166              		.loc 1 228 1 is_stmt 1 view -0
 167              		.cfi_startproc
ARM GAS  /tmp/cc2mHEhO.s 			page 9


 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 08B5     		push	{r3, lr}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 3, -8
 174              		.cfi_offset 14, -4
 237:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 175              		.loc 1 237 3 view .LVU40
 237:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 176              		.loc 1 237 19 is_stmt 0 view .LVU41
 177 0002 0948     		ldr	r0, .L7
 178 0004 094B     		ldr	r3, .L7+4
 179 0006 0360     		str	r3, [r0]
 238:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 180              		.loc 1 238 3 is_stmt 1 view .LVU42
 238:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 181              		.loc 1 238 24 is_stmt 0 view .LVU43
 182 0008 4FF4E133 		mov	r3, #115200
 183 000c 4360     		str	r3, [r0, #4]
 239:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 184              		.loc 1 239 3 is_stmt 1 view .LVU44
 239:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 185              		.loc 1 239 26 is_stmt 0 view .LVU45
 186 000e 0023     		movs	r3, #0
 187 0010 8360     		str	r3, [r0, #8]
 240:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 188              		.loc 1 240 3 is_stmt 1 view .LVU46
 240:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 189              		.loc 1 240 24 is_stmt 0 view .LVU47
 190 0012 C360     		str	r3, [r0, #12]
 241:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 191              		.loc 1 241 3 is_stmt 1 view .LVU48
 241:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 192              		.loc 1 241 22 is_stmt 0 view .LVU49
 193 0014 0361     		str	r3, [r0, #16]
 242:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 194              		.loc 1 242 3 is_stmt 1 view .LVU50
 242:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 195              		.loc 1 242 20 is_stmt 0 view .LVU51
 196 0016 0C22     		movs	r2, #12
 197 0018 4261     		str	r2, [r0, #20]
 243:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 198              		.loc 1 243 3 is_stmt 1 view .LVU52
 243:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 199              		.loc 1 243 25 is_stmt 0 view .LVU53
 200 001a 8361     		str	r3, [r0, #24]
 244:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 201              		.loc 1 244 3 is_stmt 1 view .LVU54
 244:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 202              		.loc 1 244 28 is_stmt 0 view .LVU55
 203 001c C361     		str	r3, [r0, #28]
 245:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 204              		.loc 1 245 3 is_stmt 1 view .LVU56
 245:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 205              		.loc 1 245 30 is_stmt 0 view .LVU57
 206 001e 0362     		str	r3, [r0, #32]
ARM GAS  /tmp/cc2mHEhO.s 			page 10


 246:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 207              		.loc 1 246 3 is_stmt 1 view .LVU58
 246:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 208              		.loc 1 246 38 is_stmt 0 view .LVU59
 209 0020 4362     		str	r3, [r0, #36]
 247:Src/main.c    ****   {
 210              		.loc 1 247 3 is_stmt 1 view .LVU60
 247:Src/main.c    ****   {
 211              		.loc 1 247 7 is_stmt 0 view .LVU61
 212 0022 FFF7FEFF 		bl	HAL_UART_Init
 213              	.LVL4:
 255:Src/main.c    **** 
 214              		.loc 1 255 1 view .LVU62
 215 0026 08BD     		pop	{r3, pc}
 216              	.L8:
 217              		.align	2
 218              	.L7:
 219 0028 00000000 		.word	huart2
 220 002c 00440040 		.word	1073759232
 221              		.cfi_endproc
 222              	.LFE133:
 224              		.section	.text.MX_SPI1_Init,"ax",%progbits
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	MX_SPI1_Init:
 232              	.LFB132:
 188:Src/main.c    **** 
 233              		.loc 1 188 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI4:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 198:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 242              		.loc 1 198 3 view .LVU64
 198:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 243              		.loc 1 198 18 is_stmt 0 view .LVU65
 244 0002 0E48     		ldr	r0, .L11
 245 0004 0E4B     		ldr	r3, .L11+4
 246 0006 0360     		str	r3, [r0]
 199:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 247              		.loc 1 199 3 is_stmt 1 view .LVU66
 199:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 248              		.loc 1 199 19 is_stmt 0 view .LVU67
 249 0008 4FF48273 		mov	r3, #260
 250 000c 4360     		str	r3, [r0, #4]
 200:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 251              		.loc 1 200 3 is_stmt 1 view .LVU68
 200:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 252              		.loc 1 200 24 is_stmt 0 view .LVU69
 253 000e 0023     		movs	r3, #0
ARM GAS  /tmp/cc2mHEhO.s 			page 11


 254 0010 8360     		str	r3, [r0, #8]
 201:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 255              		.loc 1 201 3 is_stmt 1 view .LVU70
 201:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 256              		.loc 1 201 23 is_stmt 0 view .LVU71
 257 0012 4FF44072 		mov	r2, #768
 258 0016 C260     		str	r2, [r0, #12]
 202:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 259              		.loc 1 202 3 is_stmt 1 view .LVU72
 202:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 260              		.loc 1 202 26 is_stmt 0 view .LVU73
 261 0018 0361     		str	r3, [r0, #16]
 203:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 262              		.loc 1 203 3 is_stmt 1 view .LVU74
 203:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 263              		.loc 1 203 23 is_stmt 0 view .LVU75
 264 001a 4361     		str	r3, [r0, #20]
 204:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 265              		.loc 1 204 3 is_stmt 1 view .LVU76
 204:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 266              		.loc 1 204 18 is_stmt 0 view .LVU77
 267 001c 4FF40072 		mov	r2, #512
 268 0020 8261     		str	r2, [r0, #24]
 205:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 269              		.loc 1 205 3 is_stmt 1 view .LVU78
 205:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 270              		.loc 1 205 32 is_stmt 0 view .LVU79
 271 0022 C361     		str	r3, [r0, #28]
 206:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 272              		.loc 1 206 3 is_stmt 1 view .LVU80
 206:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 273              		.loc 1 206 23 is_stmt 0 view .LVU81
 274 0024 0362     		str	r3, [r0, #32]
 207:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 275              		.loc 1 207 3 is_stmt 1 view .LVU82
 207:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 276              		.loc 1 207 21 is_stmt 0 view .LVU83
 277 0026 4362     		str	r3, [r0, #36]
 208:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 278              		.loc 1 208 3 is_stmt 1 view .LVU84
 208:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 279              		.loc 1 208 29 is_stmt 0 view .LVU85
 280 0028 8362     		str	r3, [r0, #40]
 209:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 281              		.loc 1 209 3 is_stmt 1 view .LVU86
 209:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 282              		.loc 1 209 28 is_stmt 0 view .LVU87
 283 002a 0722     		movs	r2, #7
 284 002c C262     		str	r2, [r0, #44]
 210:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 285              		.loc 1 210 3 is_stmt 1 view .LVU88
 210:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 286              		.loc 1 210 24 is_stmt 0 view .LVU89
 287 002e 0363     		str	r3, [r0, #48]
 211:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 288              		.loc 1 211 3 is_stmt 1 view .LVU90
 211:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
ARM GAS  /tmp/cc2mHEhO.s 			page 12


 289              		.loc 1 211 23 is_stmt 0 view .LVU91
 290 0030 0823     		movs	r3, #8
 291 0032 4363     		str	r3, [r0, #52]
 212:Src/main.c    ****   {
 292              		.loc 1 212 3 is_stmt 1 view .LVU92
 212:Src/main.c    ****   {
 293              		.loc 1 212 7 is_stmt 0 view .LVU93
 294 0034 FFF7FEFF 		bl	HAL_SPI_Init
 295              	.LVL5:
 220:Src/main.c    **** 
 296              		.loc 1 220 1 view .LVU94
 297 0038 08BD     		pop	{r3, pc}
 298              	.L12:
 299 003a 00BF     		.align	2
 300              	.L11:
 301 003c 00000000 		.word	hspi1
 302 0040 00300140 		.word	1073819648
 303              		.cfi_endproc
 304              	.LFE132:
 306              		.section	.text.SystemClock_Config,"ax",%progbits
 307              		.align	1
 308              		.global	SystemClock_Config
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	SystemClock_Config:
 315              	.LFB131:
 125:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 316              		.loc 1 125 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 176
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 70B5     		push	{r4, r5, r6, lr}
 321              	.LCFI5:
 322              		.cfi_def_cfa_offset 16
 323              		.cfi_offset 4, -16
 324              		.cfi_offset 5, -12
 325              		.cfi_offset 6, -8
 326              		.cfi_offset 14, -4
 327 0002 ACB0     		sub	sp, sp, #176
 328              	.LCFI6:
 329              		.cfi_def_cfa_offset 192
 126:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 330              		.loc 1 126 3 view .LVU96
 126:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 331              		.loc 1 126 22 is_stmt 0 view .LVU97
 332 0004 4422     		movs	r2, #68
 333 0006 0021     		movs	r1, #0
 334 0008 1BA8     		add	r0, sp, #108
 335 000a FFF7FEFF 		bl	memset
 336              	.LVL6:
 127:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 337              		.loc 1 127 3 is_stmt 1 view .LVU98
 127:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 338              		.loc 1 127 22 is_stmt 0 view .LVU99
 339 000e 0024     		movs	r4, #0
ARM GAS  /tmp/cc2mHEhO.s 			page 13


 340 0010 1694     		str	r4, [sp, #88]
 341 0012 1794     		str	r4, [sp, #92]
 342 0014 1894     		str	r4, [sp, #96]
 343 0016 1994     		str	r4, [sp, #100]
 344 0018 1A94     		str	r4, [sp, #104]
 128:Src/main.c    **** 
 345              		.loc 1 128 3 is_stmt 1 view .LVU100
 128:Src/main.c    **** 
 346              		.loc 1 128 28 is_stmt 0 view .LVU101
 347 001a 5422     		movs	r2, #84
 348 001c 2146     		mov	r1, r4
 349 001e 01A8     		add	r0, sp, #4
 350 0020 FFF7FEFF 		bl	memset
 351              	.LVL7:
 132:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 352              		.loc 1 132 3 is_stmt 1 view .LVU102
 353 0024 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 354              	.LVL8:
 133:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 355              		.loc 1 133 3 view .LVU103
 356 0028 194A     		ldr	r2, .L15
 357 002a D2F89030 		ldr	r3, [r2, #144]
 358 002e 23F01803 		bic	r3, r3, #24
 359 0032 C2F89030 		str	r3, [r2, #144]
 136:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 360              		.loc 1 136 3 view .LVU104
 136:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 361              		.loc 1 136 36 is_stmt 0 view .LVU105
 362 0036 1423     		movs	r3, #20
 363 0038 1B93     		str	r3, [sp, #108]
 137:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 364              		.loc 1 137 3 is_stmt 1 view .LVU106
 137:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 365              		.loc 1 137 30 is_stmt 0 view .LVU107
 366 003a 0125     		movs	r5, #1
 367 003c 1D95     		str	r5, [sp, #116]
 138:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 368              		.loc 1 138 3 is_stmt 1 view .LVU108
 138:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 369              		.loc 1 138 30 is_stmt 0 view .LVU109
 370 003e 2195     		str	r5, [sp, #132]
 139:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 371              		.loc 1 139 3 is_stmt 1 view .LVU110
 139:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 372              		.loc 1 139 41 is_stmt 0 view .LVU111
 373 0040 2294     		str	r4, [sp, #136]
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 374              		.loc 1 140 3 is_stmt 1 view .LVU112
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 375              		.loc 1 140 35 is_stmt 0 view .LVU113
 376 0042 6023     		movs	r3, #96
 377 0044 2393     		str	r3, [sp, #140]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 378              		.loc 1 141 3 is_stmt 1 view .LVU114
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 379              		.loc 1 141 34 is_stmt 0 view .LVU115
 380 0046 0226     		movs	r6, #2
ARM GAS  /tmp/cc2mHEhO.s 			page 14


 381 0048 2596     		str	r6, [sp, #148]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 382              		.loc 1 142 3 is_stmt 1 view .LVU116
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 383              		.loc 1 142 35 is_stmt 0 view .LVU117
 384 004a 2695     		str	r5, [sp, #152]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 385              		.loc 1 143 3 is_stmt 1 view .LVU118
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 386              		.loc 1 143 30 is_stmt 0 view .LVU119
 387 004c 2795     		str	r5, [sp, #156]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 388              		.loc 1 144 3 is_stmt 1 view .LVU120
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 389              		.loc 1 144 30 is_stmt 0 view .LVU121
 390 004e 1023     		movs	r3, #16
 391 0050 2893     		str	r3, [sp, #160]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 392              		.loc 1 145 3 is_stmt 1 view .LVU122
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 393              		.loc 1 145 30 is_stmt 0 view .LVU123
 394 0052 0723     		movs	r3, #7
 395 0054 2993     		str	r3, [sp, #164]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 396              		.loc 1 146 3 is_stmt 1 view .LVU124
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 397              		.loc 1 146 30 is_stmt 0 view .LVU125
 398 0056 2A96     		str	r6, [sp, #168]
 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 399              		.loc 1 147 3 is_stmt 1 view .LVU126
 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 400              		.loc 1 147 30 is_stmt 0 view .LVU127
 401 0058 2B96     		str	r6, [sp, #172]
 148:Src/main.c    ****   {
 402              		.loc 1 148 3 is_stmt 1 view .LVU128
 148:Src/main.c    ****   {
 403              		.loc 1 148 7 is_stmt 0 view .LVU129
 404 005a 1BA8     		add	r0, sp, #108
 405 005c FFF7FEFF 		bl	HAL_RCC_OscConfig
 406              	.LVL9:
 154:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 407              		.loc 1 154 3 is_stmt 1 view .LVU130
 154:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 408              		.loc 1 154 31 is_stmt 0 view .LVU131
 409 0060 0F23     		movs	r3, #15
 410 0062 1693     		str	r3, [sp, #88]
 156:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 411              		.loc 1 156 3 is_stmt 1 view .LVU132
 156:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 412              		.loc 1 156 34 is_stmt 0 view .LVU133
 413 0064 0323     		movs	r3, #3
 414 0066 1793     		str	r3, [sp, #92]
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 415              		.loc 1 157 3 is_stmt 1 view .LVU134
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 416              		.loc 1 157 35 is_stmt 0 view .LVU135
 417 0068 1894     		str	r4, [sp, #96]
ARM GAS  /tmp/cc2mHEhO.s 			page 15


 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 418              		.loc 1 158 3 is_stmt 1 view .LVU136
 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 419              		.loc 1 158 36 is_stmt 0 view .LVU137
 420 006a 1994     		str	r4, [sp, #100]
 159:Src/main.c    **** 
 421              		.loc 1 159 3 is_stmt 1 view .LVU138
 159:Src/main.c    **** 
 422              		.loc 1 159 36 is_stmt 0 view .LVU139
 423 006c 1A94     		str	r4, [sp, #104]
 161:Src/main.c    ****   {
 424              		.loc 1 161 3 is_stmt 1 view .LVU140
 161:Src/main.c    ****   {
 425              		.loc 1 161 7 is_stmt 0 view .LVU141
 426 006e 2946     		mov	r1, r5
 427 0070 16A8     		add	r0, sp, #88
 428 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 429              	.LVL10:
 165:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 430              		.loc 1 165 3 is_stmt 1 view .LVU142
 165:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 431              		.loc 1 165 38 is_stmt 0 view .LVU143
 432 0076 0196     		str	r6, [sp, #4]
 166:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 433              		.loc 1 166 3 is_stmt 1 view .LVU144
 166:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 434              		.loc 1 166 38 is_stmt 0 view .LVU145
 435 0078 0A94     		str	r4, [sp, #40]
 167:Src/main.c    ****   {
 436              		.loc 1 167 3 is_stmt 1 view .LVU146
 167:Src/main.c    ****   {
 437              		.loc 1 167 7 is_stmt 0 view .LVU147
 438 007a 01A8     		add	r0, sp, #4
 439 007c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 440              	.LVL11:
 173:Src/main.c    ****   {
 441              		.loc 1 173 3 is_stmt 1 view .LVU148
 173:Src/main.c    ****   {
 442              		.loc 1 173 7 is_stmt 0 view .LVU149
 443 0080 4FF40070 		mov	r0, #512
 444 0084 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 445              	.LVL12:
 179:Src/main.c    **** }
 446              		.loc 1 179 3 is_stmt 1 view .LVU150
 447 0088 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 448              	.LVL13:
 180:Src/main.c    **** 
 449              		.loc 1 180 1 is_stmt 0 view .LVU151
 450 008c 2CB0     		add	sp, sp, #176
 451              	.LCFI7:
 452              		.cfi_def_cfa_offset 16
 453              		@ sp needed
 454 008e 70BD     		pop	{r4, r5, r6, pc}
 455              	.L16:
 456              		.align	2
 457              	.L15:
 458 0090 00100240 		.word	1073876992
ARM GAS  /tmp/cc2mHEhO.s 			page 16


 459              		.cfi_endproc
 460              	.LFE131:
 462              		.section	.text.main,"ax",%progbits
 463              		.align	1
 464              		.global	main
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 468              		.fpu fpv4-sp-d16
 470              	main:
 471              	.LFB130:
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
 472              		.loc 1 72 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI8:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
  81:Src/main.c    **** 
 481              		.loc 1 81 3 view .LVU153
 482 0002 FFF7FEFF 		bl	HAL_Init
 483              	.LVL14:
  88:Src/main.c    **** 
 484              		.loc 1 88 3 view .LVU154
 485 0006 FFF7FEFF 		bl	SystemClock_Config
 486              	.LVL15:
  95:Src/main.c    ****   MX_USART2_UART_Init();
 487              		.loc 1 95 3 view .LVU155
 488 000a FFF7FEFF 		bl	MX_GPIO_Init
 489              	.LVL16:
  96:Src/main.c    ****   MX_SPI1_Init();
 490              		.loc 1 96 3 view .LVU156
 491 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 492              	.LVL17:
  97:Src/main.c    ****   /* USER CODE BEGIN 2 */
 493              		.loc 1 97 3 view .LVU157
 494 0012 FFF7FEFF 		bl	MX_SPI1_Init
 495              	.LVL18:
  99:Src/main.c    ****   uint16_t once =0;
 496              		.loc 1 99 3 view .LVU158
 100:Src/main.c    ****   /* USER CODE END 2 */
 497              		.loc 1 100 3 view .LVU159
 498              	.L18:
 105:Src/main.c    ****   {
 499              		.loc 1 105 3 discriminator 1 view .LVU160
 108:Src/main.c    ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 500              		.loc 1 108 7 discriminator 1 view .LVU161
 501 0016 6423     		movs	r3, #100
 502 0018 1022     		movs	r2, #16
 503 001a 0121     		movs	r1, #1
 504 001c 0B48     		ldr	r0, .L20
 505 001e FFF7FEFF 		bl	HAL_SPI_Transmit
 506              	.LVL19:
 109:Src/main.c    ****       HAL_Delay(1);
ARM GAS  /tmp/cc2mHEhO.s 			page 17


 507              		.loc 1 109 7 discriminator 1 view .LVU162
 508 0022 0122     		movs	r2, #1
 509 0024 1021     		movs	r1, #16
 510 0026 4FF09040 		mov	r0, #1207959552
 511 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 512              	.LVL20:
 110:Src/main.c    ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 513              		.loc 1 110 7 discriminator 1 view .LVU163
 514 002e 0120     		movs	r0, #1
 515 0030 FFF7FEFF 		bl	HAL_Delay
 516              	.LVL21:
 111:Src/main.c    ****       HAL_Delay(1000);
 517              		.loc 1 111 7 discriminator 1 view .LVU164
 518 0034 0022     		movs	r2, #0
 519 0036 1021     		movs	r1, #16
 520 0038 4FF09040 		mov	r0, #1207959552
 521 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 522              	.LVL22:
 112:Src/main.c    **** 
 523              		.loc 1 112 7 discriminator 1 view .LVU165
 524 0040 4FF47A70 		mov	r0, #1000
 525 0044 FFF7FEFF 		bl	HAL_Delay
 526              	.LVL23:
 527 0048 E5E7     		b	.L18
 528              	.L21:
 529 004a 00BF     		.align	2
 530              	.L20:
 531 004c 00000000 		.word	hspi1
 532              		.cfi_endproc
 533              	.LFE130:
 535              		.section	.text.Error_Handler,"ax",%progbits
 536              		.align	1
 537              		.global	Error_Handler
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 541              		.fpu fpv4-sp-d16
 543              	Error_Handler:
 544              	.LFB135:
 292:Src/main.c    **** 
 293:Src/main.c    **** /* USER CODE BEGIN 4 */
 294:Src/main.c    **** 
 295:Src/main.c    **** /* USER CODE END 4 */
 296:Src/main.c    **** 
 297:Src/main.c    **** /**
 298:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 299:Src/main.c    ****   * @retval None
 300:Src/main.c    ****   */
 301:Src/main.c    **** void Error_Handler(void)
 302:Src/main.c    **** {
 545              		.loc 1 302 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 303:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 304:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  /tmp/cc2mHEhO.s 			page 18


 305:Src/main.c    **** 
 306:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 307:Src/main.c    **** }
 550              		.loc 1 307 1 view .LVU167
 551 0000 7047     		bx	lr
 552              		.cfi_endproc
 553              	.LFE135:
 555              		.comm	huart2,128,4
 556              		.comm	hspi1,100,4
 557              		.text
 558              	.Letext0:
 559              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 560              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 561              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 562              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 563              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 564              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 565              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 566              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 567              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 568              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 569              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 570              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 571              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 572              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 573              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 574              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 575              		.file 18 "<built-in>"
ARM GAS  /tmp/cc2mHEhO.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc2mHEhO.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc2mHEhO.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc2mHEhO.s:152    .text.MX_GPIO_Init:000000000000008c $d
     /tmp/cc2mHEhO.s:158    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc2mHEhO.s:164    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc2mHEhO.s:219    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
     /tmp/cc2mHEhO.s:225    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/cc2mHEhO.s:231    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/cc2mHEhO.s:301    .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000064 hspi1
     /tmp/cc2mHEhO.s:307    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc2mHEhO.s:314    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc2mHEhO.s:458    .text.SystemClock_Config:0000000000000090 $d
     /tmp/cc2mHEhO.s:463    .text.main:0000000000000000 $t
     /tmp/cc2mHEhO.s:470    .text.main:0000000000000000 main
     /tmp/cc2mHEhO.s:531    .text.main:000000000000004c $d
     /tmp/cc2mHEhO.s:536    .text.Error_Handler:0000000000000000 $t
     /tmp/cc2mHEhO.s:543    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_SPI_Init
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
HAL_SPI_Transmit
HAL_Delay
