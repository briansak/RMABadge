ARM GAS  /tmp/ccBLkGUQ.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_hal_timebase_tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_uidiv
  16              		.section	.text.HAL_InitTick,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_InitTick
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	HAL_InitTick:
  26              	.LVL0:
  27              	.LFB34:
  28              		.file 1 "Src/stm32l0xx_hal_timebase_tim.c"
   1:Src/stm32l0xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Src/stm32l0xx_hal_timebase_tim.c **** /**
   3:Src/stm32l0xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Src/stm32l0xx_hal_timebase_tim.c ****   * @file    stm32l0xx_hal_timebase_TIM.c 
   5:Src/stm32l0xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Src/stm32l0xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Src/stm32l0xx_hal_timebase_tim.c ****   * @attention
   8:Src/stm32l0xx_hal_timebase_tim.c ****   *
   9:Src/stm32l0xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32l0xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  11:Src/stm32l0xx_hal_timebase_tim.c ****   *
  12:Src/stm32l0xx_hal_timebase_tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32l0xx_hal_timebase_tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32l0xx_hal_timebase_tim.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32l0xx_hal_timebase_tim.c ****   *                             www.st.com/SLA0044
  16:Src/stm32l0xx_hal_timebase_tim.c ****   *
  17:Src/stm32l0xx_hal_timebase_tim.c ****   ******************************************************************************
  18:Src/stm32l0xx_hal_timebase_tim.c ****   */
  19:Src/stm32l0xx_hal_timebase_tim.c **** /* USER CODE END Header */
  20:Src/stm32l0xx_hal_timebase_tim.c **** 
  21:Src/stm32l0xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32l0xx_hal_timebase_tim.c **** #include "stm32l0xx_hal.h"
  23:Src/stm32l0xx_hal_timebase_tim.c **** #include "stm32l0xx_hal_tim.h"
  24:Src/stm32l0xx_hal_timebase_tim.c ****  
  25:Src/stm32l0xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  26:Src/stm32l0xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  27:Src/stm32l0xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  28:Src/stm32l0xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  29:Src/stm32l0xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim2; 
  30:Src/stm32l0xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/ccBLkGUQ.s 			page 2


  31:Src/stm32l0xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  32:Src/stm32l0xx_hal_timebase_tim.c **** 
  33:Src/stm32l0xx_hal_timebase_tim.c **** /**
  34:Src/stm32l0xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM2 as a time base source. 
  35:Src/stm32l0xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  36:Src/stm32l0xx_hal_timebase_tim.c ****   *         Tick interrupt priority. 
  37:Src/stm32l0xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  38:Src/stm32l0xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  39:Src/stm32l0xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  40:Src/stm32l0xx_hal_timebase_tim.c ****   * @retval HAL status
  41:Src/stm32l0xx_hal_timebase_tim.c ****   */
  42:Src/stm32l0xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  43:Src/stm32l0xx_hal_timebase_tim.c **** {
  29              		.loc 1 43 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 43 1 is_stmt 0 view .LVU1
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 0100     		movs	r1, r0
  44:Src/stm32l0xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  42              		.loc 1 44 3 is_stmt 1 view .LVU2
  45:Src/stm32l0xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  43              		.loc 1 45 3 view .LVU3
  44              	.LVL1:
  46:Src/stm32l0xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  45              		.loc 1 46 3 view .LVU4
  47:Src/stm32l0xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  46              		.loc 1 47 3 view .LVU5
  48:Src/stm32l0xx_hal_timebase_tim.c ****   
  49:Src/stm32l0xx_hal_timebase_tim.c ****   /*Configure the TIM2 IRQ priority */
  50:Src/stm32l0xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM2_IRQn, TickPriority ,0); 
  47              		.loc 1 50 3 view .LVU6
  48 0006 0022     		movs	r2, #0
  49 0008 0F20     		movs	r0, #15
  50              	.LVL2:
  51              		.loc 1 50 3 is_stmt 0 view .LVU7
  52 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  53              	.LVL3:
  51:Src/stm32l0xx_hal_timebase_tim.c ****   
  52:Src/stm32l0xx_hal_timebase_tim.c ****   /* Enable the TIM2 global Interrupt */
  53:Src/stm32l0xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM2_IRQn); 
  54              		.loc 1 53 3 is_stmt 1 view .LVU8
  55 000e 0F20     		movs	r0, #15
  56 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  57              	.LVL4:
  54:Src/stm32l0xx_hal_timebase_tim.c ****   
  55:Src/stm32l0xx_hal_timebase_tim.c ****   /* Enable TIM2 clock */
  56:Src/stm32l0xx_hal_timebase_tim.c ****   __HAL_RCC_TIM2_CLK_ENABLE();
  58              		.loc 1 56 3 view .LVU9
  59 0014 114A     		ldr	r2, .L5
ARM GAS  /tmp/ccBLkGUQ.s 			page 3


  60 0016 936B     		ldr	r3, [r2, #56]
  61 0018 0121     		movs	r1, #1
  62 001a 0B43     		orrs	r3, r1
  63 001c 9363     		str	r3, [r2, #56]
  57:Src/stm32l0xx_hal_timebase_tim.c ****   
  58:Src/stm32l0xx_hal_timebase_tim.c ****   /* Get clock configuration */
  59:Src/stm32l0xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  64              		.loc 1 59 3 view .LVU10
  65 001e 6946     		mov	r1, sp
  66 0020 01A8     		add	r0, sp, #4
  67 0022 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  68              	.LVL5:
  60:Src/stm32l0xx_hal_timebase_tim.c ****   
  61:Src/stm32l0xx_hal_timebase_tim.c ****   /* Compute TIM2 clock */
  62:Src/stm32l0xx_hal_timebase_tim.c ****   uwTimclock = HAL_RCC_GetPCLK1Freq();
  69              		.loc 1 62 3 view .LVU11
  70              		.loc 1 62 16 is_stmt 0 view .LVU12
  71 0026 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  72              	.LVL6:
  63:Src/stm32l0xx_hal_timebase_tim.c ****    
  64:Src/stm32l0xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM2 counter clock equal to 1MHz */
  65:Src/stm32l0xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  73              		.loc 1 65 3 is_stmt 1 view .LVU13
  74              		.loc 1 65 46 is_stmt 0 view .LVU14
  75 002a 0D49     		ldr	r1, .L5+4
  76 002c FFF7FEFF 		bl	__aeabi_uidiv
  77              	.LVL7:
  78              		.loc 1 65 20 view .LVU15
  79 0030 431E     		subs	r3, r0, #1
  80              	.LVL8:
  66:Src/stm32l0xx_hal_timebase_tim.c ****   
  67:Src/stm32l0xx_hal_timebase_tim.c ****   /* Initialize TIM2 */
  68:Src/stm32l0xx_hal_timebase_tim.c ****   htim2.Instance = TIM2;
  81              		.loc 1 68 3 is_stmt 1 view .LVU16
  82              		.loc 1 68 18 is_stmt 0 view .LVU17
  83 0032 0C48     		ldr	r0, .L5+8
  84 0034 8022     		movs	r2, #128
  85 0036 D205     		lsls	r2, r2, #23
  86 0038 0260     		str	r2, [r0]
  69:Src/stm32l0xx_hal_timebase_tim.c ****   
  70:Src/stm32l0xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  71:Src/stm32l0xx_hal_timebase_tim.c ****   + Period = [(TIM2CLK/1000) - 1]. to have a (1/1000) s time base.
  72:Src/stm32l0xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  73:Src/stm32l0xx_hal_timebase_tim.c ****   + ClockDivision = 0
  74:Src/stm32l0xx_hal_timebase_tim.c ****   + Counter direction = Up
  75:Src/stm32l0xx_hal_timebase_tim.c ****   */
  76:Src/stm32l0xx_hal_timebase_tim.c ****   htim2.Init.Period = (1000000 / 1000) - 1;
  87              		.loc 1 76 3 is_stmt 1 view .LVU18
  88              		.loc 1 76 21 is_stmt 0 view .LVU19
  89 003a 0B4A     		ldr	r2, .L5+12
  90 003c C260     		str	r2, [r0, #12]
  77:Src/stm32l0xx_hal_timebase_tim.c ****   htim2.Init.Prescaler = uwPrescalerValue;
  91              		.loc 1 77 3 is_stmt 1 view .LVU20
  92              		.loc 1 77 24 is_stmt 0 view .LVU21
  93 003e 4360     		str	r3, [r0, #4]
  78:Src/stm32l0xx_hal_timebase_tim.c ****   htim2.Init.ClockDivision = 0;
  94              		.loc 1 78 3 is_stmt 1 view .LVU22
ARM GAS  /tmp/ccBLkGUQ.s 			page 4


  95              		.loc 1 78 28 is_stmt 0 view .LVU23
  96 0040 0023     		movs	r3, #0
  97              	.LVL9:
  98              		.loc 1 78 28 view .LVU24
  99 0042 0361     		str	r3, [r0, #16]
  79:Src/stm32l0xx_hal_timebase_tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 100              		.loc 1 79 3 is_stmt 1 view .LVU25
 101              		.loc 1 79 26 is_stmt 0 view .LVU26
 102 0044 8360     		str	r3, [r0, #8]
  80:Src/stm32l0xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim2) == HAL_OK)
 103              		.loc 1 80 3 is_stmt 1 view .LVU27
 104              		.loc 1 80 6 is_stmt 0 view .LVU28
 105 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 106              	.LVL10:
 107              		.loc 1 80 5 view .LVU29
 108 004a 0028     		cmp	r0, #0
 109 004c 02D0     		beq	.L4
  81:Src/stm32l0xx_hal_timebase_tim.c ****   {
  82:Src/stm32l0xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  83:Src/stm32l0xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim2);
  84:Src/stm32l0xx_hal_timebase_tim.c ****   }
  85:Src/stm32l0xx_hal_timebase_tim.c ****   
  86:Src/stm32l0xx_hal_timebase_tim.c ****   /* Return function status */
  87:Src/stm32l0xx_hal_timebase_tim.c ****   return HAL_ERROR;
 110              		.loc 1 87 10 view .LVU30
 111 004e 0120     		movs	r0, #1
 112              	.L2:
  88:Src/stm32l0xx_hal_timebase_tim.c **** }
 113              		.loc 1 88 1 view .LVU31
 114 0050 07B0     		add	sp, sp, #28
 115              		@ sp needed
 116 0052 00BD     		pop	{pc}
 117              	.L4:
  83:Src/stm32l0xx_hal_timebase_tim.c ****   }
 118              		.loc 1 83 5 is_stmt 1 view .LVU32
  83:Src/stm32l0xx_hal_timebase_tim.c ****   }
 119              		.loc 1 83 12 is_stmt 0 view .LVU33
 120 0054 0348     		ldr	r0, .L5+8
 121 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 122              	.LVL11:
 123 005a F9E7     		b	.L2
 124              	.L6:
 125              		.align	2
 126              	.L5:
 127 005c 00100240 		.word	1073876992
 128 0060 40420F00 		.word	1000000
 129 0064 00000000 		.word	htim2
 130 0068 E7030000 		.word	999
 131              		.cfi_endproc
 132              	.LFE34:
 134              		.section	.text.HAL_SuspendTick,"ax",%progbits
 135              		.align	1
 136              		.global	HAL_SuspendTick
 137              		.syntax unified
 138              		.code	16
 139              		.thumb_func
 140              		.fpu softvfp
ARM GAS  /tmp/ccBLkGUQ.s 			page 5


 142              	HAL_SuspendTick:
 143              	.LFB35:
  89:Src/stm32l0xx_hal_timebase_tim.c **** 
  90:Src/stm32l0xx_hal_timebase_tim.c **** /**
  91:Src/stm32l0xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
  92:Src/stm32l0xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM2 update interrupt.
  93:Src/stm32l0xx_hal_timebase_tim.c ****   * @param  None
  94:Src/stm32l0xx_hal_timebase_tim.c ****   * @retval None
  95:Src/stm32l0xx_hal_timebase_tim.c ****   */
  96:Src/stm32l0xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
  97:Src/stm32l0xx_hal_timebase_tim.c **** {
 144              		.loc 1 97 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
  98:Src/stm32l0xx_hal_timebase_tim.c ****   /* Disable TIM2 update Interrupt */
  99:Src/stm32l0xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim2, TIM_IT_UPDATE);                                                  
 149              		.loc 1 99 3 view .LVU35
 150 0000 034B     		ldr	r3, .L8
 151 0002 1A68     		ldr	r2, [r3]
 152 0004 D368     		ldr	r3, [r2, #12]
 153 0006 0121     		movs	r1, #1
 154 0008 8B43     		bics	r3, r1
 155 000a D360     		str	r3, [r2, #12]
 100:Src/stm32l0xx_hal_timebase_tim.c **** }
 156              		.loc 1 100 1 is_stmt 0 view .LVU36
 157              		@ sp needed
 158 000c 7047     		bx	lr
 159              	.L9:
 160 000e C046     		.align	2
 161              	.L8:
 162 0010 00000000 		.word	htim2
 163              		.cfi_endproc
 164              	.LFE35:
 166              		.section	.text.HAL_ResumeTick,"ax",%progbits
 167              		.align	1
 168              		.global	HAL_ResumeTick
 169              		.syntax unified
 170              		.code	16
 171              		.thumb_func
 172              		.fpu softvfp
 174              	HAL_ResumeTick:
 175              	.LFB36:
 101:Src/stm32l0xx_hal_timebase_tim.c **** 
 102:Src/stm32l0xx_hal_timebase_tim.c **** /**
 103:Src/stm32l0xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 104:Src/stm32l0xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM2 update interrupt.
 105:Src/stm32l0xx_hal_timebase_tim.c ****   * @param  None
 106:Src/stm32l0xx_hal_timebase_tim.c ****   * @retval None
 107:Src/stm32l0xx_hal_timebase_tim.c ****   */
 108:Src/stm32l0xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 109:Src/stm32l0xx_hal_timebase_tim.c **** {
 176              		.loc 1 109 1 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccBLkGUQ.s 			page 6


 180              		@ link register save eliminated.
 110:Src/stm32l0xx_hal_timebase_tim.c ****   /* Enable TIM2 Update interrupt */
 111:Src/stm32l0xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim2, TIM_IT_UPDATE);
 181              		.loc 1 111 3 view .LVU38
 182 0000 034B     		ldr	r3, .L11
 183 0002 1A68     		ldr	r2, [r3]
 184 0004 D368     		ldr	r3, [r2, #12]
 185 0006 0121     		movs	r1, #1
 186 0008 0B43     		orrs	r3, r1
 187 000a D360     		str	r3, [r2, #12]
 112:Src/stm32l0xx_hal_timebase_tim.c **** }
 188              		.loc 1 112 1 is_stmt 0 view .LVU39
 189              		@ sp needed
 190 000c 7047     		bx	lr
 191              	.L12:
 192 000e C046     		.align	2
 193              	.L11:
 194 0010 00000000 		.word	htim2
 195              		.cfi_endproc
 196              	.LFE36:
 198              		.comm	htim2,60,4
 199              		.text
 200              	.Letext0:
 201              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 202              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 203              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 204              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l052xx.h"
 205              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 206              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 207              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 208              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 209              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 210              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
ARM GAS  /tmp/ccBLkGUQ.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal_timebase_tim.c
     /tmp/ccBLkGUQ.s:17     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccBLkGUQ.s:25     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccBLkGUQ.s:127    .text.HAL_InitTick:000000000000005c $d
                            *COM*:000000000000003c htim2
     /tmp/ccBLkGUQ.s:135    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccBLkGUQ.s:142    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccBLkGUQ.s:162    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/ccBLkGUQ.s:167    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccBLkGUQ.s:174    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccBLkGUQ.s:194    .text.HAL_ResumeTick:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
